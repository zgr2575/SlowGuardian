(() => {
  var e = [
      ,
      (e, t, n) => {
        "use strict";
        n.r(t), n.d(t, { default: () => l });
        var i = n(2),
          r = n(3);
        class a extends i.default {
          constructor(e) {
            super(),
              (this.ctx = e),
              (this.rewriteUrl = e.rewriteUrl),
              (this.sourceUrl = e.sourceUrl);
          }
          rewrite(e, t = {}) {
            return e
              ? this.recast(
                  e,
                  (e) => {
                    e.tagName && this.emit("element", e, "rewrite"),
                      e.attr && this.emit("attr", e, "rewrite"),
                      "#text" === e.nodeName && this.emit("text", e, "rewrite");
                  },
                  t,
                )
              : e;
          }
          source(e, t = {}) {
            return e
              ? this.recast(
                  e,
                  (e) => {
                    e.tagName && this.emit("element", e, "source"),
                      e.attr && this.emit("attr", e, "source"),
                      "#text" === e.nodeName && this.emit("text", e, "source");
                  },
                  t,
                )
              : e;
          }
          recast(e, t, n = {}) {
            try {
              const i = (n.document ? r.parse : r.parseFragment)(
                new String(e).toString(),
              );
              return this.iterate(i, t, n), (0, r.serialize)(i);
            } catch (t) {
              return e;
            }
          }
          iterate(e, t, n) {
            if (!e) return e;
            if (e.tagName) {
              const i = new o(e, !1, n);
              if ((t(i), e.attrs))
                for (const r of e.attrs) r.skip || t(new s(i, r, n));
            }
            if (e.childNodes)
              for (const i of e.childNodes) i.skip || this.iterate(i, t, n);
            return (
              "#text" === e.nodeName && t(new c(e, new o(e.parentNode), !1, n)),
              e
            );
          }
          wrapSrcset(e, t = this.ctx.meta) {
            return e
              .split(",")
              .map((e) => {
                const n = e.trimStart().split(" ");
                return (
                  n[0] && (n[0] = this.ctx.rewriteUrl(n[0], t)), n.join(" ")
                );
              })
              .join(", ");
          }
          unwrapSrcset(e, t = this.ctx.meta) {
            return e
              .split(",")
              .map((e) => {
                const n = e.trimStart().split(" ");
                return (
                  n[0] && (n[0] = this.ctx.sourceUrl(n[0], t)), n.join(" ")
                );
              })
              .join(", ");
          }
          static parse = r.parse;
          static parseFragment = r.parseFragment;
          static serialize = r.serialize;
        }
        class o extends i.default {
          constructor(e, t = !1, n = {}) {
            super(), (this.stream = t), (this.node = e), (this.options = n);
          }
          setAttribute(e, t) {
            for (const n of this.attrs)
              if (n.name === e) return (n.value = t), !0;
            this.attrs.push({ name: e, value: t });
          }
          getAttribute(e) {
            return (this.attrs.find((t) => t.name === e) || {}).value;
          }
          hasAttribute(e) {
            return !!this.attrs.find((t) => t.name === e);
          }
          removeAttribute(e) {
            const t = this.attrs.findIndex((t) => t.name === e);
            void 0 !== t && this.attrs.splice(t, 1);
          }
          get tagName() {
            return this.node.tagName;
          }
          set tagName(e) {
            this.node.tagName = e;
          }
          get childNodes() {
            return this.stream ? null : this.node.childNodes;
          }
          get innerHTML() {
            return this.stream
              ? null
              : (0, r.serialize)({
                  nodeName: "#document-fragment",
                  childNodes: this.childNodes,
                });
          }
          set innerHTML(e) {
            this.stream ||
              (this.node.childNodes = (0, r.parseFragment)(e).childNodes);
          }
          get outerHTML() {
            return this.stream
              ? null
              : (0, r.serialize)({
                  nodeName: "#document-fragment",
                  childNodes: [this],
                });
          }
          set outerHTML(e) {
            this.stream ||
              this.parentNode.childNodes.splice(
                this.parentNode.childNodes.findIndex((e) => e === this.node),
                1,
                ...(0, r.parseFragment)(e).childNodes,
              );
          }
          get textContent() {
            if (this.stream) return null;
            let e = "";
            return (
              iterate(this.node, (t) => {
                "#text" === t.nodeName && (e += t.value);
              }),
              e
            );
          }
          set textContent(e) {
            this.stream ||
              (this.node.childNodes = [
                { nodeName: "#text", value: e, parentNode: this.node },
              ]);
          }
          get nodeName() {
            return this.node.nodeName;
          }
          get parentNode() {
            return this.node.parentNode ? new o(this.node.parentNode) : null;
          }
          get attrs() {
            return this.node.attrs;
          }
          get namespaceURI() {
            return this.node.namespaceURI;
          }
        }
        class s {
          constructor(e, t, n = {}) {
            (this.attr = t),
              (this.attrs = e.attrs),
              (this.node = e),
              (this.options = n);
          }
          delete() {
            const e = this.attrs.findIndex((e) => e === this.attr);
            return (
              this.attrs.splice(e, 1),
              Object.defineProperty(this, "deleted", { get: () => !0 }),
              !0
            );
          }
          get name() {
            return this.attr.name;
          }
          set name(e) {
            this.attr.name = e;
          }
          get value() {
            return this.attr.value;
          }
          set value(e) {
            this.attr.value = e;
          }
          get deleted() {
            return !1;
          }
        }
        class c {
          constructor(e, t, n = !1, i = {}) {
            (this.stream = n),
              (this.node = e),
              (this.element = t),
              (this.options = i);
          }
          get nodeName() {
            return this.node.nodeName;
          }
          get parentNode() {
            return this.element;
          }
          get value() {
            return this.stream ? this.node.text : this.node.value;
          }
          set value(e) {
            this.stream ? (this.node.text = e) : (this.node.value = e);
          }
        }
        const l = a;
      },
      (e, t, n) => {
        "use strict";
        n.r(t), n.d(t, { default: () => c });
        var i,
          r = "object" == typeof Reflect ? Reflect : null,
          a =
            r && "function" == typeof r.apply
              ? r.apply
              : function (e, t, n) {
                  return Function.prototype.apply.call(e, t, n);
                };
        i =
          r && "function" == typeof r.ownKeys
            ? r.ownKeys
            : Object.getOwnPropertySymbols
              ? function (e) {
                  return Object.getOwnPropertyNames(e).concat(
                    Object.getOwnPropertySymbols(e),
                  );
                }
              : function (e) {
                  return Object.getOwnPropertyNames(e);
                };
        var o =
          Number.isNaN ||
          function (e) {
            return e != e;
          };
        function s() {
          s.init.call(this);
        }
        const c = s;
        (s.EventEmitter = s),
          (s.prototype._events = void 0),
          (s.prototype._eventsCount = 0),
          (s.prototype._maxListeners = void 0);
        var l = 10;
        function u(e) {
          if ("function" != typeof e)
            throw new TypeError(
              'The "listener" argument must be of type Function. Received type ' +
                typeof e,
            );
        }
        function p(e) {
          return void 0 === e._maxListeners
            ? s.defaultMaxListeners
            : e._maxListeners;
        }
        function d(e, t, n, i) {
          var r, a, o, s;
          if (
            (u(n),
            void 0 === (a = e._events)
              ? ((a = e._events = Object.create(null)), (e._eventsCount = 0))
              : (void 0 !== a.newListener &&
                  (e.emit("newListener", t, n.listener ? n.listener : n),
                  (a = e._events)),
                (o = a[t])),
            void 0 === o)
          )
            (o = a[t] = n), ++e._eventsCount;
          else if (
            ("function" == typeof o
              ? (o = a[t] = i ? [n, o] : [o, n])
              : i
                ? o.unshift(n)
                : o.push(n),
            (r = p(e)) > 0 && o.length > r && !o.warned)
          ) {
            o.warned = !0;
            var c = new Error(
              "Possible EventEmitter memory leak detected. " +
                o.length +
                " " +
                String(t) +
                " listeners added. Use emitter.setMaxListeners() to increase limit",
            );
            (c.name = "MaxListenersExceededWarning"),
              (c.emitter = e),
              (c.type = t),
              (c.count = o.length),
              (s = c),
              console && console.warn && console.warn(s);
          }
          return e;
        }
        function m() {
          if (!this.fired)
            return (
              this.target.removeListener(this.type, this.wrapFn),
              (this.fired = !0),
              0 === arguments.length
                ? this.listener.call(this.target)
                : this.listener.apply(this.target, arguments)
            );
        }
        function h(e, t, n) {
          var i = {
              fired: !1,
              wrapFn: void 0,
              target: e,
              type: t,
              listener: n,
            },
            r = m.bind(i);
          return (r.listener = n), (i.wrapFn = r), r;
        }
        function f(e, t, n) {
          var i = e._events;
          if (void 0 === i) return [];
          var r = i[t];
          return void 0 === r
            ? []
            : "function" == typeof r
              ? n
                ? [r.listener || r]
                : [r]
              : n
                ? (function (e) {
                    for (var t = new Array(e.length), n = 0; n < t.length; ++n)
                      t[n] = e[n].listener || e[n];
                    return t;
                  })(r)
                : x(r, r.length);
        }
        function g(e) {
          var t = this._events;
          if (void 0 !== t) {
            var n = t[e];
            if ("function" == typeof n) return 1;
            if (void 0 !== n) return n.length;
          }
          return 0;
        }
        function x(e, t) {
          for (var n = new Array(t), i = 0; i < t; ++i) n[i] = e[i];
          return n;
        }
        Object.defineProperty(s, "defaultMaxListeners", {
          enumerable: !0,
          get: function () {
            return l;
          },
          set: function (e) {
            if ("number" != typeof e || e < 0 || o(e))
              throw new RangeError(
                'The value of "defaultMaxListeners" is out of range. It must be a non-negative number. Received ' +
                  e +
                  ".",
              );
            l = e;
          },
        }),
          (s.init = function () {
            (void 0 !== this._events &&
              this._events !== Object.getPrototypeOf(this)._events) ||
              ((this._events = Object.create(null)), (this._eventsCount = 0)),
              (this._maxListeners = this._maxListeners || void 0);
          }),
          (s.prototype.setMaxListeners = function (e) {
            if ("number" != typeof e || e < 0 || o(e))
              throw new RangeError(
                'The value of "n" is out of range. It must be a non-negative number. Received ' +
                  e +
                  ".",
              );
            return (this._maxListeners = e), this;
          }),
          (s.prototype.getMaxListeners = function () {
            return p(this);
          }),
          (s.prototype.emit = function (e) {
            for (var t = [], n = 1; n < arguments.length; n++)
              t.push(arguments[n]);
            var i = "error" === e,
              r = this._events;
            if (void 0 !== r) i = i && void 0 === r.error;
            else if (!i) return !1;
            if (i) {
              var o;
              if ((t.length > 0 && (o = t[0]), o instanceof Error)) throw o;
              var s = new Error(
                "Unhandled error." + (o ? " (" + o.message + ")" : ""),
              );
              throw ((s.context = o), s);
            }
            var c = r[e];
            if (void 0 === c) return !1;
            if ("function" == typeof c) a(c, this, t);
            else {
              var l = c.length,
                u = x(c, l);
              for (n = 0; n < l; ++n) a(u[n], this, t);
            }
            return !0;
          }),
          (s.prototype.addListener = function (e, t) {
            return d(this, e, t, !1);
          }),
          (s.prototype.on = s.prototype.addListener),
          (s.prototype.prependListener = function (e, t) {
            return d(this, e, t, !0);
          }),
          (s.prototype.once = function (e, t) {
            return u(t), this.on(e, h(this, e, t)), this;
          }),
          (s.prototype.prependOnceListener = function (e, t) {
            return u(t), this.prependListener(e, h(this, e, t)), this;
          }),
          (s.prototype.removeListener = function (e, t) {
            var n, i, r, a, o;
            if ((u(t), void 0 === (i = this._events))) return this;
            if (void 0 === (n = i[e])) return this;
            if (n === t || n.listener === t)
              0 == --this._eventsCount
                ? (this._events = Object.create(null))
                : (delete i[e],
                  i.removeListener &&
                    this.emit("removeListener", e, n.listener || t));
            else if ("function" != typeof n) {
              for (r = -1, a = n.length - 1; a >= 0; a--)
                if (n[a] === t || n[a].listener === t) {
                  (o = n[a].listener), (r = a);
                  break;
                }
              if (r < 0) return this;
              0 === r
                ? n.shift()
                : (function (e, t) {
                    for (; t + 1 < e.length; t++) e[t] = e[t + 1];
                    e.pop();
                  })(n, r),
                1 === n.length && (i[e] = n[0]),
                void 0 !== i.removeListener &&
                  this.emit("removeListener", e, o || t);
            }
            return this;
          }),
          (s.prototype.off = s.prototype.removeListener),
          (s.prototype.removeAllListeners = function (e) {
            var t, n, i;
            if (void 0 === (n = this._events)) return this;
            if (void 0 === n.removeListener)
              return (
                0 === arguments.length
                  ? ((this._events = Object.create(null)),
                    (this._eventsCount = 0))
                  : void 0 !== n[e] &&
                    (0 == --this._eventsCount
                      ? (this._events = Object.create(null))
                      : delete n[e]),
                this
              );
            if (0 === arguments.length) {
              var r,
                a = Object.keys(n);
              for (i = 0; i < a.length; ++i)
                "removeListener" !== (r = a[i]) && this.removeAllListeners(r);
              return (
                this.removeAllListeners("removeListener"),
                (this._events = Object.create(null)),
                (this._eventsCount = 0),
                this
              );
            }
            if ("function" == typeof (t = n[e])) this.removeListener(e, t);
            else if (void 0 !== t)
              for (i = t.length - 1; i >= 0; i--) this.removeListener(e, t[i]);
            return this;
          }),
          (s.prototype.listeners = function (e) {
            return f(this, e, !0);
          }),
          (s.prototype.rawListeners = function (e) {
            return f(this, e, !1);
          }),
          (s.listenerCount = function (e, t) {
            return "function" == typeof e.listenerCount
              ? e.listenerCount(t)
              : g.call(e, t);
          }),
          (s.prototype.listenerCount = g),
          (s.prototype.eventNames = function () {
            return this._eventsCount > 0 ? i(this._events) : [];
          });
      },
      (e, t, n) => {
        "use strict";
        const i = n(4),
          r = n(26);
        (t.parse = function (e, t) {
          return new i(t).parse(e);
        }),
          (t.parseFragment = function (e, t, n) {
            "string" == typeof e && ((n = t), (t = e), (e = null));
            return new i(n).parseFragment(t, e);
          }),
          (t.serialize = function (e, t) {
            return new r(e, t).serialize();
          });
      },
      (e, t, n) => {
        "use strict";
        const i = n(5),
          r = n(10),
          a = n(12),
          o = n(13),
          s = n(18),
          c = n(14),
          l = n(22),
          u = n(23),
          p = n(24),
          d = n(25),
          m = n(8),
          h = n(7),
          f = n(11),
          g = f.TAG_NAMES,
          x = f.NAMESPACES,
          b = f.ATTRS,
          v = {
            scriptingEnabled: !0,
            sourceCodeLocationInfo: !1,
            onParseError: null,
            treeAdapter: l,
          },
          k = "hidden",
          T = 8,
          y = 3,
          E = "INITIAL_MODE",
          w = "BEFORE_HTML_MODE",
          C = "BEFORE_HEAD_MODE",
          A = "IN_HEAD_MODE",
          S = "IN_HEAD_NO_SCRIPT_MODE",
          _ = "AFTER_HEAD_MODE",
          N = "IN_BODY_MODE",
          P = "TEXT_MODE",
          O = "IN_TABLE_MODE",
          L = "IN_TABLE_TEXT_MODE",
          I = "IN_CAPTION_MODE",
          R = "IN_COLUMN_GROUP_MODE",
          M = "IN_TABLE_BODY_MODE",
          D = "IN_ROW_MODE",
          j = "IN_CELL_MODE",
          H = "IN_SELECT_MODE",
          F = "IN_SELECT_IN_TABLE_MODE",
          B = "IN_TEMPLATE_MODE",
          U = "AFTER_BODY_MODE",
          z = "IN_FRAMESET_MODE",
          q = "AFTER_FRAMESET_MODE",
          G = "AFTER_AFTER_BODY_MODE",
          K = "AFTER_AFTER_FRAMESET_MODE",
          V = {
            [g.TR]: D,
            [g.TBODY]: M,
            [g.THEAD]: M,
            [g.TFOOT]: M,
            [g.CAPTION]: I,
            [g.COLGROUP]: R,
            [g.TABLE]: O,
            [g.BODY]: N,
            [g.FRAMESET]: z,
          },
          W = {
            [g.CAPTION]: O,
            [g.COLGROUP]: O,
            [g.TBODY]: O,
            [g.TFOOT]: O,
            [g.THEAD]: O,
            [g.COL]: R,
            [g.TR]: M,
            [g.TD]: D,
            [g.TH]: D,
          },
          Y = {
            [E]: {
              [i.CHARACTER_TOKEN]: ce,
              [i.NULL_CHARACTER_TOKEN]: ce,
              [i.WHITESPACE_CHARACTER_TOKEN]: ne,
              [i.COMMENT_TOKEN]: re,
              [i.DOCTYPE_TOKEN]: function (e, t) {
                e._setDocumentType(t);
                const n = t.forceQuirks
                  ? f.DOCUMENT_MODE.QUIRKS
                  : p.getDocumentMode(t);
                p.isConforming(t) || e._err(m.nonConformingDoctype);
                e.treeAdapter.setDocumentMode(e.document, n),
                  (e.insertionMode = w);
              },
              [i.START_TAG_TOKEN]: ce,
              [i.END_TAG_TOKEN]: ce,
              [i.EOF_TOKEN]: ce,
            },
            [w]: {
              [i.CHARACTER_TOKEN]: le,
              [i.NULL_CHARACTER_TOKEN]: le,
              [i.WHITESPACE_CHARACTER_TOKEN]: ne,
              [i.COMMENT_TOKEN]: re,
              [i.DOCTYPE_TOKEN]: ne,
              [i.START_TAG_TOKEN]: function (e, t) {
                t.tagName === g.HTML
                  ? (e._insertElement(t, x.HTML), (e.insertionMode = C))
                  : le(e, t);
              },
              [i.END_TAG_TOKEN]: function (e, t) {
                const n = t.tagName;
                (n !== g.HTML && n !== g.HEAD && n !== g.BODY && n !== g.BR) ||
                  le(e, t);
              },
              [i.EOF_TOKEN]: le,
            },
            [C]: {
              [i.CHARACTER_TOKEN]: ue,
              [i.NULL_CHARACTER_TOKEN]: ue,
              [i.WHITESPACE_CHARACTER_TOKEN]: ne,
              [i.COMMENT_TOKEN]: re,
              [i.DOCTYPE_TOKEN]: ie,
              [i.START_TAG_TOKEN]: function (e, t) {
                const n = t.tagName;
                n === g.HTML
                  ? _e(e, t)
                  : n === g.HEAD
                    ? (e._insertElement(t, x.HTML),
                      (e.headElement = e.openElements.current),
                      (e.insertionMode = A))
                    : ue(e, t);
              },
              [i.END_TAG_TOKEN]: function (e, t) {
                const n = t.tagName;
                n === g.HEAD || n === g.BODY || n === g.HTML || n === g.BR
                  ? ue(e, t)
                  : e._err(m.endTagWithoutMatchingOpenElement);
              },
              [i.EOF_TOKEN]: ue,
            },
            [A]: {
              [i.CHARACTER_TOKEN]: me,
              [i.NULL_CHARACTER_TOKEN]: me,
              [i.WHITESPACE_CHARACTER_TOKEN]: oe,
              [i.COMMENT_TOKEN]: re,
              [i.DOCTYPE_TOKEN]: ie,
              [i.START_TAG_TOKEN]: pe,
              [i.END_TAG_TOKEN]: de,
              [i.EOF_TOKEN]: me,
            },
            [S]: {
              [i.CHARACTER_TOKEN]: he,
              [i.NULL_CHARACTER_TOKEN]: he,
              [i.WHITESPACE_CHARACTER_TOKEN]: oe,
              [i.COMMENT_TOKEN]: re,
              [i.DOCTYPE_TOKEN]: ie,
              [i.START_TAG_TOKEN]: function (e, t) {
                const n = t.tagName;
                n === g.HTML
                  ? _e(e, t)
                  : n === g.BASEFONT ||
                      n === g.BGSOUND ||
                      n === g.HEAD ||
                      n === g.LINK ||
                      n === g.META ||
                      n === g.NOFRAMES ||
                      n === g.STYLE
                    ? pe(e, t)
                    : n === g.NOSCRIPT
                      ? e._err(m.nestedNoscriptInHead)
                      : he(e, t);
              },
              [i.END_TAG_TOKEN]: function (e, t) {
                const n = t.tagName;
                n === g.NOSCRIPT
                  ? (e.openElements.pop(), (e.insertionMode = A))
                  : n === g.BR
                    ? he(e, t)
                    : e._err(m.endTagWithoutMatchingOpenElement);
              },
              [i.EOF_TOKEN]: he,
            },
            [_]: {
              [i.CHARACTER_TOKEN]: fe,
              [i.NULL_CHARACTER_TOKEN]: fe,
              [i.WHITESPACE_CHARACTER_TOKEN]: oe,
              [i.COMMENT_TOKEN]: re,
              [i.DOCTYPE_TOKEN]: ie,
              [i.START_TAG_TOKEN]: function (e, t) {
                const n = t.tagName;
                n === g.HTML
                  ? _e(e, t)
                  : n === g.BODY
                    ? (e._insertElement(t, x.HTML),
                      (e.framesetOk = !1),
                      (e.insertionMode = N))
                    : n === g.FRAMESET
                      ? (e._insertElement(t, x.HTML), (e.insertionMode = z))
                      : n === g.BASE ||
                          n === g.BASEFONT ||
                          n === g.BGSOUND ||
                          n === g.LINK ||
                          n === g.META ||
                          n === g.NOFRAMES ||
                          n === g.SCRIPT ||
                          n === g.STYLE ||
                          n === g.TEMPLATE ||
                          n === g.TITLE
                        ? (e._err(m.abandonedHeadElementChild),
                          e.openElements.push(e.headElement),
                          pe(e, t),
                          e.openElements.remove(e.headElement))
                        : n === g.HEAD
                          ? e._err(m.misplacedStartTagForHeadElement)
                          : fe(e, t);
              },
              [i.END_TAG_TOKEN]: function (e, t) {
                const n = t.tagName;
                n === g.BODY || n === g.HTML || n === g.BR
                  ? fe(e, t)
                  : n === g.TEMPLATE
                    ? de(e, t)
                    : e._err(m.endTagWithoutMatchingOpenElement);
              },
              [i.EOF_TOKEN]: fe,
            },
            [N]: {
              [i.CHARACTER_TOKEN]: xe,
              [i.NULL_CHARACTER_TOKEN]: ne,
              [i.WHITESPACE_CHARACTER_TOKEN]: ge,
              [i.COMMENT_TOKEN]: re,
              [i.DOCTYPE_TOKEN]: ne,
              [i.START_TAG_TOKEN]: _e,
              [i.END_TAG_TOKEN]: Le,
              [i.EOF_TOKEN]: Ie,
            },
            [P]: {
              [i.CHARACTER_TOKEN]: oe,
              [i.NULL_CHARACTER_TOKEN]: oe,
              [i.WHITESPACE_CHARACTER_TOKEN]: oe,
              [i.COMMENT_TOKEN]: ne,
              [i.DOCTYPE_TOKEN]: ne,
              [i.START_TAG_TOKEN]: ne,
              [i.END_TAG_TOKEN]: function (e, t) {
                t.tagName === g.SCRIPT &&
                  (e.pendingScript = e.openElements.current);
                e.openElements.pop(),
                  (e.insertionMode = e.originalInsertionMode);
              },
              [i.EOF_TOKEN]: function (e, t) {
                e._err(m.eofInElementThatCanContainOnlyText),
                  e.openElements.pop(),
                  (e.insertionMode = e.originalInsertionMode),
                  e._processToken(t);
              },
            },
            [O]: {
              [i.CHARACTER_TOKEN]: Re,
              [i.NULL_CHARACTER_TOKEN]: Re,
              [i.WHITESPACE_CHARACTER_TOKEN]: Re,
              [i.COMMENT_TOKEN]: re,
              [i.DOCTYPE_TOKEN]: ne,
              [i.START_TAG_TOKEN]: Me,
              [i.END_TAG_TOKEN]: De,
              [i.EOF_TOKEN]: Ie,
            },
            [L]: {
              [i.CHARACTER_TOKEN]: function (e, t) {
                e.pendingCharacterTokens.push(t),
                  (e.hasNonWhitespacePendingCharacterToken = !0);
              },
              [i.NULL_CHARACTER_TOKEN]: ne,
              [i.WHITESPACE_CHARACTER_TOKEN]: function (e, t) {
                e.pendingCharacterTokens.push(t);
              },
              [i.COMMENT_TOKEN]: He,
              [i.DOCTYPE_TOKEN]: He,
              [i.START_TAG_TOKEN]: He,
              [i.END_TAG_TOKEN]: He,
              [i.EOF_TOKEN]: He,
            },
            [I]: {
              [i.CHARACTER_TOKEN]: xe,
              [i.NULL_CHARACTER_TOKEN]: ne,
              [i.WHITESPACE_CHARACTER_TOKEN]: ge,
              [i.COMMENT_TOKEN]: re,
              [i.DOCTYPE_TOKEN]: ne,
              [i.START_TAG_TOKEN]: function (e, t) {
                const n = t.tagName;
                n === g.CAPTION ||
                n === g.COL ||
                n === g.COLGROUP ||
                n === g.TBODY ||
                n === g.TD ||
                n === g.TFOOT ||
                n === g.TH ||
                n === g.THEAD ||
                n === g.TR
                  ? e.openElements.hasInTableScope(g.CAPTION) &&
                    (e.openElements.generateImpliedEndTags(),
                    e.openElements.popUntilTagNamePopped(g.CAPTION),
                    e.activeFormattingElements.clearToLastMarker(),
                    (e.insertionMode = O),
                    e._processToken(t))
                  : _e(e, t);
              },
              [i.END_TAG_TOKEN]: function (e, t) {
                const n = t.tagName;
                n === g.CAPTION || n === g.TABLE
                  ? e.openElements.hasInTableScope(g.CAPTION) &&
                    (e.openElements.generateImpliedEndTags(),
                    e.openElements.popUntilTagNamePopped(g.CAPTION),
                    e.activeFormattingElements.clearToLastMarker(),
                    (e.insertionMode = O),
                    n === g.TABLE && e._processToken(t))
                  : n !== g.BODY &&
                    n !== g.COL &&
                    n !== g.COLGROUP &&
                    n !== g.HTML &&
                    n !== g.TBODY &&
                    n !== g.TD &&
                    n !== g.TFOOT &&
                    n !== g.TH &&
                    n !== g.THEAD &&
                    n !== g.TR &&
                    Le(e, t);
              },
              [i.EOF_TOKEN]: Ie,
            },
            [R]: {
              [i.CHARACTER_TOKEN]: Fe,
              [i.NULL_CHARACTER_TOKEN]: Fe,
              [i.WHITESPACE_CHARACTER_TOKEN]: oe,
              [i.COMMENT_TOKEN]: re,
              [i.DOCTYPE_TOKEN]: ne,
              [i.START_TAG_TOKEN]: function (e, t) {
                const n = t.tagName;
                n === g.HTML
                  ? _e(e, t)
                  : n === g.COL
                    ? (e._appendElement(t, x.HTML), (t.ackSelfClosing = !0))
                    : n === g.TEMPLATE
                      ? pe(e, t)
                      : Fe(e, t);
              },
              [i.END_TAG_TOKEN]: function (e, t) {
                const n = t.tagName;
                n === g.COLGROUP
                  ? e.openElements.currentTagName === g.COLGROUP &&
                    (e.openElements.pop(), (e.insertionMode = O))
                  : n === g.TEMPLATE
                    ? de(e, t)
                    : n !== g.COL && Fe(e, t);
              },
              [i.EOF_TOKEN]: Ie,
            },
            [M]: {
              [i.CHARACTER_TOKEN]: Re,
              [i.NULL_CHARACTER_TOKEN]: Re,
              [i.WHITESPACE_CHARACTER_TOKEN]: Re,
              [i.COMMENT_TOKEN]: re,
              [i.DOCTYPE_TOKEN]: ne,
              [i.START_TAG_TOKEN]: function (e, t) {
                const n = t.tagName;
                n === g.TR
                  ? (e.openElements.clearBackToTableBodyContext(),
                    e._insertElement(t, x.HTML),
                    (e.insertionMode = D))
                  : n === g.TH || n === g.TD
                    ? (e.openElements.clearBackToTableBodyContext(),
                      e._insertFakeElement(g.TR),
                      (e.insertionMode = D),
                      e._processToken(t))
                    : n === g.CAPTION ||
                        n === g.COL ||
                        n === g.COLGROUP ||
                        n === g.TBODY ||
                        n === g.TFOOT ||
                        n === g.THEAD
                      ? e.openElements.hasTableBodyContextInTableScope() &&
                        (e.openElements.clearBackToTableBodyContext(),
                        e.openElements.pop(),
                        (e.insertionMode = O),
                        e._processToken(t))
                      : Me(e, t);
              },
              [i.END_TAG_TOKEN]: function (e, t) {
                const n = t.tagName;
                n === g.TBODY || n === g.TFOOT || n === g.THEAD
                  ? e.openElements.hasInTableScope(n) &&
                    (e.openElements.clearBackToTableBodyContext(),
                    e.openElements.pop(),
                    (e.insertionMode = O))
                  : n === g.TABLE
                    ? e.openElements.hasTableBodyContextInTableScope() &&
                      (e.openElements.clearBackToTableBodyContext(),
                      e.openElements.pop(),
                      (e.insertionMode = O),
                      e._processToken(t))
                    : ((n !== g.BODY &&
                        n !== g.CAPTION &&
                        n !== g.COL &&
                        n !== g.COLGROUP) ||
                        (n !== g.HTML &&
                          n !== g.TD &&
                          n !== g.TH &&
                          n !== g.TR)) &&
                      De(e, t);
              },
              [i.EOF_TOKEN]: Ie,
            },
            [D]: {
              [i.CHARACTER_TOKEN]: Re,
              [i.NULL_CHARACTER_TOKEN]: Re,
              [i.WHITESPACE_CHARACTER_TOKEN]: Re,
              [i.COMMENT_TOKEN]: re,
              [i.DOCTYPE_TOKEN]: ne,
              [i.START_TAG_TOKEN]: function (e, t) {
                const n = t.tagName;
                n === g.TH || n === g.TD
                  ? (e.openElements.clearBackToTableRowContext(),
                    e._insertElement(t, x.HTML),
                    (e.insertionMode = j),
                    e.activeFormattingElements.insertMarker())
                  : n === g.CAPTION ||
                      n === g.COL ||
                      n === g.COLGROUP ||
                      n === g.TBODY ||
                      n === g.TFOOT ||
                      n === g.THEAD ||
                      n === g.TR
                    ? e.openElements.hasInTableScope(g.TR) &&
                      (e.openElements.clearBackToTableRowContext(),
                      e.openElements.pop(),
                      (e.insertionMode = M),
                      e._processToken(t))
                    : Me(e, t);
              },
              [i.END_TAG_TOKEN]: function (e, t) {
                const n = t.tagName;
                n === g.TR
                  ? e.openElements.hasInTableScope(g.TR) &&
                    (e.openElements.clearBackToTableRowContext(),
                    e.openElements.pop(),
                    (e.insertionMode = M))
                  : n === g.TABLE
                    ? e.openElements.hasInTableScope(g.TR) &&
                      (e.openElements.clearBackToTableRowContext(),
                      e.openElements.pop(),
                      (e.insertionMode = M),
                      e._processToken(t))
                    : n === g.TBODY || n === g.TFOOT || n === g.THEAD
                      ? (e.openElements.hasInTableScope(n) ||
                          e.openElements.hasInTableScope(g.TR)) &&
                        (e.openElements.clearBackToTableRowContext(),
                        e.openElements.pop(),
                        (e.insertionMode = M),
                        e._processToken(t))
                      : ((n !== g.BODY &&
                          n !== g.CAPTION &&
                          n !== g.COL &&
                          n !== g.COLGROUP) ||
                          (n !== g.HTML && n !== g.TD && n !== g.TH)) &&
                        De(e, t);
              },
              [i.EOF_TOKEN]: Ie,
            },
            [j]: {
              [i.CHARACTER_TOKEN]: xe,
              [i.NULL_CHARACTER_TOKEN]: ne,
              [i.WHITESPACE_CHARACTER_TOKEN]: ge,
              [i.COMMENT_TOKEN]: re,
              [i.DOCTYPE_TOKEN]: ne,
              [i.START_TAG_TOKEN]: function (e, t) {
                const n = t.tagName;
                n === g.CAPTION ||
                n === g.COL ||
                n === g.COLGROUP ||
                n === g.TBODY ||
                n === g.TD ||
                n === g.TFOOT ||
                n === g.TH ||
                n === g.THEAD ||
                n === g.TR
                  ? (e.openElements.hasInTableScope(g.TD) ||
                      e.openElements.hasInTableScope(g.TH)) &&
                    (e._closeTableCell(), e._processToken(t))
                  : _e(e, t);
              },
              [i.END_TAG_TOKEN]: function (e, t) {
                const n = t.tagName;
                n === g.TD || n === g.TH
                  ? e.openElements.hasInTableScope(n) &&
                    (e.openElements.generateImpliedEndTags(),
                    e.openElements.popUntilTagNamePopped(n),
                    e.activeFormattingElements.clearToLastMarker(),
                    (e.insertionMode = D))
                  : n === g.TABLE ||
                      n === g.TBODY ||
                      n === g.TFOOT ||
                      n === g.THEAD ||
                      n === g.TR
                    ? e.openElements.hasInTableScope(n) &&
                      (e._closeTableCell(), e._processToken(t))
                    : n !== g.BODY &&
                      n !== g.CAPTION &&
                      n !== g.COL &&
                      n !== g.COLGROUP &&
                      n !== g.HTML &&
                      Le(e, t);
              },
              [i.EOF_TOKEN]: Ie,
            },
            [H]: {
              [i.CHARACTER_TOKEN]: oe,
              [i.NULL_CHARACTER_TOKEN]: ne,
              [i.WHITESPACE_CHARACTER_TOKEN]: oe,
              [i.COMMENT_TOKEN]: re,
              [i.DOCTYPE_TOKEN]: ne,
              [i.START_TAG_TOKEN]: Be,
              [i.END_TAG_TOKEN]: Ue,
              [i.EOF_TOKEN]: Ie,
            },
            [F]: {
              [i.CHARACTER_TOKEN]: oe,
              [i.NULL_CHARACTER_TOKEN]: ne,
              [i.WHITESPACE_CHARACTER_TOKEN]: oe,
              [i.COMMENT_TOKEN]: re,
              [i.DOCTYPE_TOKEN]: ne,
              [i.START_TAG_TOKEN]: function (e, t) {
                const n = t.tagName;
                n === g.CAPTION ||
                n === g.TABLE ||
                n === g.TBODY ||
                n === g.TFOOT ||
                n === g.THEAD ||
                n === g.TR ||
                n === g.TD ||
                n === g.TH
                  ? (e.openElements.popUntilTagNamePopped(g.SELECT),
                    e._resetInsertionMode(),
                    e._processToken(t))
                  : Be(e, t);
              },
              [i.END_TAG_TOKEN]: function (e, t) {
                const n = t.tagName;
                n === g.CAPTION ||
                n === g.TABLE ||
                n === g.TBODY ||
                n === g.TFOOT ||
                n === g.THEAD ||
                n === g.TR ||
                n === g.TD ||
                n === g.TH
                  ? e.openElements.hasInTableScope(n) &&
                    (e.openElements.popUntilTagNamePopped(g.SELECT),
                    e._resetInsertionMode(),
                    e._processToken(t))
                  : Ue(e, t);
              },
              [i.EOF_TOKEN]: Ie,
            },
            [B]: {
              [i.CHARACTER_TOKEN]: xe,
              [i.NULL_CHARACTER_TOKEN]: ne,
              [i.WHITESPACE_CHARACTER_TOKEN]: ge,
              [i.COMMENT_TOKEN]: re,
              [i.DOCTYPE_TOKEN]: ne,
              [i.START_TAG_TOKEN]: function (e, t) {
                const n = t.tagName;
                if (
                  n === g.BASE ||
                  n === g.BASEFONT ||
                  n === g.BGSOUND ||
                  n === g.LINK ||
                  n === g.META ||
                  n === g.NOFRAMES ||
                  n === g.SCRIPT ||
                  n === g.STYLE ||
                  n === g.TEMPLATE ||
                  n === g.TITLE
                )
                  pe(e, t);
                else {
                  const i = W[n] || N;
                  e._popTmplInsertionMode(),
                    e._pushTmplInsertionMode(i),
                    (e.insertionMode = i),
                    e._processToken(t);
                }
              },
              [i.END_TAG_TOKEN]: function (e, t) {
                t.tagName === g.TEMPLATE && de(e, t);
              },
              [i.EOF_TOKEN]: ze,
            },
            [U]: {
              [i.CHARACTER_TOKEN]: qe,
              [i.NULL_CHARACTER_TOKEN]: qe,
              [i.WHITESPACE_CHARACTER_TOKEN]: ge,
              [i.COMMENT_TOKEN]: function (e, t) {
                e._appendCommentNode(t, e.openElements.items[0]);
              },
              [i.DOCTYPE_TOKEN]: ne,
              [i.START_TAG_TOKEN]: function (e, t) {
                t.tagName === g.HTML ? _e(e, t) : qe(e, t);
              },
              [i.END_TAG_TOKEN]: function (e, t) {
                t.tagName === g.HTML
                  ? e.fragmentContext || (e.insertionMode = G)
                  : qe(e, t);
              },
              [i.EOF_TOKEN]: se,
            },
            [z]: {
              [i.CHARACTER_TOKEN]: ne,
              [i.NULL_CHARACTER_TOKEN]: ne,
              [i.WHITESPACE_CHARACTER_TOKEN]: oe,
              [i.COMMENT_TOKEN]: re,
              [i.DOCTYPE_TOKEN]: ne,
              [i.START_TAG_TOKEN]: function (e, t) {
                const n = t.tagName;
                n === g.HTML
                  ? _e(e, t)
                  : n === g.FRAMESET
                    ? e._insertElement(t, x.HTML)
                    : n === g.FRAME
                      ? (e._appendElement(t, x.HTML), (t.ackSelfClosing = !0))
                      : n === g.NOFRAMES && pe(e, t);
              },
              [i.END_TAG_TOKEN]: function (e, t) {
                t.tagName !== g.FRAMESET ||
                  e.openElements.isRootHtmlElementCurrent() ||
                  (e.openElements.pop(),
                  e.fragmentContext ||
                    e.openElements.currentTagName === g.FRAMESET ||
                    (e.insertionMode = q));
              },
              [i.EOF_TOKEN]: se,
            },
            [q]: {
              [i.CHARACTER_TOKEN]: ne,
              [i.NULL_CHARACTER_TOKEN]: ne,
              [i.WHITESPACE_CHARACTER_TOKEN]: oe,
              [i.COMMENT_TOKEN]: re,
              [i.DOCTYPE_TOKEN]: ne,
              [i.START_TAG_TOKEN]: function (e, t) {
                const n = t.tagName;
                n === g.HTML ? _e(e, t) : n === g.NOFRAMES && pe(e, t);
              },
              [i.END_TAG_TOKEN]: function (e, t) {
                t.tagName === g.HTML && (e.insertionMode = K);
              },
              [i.EOF_TOKEN]: se,
            },
            [G]: {
              [i.CHARACTER_TOKEN]: Ge,
              [i.NULL_CHARACTER_TOKEN]: Ge,
              [i.WHITESPACE_CHARACTER_TOKEN]: ge,
              [i.COMMENT_TOKEN]: ae,
              [i.DOCTYPE_TOKEN]: ne,
              [i.START_TAG_TOKEN]: function (e, t) {
                t.tagName === g.HTML ? _e(e, t) : Ge(e, t);
              },
              [i.END_TAG_TOKEN]: Ge,
              [i.EOF_TOKEN]: se,
            },
            [K]: {
              [i.CHARACTER_TOKEN]: ne,
              [i.NULL_CHARACTER_TOKEN]: ne,
              [i.WHITESPACE_CHARACTER_TOKEN]: ge,
              [i.COMMENT_TOKEN]: ae,
              [i.DOCTYPE_TOKEN]: ne,
              [i.START_TAG_TOKEN]: function (e, t) {
                const n = t.tagName;
                n === g.HTML ? _e(e, t) : n === g.NOFRAMES && pe(e, t);
              },
              [i.END_TAG_TOKEN]: ne,
              [i.EOF_TOKEN]: se,
            },
          };
        function Q(e, t) {
          let n = e.activeFormattingElements.getElementEntryInScopeWithTagName(
            t.tagName,
          );
          return (
            n
              ? e.openElements.contains(n.element)
                ? e.openElements.hasInScope(t.tagName) || (n = null)
                : (e.activeFormattingElements.removeEntry(n), (n = null))
              : Oe(e, t),
            n
          );
        }
        function X(e, t) {
          let n = null;
          for (let i = e.openElements.stackTop; i >= 0; i--) {
            const r = e.openElements.items[i];
            if (r === t.element) break;
            e._isSpecialElement(r) && (n = r);
          }
          return (
            n ||
              (e.openElements.popUntilElementPopped(t.element),
              e.activeFormattingElements.removeEntry(t)),
            n
          );
        }
        function J(e, t, n) {
          let i = t,
            r = e.openElements.getCommonAncestor(t);
          for (let a = 0, o = r; o !== n; a++, o = r) {
            r = e.openElements.getCommonAncestor(o);
            const n = e.activeFormattingElements.getElementEntry(o),
              s = n && a >= y;
            !n || s
              ? (s && e.activeFormattingElements.removeEntry(n),
                e.openElements.remove(o))
              : ((o = $(e, n)),
                i === t && (e.activeFormattingElements.bookmark = n),
                e.treeAdapter.detachNode(i),
                e.treeAdapter.appendChild(o, i),
                (i = o));
          }
          return i;
        }
        function $(e, t) {
          const n = e.treeAdapter.getNamespaceURI(t.element),
            i = e.treeAdapter.createElement(t.token.tagName, n, t.token.attrs);
          return e.openElements.replace(t.element, i), (t.element = i), i;
        }
        function Z(e, t, n) {
          if (e._isElementCausesFosterParenting(t)) e._fosterParentElement(n);
          else {
            const i = e.treeAdapter.getTagName(t),
              r = e.treeAdapter.getNamespaceURI(t);
            i === g.TEMPLATE &&
              r === x.HTML &&
              (t = e.treeAdapter.getTemplateContent(t)),
              e.treeAdapter.appendChild(t, n);
          }
        }
        function ee(e, t, n) {
          const i = e.treeAdapter.getNamespaceURI(n.element),
            r = n.token,
            a = e.treeAdapter.createElement(r.tagName, i, r.attrs);
          e._adoptNodes(t, a),
            e.treeAdapter.appendChild(t, a),
            e.activeFormattingElements.insertElementAfterBookmark(a, n.token),
            e.activeFormattingElements.removeEntry(n),
            e.openElements.remove(n.element),
            e.openElements.insertAfter(t, a);
        }
        function te(e, t) {
          let n;
          for (let i = 0; i < T && ((n = Q(e, t)), n); i++) {
            const t = X(e, n);
            if (!t) break;
            e.activeFormattingElements.bookmark = n;
            const i = J(e, t, n.element),
              r = e.openElements.getCommonAncestor(n.element);
            e.treeAdapter.detachNode(i), Z(e, r, i), ee(e, t, n);
          }
        }
        function ne() {}
        function ie(e) {
          e._err(m.misplacedDoctype);
        }
        function re(e, t) {
          e._appendCommentNode(
            t,
            e.openElements.currentTmplContent || e.openElements.current,
          );
        }
        function ae(e, t) {
          e._appendCommentNode(t, e.document);
        }
        function oe(e, t) {
          e._insertCharacters(t);
        }
        function se(e) {
          e.stopped = !0;
        }
        function ce(e, t) {
          e._err(m.missingDoctype, { beforeToken: !0 }),
            e.treeAdapter.setDocumentMode(e.document, f.DOCUMENT_MODE.QUIRKS),
            (e.insertionMode = w),
            e._processToken(t);
        }
        function le(e, t) {
          e._insertFakeRootElement(), (e.insertionMode = C), e._processToken(t);
        }
        function ue(e, t) {
          e._insertFakeElement(g.HEAD),
            (e.headElement = e.openElements.current),
            (e.insertionMode = A),
            e._processToken(t);
        }
        function pe(e, t) {
          const n = t.tagName;
          n === g.HTML
            ? _e(e, t)
            : n === g.BASE ||
                n === g.BASEFONT ||
                n === g.BGSOUND ||
                n === g.LINK ||
                n === g.META
              ? (e._appendElement(t, x.HTML), (t.ackSelfClosing = !0))
              : n === g.TITLE
                ? e._switchToTextParsing(t, i.MODE.RCDATA)
                : n === g.NOSCRIPT
                  ? e.options.scriptingEnabled
                    ? e._switchToTextParsing(t, i.MODE.RAWTEXT)
                    : (e._insertElement(t, x.HTML), (e.insertionMode = S))
                  : n === g.NOFRAMES || n === g.STYLE
                    ? e._switchToTextParsing(t, i.MODE.RAWTEXT)
                    : n === g.SCRIPT
                      ? e._switchToTextParsing(t, i.MODE.SCRIPT_DATA)
                      : n === g.TEMPLATE
                        ? (e._insertTemplate(t, x.HTML),
                          e.activeFormattingElements.insertMarker(),
                          (e.framesetOk = !1),
                          (e.insertionMode = B),
                          e._pushTmplInsertionMode(B))
                        : n === g.HEAD
                          ? e._err(m.misplacedStartTagForHeadElement)
                          : me(e, t);
        }
        function de(e, t) {
          const n = t.tagName;
          n === g.HEAD
            ? (e.openElements.pop(), (e.insertionMode = _))
            : n === g.BODY || n === g.BR || n === g.HTML
              ? me(e, t)
              : n === g.TEMPLATE && e.openElements.tmplCount > 0
                ? (e.openElements.generateImpliedEndTagsThoroughly(),
                  e.openElements.currentTagName !== g.TEMPLATE &&
                    e._err(m.closingOfElementWithOpenChildElements),
                  e.openElements.popUntilTagNamePopped(g.TEMPLATE),
                  e.activeFormattingElements.clearToLastMarker(),
                  e._popTmplInsertionMode(),
                  e._resetInsertionMode())
                : e._err(m.endTagWithoutMatchingOpenElement);
        }
        function me(e, t) {
          e.openElements.pop(), (e.insertionMode = _), e._processToken(t);
        }
        function he(e, t) {
          const n =
            t.type === i.EOF_TOKEN
              ? m.openElementsLeftAfterEof
              : m.disallowedContentInNoscriptInHead;
          e._err(n),
            e.openElements.pop(),
            (e.insertionMode = A),
            e._processToken(t);
        }
        function fe(e, t) {
          e._insertFakeElement(g.BODY),
            (e.insertionMode = N),
            e._processToken(t);
        }
        function ge(e, t) {
          e._reconstructActiveFormattingElements(), e._insertCharacters(t);
        }
        function xe(e, t) {
          e._reconstructActiveFormattingElements(),
            e._insertCharacters(t),
            (e.framesetOk = !1);
        }
        function be(e, t) {
          e.openElements.hasInButtonScope(g.P) && e._closePElement(),
            e._insertElement(t, x.HTML);
        }
        function ve(e, t) {
          e.openElements.hasInButtonScope(g.P) && e._closePElement(),
            e._insertElement(t, x.HTML),
            (e.skipNextNewLine = !0),
            (e.framesetOk = !1);
        }
        function ke(e, t) {
          e._reconstructActiveFormattingElements(),
            e._insertElement(t, x.HTML),
            e.activeFormattingElements.pushElement(e.openElements.current, t);
        }
        function Te(e, t) {
          e._reconstructActiveFormattingElements(),
            e._insertElement(t, x.HTML),
            e.activeFormattingElements.insertMarker(),
            (e.framesetOk = !1);
        }
        function ye(e, t) {
          e._reconstructActiveFormattingElements(),
            e._appendElement(t, x.HTML),
            (e.framesetOk = !1),
            (t.ackSelfClosing = !0);
        }
        function Ee(e, t) {
          e._appendElement(t, x.HTML), (t.ackSelfClosing = !0);
        }
        function we(e, t) {
          e._switchToTextParsing(t, i.MODE.RAWTEXT);
        }
        function Ce(e, t) {
          e.openElements.currentTagName === g.OPTION && e.openElements.pop(),
            e._reconstructActiveFormattingElements(),
            e._insertElement(t, x.HTML);
        }
        function Ae(e, t) {
          e.openElements.hasInScope(g.RUBY) &&
            e.openElements.generateImpliedEndTags(),
            e._insertElement(t, x.HTML);
        }
        function Se(e, t) {
          e._reconstructActiveFormattingElements(), e._insertElement(t, x.HTML);
        }
        function _e(e, t) {
          const n = t.tagName;
          switch (n.length) {
            case 1:
              n === g.I || n === g.S || n === g.B || n === g.U
                ? ke(e, t)
                : n === g.P
                  ? be(e, t)
                  : n === g.A
                    ? (function (e, t) {
                        const n =
                          e.activeFormattingElements.getElementEntryInScopeWithTagName(
                            g.A,
                          );
                        n &&
                          (te(e, t),
                          e.openElements.remove(n.element),
                          e.activeFormattingElements.removeEntry(n)),
                          e._reconstructActiveFormattingElements(),
                          e._insertElement(t, x.HTML),
                          e.activeFormattingElements.pushElement(
                            e.openElements.current,
                            t,
                          );
                      })(e, t)
                    : Se(e, t);
              break;
            case 2:
              n === g.DL || n === g.OL || n === g.UL
                ? be(e, t)
                : n === g.H1 ||
                    n === g.H2 ||
                    n === g.H3 ||
                    n === g.H4 ||
                    n === g.H5 ||
                    n === g.H6
                  ? (function (e, t) {
                      e.openElements.hasInButtonScope(g.P) &&
                        e._closePElement();
                      const n = e.openElements.currentTagName;
                      (n !== g.H1 &&
                        n !== g.H2 &&
                        n !== g.H3 &&
                        n !== g.H4 &&
                        n !== g.H5 &&
                        n !== g.H6) ||
                        e.openElements.pop(),
                        e._insertElement(t, x.HTML);
                    })(e, t)
                  : n === g.LI || n === g.DD || n === g.DT
                    ? (function (e, t) {
                        e.framesetOk = !1;
                        const n = t.tagName;
                        for (let t = e.openElements.stackTop; t >= 0; t--) {
                          const i = e.openElements.items[t],
                            r = e.treeAdapter.getTagName(i);
                          let a = null;
                          if (
                            (n === g.LI && r === g.LI
                              ? (a = g.LI)
                              : (n !== g.DD && n !== g.DT) ||
                                (r !== g.DD && r !== g.DT) ||
                                (a = r),
                            a)
                          ) {
                            e.openElements.generateImpliedEndTagsWithExclusion(
                              a,
                            ),
                              e.openElements.popUntilTagNamePopped(a);
                            break;
                          }
                          if (
                            r !== g.ADDRESS &&
                            r !== g.DIV &&
                            r !== g.P &&
                            e._isSpecialElement(i)
                          )
                            break;
                        }
                        e.openElements.hasInButtonScope(g.P) &&
                          e._closePElement(),
                          e._insertElement(t, x.HTML);
                      })(e, t)
                    : n === g.EM || n === g.TT
                      ? ke(e, t)
                      : n === g.BR
                        ? ye(e, t)
                        : n === g.HR
                          ? (function (e, t) {
                              e.openElements.hasInButtonScope(g.P) &&
                                e._closePElement(),
                                e._appendElement(t, x.HTML),
                                (e.framesetOk = !1),
                                (t.ackSelfClosing = !0);
                            })(e, t)
                          : n === g.RB
                            ? Ae(e, t)
                            : n === g.RT || n === g.RP
                              ? (function (e, t) {
                                  e.openElements.hasInScope(g.RUBY) &&
                                    e.openElements.generateImpliedEndTagsWithExclusion(
                                      g.RTC,
                                    ),
                                    e._insertElement(t, x.HTML);
                                })(e, t)
                              : n !== g.TH &&
                                n !== g.TD &&
                                n !== g.TR &&
                                Se(e, t);
              break;
            case 3:
              n === g.DIV || n === g.DIR || n === g.NAV
                ? be(e, t)
                : n === g.PRE
                  ? ve(e, t)
                  : n === g.BIG
                    ? ke(e, t)
                    : n === g.IMG || n === g.WBR
                      ? ye(e, t)
                      : n === g.XMP
                        ? (function (e, t) {
                            e.openElements.hasInButtonScope(g.P) &&
                              e._closePElement(),
                              e._reconstructActiveFormattingElements(),
                              (e.framesetOk = !1),
                              e._switchToTextParsing(t, i.MODE.RAWTEXT);
                          })(e, t)
                        : n === g.SVG
                          ? (function (e, t) {
                              e._reconstructActiveFormattingElements(),
                                d.adjustTokenSVGAttrs(t),
                                d.adjustTokenXMLAttrs(t),
                                t.selfClosing
                                  ? e._appendElement(t, x.SVG)
                                  : e._insertElement(t, x.SVG),
                                (t.ackSelfClosing = !0);
                            })(e, t)
                          : n === g.RTC
                            ? Ae(e, t)
                            : n !== g.COL && Se(e, t);
              break;
            case 4:
              n === g.HTML
                ? (function (e, t) {
                    0 === e.openElements.tmplCount &&
                      e.treeAdapter.adoptAttributes(
                        e.openElements.items[0],
                        t.attrs,
                      );
                  })(e, t)
                : n === g.BASE || n === g.LINK || n === g.META
                  ? pe(e, t)
                  : n === g.BODY
                    ? (function (e, t) {
                        const n =
                          e.openElements.tryPeekProperlyNestedBodyElement();
                        n &&
                          0 === e.openElements.tmplCount &&
                          ((e.framesetOk = !1),
                          e.treeAdapter.adoptAttributes(n, t.attrs));
                      })(e, t)
                    : n === g.MAIN || n === g.MENU
                      ? be(e, t)
                      : n === g.FORM
                        ? (function (e, t) {
                            const n = e.openElements.tmplCount > 0;
                            (e.formElement && !n) ||
                              (e.openElements.hasInButtonScope(g.P) &&
                                e._closePElement(),
                              e._insertElement(t, x.HTML),
                              n || (e.formElement = e.openElements.current));
                          })(e, t)
                        : n === g.CODE || n === g.FONT
                          ? ke(e, t)
                          : n === g.NOBR
                            ? (function (e, t) {
                                e._reconstructActiveFormattingElements(),
                                  e.openElements.hasInScope(g.NOBR) &&
                                    (te(e, t),
                                    e._reconstructActiveFormattingElements()),
                                  e._insertElement(t, x.HTML),
                                  e.activeFormattingElements.pushElement(
                                    e.openElements.current,
                                    t,
                                  );
                              })(e, t)
                            : n === g.AREA
                              ? ye(e, t)
                              : n === g.MATH
                                ? (function (e, t) {
                                    e._reconstructActiveFormattingElements(),
                                      d.adjustTokenMathMLAttrs(t),
                                      d.adjustTokenXMLAttrs(t),
                                      t.selfClosing
                                        ? e._appendElement(t, x.MATHML)
                                        : e._insertElement(t, x.MATHML),
                                      (t.ackSelfClosing = !0);
                                  })(e, t)
                                : n === g.MENU
                                  ? (function (e, t) {
                                      e.openElements.hasInButtonScope(g.P) &&
                                        e._closePElement(),
                                        e._insertElement(t, x.HTML);
                                    })(e, t)
                                  : n !== g.HEAD && Se(e, t);
              break;
            case 5:
              n === g.STYLE || n === g.TITLE
                ? pe(e, t)
                : n === g.ASIDE
                  ? be(e, t)
                  : n === g.SMALL
                    ? ke(e, t)
                    : n === g.TABLE
                      ? (function (e, t) {
                          e.treeAdapter.getDocumentMode(e.document) !==
                            f.DOCUMENT_MODE.QUIRKS &&
                            e.openElements.hasInButtonScope(g.P) &&
                            e._closePElement(),
                            e._insertElement(t, x.HTML),
                            (e.framesetOk = !1),
                            (e.insertionMode = O);
                        })(e, t)
                      : n === g.EMBED
                        ? ye(e, t)
                        : n === g.INPUT
                          ? (function (e, t) {
                              e._reconstructActiveFormattingElements(),
                                e._appendElement(t, x.HTML);
                              const n = i.getTokenAttr(t, b.TYPE);
                              (n && n.toLowerCase() === k) ||
                                (e.framesetOk = !1),
                                (t.ackSelfClosing = !0);
                            })(e, t)
                          : n === g.PARAM || n === g.TRACK
                            ? Ee(e, t)
                            : n === g.IMAGE
                              ? (function (e, t) {
                                  (t.tagName = g.IMG), ye(e, t);
                                })(e, t)
                              : n !== g.FRAME &&
                                n !== g.TBODY &&
                                n !== g.TFOOT &&
                                n !== g.THEAD &&
                                Se(e, t);
              break;
            case 6:
              n === g.SCRIPT
                ? pe(e, t)
                : n === g.CENTER ||
                    n === g.FIGURE ||
                    n === g.FOOTER ||
                    n === g.HEADER ||
                    n === g.HGROUP ||
                    n === g.DIALOG
                  ? be(e, t)
                  : n === g.BUTTON
                    ? (function (e, t) {
                        e.openElements.hasInScope(g.BUTTON) &&
                          (e.openElements.generateImpliedEndTags(),
                          e.openElements.popUntilTagNamePopped(g.BUTTON)),
                          e._reconstructActiveFormattingElements(),
                          e._insertElement(t, x.HTML),
                          (e.framesetOk = !1);
                      })(e, t)
                    : n === g.STRIKE || n === g.STRONG
                      ? ke(e, t)
                      : n === g.APPLET || n === g.OBJECT
                        ? Te(e, t)
                        : n === g.KEYGEN
                          ? ye(e, t)
                          : n === g.SOURCE
                            ? Ee(e, t)
                            : n === g.IFRAME
                              ? (function (e, t) {
                                  (e.framesetOk = !1),
                                    e._switchToTextParsing(t, i.MODE.RAWTEXT);
                                })(e, t)
                              : n === g.SELECT
                                ? (function (e, t) {
                                    e._reconstructActiveFormattingElements(),
                                      e._insertElement(t, x.HTML),
                                      (e.framesetOk = !1),
                                      e.insertionMode === O ||
                                      e.insertionMode === I ||
                                      e.insertionMode === M ||
                                      e.insertionMode === D ||
                                      e.insertionMode === j
                                        ? (e.insertionMode = F)
                                        : (e.insertionMode = H);
                                  })(e, t)
                                : n === g.OPTION
                                  ? Ce(e, t)
                                  : Se(e, t);
              break;
            case 7:
              n === g.BGSOUND
                ? pe(e, t)
                : n === g.DETAILS ||
                    n === g.ADDRESS ||
                    n === g.ARTICLE ||
                    n === g.SECTION ||
                    n === g.SUMMARY
                  ? be(e, t)
                  : n === g.LISTING
                    ? ve(e, t)
                    : n === g.MARQUEE
                      ? Te(e, t)
                      : n === g.NOEMBED
                        ? we(e, t)
                        : n !== g.CAPTION && Se(e, t);
              break;
            case 8:
              n === g.BASEFONT
                ? pe(e, t)
                : n === g.FRAMESET
                  ? (function (e, t) {
                      const n =
                        e.openElements.tryPeekProperlyNestedBodyElement();
                      e.framesetOk &&
                        n &&
                        (e.treeAdapter.detachNode(n),
                        e.openElements.popAllUpToHtmlElement(),
                        e._insertElement(t, x.HTML),
                        (e.insertionMode = z));
                    })(e, t)
                  : n === g.FIELDSET
                    ? be(e, t)
                    : n === g.TEXTAREA
                      ? (function (e, t) {
                          e._insertElement(t, x.HTML),
                            (e.skipNextNewLine = !0),
                            (e.tokenizer.state = i.MODE.RCDATA),
                            (e.originalInsertionMode = e.insertionMode),
                            (e.framesetOk = !1),
                            (e.insertionMode = P);
                        })(e, t)
                      : n === g.TEMPLATE
                        ? pe(e, t)
                        : n === g.NOSCRIPT
                          ? e.options.scriptingEnabled
                            ? we(e, t)
                            : Se(e, t)
                          : n === g.OPTGROUP
                            ? Ce(e, t)
                            : n !== g.COLGROUP && Se(e, t);
              break;
            case 9:
              n === g.PLAINTEXT
                ? (function (e, t) {
                    e.openElements.hasInButtonScope(g.P) && e._closePElement(),
                      e._insertElement(t, x.HTML),
                      (e.tokenizer.state = i.MODE.PLAINTEXT);
                  })(e, t)
                : Se(e, t);
              break;
            case 10:
              n === g.BLOCKQUOTE || n === g.FIGCAPTION ? be(e, t) : Se(e, t);
              break;
            default:
              Se(e, t);
          }
        }
        function Ne(e, t) {
          const n = t.tagName;
          e.openElements.hasInScope(n) &&
            (e.openElements.generateImpliedEndTags(),
            e.openElements.popUntilTagNamePopped(n));
        }
        function Pe(e, t) {
          const n = t.tagName;
          e.openElements.hasInScope(n) &&
            (e.openElements.generateImpliedEndTags(),
            e.openElements.popUntilTagNamePopped(n),
            e.activeFormattingElements.clearToLastMarker());
        }
        function Oe(e, t) {
          const n = t.tagName;
          for (let t = e.openElements.stackTop; t > 0; t--) {
            const i = e.openElements.items[t];
            if (e.treeAdapter.getTagName(i) === n) {
              e.openElements.generateImpliedEndTagsWithExclusion(n),
                e.openElements.popUntilElementPopped(i);
              break;
            }
            if (e._isSpecialElement(i)) break;
          }
        }
        function Le(e, t) {
          const n = t.tagName;
          switch (n.length) {
            case 1:
              n === g.A || n === g.B || n === g.I || n === g.S || n === g.U
                ? te(e, t)
                : n === g.P
                  ? (function (e) {
                      e.openElements.hasInButtonScope(g.P) ||
                        e._insertFakeElement(g.P),
                        e._closePElement();
                    })(e)
                  : Oe(e, t);
              break;
            case 2:
              n === g.DL || n === g.UL || n === g.OL
                ? Ne(e, t)
                : n === g.LI
                  ? (function (e) {
                      e.openElements.hasInListItemScope(g.LI) &&
                        (e.openElements.generateImpliedEndTagsWithExclusion(
                          g.LI,
                        ),
                        e.openElements.popUntilTagNamePopped(g.LI));
                    })(e)
                  : n === g.DD || n === g.DT
                    ? (function (e, t) {
                        const n = t.tagName;
                        e.openElements.hasInScope(n) &&
                          (e.openElements.generateImpliedEndTagsWithExclusion(
                            n,
                          ),
                          e.openElements.popUntilTagNamePopped(n));
                      })(e, t)
                    : n === g.H1 ||
                        n === g.H2 ||
                        n === g.H3 ||
                        n === g.H4 ||
                        n === g.H5 ||
                        n === g.H6
                      ? (function (e) {
                          e.openElements.hasNumberedHeaderInScope() &&
                            (e.openElements.generateImpliedEndTags(),
                            e.openElements.popUntilNumberedHeaderPopped());
                        })(e)
                      : n === g.BR
                        ? (function (e) {
                            e._reconstructActiveFormattingElements(),
                              e._insertFakeElement(g.BR),
                              e.openElements.pop(),
                              (e.framesetOk = !1);
                          })(e)
                        : n === g.EM || n === g.TT
                          ? te(e, t)
                          : Oe(e, t);
              break;
            case 3:
              n === g.BIG
                ? te(e, t)
                : n === g.DIR || n === g.DIV || n === g.NAV || n === g.PRE
                  ? Ne(e, t)
                  : Oe(e, t);
              break;
            case 4:
              n === g.BODY
                ? (function (e) {
                    e.openElements.hasInScope(g.BODY) && (e.insertionMode = U);
                  })(e)
                : n === g.HTML
                  ? (function (e, t) {
                      e.openElements.hasInScope(g.BODY) &&
                        ((e.insertionMode = U), e._processToken(t));
                    })(e, t)
                  : n === g.FORM
                    ? (function (e) {
                        const t = e.openElements.tmplCount > 0,
                          n = e.formElement;
                        t || (e.formElement = null),
                          (n || t) &&
                            e.openElements.hasInScope(g.FORM) &&
                            (e.openElements.generateImpliedEndTags(),
                            t
                              ? e.openElements.popUntilTagNamePopped(g.FORM)
                              : e.openElements.remove(n));
                      })(e)
                    : n === g.CODE || n === g.FONT || n === g.NOBR
                      ? te(e, t)
                      : n === g.MAIN || n === g.MENU
                        ? Ne(e, t)
                        : Oe(e, t);
              break;
            case 5:
              n === g.ASIDE ? Ne(e, t) : n === g.SMALL ? te(e, t) : Oe(e, t);
              break;
            case 6:
              n === g.CENTER ||
              n === g.FIGURE ||
              n === g.FOOTER ||
              n === g.HEADER ||
              n === g.HGROUP ||
              n === g.DIALOG
                ? Ne(e, t)
                : n === g.APPLET || n === g.OBJECT
                  ? Pe(e, t)
                  : n === g.STRIKE || n === g.STRONG
                    ? te(e, t)
                    : Oe(e, t);
              break;
            case 7:
              n === g.ADDRESS ||
              n === g.ARTICLE ||
              n === g.DETAILS ||
              n === g.SECTION ||
              n === g.SUMMARY ||
              n === g.LISTING
                ? Ne(e, t)
                : n === g.MARQUEE
                  ? Pe(e, t)
                  : Oe(e, t);
              break;
            case 8:
              n === g.FIELDSET
                ? Ne(e, t)
                : n === g.TEMPLATE
                  ? de(e, t)
                  : Oe(e, t);
              break;
            case 10:
              n === g.BLOCKQUOTE || n === g.FIGCAPTION ? Ne(e, t) : Oe(e, t);
              break;
            default:
              Oe(e, t);
          }
        }
        function Ie(e, t) {
          e.tmplInsertionModeStackTop > -1 ? ze(e, t) : (e.stopped = !0);
        }
        function Re(e, t) {
          const n = e.openElements.currentTagName;
          n === g.TABLE ||
          n === g.TBODY ||
          n === g.TFOOT ||
          n === g.THEAD ||
          n === g.TR
            ? ((e.pendingCharacterTokens = []),
              (e.hasNonWhitespacePendingCharacterToken = !1),
              (e.originalInsertionMode = e.insertionMode),
              (e.insertionMode = L),
              e._processToken(t))
            : je(e, t);
        }
        function Me(e, t) {
          const n = t.tagName;
          switch (n.length) {
            case 2:
              n === g.TD || n === g.TH || n === g.TR
                ? (function (e, t) {
                    e.openElements.clearBackToTableContext(),
                      e._insertFakeElement(g.TBODY),
                      (e.insertionMode = M),
                      e._processToken(t);
                  })(e, t)
                : je(e, t);
              break;
            case 3:
              n === g.COL
                ? (function (e, t) {
                    e.openElements.clearBackToTableContext(),
                      e._insertFakeElement(g.COLGROUP),
                      (e.insertionMode = R),
                      e._processToken(t);
                  })(e, t)
                : je(e, t);
              break;
            case 4:
              n === g.FORM
                ? (function (e, t) {
                    e.formElement ||
                      0 !== e.openElements.tmplCount ||
                      (e._insertElement(t, x.HTML),
                      (e.formElement = e.openElements.current),
                      e.openElements.pop());
                  })(e, t)
                : je(e, t);
              break;
            case 5:
              n === g.TABLE
                ? (function (e, t) {
                    e.openElements.hasInTableScope(g.TABLE) &&
                      (e.openElements.popUntilTagNamePopped(g.TABLE),
                      e._resetInsertionMode(),
                      e._processToken(t));
                  })(e, t)
                : n === g.STYLE
                  ? pe(e, t)
                  : n === g.TBODY || n === g.TFOOT || n === g.THEAD
                    ? (function (e, t) {
                        e.openElements.clearBackToTableContext(),
                          e._insertElement(t, x.HTML),
                          (e.insertionMode = M);
                      })(e, t)
                    : n === g.INPUT
                      ? (function (e, t) {
                          const n = i.getTokenAttr(t, b.TYPE);
                          n && n.toLowerCase() === k
                            ? e._appendElement(t, x.HTML)
                            : je(e, t),
                            (t.ackSelfClosing = !0);
                        })(e, t)
                      : je(e, t);
              break;
            case 6:
              n === g.SCRIPT ? pe(e, t) : je(e, t);
              break;
            case 7:
              n === g.CAPTION
                ? (function (e, t) {
                    e.openElements.clearBackToTableContext(),
                      e.activeFormattingElements.insertMarker(),
                      e._insertElement(t, x.HTML),
                      (e.insertionMode = I);
                  })(e, t)
                : je(e, t);
              break;
            case 8:
              n === g.COLGROUP
                ? (function (e, t) {
                    e.openElements.clearBackToTableContext(),
                      e._insertElement(t, x.HTML),
                      (e.insertionMode = R);
                  })(e, t)
                : n === g.TEMPLATE
                  ? pe(e, t)
                  : je(e, t);
              break;
            default:
              je(e, t);
          }
        }
        function De(e, t) {
          const n = t.tagName;
          n === g.TABLE
            ? e.openElements.hasInTableScope(g.TABLE) &&
              (e.openElements.popUntilTagNamePopped(g.TABLE),
              e._resetInsertionMode())
            : n === g.TEMPLATE
              ? de(e, t)
              : n !== g.BODY &&
                n !== g.CAPTION &&
                n !== g.COL &&
                n !== g.COLGROUP &&
                n !== g.HTML &&
                n !== g.TBODY &&
                n !== g.TD &&
                n !== g.TFOOT &&
                n !== g.TH &&
                n !== g.THEAD &&
                n !== g.TR &&
                je(e, t);
        }
        function je(e, t) {
          const n = e.fosterParentingEnabled;
          (e.fosterParentingEnabled = !0),
            e._processTokenInBodyMode(t),
            (e.fosterParentingEnabled = n);
        }
        function He(e, t) {
          let n = 0;
          if (e.hasNonWhitespacePendingCharacterToken)
            for (; n < e.pendingCharacterTokens.length; n++)
              je(e, e.pendingCharacterTokens[n]);
          else
            for (; n < e.pendingCharacterTokens.length; n++)
              e._insertCharacters(e.pendingCharacterTokens[n]);
          (e.insertionMode = e.originalInsertionMode), e._processToken(t);
        }
        function Fe(e, t) {
          e.openElements.currentTagName === g.COLGROUP &&
            (e.openElements.pop(), (e.insertionMode = O), e._processToken(t));
        }
        function Be(e, t) {
          const n = t.tagName;
          n === g.HTML
            ? _e(e, t)
            : n === g.OPTION
              ? (e.openElements.currentTagName === g.OPTION &&
                  e.openElements.pop(),
                e._insertElement(t, x.HTML))
              : n === g.OPTGROUP
                ? (e.openElements.currentTagName === g.OPTION &&
                    e.openElements.pop(),
                  e.openElements.currentTagName === g.OPTGROUP &&
                    e.openElements.pop(),
                  e._insertElement(t, x.HTML))
                : n === g.INPUT ||
                    n === g.KEYGEN ||
                    n === g.TEXTAREA ||
                    n === g.SELECT
                  ? e.openElements.hasInSelectScope(g.SELECT) &&
                    (e.openElements.popUntilTagNamePopped(g.SELECT),
                    e._resetInsertionMode(),
                    n !== g.SELECT && e._processToken(t))
                  : (n !== g.SCRIPT && n !== g.TEMPLATE) || pe(e, t);
        }
        function Ue(e, t) {
          const n = t.tagName;
          if (n === g.OPTGROUP) {
            const t = e.openElements.items[e.openElements.stackTop - 1],
              n = t && e.treeAdapter.getTagName(t);
            e.openElements.currentTagName === g.OPTION &&
              n === g.OPTGROUP &&
              e.openElements.pop(),
              e.openElements.currentTagName === g.OPTGROUP &&
                e.openElements.pop();
          } else
            n === g.OPTION
              ? e.openElements.currentTagName === g.OPTION &&
                e.openElements.pop()
              : n === g.SELECT && e.openElements.hasInSelectScope(g.SELECT)
                ? (e.openElements.popUntilTagNamePopped(g.SELECT),
                  e._resetInsertionMode())
                : n === g.TEMPLATE && de(e, t);
        }
        function ze(e, t) {
          e.openElements.tmplCount > 0
            ? (e.openElements.popUntilTagNamePopped(g.TEMPLATE),
              e.activeFormattingElements.clearToLastMarker(),
              e._popTmplInsertionMode(),
              e._resetInsertionMode(),
              e._processToken(t))
            : (e.stopped = !0);
        }
        function qe(e, t) {
          (e.insertionMode = N), e._processToken(t);
        }
        function Ge(e, t) {
          (e.insertionMode = N), e._processToken(t);
        }
        e.exports = class {
          constructor(e) {
            (this.options = u(v, e)),
              (this.treeAdapter = this.options.treeAdapter),
              (this.pendingScript = null),
              this.options.sourceCodeLocationInfo && c.install(this, o),
              this.options.onParseError &&
                c.install(this, s, { onParseError: this.options.onParseError });
          }
          parse(e) {
            const t = this.treeAdapter.createDocument();
            return (
              this._bootstrap(t, null),
              this.tokenizer.write(e, !0),
              this._runParsingLoop(null),
              t
            );
          }
          parseFragment(e, t) {
            t || (t = this.treeAdapter.createElement(g.TEMPLATE, x.HTML, []));
            const n = this.treeAdapter.createElement(
              "documentmock",
              x.HTML,
              [],
            );
            this._bootstrap(n, t),
              this.treeAdapter.getTagName(t) === g.TEMPLATE &&
                this._pushTmplInsertionMode(B),
              this._initTokenizerForFragmentParsing(),
              this._insertFakeRootElement(),
              this._resetInsertionMode(),
              this._findFormInFragmentContext(),
              this.tokenizer.write(e, !0),
              this._runParsingLoop(null);
            const i = this.treeAdapter.getFirstChild(n),
              r = this.treeAdapter.createDocumentFragment();
            return this._adoptNodes(i, r), r;
          }
          _bootstrap(e, t) {
            (this.tokenizer = new i(this.options)),
              (this.stopped = !1),
              (this.insertionMode = E),
              (this.originalInsertionMode = ""),
              (this.document = e),
              (this.fragmentContext = t),
              (this.headElement = null),
              (this.formElement = null),
              (this.openElements = new r(this.document, this.treeAdapter)),
              (this.activeFormattingElements = new a(this.treeAdapter)),
              (this.tmplInsertionModeStack = []),
              (this.tmplInsertionModeStackTop = -1),
              (this.currentTmplInsertionMode = null),
              (this.pendingCharacterTokens = []),
              (this.hasNonWhitespacePendingCharacterToken = !1),
              (this.framesetOk = !0),
              (this.skipNextNewLine = !1),
              (this.fosterParentingEnabled = !1);
          }
          _err() {}
          _runParsingLoop(e) {
            for (; !this.stopped; ) {
              this._setupTokenizerCDATAMode();
              const t = this.tokenizer.getNextToken();
              if (t.type === i.HIBERNATION_TOKEN) break;
              if (
                this.skipNextNewLine &&
                ((this.skipNextNewLine = !1),
                t.type === i.WHITESPACE_CHARACTER_TOKEN && "\n" === t.chars[0])
              ) {
                if (1 === t.chars.length) continue;
                t.chars = t.chars.substr(1);
              }
              if ((this._processInputToken(t), e && this.pendingScript)) break;
            }
          }
          runParsingLoopForCurrentChunk(e, t) {
            if ((this._runParsingLoop(t), t && this.pendingScript)) {
              const e = this.pendingScript;
              return (this.pendingScript = null), void t(e);
            }
            e && e();
          }
          _setupTokenizerCDATAMode() {
            const e = this._getAdjustedCurrentElement();
            this.tokenizer.allowCDATA =
              e &&
              e !== this.document &&
              this.treeAdapter.getNamespaceURI(e) !== x.HTML &&
              !this._isIntegrationPoint(e);
          }
          _switchToTextParsing(e, t) {
            this._insertElement(e, x.HTML),
              (this.tokenizer.state = t),
              (this.originalInsertionMode = this.insertionMode),
              (this.insertionMode = P);
          }
          switchToPlaintextParsing() {
            (this.insertionMode = P),
              (this.originalInsertionMode = N),
              (this.tokenizer.state = i.MODE.PLAINTEXT);
          }
          _getAdjustedCurrentElement() {
            return 0 === this.openElements.stackTop && this.fragmentContext
              ? this.fragmentContext
              : this.openElements.current;
          }
          _findFormInFragmentContext() {
            let e = this.fragmentContext;
            do {
              if (this.treeAdapter.getTagName(e) === g.FORM) {
                this.formElement = e;
                break;
              }
              e = this.treeAdapter.getParentNode(e);
            } while (e);
          }
          _initTokenizerForFragmentParsing() {
            if (
              this.treeAdapter.getNamespaceURI(this.fragmentContext) === x.HTML
            ) {
              const e = this.treeAdapter.getTagName(this.fragmentContext);
              e === g.TITLE || e === g.TEXTAREA
                ? (this.tokenizer.state = i.MODE.RCDATA)
                : e === g.STYLE ||
                    e === g.XMP ||
                    e === g.IFRAME ||
                    e === g.NOEMBED ||
                    e === g.NOFRAMES ||
                    e === g.NOSCRIPT
                  ? (this.tokenizer.state = i.MODE.RAWTEXT)
                  : e === g.SCRIPT
                    ? (this.tokenizer.state = i.MODE.SCRIPT_DATA)
                    : e === g.PLAINTEXT &&
                      (this.tokenizer.state = i.MODE.PLAINTEXT);
            }
          }
          _setDocumentType(e) {
            const t = e.name || "",
              n = e.publicId || "",
              i = e.systemId || "";
            this.treeAdapter.setDocumentType(this.document, t, n, i);
          }
          _attachElementToTree(e) {
            if (this._shouldFosterParentOnInsertion())
              this._fosterParentElement(e);
            else {
              const t =
                this.openElements.currentTmplContent ||
                this.openElements.current;
              this.treeAdapter.appendChild(t, e);
            }
          }
          _appendElement(e, t) {
            const n = this.treeAdapter.createElement(e.tagName, t, e.attrs);
            this._attachElementToTree(n);
          }
          _insertElement(e, t) {
            const n = this.treeAdapter.createElement(e.tagName, t, e.attrs);
            this._attachElementToTree(n), this.openElements.push(n);
          }
          _insertFakeElement(e) {
            const t = this.treeAdapter.createElement(e, x.HTML, []);
            this._attachElementToTree(t), this.openElements.push(t);
          }
          _insertTemplate(e) {
            const t = this.treeAdapter.createElement(
                e.tagName,
                x.HTML,
                e.attrs,
              ),
              n = this.treeAdapter.createDocumentFragment();
            this.treeAdapter.setTemplateContent(t, n),
              this._attachElementToTree(t),
              this.openElements.push(t);
          }
          _insertFakeRootElement() {
            const e = this.treeAdapter.createElement(g.HTML, x.HTML, []);
            this.treeAdapter.appendChild(this.openElements.current, e),
              this.openElements.push(e);
          }
          _appendCommentNode(e, t) {
            const n = this.treeAdapter.createCommentNode(e.data);
            this.treeAdapter.appendChild(t, n);
          }
          _insertCharacters(e) {
            if (this._shouldFosterParentOnInsertion())
              this._fosterParentText(e.chars);
            else {
              const t =
                this.openElements.currentTmplContent ||
                this.openElements.current;
              this.treeAdapter.insertText(t, e.chars);
            }
          }
          _adoptNodes(e, t) {
            for (
              let n = this.treeAdapter.getFirstChild(e);
              n;
              n = this.treeAdapter.getFirstChild(e)
            )
              this.treeAdapter.detachNode(n),
                this.treeAdapter.appendChild(t, n);
          }
          _shouldProcessTokenInForeignContent(e) {
            const t = this._getAdjustedCurrentElement();
            if (!t || t === this.document) return !1;
            const n = this.treeAdapter.getNamespaceURI(t);
            if (n === x.HTML) return !1;
            if (
              this.treeAdapter.getTagName(t) === g.ANNOTATION_XML &&
              n === x.MATHML &&
              e.type === i.START_TAG_TOKEN &&
              e.tagName === g.SVG
            )
              return !1;
            const r =
              e.type === i.CHARACTER_TOKEN ||
              e.type === i.NULL_CHARACTER_TOKEN ||
              e.type === i.WHITESPACE_CHARACTER_TOKEN;
            return (
              ((!(
                e.type === i.START_TAG_TOKEN &&
                e.tagName !== g.MGLYPH &&
                e.tagName !== g.MALIGNMARK
              ) &&
                !r) ||
                !this._isIntegrationPoint(t, x.MATHML)) &&
              ((e.type !== i.START_TAG_TOKEN && !r) ||
                !this._isIntegrationPoint(t, x.HTML)) &&
              e.type !== i.EOF_TOKEN
            );
          }
          _processToken(e) {
            Y[this.insertionMode][e.type](this, e);
          }
          _processTokenInBodyMode(e) {
            Y[N][e.type](this, e);
          }
          _processTokenInForeignContent(e) {
            e.type === i.CHARACTER_TOKEN
              ? (function (e, t) {
                  e._insertCharacters(t), (e.framesetOk = !1);
                })(this, e)
              : e.type === i.NULL_CHARACTER_TOKEN
                ? (function (e, t) {
                    (t.chars = h.REPLACEMENT_CHARACTER), e._insertCharacters(t);
                  })(this, e)
                : e.type === i.WHITESPACE_CHARACTER_TOKEN
                  ? oe(this, e)
                  : e.type === i.COMMENT_TOKEN
                    ? re(this, e)
                    : e.type === i.START_TAG_TOKEN
                      ? (function (e, t) {
                          if (d.causesExit(t) && !e.fragmentContext) {
                            for (
                              ;
                              e.treeAdapter.getNamespaceURI(
                                e.openElements.current,
                              ) !== x.HTML &&
                              !e._isIntegrationPoint(e.openElements.current);

                            )
                              e.openElements.pop();
                            e._processToken(t);
                          } else {
                            const n = e._getAdjustedCurrentElement(),
                              i = e.treeAdapter.getNamespaceURI(n);
                            i === x.MATHML
                              ? d.adjustTokenMathMLAttrs(t)
                              : i === x.SVG &&
                                (d.adjustTokenSVGTagName(t),
                                d.adjustTokenSVGAttrs(t)),
                              d.adjustTokenXMLAttrs(t),
                              t.selfClosing
                                ? e._appendElement(t, i)
                                : e._insertElement(t, i),
                              (t.ackSelfClosing = !0);
                          }
                        })(this, e)
                      : e.type === i.END_TAG_TOKEN &&
                        (function (e, t) {
                          for (let n = e.openElements.stackTop; n > 0; n--) {
                            const i = e.openElements.items[n];
                            if (e.treeAdapter.getNamespaceURI(i) === x.HTML) {
                              e._processToken(t);
                              break;
                            }
                            if (
                              e.treeAdapter.getTagName(i).toLowerCase() ===
                              t.tagName
                            ) {
                              e.openElements.popUntilElementPopped(i);
                              break;
                            }
                          }
                        })(this, e);
          }
          _processInputToken(e) {
            this._shouldProcessTokenInForeignContent(e)
              ? this._processTokenInForeignContent(e)
              : this._processToken(e),
              e.type === i.START_TAG_TOKEN &&
                e.selfClosing &&
                !e.ackSelfClosing &&
                this._err(m.nonVoidHtmlElementStartTagWithTrailingSolidus);
          }
          _isIntegrationPoint(e, t) {
            const n = this.treeAdapter.getTagName(e),
              i = this.treeAdapter.getNamespaceURI(e),
              r = this.treeAdapter.getAttrList(e);
            return d.isIntegrationPoint(n, i, r, t);
          }
          _reconstructActiveFormattingElements() {
            const e = this.activeFormattingElements.length;
            if (e) {
              let t = e,
                n = null;
              do {
                if (
                  (t--,
                  (n = this.activeFormattingElements.entries[t]),
                  n.type === a.MARKER_ENTRY ||
                    this.openElements.contains(n.element))
                ) {
                  t++;
                  break;
                }
              } while (t > 0);
              for (let i = t; i < e; i++)
                (n = this.activeFormattingElements.entries[i]),
                  this._insertElement(
                    n.token,
                    this.treeAdapter.getNamespaceURI(n.element),
                  ),
                  (n.element = this.openElements.current);
            }
          }
          _closeTableCell() {
            this.openElements.generateImpliedEndTags(),
              this.openElements.popUntilTableCellPopped(),
              this.activeFormattingElements.clearToLastMarker(),
              (this.insertionMode = D);
          }
          _closePElement() {
            this.openElements.generateImpliedEndTagsWithExclusion(g.P),
              this.openElements.popUntilTagNamePopped(g.P);
          }
          _resetInsertionMode() {
            for (let e = this.openElements.stackTop, t = !1; e >= 0; e--) {
              let n = this.openElements.items[e];
              0 === e &&
                ((t = !0), this.fragmentContext && (n = this.fragmentContext));
              const i = this.treeAdapter.getTagName(n),
                r = V[i];
              if (r) {
                this.insertionMode = r;
                break;
              }
              if (!(t || (i !== g.TD && i !== g.TH))) {
                this.insertionMode = j;
                break;
              }
              if (!t && i === g.HEAD) {
                this.insertionMode = A;
                break;
              }
              if (i === g.SELECT) {
                this._resetInsertionModeForSelect(e);
                break;
              }
              if (i === g.TEMPLATE) {
                this.insertionMode = this.currentTmplInsertionMode;
                break;
              }
              if (i === g.HTML) {
                this.insertionMode = this.headElement ? _ : C;
                break;
              }
              if (t) {
                this.insertionMode = N;
                break;
              }
            }
          }
          _resetInsertionModeForSelect(e) {
            if (e > 0)
              for (let t = e - 1; t > 0; t--) {
                const e = this.openElements.items[t],
                  n = this.treeAdapter.getTagName(e);
                if (n === g.TEMPLATE) break;
                if (n === g.TABLE) return void (this.insertionMode = F);
              }
            this.insertionMode = H;
          }
          _pushTmplInsertionMode(e) {
            this.tmplInsertionModeStack.push(e),
              this.tmplInsertionModeStackTop++,
              (this.currentTmplInsertionMode = e);
          }
          _popTmplInsertionMode() {
            this.tmplInsertionModeStack.pop(),
              this.tmplInsertionModeStackTop--,
              (this.currentTmplInsertionMode =
                this.tmplInsertionModeStack[this.tmplInsertionModeStackTop]);
          }
          _isElementCausesFosterParenting(e) {
            const t = this.treeAdapter.getTagName(e);
            return (
              t === g.TABLE ||
              t === g.TBODY ||
              t === g.TFOOT ||
              t === g.THEAD ||
              t === g.TR
            );
          }
          _shouldFosterParentOnInsertion() {
            return (
              this.fosterParentingEnabled &&
              this._isElementCausesFosterParenting(this.openElements.current)
            );
          }
          _findFosterParentingLocation() {
            const e = { parent: null, beforeElement: null };
            for (let t = this.openElements.stackTop; t >= 0; t--) {
              const n = this.openElements.items[t],
                i = this.treeAdapter.getTagName(n),
                r = this.treeAdapter.getNamespaceURI(n);
              if (i === g.TEMPLATE && r === x.HTML) {
                e.parent = this.treeAdapter.getTemplateContent(n);
                break;
              }
              if (i === g.TABLE) {
                (e.parent = this.treeAdapter.getParentNode(n)),
                  e.parent
                    ? (e.beforeElement = n)
                    : (e.parent = this.openElements.items[t - 1]);
                break;
              }
            }
            return e.parent || (e.parent = this.openElements.items[0]), e;
          }
          _fosterParentElement(e) {
            const t = this._findFosterParentingLocation();
            t.beforeElement
              ? this.treeAdapter.insertBefore(t.parent, e, t.beforeElement)
              : this.treeAdapter.appendChild(t.parent, e);
          }
          _fosterParentText(e) {
            const t = this._findFosterParentingLocation();
            t.beforeElement
              ? this.treeAdapter.insertTextBefore(t.parent, e, t.beforeElement)
              : this.treeAdapter.insertText(t.parent, e);
          }
          _isSpecialElement(e) {
            const t = this.treeAdapter.getTagName(e),
              n = this.treeAdapter.getNamespaceURI(e);
            return f.SPECIAL_ELEMENTS[n][t];
          }
        };
      },
      (e, t, n) => {
        "use strict";
        const i = n(6),
          r = n(7),
          a = n(9),
          o = n(8),
          s = r.CODE_POINTS,
          c = r.CODE_POINT_SEQUENCES,
          l = {
            128: 8364,
            130: 8218,
            131: 402,
            132: 8222,
            133: 8230,
            134: 8224,
            135: 8225,
            136: 710,
            137: 8240,
            138: 352,
            139: 8249,
            140: 338,
            142: 381,
            145: 8216,
            146: 8217,
            147: 8220,
            148: 8221,
            149: 8226,
            150: 8211,
            151: 8212,
            152: 732,
            153: 8482,
            154: 353,
            155: 8250,
            156: 339,
            158: 382,
            159: 376,
          },
          u = "DATA_STATE",
          p = "RCDATA_STATE",
          d = "RAWTEXT_STATE",
          m = "SCRIPT_DATA_STATE",
          h = "PLAINTEXT_STATE",
          f = "TAG_OPEN_STATE",
          g = "END_TAG_OPEN_STATE",
          x = "TAG_NAME_STATE",
          b = "RCDATA_LESS_THAN_SIGN_STATE",
          v = "RCDATA_END_TAG_OPEN_STATE",
          k = "RCDATA_END_TAG_NAME_STATE",
          T = "RAWTEXT_LESS_THAN_SIGN_STATE",
          y = "RAWTEXT_END_TAG_OPEN_STATE",
          E = "RAWTEXT_END_TAG_NAME_STATE",
          w = "SCRIPT_DATA_LESS_THAN_SIGN_STATE",
          C = "SCRIPT_DATA_END_TAG_OPEN_STATE",
          A = "SCRIPT_DATA_END_TAG_NAME_STATE",
          S = "SCRIPT_DATA_ESCAPE_START_STATE",
          _ = "SCRIPT_DATA_ESCAPE_START_DASH_STATE",
          N = "SCRIPT_DATA_ESCAPED_STATE",
          P = "SCRIPT_DATA_ESCAPED_DASH_STATE",
          O = "SCRIPT_DATA_ESCAPED_DASH_DASH_STATE",
          L = "SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN_STATE",
          I = "SCRIPT_DATA_ESCAPED_END_TAG_OPEN_STATE",
          R = "SCRIPT_DATA_ESCAPED_END_TAG_NAME_STATE",
          M = "SCRIPT_DATA_DOUBLE_ESCAPE_START_STATE",
          D = "SCRIPT_DATA_DOUBLE_ESCAPED_STATE",
          j = "SCRIPT_DATA_DOUBLE_ESCAPED_DASH_STATE",
          H = "SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH_STATE",
          F = "SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN_STATE",
          B = "SCRIPT_DATA_DOUBLE_ESCAPE_END_STATE",
          U = "BEFORE_ATTRIBUTE_NAME_STATE",
          z = "ATTRIBUTE_NAME_STATE",
          q = "AFTER_ATTRIBUTE_NAME_STATE",
          G = "BEFORE_ATTRIBUTE_VALUE_STATE",
          K = "ATTRIBUTE_VALUE_DOUBLE_QUOTED_STATE",
          V = "ATTRIBUTE_VALUE_SINGLE_QUOTED_STATE",
          W = "ATTRIBUTE_VALUE_UNQUOTED_STATE",
          Y = "AFTER_ATTRIBUTE_VALUE_QUOTED_STATE",
          Q = "SELF_CLOSING_START_TAG_STATE",
          X = "BOGUS_COMMENT_STATE",
          J = "MARKUP_DECLARATION_OPEN_STATE",
          $ = "COMMENT_START_STATE",
          Z = "COMMENT_START_DASH_STATE",
          ee = "COMMENT_STATE",
          te = "COMMENT_LESS_THAN_SIGN_STATE",
          ne = "COMMENT_LESS_THAN_SIGN_BANG_STATE",
          ie = "COMMENT_LESS_THAN_SIGN_BANG_DASH_STATE",
          re = "COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH_STATE",
          ae = "COMMENT_END_DASH_STATE",
          oe = "COMMENT_END_STATE",
          se = "COMMENT_END_BANG_STATE",
          ce = "DOCTYPE_STATE",
          le = "BEFORE_DOCTYPE_NAME_STATE",
          ue = "DOCTYPE_NAME_STATE",
          pe = "AFTER_DOCTYPE_NAME_STATE",
          de = "AFTER_DOCTYPE_PUBLIC_KEYWORD_STATE",
          me = "BEFORE_DOCTYPE_PUBLIC_IDENTIFIER_STATE",
          he = "DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED_STATE",
          fe = "DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED_STATE",
          ge = "AFTER_DOCTYPE_PUBLIC_IDENTIFIER_STATE",
          xe = "BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS_STATE",
          be = "AFTER_DOCTYPE_SYSTEM_KEYWORD_STATE",
          ve = "BEFORE_DOCTYPE_SYSTEM_IDENTIFIER_STATE",
          ke = "DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED_STATE",
          Te = "DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED_STATE",
          ye = "AFTER_DOCTYPE_SYSTEM_IDENTIFIER_STATE",
          Ee = "BOGUS_DOCTYPE_STATE",
          we = "CDATA_SECTION_STATE",
          Ce = "CDATA_SECTION_BRACKET_STATE",
          Ae = "CDATA_SECTION_END_STATE",
          Se = "CHARACTER_REFERENCE_STATE",
          _e = "NAMED_CHARACTER_REFERENCE_STATE",
          Ne = "AMBIGUOS_AMPERSAND_STATE",
          Pe = "NUMERIC_CHARACTER_REFERENCE_STATE",
          Oe = "HEXADEMICAL_CHARACTER_REFERENCE_START_STATE",
          Le = "DECIMAL_CHARACTER_REFERENCE_START_STATE",
          Ie = "HEXADEMICAL_CHARACTER_REFERENCE_STATE",
          Re = "DECIMAL_CHARACTER_REFERENCE_STATE",
          Me = "NUMERIC_CHARACTER_REFERENCE_END_STATE";
        function De(e) {
          return (
            e === s.SPACE ||
            e === s.LINE_FEED ||
            e === s.TABULATION ||
            e === s.FORM_FEED
          );
        }
        function je(e) {
          return e >= s.DIGIT_0 && e <= s.DIGIT_9;
        }
        function He(e) {
          return e >= s.LATIN_CAPITAL_A && e <= s.LATIN_CAPITAL_Z;
        }
        function Fe(e) {
          return e >= s.LATIN_SMALL_A && e <= s.LATIN_SMALL_Z;
        }
        function Be(e) {
          return Fe(e) || He(e);
        }
        function Ue(e) {
          return Be(e) || je(e);
        }
        function ze(e) {
          return e >= s.LATIN_CAPITAL_A && e <= s.LATIN_CAPITAL_F;
        }
        function qe(e) {
          return e >= s.LATIN_SMALL_A && e <= s.LATIN_SMALL_F;
        }
        function Ge(e) {
          return e + 32;
        }
        function Ke(e) {
          return e <= 65535
            ? String.fromCharCode(e)
            : ((e -= 65536),
              String.fromCharCode(((e >>> 10) & 1023) | 55296) +
                String.fromCharCode(56320 | (1023 & e)));
        }
        function Ve(e) {
          return String.fromCharCode(Ge(e));
        }
        function We(e, t) {
          const n = a[++e];
          let i = ++e,
            r = i + n - 1;
          for (; i <= r; ) {
            const e = (i + r) >>> 1,
              o = a[e];
            if (o < t) i = e + 1;
            else {
              if (!(o > t)) return a[e + n];
              r = e - 1;
            }
          }
          return -1;
        }
        class Ye {
          constructor() {
            (this.preprocessor = new i()),
              (this.tokenQueue = []),
              (this.allowCDATA = !1),
              (this.state = u),
              (this.returnState = ""),
              (this.charRefCode = -1),
              (this.tempBuff = []),
              (this.lastStartTagName = ""),
              (this.consumedAfterSnapshot = -1),
              (this.active = !1),
              (this.currentCharacterToken = null),
              (this.currentToken = null),
              (this.currentAttr = null);
          }
          _err() {}
          _errOnNextCodePoint(e) {
            this._consume(), this._err(e), this._unconsume();
          }
          getNextToken() {
            for (; !this.tokenQueue.length && this.active; ) {
              this.consumedAfterSnapshot = 0;
              const e = this._consume();
              this._ensureHibernation() || this[this.state](e);
            }
            return this.tokenQueue.shift();
          }
          write(e, t) {
            (this.active = !0), this.preprocessor.write(e, t);
          }
          insertHtmlAtCurrentPos(e) {
            (this.active = !0), this.preprocessor.insertHtmlAtCurrentPos(e);
          }
          _ensureHibernation() {
            if (this.preprocessor.endOfChunkHit) {
              for (
                ;
                this.consumedAfterSnapshot > 0;
                this.consumedAfterSnapshot--
              )
                this.preprocessor.retreat();
              return (
                (this.active = !1),
                this.tokenQueue.push({ type: Ye.HIBERNATION_TOKEN }),
                !0
              );
            }
            return !1;
          }
          _consume() {
            return this.consumedAfterSnapshot++, this.preprocessor.advance();
          }
          _unconsume() {
            this.consumedAfterSnapshot--, this.preprocessor.retreat();
          }
          _reconsumeInState(e) {
            (this.state = e), this._unconsume();
          }
          _consumeSequenceIfMatch(e, t, n) {
            let i = 0,
              r = !0;
            const a = e.length;
            let o,
              c = 0,
              l = t;
            for (; c < a; c++) {
              if ((c > 0 && ((l = this._consume()), i++), l === s.EOF)) {
                r = !1;
                break;
              }
              if (((o = e[c]), l !== o && (n || l !== Ge(o)))) {
                r = !1;
                break;
              }
            }
            if (!r) for (; i--; ) this._unconsume();
            return r;
          }
          _isTempBufferEqualToScriptString() {
            if (this.tempBuff.length !== c.SCRIPT_STRING.length) return !1;
            for (let e = 0; e < this.tempBuff.length; e++)
              if (this.tempBuff[e] !== c.SCRIPT_STRING[e]) return !1;
            return !0;
          }
          _createStartTagToken() {
            this.currentToken = {
              type: Ye.START_TAG_TOKEN,
              tagName: "",
              selfClosing: !1,
              ackSelfClosing: !1,
              attrs: [],
            };
          }
          _createEndTagToken() {
            this.currentToken = {
              type: Ye.END_TAG_TOKEN,
              tagName: "",
              selfClosing: !1,
              attrs: [],
            };
          }
          _createCommentToken() {
            this.currentToken = { type: Ye.COMMENT_TOKEN, data: "" };
          }
          _createDoctypeToken(e) {
            this.currentToken = {
              type: Ye.DOCTYPE_TOKEN,
              name: e,
              forceQuirks: !1,
              publicId: null,
              systemId: null,
            };
          }
          _createCharacterToken(e, t) {
            this.currentCharacterToken = { type: e, chars: t };
          }
          _createEOFToken() {
            this.currentToken = { type: Ye.EOF_TOKEN };
          }
          _createAttr(e) {
            this.currentAttr = { name: e, value: "" };
          }
          _leaveAttrName(e) {
            null === Ye.getTokenAttr(this.currentToken, this.currentAttr.name)
              ? this.currentToken.attrs.push(this.currentAttr)
              : this._err(o.duplicateAttribute),
              (this.state = e);
          }
          _leaveAttrValue(e) {
            this.state = e;
          }
          _emitCurrentToken() {
            this._emitCurrentCharacterToken();
            const e = this.currentToken;
            (this.currentToken = null),
              e.type === Ye.START_TAG_TOKEN
                ? (this.lastStartTagName = e.tagName)
                : e.type === Ye.END_TAG_TOKEN &&
                  (e.attrs.length > 0 && this._err(o.endTagWithAttributes),
                  e.selfClosing && this._err(o.endTagWithTrailingSolidus)),
              this.tokenQueue.push(e);
          }
          _emitCurrentCharacterToken() {
            this.currentCharacterToken &&
              (this.tokenQueue.push(this.currentCharacterToken),
              (this.currentCharacterToken = null));
          }
          _emitEOFToken() {
            this._createEOFToken(), this._emitCurrentToken();
          }
          _appendCharToCurrentCharacterToken(e, t) {
            this.currentCharacterToken &&
              this.currentCharacterToken.type !== e &&
              this._emitCurrentCharacterToken(),
              this.currentCharacterToken
                ? (this.currentCharacterToken.chars += t)
                : this._createCharacterToken(e, t);
          }
          _emitCodePoint(e) {
            let t = Ye.CHARACTER_TOKEN;
            De(e)
              ? (t = Ye.WHITESPACE_CHARACTER_TOKEN)
              : e === s.NULL && (t = Ye.NULL_CHARACTER_TOKEN),
              this._appendCharToCurrentCharacterToken(t, Ke(e));
          }
          _emitSeveralCodePoints(e) {
            for (let t = 0; t < e.length; t++) this._emitCodePoint(e[t]);
          }
          _emitChars(e) {
            this._appendCharToCurrentCharacterToken(Ye.CHARACTER_TOKEN, e);
          }
          _matchNamedCharacterReference(e) {
            let t = null,
              n = 1,
              i = We(0, e);
            for (this.tempBuff.push(e); i > -1; ) {
              const e = a[i],
                r = e < 7;
              r &&
                1 & e &&
                ((t = 2 & e ? [a[++i], a[++i]] : [a[++i]]), (n = 0));
              const o = this._consume();
              if ((this.tempBuff.push(o), n++, o === s.EOF)) break;
              i = r ? (4 & e ? We(i, o) : -1) : o === e ? ++i : -1;
            }
            for (; n--; ) this.tempBuff.pop(), this._unconsume();
            return t;
          }
          _isCharacterReferenceInAttribute() {
            return (
              this.returnState === K ||
              this.returnState === V ||
              this.returnState === W
            );
          }
          _isCharacterReferenceAttributeQuirk(e) {
            if (!e && this._isCharacterReferenceInAttribute()) {
              const e = this._consume();
              return this._unconsume(), e === s.EQUALS_SIGN || Ue(e);
            }
            return !1;
          }
          _flushCodePointsConsumedAsCharacterReference() {
            if (this._isCharacterReferenceInAttribute())
              for (let e = 0; e < this.tempBuff.length; e++)
                this.currentAttr.value += Ke(this.tempBuff[e]);
            else this._emitSeveralCodePoints(this.tempBuff);
            this.tempBuff = [];
          }
          [u](e) {
            this.preprocessor.dropParsedChunk(),
              e === s.LESS_THAN_SIGN
                ? (this.state = f)
                : e === s.AMPERSAND
                  ? ((this.returnState = u), (this.state = Se))
                  : e === s.NULL
                    ? (this._err(o.unexpectedNullCharacter),
                      this._emitCodePoint(e))
                    : e === s.EOF
                      ? this._emitEOFToken()
                      : this._emitCodePoint(e);
          }
          [p](e) {
            this.preprocessor.dropParsedChunk(),
              e === s.AMPERSAND
                ? ((this.returnState = p), (this.state = Se))
                : e === s.LESS_THAN_SIGN
                  ? (this.state = b)
                  : e === s.NULL
                    ? (this._err(o.unexpectedNullCharacter),
                      this._emitChars(r.REPLACEMENT_CHARACTER))
                    : e === s.EOF
                      ? this._emitEOFToken()
                      : this._emitCodePoint(e);
          }
          [d](e) {
            this.preprocessor.dropParsedChunk(),
              e === s.LESS_THAN_SIGN
                ? (this.state = T)
                : e === s.NULL
                  ? (this._err(o.unexpectedNullCharacter),
                    this._emitChars(r.REPLACEMENT_CHARACTER))
                  : e === s.EOF
                    ? this._emitEOFToken()
                    : this._emitCodePoint(e);
          }
          [m](e) {
            this.preprocessor.dropParsedChunk(),
              e === s.LESS_THAN_SIGN
                ? (this.state = w)
                : e === s.NULL
                  ? (this._err(o.unexpectedNullCharacter),
                    this._emitChars(r.REPLACEMENT_CHARACTER))
                  : e === s.EOF
                    ? this._emitEOFToken()
                    : this._emitCodePoint(e);
          }
          [h](e) {
            this.preprocessor.dropParsedChunk(),
              e === s.NULL
                ? (this._err(o.unexpectedNullCharacter),
                  this._emitChars(r.REPLACEMENT_CHARACTER))
                : e === s.EOF
                  ? this._emitEOFToken()
                  : this._emitCodePoint(e);
          }
          [f](e) {
            e === s.EXCLAMATION_MARK
              ? (this.state = J)
              : e === s.SOLIDUS
                ? (this.state = g)
                : Be(e)
                  ? (this._createStartTagToken(), this._reconsumeInState(x))
                  : e === s.QUESTION_MARK
                    ? (this._err(o.unexpectedQuestionMarkInsteadOfTagName),
                      this._createCommentToken(),
                      this._reconsumeInState(X))
                    : e === s.EOF
                      ? (this._err(o.eofBeforeTagName),
                        this._emitChars("<"),
                        this._emitEOFToken())
                      : (this._err(o.invalidFirstCharacterOfTagName),
                        this._emitChars("<"),
                        this._reconsumeInState(u));
          }
          [g](e) {
            Be(e)
              ? (this._createEndTagToken(), this._reconsumeInState(x))
              : e === s.GREATER_THAN_SIGN
                ? (this._err(o.missingEndTagName), (this.state = u))
                : e === s.EOF
                  ? (this._err(o.eofBeforeTagName),
                    this._emitChars("</"),
                    this._emitEOFToken())
                  : (this._err(o.invalidFirstCharacterOfTagName),
                    this._createCommentToken(),
                    this._reconsumeInState(X));
          }
          [x](e) {
            De(e)
              ? (this.state = U)
              : e === s.SOLIDUS
                ? (this.state = Q)
                : e === s.GREATER_THAN_SIGN
                  ? ((this.state = u), this._emitCurrentToken())
                  : He(e)
                    ? (this.currentToken.tagName += Ve(e))
                    : e === s.NULL
                      ? (this._err(o.unexpectedNullCharacter),
                        (this.currentToken.tagName += r.REPLACEMENT_CHARACTER))
                      : e === s.EOF
                        ? (this._err(o.eofInTag), this._emitEOFToken())
                        : (this.currentToken.tagName += Ke(e));
          }
          [b](e) {
            e === s.SOLIDUS
              ? ((this.tempBuff = []), (this.state = v))
              : (this._emitChars("<"), this._reconsumeInState(p));
          }
          [v](e) {
            Be(e)
              ? (this._createEndTagToken(), this._reconsumeInState(k))
              : (this._emitChars("</"), this._reconsumeInState(p));
          }
          [k](e) {
            if (He(e))
              (this.currentToken.tagName += Ve(e)), this.tempBuff.push(e);
            else if (Fe(e))
              (this.currentToken.tagName += Ke(e)), this.tempBuff.push(e);
            else {
              if (this.lastStartTagName === this.currentToken.tagName) {
                if (De(e)) return void (this.state = U);
                if (e === s.SOLIDUS) return void (this.state = Q);
                if (e === s.GREATER_THAN_SIGN)
                  return (this.state = u), void this._emitCurrentToken();
              }
              this._emitChars("</"),
                this._emitSeveralCodePoints(this.tempBuff),
                this._reconsumeInState(p);
            }
          }
          [T](e) {
            e === s.SOLIDUS
              ? ((this.tempBuff = []), (this.state = y))
              : (this._emitChars("<"), this._reconsumeInState(d));
          }
          [y](e) {
            Be(e)
              ? (this._createEndTagToken(), this._reconsumeInState(E))
              : (this._emitChars("</"), this._reconsumeInState(d));
          }
          [E](e) {
            if (He(e))
              (this.currentToken.tagName += Ve(e)), this.tempBuff.push(e);
            else if (Fe(e))
              (this.currentToken.tagName += Ke(e)), this.tempBuff.push(e);
            else {
              if (this.lastStartTagName === this.currentToken.tagName) {
                if (De(e)) return void (this.state = U);
                if (e === s.SOLIDUS) return void (this.state = Q);
                if (e === s.GREATER_THAN_SIGN)
                  return this._emitCurrentToken(), void (this.state = u);
              }
              this._emitChars("</"),
                this._emitSeveralCodePoints(this.tempBuff),
                this._reconsumeInState(d);
            }
          }
          [w](e) {
            e === s.SOLIDUS
              ? ((this.tempBuff = []), (this.state = C))
              : e === s.EXCLAMATION_MARK
                ? ((this.state = S), this._emitChars("<!"))
                : (this._emitChars("<"), this._reconsumeInState(m));
          }
          [C](e) {
            Be(e)
              ? (this._createEndTagToken(), this._reconsumeInState(A))
              : (this._emitChars("</"), this._reconsumeInState(m));
          }
          [A](e) {
            if (He(e))
              (this.currentToken.tagName += Ve(e)), this.tempBuff.push(e);
            else if (Fe(e))
              (this.currentToken.tagName += Ke(e)), this.tempBuff.push(e);
            else {
              if (this.lastStartTagName === this.currentToken.tagName) {
                if (De(e)) return void (this.state = U);
                if (e === s.SOLIDUS) return void (this.state = Q);
                if (e === s.GREATER_THAN_SIGN)
                  return this._emitCurrentToken(), void (this.state = u);
              }
              this._emitChars("</"),
                this._emitSeveralCodePoints(this.tempBuff),
                this._reconsumeInState(m);
            }
          }
          [S](e) {
            e === s.HYPHEN_MINUS
              ? ((this.state = _), this._emitChars("-"))
              : this._reconsumeInState(m);
          }
          [_](e) {
            e === s.HYPHEN_MINUS
              ? ((this.state = O), this._emitChars("-"))
              : this._reconsumeInState(m);
          }
          [N](e) {
            e === s.HYPHEN_MINUS
              ? ((this.state = P), this._emitChars("-"))
              : e === s.LESS_THAN_SIGN
                ? (this.state = L)
                : e === s.NULL
                  ? (this._err(o.unexpectedNullCharacter),
                    this._emitChars(r.REPLACEMENT_CHARACTER))
                  : e === s.EOF
                    ? (this._err(o.eofInScriptHtmlCommentLikeText),
                      this._emitEOFToken())
                    : this._emitCodePoint(e);
          }
          [P](e) {
            e === s.HYPHEN_MINUS
              ? ((this.state = O), this._emitChars("-"))
              : e === s.LESS_THAN_SIGN
                ? (this.state = L)
                : e === s.NULL
                  ? (this._err(o.unexpectedNullCharacter),
                    (this.state = N),
                    this._emitChars(r.REPLACEMENT_CHARACTER))
                  : e === s.EOF
                    ? (this._err(o.eofInScriptHtmlCommentLikeText),
                      this._emitEOFToken())
                    : ((this.state = N), this._emitCodePoint(e));
          }
          [O](e) {
            e === s.HYPHEN_MINUS
              ? this._emitChars("-")
              : e === s.LESS_THAN_SIGN
                ? (this.state = L)
                : e === s.GREATER_THAN_SIGN
                  ? ((this.state = m), this._emitChars(">"))
                  : e === s.NULL
                    ? (this._err(o.unexpectedNullCharacter),
                      (this.state = N),
                      this._emitChars(r.REPLACEMENT_CHARACTER))
                    : e === s.EOF
                      ? (this._err(o.eofInScriptHtmlCommentLikeText),
                        this._emitEOFToken())
                      : ((this.state = N), this._emitCodePoint(e));
          }
          [L](e) {
            e === s.SOLIDUS
              ? ((this.tempBuff = []), (this.state = I))
              : Be(e)
                ? ((this.tempBuff = []),
                  this._emitChars("<"),
                  this._reconsumeInState(M))
                : (this._emitChars("<"), this._reconsumeInState(N));
          }
          [I](e) {
            Be(e)
              ? (this._createEndTagToken(), this._reconsumeInState(R))
              : (this._emitChars("</"), this._reconsumeInState(N));
          }
          [R](e) {
            if (He(e))
              (this.currentToken.tagName += Ve(e)), this.tempBuff.push(e);
            else if (Fe(e))
              (this.currentToken.tagName += Ke(e)), this.tempBuff.push(e);
            else {
              if (this.lastStartTagName === this.currentToken.tagName) {
                if (De(e)) return void (this.state = U);
                if (e === s.SOLIDUS) return void (this.state = Q);
                if (e === s.GREATER_THAN_SIGN)
                  return this._emitCurrentToken(), void (this.state = u);
              }
              this._emitChars("</"),
                this._emitSeveralCodePoints(this.tempBuff),
                this._reconsumeInState(N);
            }
          }
          [M](e) {
            De(e) || e === s.SOLIDUS || e === s.GREATER_THAN_SIGN
              ? ((this.state = this._isTempBufferEqualToScriptString() ? D : N),
                this._emitCodePoint(e))
              : He(e)
                ? (this.tempBuff.push(Ge(e)), this._emitCodePoint(e))
                : Fe(e)
                  ? (this.tempBuff.push(e), this._emitCodePoint(e))
                  : this._reconsumeInState(N);
          }
          [D](e) {
            e === s.HYPHEN_MINUS
              ? ((this.state = j), this._emitChars("-"))
              : e === s.LESS_THAN_SIGN
                ? ((this.state = F), this._emitChars("<"))
                : e === s.NULL
                  ? (this._err(o.unexpectedNullCharacter),
                    this._emitChars(r.REPLACEMENT_CHARACTER))
                  : e === s.EOF
                    ? (this._err(o.eofInScriptHtmlCommentLikeText),
                      this._emitEOFToken())
                    : this._emitCodePoint(e);
          }
          [j](e) {
            e === s.HYPHEN_MINUS
              ? ((this.state = H), this._emitChars("-"))
              : e === s.LESS_THAN_SIGN
                ? ((this.state = F), this._emitChars("<"))
                : e === s.NULL
                  ? (this._err(o.unexpectedNullCharacter),
                    (this.state = D),
                    this._emitChars(r.REPLACEMENT_CHARACTER))
                  : e === s.EOF
                    ? (this._err(o.eofInScriptHtmlCommentLikeText),
                      this._emitEOFToken())
                    : ((this.state = D), this._emitCodePoint(e));
          }
          [H](e) {
            e === s.HYPHEN_MINUS
              ? this._emitChars("-")
              : e === s.LESS_THAN_SIGN
                ? ((this.state = F), this._emitChars("<"))
                : e === s.GREATER_THAN_SIGN
                  ? ((this.state = m), this._emitChars(">"))
                  : e === s.NULL
                    ? (this._err(o.unexpectedNullCharacter),
                      (this.state = D),
                      this._emitChars(r.REPLACEMENT_CHARACTER))
                    : e === s.EOF
                      ? (this._err(o.eofInScriptHtmlCommentLikeText),
                        this._emitEOFToken())
                      : ((this.state = D), this._emitCodePoint(e));
          }
          [F](e) {
            e === s.SOLIDUS
              ? ((this.tempBuff = []), (this.state = B), this._emitChars("/"))
              : this._reconsumeInState(D);
          }
          [B](e) {
            De(e) || e === s.SOLIDUS || e === s.GREATER_THAN_SIGN
              ? ((this.state = this._isTempBufferEqualToScriptString() ? N : D),
                this._emitCodePoint(e))
              : He(e)
                ? (this.tempBuff.push(Ge(e)), this._emitCodePoint(e))
                : Fe(e)
                  ? (this.tempBuff.push(e), this._emitCodePoint(e))
                  : this._reconsumeInState(D);
          }
          [U](e) {
            De(e) ||
              (e === s.SOLIDUS || e === s.GREATER_THAN_SIGN || e === s.EOF
                ? this._reconsumeInState(q)
                : e === s.EQUALS_SIGN
                  ? (this._err(o.unexpectedEqualsSignBeforeAttributeName),
                    this._createAttr("="),
                    (this.state = z))
                  : (this._createAttr(""), this._reconsumeInState(z)));
          }
          [z](e) {
            De(e) || e === s.SOLIDUS || e === s.GREATER_THAN_SIGN || e === s.EOF
              ? (this._leaveAttrName(q), this._unconsume())
              : e === s.EQUALS_SIGN
                ? this._leaveAttrName(G)
                : He(e)
                  ? (this.currentAttr.name += Ve(e))
                  : e === s.QUOTATION_MARK ||
                      e === s.APOSTROPHE ||
                      e === s.LESS_THAN_SIGN
                    ? (this._err(o.unexpectedCharacterInAttributeName),
                      (this.currentAttr.name += Ke(e)))
                    : e === s.NULL
                      ? (this._err(o.unexpectedNullCharacter),
                        (this.currentAttr.name += r.REPLACEMENT_CHARACTER))
                      : (this.currentAttr.name += Ke(e));
          }
          [q](e) {
            De(e) ||
              (e === s.SOLIDUS
                ? (this.state = Q)
                : e === s.EQUALS_SIGN
                  ? (this.state = G)
                  : e === s.GREATER_THAN_SIGN
                    ? ((this.state = u), this._emitCurrentToken())
                    : e === s.EOF
                      ? (this._err(o.eofInTag), this._emitEOFToken())
                      : (this._createAttr(""), this._reconsumeInState(z)));
          }
          [G](e) {
            De(e) ||
              (e === s.QUOTATION_MARK
                ? (this.state = K)
                : e === s.APOSTROPHE
                  ? (this.state = V)
                  : e === s.GREATER_THAN_SIGN
                    ? (this._err(o.missingAttributeValue),
                      (this.state = u),
                      this._emitCurrentToken())
                    : this._reconsumeInState(W));
          }
          [K](e) {
            e === s.QUOTATION_MARK
              ? (this.state = Y)
              : e === s.AMPERSAND
                ? ((this.returnState = K), (this.state = Se))
                : e === s.NULL
                  ? (this._err(o.unexpectedNullCharacter),
                    (this.currentAttr.value += r.REPLACEMENT_CHARACTER))
                  : e === s.EOF
                    ? (this._err(o.eofInTag), this._emitEOFToken())
                    : (this.currentAttr.value += Ke(e));
          }
          [V](e) {
            e === s.APOSTROPHE
              ? (this.state = Y)
              : e === s.AMPERSAND
                ? ((this.returnState = V), (this.state = Se))
                : e === s.NULL
                  ? (this._err(o.unexpectedNullCharacter),
                    (this.currentAttr.value += r.REPLACEMENT_CHARACTER))
                  : e === s.EOF
                    ? (this._err(o.eofInTag), this._emitEOFToken())
                    : (this.currentAttr.value += Ke(e));
          }
          [W](e) {
            De(e)
              ? this._leaveAttrValue(U)
              : e === s.AMPERSAND
                ? ((this.returnState = W), (this.state = Se))
                : e === s.GREATER_THAN_SIGN
                  ? (this._leaveAttrValue(u), this._emitCurrentToken())
                  : e === s.NULL
                    ? (this._err(o.unexpectedNullCharacter),
                      (this.currentAttr.value += r.REPLACEMENT_CHARACTER))
                    : e === s.QUOTATION_MARK ||
                        e === s.APOSTROPHE ||
                        e === s.LESS_THAN_SIGN ||
                        e === s.EQUALS_SIGN ||
                        e === s.GRAVE_ACCENT
                      ? (this._err(
                          o.unexpectedCharacterInUnquotedAttributeValue,
                        ),
                        (this.currentAttr.value += Ke(e)))
                      : e === s.EOF
                        ? (this._err(o.eofInTag), this._emitEOFToken())
                        : (this.currentAttr.value += Ke(e));
          }
          [Y](e) {
            De(e)
              ? this._leaveAttrValue(U)
              : e === s.SOLIDUS
                ? this._leaveAttrValue(Q)
                : e === s.GREATER_THAN_SIGN
                  ? (this._leaveAttrValue(u), this._emitCurrentToken())
                  : e === s.EOF
                    ? (this._err(o.eofInTag), this._emitEOFToken())
                    : (this._err(o.missingWhitespaceBetweenAttributes),
                      this._reconsumeInState(U));
          }
          [Q](e) {
            e === s.GREATER_THAN_SIGN
              ? ((this.currentToken.selfClosing = !0),
                (this.state = u),
                this._emitCurrentToken())
              : e === s.EOF
                ? (this._err(o.eofInTag), this._emitEOFToken())
                : (this._err(o.unexpectedSolidusInTag),
                  this._reconsumeInState(U));
          }
          [X](e) {
            e === s.GREATER_THAN_SIGN
              ? ((this.state = u), this._emitCurrentToken())
              : e === s.EOF
                ? (this._emitCurrentToken(), this._emitEOFToken())
                : e === s.NULL
                  ? (this._err(o.unexpectedNullCharacter),
                    (this.currentToken.data += r.REPLACEMENT_CHARACTER))
                  : (this.currentToken.data += Ke(e));
          }
          [J](e) {
            this._consumeSequenceIfMatch(c.DASH_DASH_STRING, e, !0)
              ? (this._createCommentToken(), (this.state = $))
              : this._consumeSequenceIfMatch(c.DOCTYPE_STRING, e, !1)
                ? (this.state = ce)
                : this._consumeSequenceIfMatch(c.CDATA_START_STRING, e, !0)
                  ? this.allowCDATA
                    ? (this.state = we)
                    : (this._err(o.cdataInHtmlContent),
                      this._createCommentToken(),
                      (this.currentToken.data = "[CDATA["),
                      (this.state = X))
                  : this._ensureHibernation() ||
                    (this._err(o.incorrectlyOpenedComment),
                    this._createCommentToken(),
                    this._reconsumeInState(X));
          }
          [$](e) {
            e === s.HYPHEN_MINUS
              ? (this.state = Z)
              : e === s.GREATER_THAN_SIGN
                ? (this._err(o.abruptClosingOfEmptyComment),
                  (this.state = u),
                  this._emitCurrentToken())
                : this._reconsumeInState(ee);
          }
          [Z](e) {
            e === s.HYPHEN_MINUS
              ? (this.state = oe)
              : e === s.GREATER_THAN_SIGN
                ? (this._err(o.abruptClosingOfEmptyComment),
                  (this.state = u),
                  this._emitCurrentToken())
                : e === s.EOF
                  ? (this._err(o.eofInComment),
                    this._emitCurrentToken(),
                    this._emitEOFToken())
                  : ((this.currentToken.data += "-"),
                    this._reconsumeInState(ee));
          }
          [ee](e) {
            e === s.HYPHEN_MINUS
              ? (this.state = ae)
              : e === s.LESS_THAN_SIGN
                ? ((this.currentToken.data += "<"), (this.state = te))
                : e === s.NULL
                  ? (this._err(o.unexpectedNullCharacter),
                    (this.currentToken.data += r.REPLACEMENT_CHARACTER))
                  : e === s.EOF
                    ? (this._err(o.eofInComment),
                      this._emitCurrentToken(),
                      this._emitEOFToken())
                    : (this.currentToken.data += Ke(e));
          }
          [te](e) {
            e === s.EXCLAMATION_MARK
              ? ((this.currentToken.data += "!"), (this.state = ne))
              : e === s.LESS_THAN_SIGN
                ? (this.currentToken.data += "!")
                : this._reconsumeInState(ee);
          }
          [ne](e) {
            e === s.HYPHEN_MINUS
              ? (this.state = ie)
              : this._reconsumeInState(ee);
          }
          [ie](e) {
            e === s.HYPHEN_MINUS
              ? (this.state = re)
              : this._reconsumeInState(ae);
          }
          [re](e) {
            e !== s.GREATER_THAN_SIGN &&
              e !== s.EOF &&
              this._err(o.nestedComment),
              this._reconsumeInState(oe);
          }
          [ae](e) {
            e === s.HYPHEN_MINUS
              ? (this.state = oe)
              : e === s.EOF
                ? (this._err(o.eofInComment),
                  this._emitCurrentToken(),
                  this._emitEOFToken())
                : ((this.currentToken.data += "-"), this._reconsumeInState(ee));
          }
          [oe](e) {
            e === s.GREATER_THAN_SIGN
              ? ((this.state = u), this._emitCurrentToken())
              : e === s.EXCLAMATION_MARK
                ? (this.state = se)
                : e === s.HYPHEN_MINUS
                  ? (this.currentToken.data += "-")
                  : e === s.EOF
                    ? (this._err(o.eofInComment),
                      this._emitCurrentToken(),
                      this._emitEOFToken())
                    : ((this.currentToken.data += "--"),
                      this._reconsumeInState(ee));
          }
          [se](e) {
            e === s.HYPHEN_MINUS
              ? ((this.currentToken.data += "--!"), (this.state = ae))
              : e === s.GREATER_THAN_SIGN
                ? (this._err(o.incorrectlyClosedComment),
                  (this.state = u),
                  this._emitCurrentToken())
                : e === s.EOF
                  ? (this._err(o.eofInComment),
                    this._emitCurrentToken(),
                    this._emitEOFToken())
                  : ((this.currentToken.data += "--!"),
                    this._reconsumeInState(ee));
          }
          [ce](e) {
            De(e)
              ? (this.state = le)
              : e === s.GREATER_THAN_SIGN
                ? this._reconsumeInState(le)
                : e === s.EOF
                  ? (this._err(o.eofInDoctype),
                    this._createDoctypeToken(null),
                    (this.currentToken.forceQuirks = !0),
                    this._emitCurrentToken(),
                    this._emitEOFToken())
                  : (this._err(o.missingWhitespaceBeforeDoctypeName),
                    this._reconsumeInState(le));
          }
          [le](e) {
            De(e) ||
              (He(e)
                ? (this._createDoctypeToken(Ve(e)), (this.state = ue))
                : e === s.NULL
                  ? (this._err(o.unexpectedNullCharacter),
                    this._createDoctypeToken(r.REPLACEMENT_CHARACTER),
                    (this.state = ue))
                  : e === s.GREATER_THAN_SIGN
                    ? (this._err(o.missingDoctypeName),
                      this._createDoctypeToken(null),
                      (this.currentToken.forceQuirks = !0),
                      this._emitCurrentToken(),
                      (this.state = u))
                    : e === s.EOF
                      ? (this._err(o.eofInDoctype),
                        this._createDoctypeToken(null),
                        (this.currentToken.forceQuirks = !0),
                        this._emitCurrentToken(),
                        this._emitEOFToken())
                      : (this._createDoctypeToken(Ke(e)), (this.state = ue)));
          }
          [ue](e) {
            De(e)
              ? (this.state = pe)
              : e === s.GREATER_THAN_SIGN
                ? ((this.state = u), this._emitCurrentToken())
                : He(e)
                  ? (this.currentToken.name += Ve(e))
                  : e === s.NULL
                    ? (this._err(o.unexpectedNullCharacter),
                      (this.currentToken.name += r.REPLACEMENT_CHARACTER))
                    : e === s.EOF
                      ? (this._err(o.eofInDoctype),
                        (this.currentToken.forceQuirks = !0),
                        this._emitCurrentToken(),
                        this._emitEOFToken())
                      : (this.currentToken.name += Ke(e));
          }
          [pe](e) {
            De(e) ||
              (e === s.GREATER_THAN_SIGN
                ? ((this.state = u), this._emitCurrentToken())
                : e === s.EOF
                  ? (this._err(o.eofInDoctype),
                    (this.currentToken.forceQuirks = !0),
                    this._emitCurrentToken(),
                    this._emitEOFToken())
                  : this._consumeSequenceIfMatch(c.PUBLIC_STRING, e, !1)
                    ? (this.state = de)
                    : this._consumeSequenceIfMatch(c.SYSTEM_STRING, e, !1)
                      ? (this.state = be)
                      : this._ensureHibernation() ||
                        (this._err(o.invalidCharacterSequenceAfterDoctypeName),
                        (this.currentToken.forceQuirks = !0),
                        this._reconsumeInState(Ee)));
          }
          [de](e) {
            De(e)
              ? (this.state = me)
              : e === s.QUOTATION_MARK
                ? (this._err(o.missingWhitespaceAfterDoctypePublicKeyword),
                  (this.currentToken.publicId = ""),
                  (this.state = he))
                : e === s.APOSTROPHE
                  ? (this._err(o.missingWhitespaceAfterDoctypePublicKeyword),
                    (this.currentToken.publicId = ""),
                    (this.state = fe))
                  : e === s.GREATER_THAN_SIGN
                    ? (this._err(o.missingDoctypePublicIdentifier),
                      (this.currentToken.forceQuirks = !0),
                      (this.state = u),
                      this._emitCurrentToken())
                    : e === s.EOF
                      ? (this._err(o.eofInDoctype),
                        (this.currentToken.forceQuirks = !0),
                        this._emitCurrentToken(),
                        this._emitEOFToken())
                      : (this._err(o.missingQuoteBeforeDoctypePublicIdentifier),
                        (this.currentToken.forceQuirks = !0),
                        this._reconsumeInState(Ee));
          }
          [me](e) {
            De(e) ||
              (e === s.QUOTATION_MARK
                ? ((this.currentToken.publicId = ""), (this.state = he))
                : e === s.APOSTROPHE
                  ? ((this.currentToken.publicId = ""), (this.state = fe))
                  : e === s.GREATER_THAN_SIGN
                    ? (this._err(o.missingDoctypePublicIdentifier),
                      (this.currentToken.forceQuirks = !0),
                      (this.state = u),
                      this._emitCurrentToken())
                    : e === s.EOF
                      ? (this._err(o.eofInDoctype),
                        (this.currentToken.forceQuirks = !0),
                        this._emitCurrentToken(),
                        this._emitEOFToken())
                      : (this._err(o.missingQuoteBeforeDoctypePublicIdentifier),
                        (this.currentToken.forceQuirks = !0),
                        this._reconsumeInState(Ee)));
          }
          [he](e) {
            e === s.QUOTATION_MARK
              ? (this.state = ge)
              : e === s.NULL
                ? (this._err(o.unexpectedNullCharacter),
                  (this.currentToken.publicId += r.REPLACEMENT_CHARACTER))
                : e === s.GREATER_THAN_SIGN
                  ? (this._err(o.abruptDoctypePublicIdentifier),
                    (this.currentToken.forceQuirks = !0),
                    this._emitCurrentToken(),
                    (this.state = u))
                  : e === s.EOF
                    ? (this._err(o.eofInDoctype),
                      (this.currentToken.forceQuirks = !0),
                      this._emitCurrentToken(),
                      this._emitEOFToken())
                    : (this.currentToken.publicId += Ke(e));
          }
          [fe](e) {
            e === s.APOSTROPHE
              ? (this.state = ge)
              : e === s.NULL
                ? (this._err(o.unexpectedNullCharacter),
                  (this.currentToken.publicId += r.REPLACEMENT_CHARACTER))
                : e === s.GREATER_THAN_SIGN
                  ? (this._err(o.abruptDoctypePublicIdentifier),
                    (this.currentToken.forceQuirks = !0),
                    this._emitCurrentToken(),
                    (this.state = u))
                  : e === s.EOF
                    ? (this._err(o.eofInDoctype),
                      (this.currentToken.forceQuirks = !0),
                      this._emitCurrentToken(),
                      this._emitEOFToken())
                    : (this.currentToken.publicId += Ke(e));
          }
          [ge](e) {
            De(e)
              ? (this.state = xe)
              : e === s.GREATER_THAN_SIGN
                ? ((this.state = u), this._emitCurrentToken())
                : e === s.QUOTATION_MARK
                  ? (this._err(
                      o.missingWhitespaceBetweenDoctypePublicAndSystemIdentifiers,
                    ),
                    (this.currentToken.systemId = ""),
                    (this.state = ke))
                  : e === s.APOSTROPHE
                    ? (this._err(
                        o.missingWhitespaceBetweenDoctypePublicAndSystemIdentifiers,
                      ),
                      (this.currentToken.systemId = ""),
                      (this.state = Te))
                    : e === s.EOF
                      ? (this._err(o.eofInDoctype),
                        (this.currentToken.forceQuirks = !0),
                        this._emitCurrentToken(),
                        this._emitEOFToken())
                      : (this._err(o.missingQuoteBeforeDoctypeSystemIdentifier),
                        (this.currentToken.forceQuirks = !0),
                        this._reconsumeInState(Ee));
          }
          [xe](e) {
            De(e) ||
              (e === s.GREATER_THAN_SIGN
                ? (this._emitCurrentToken(), (this.state = u))
                : e === s.QUOTATION_MARK
                  ? ((this.currentToken.systemId = ""), (this.state = ke))
                  : e === s.APOSTROPHE
                    ? ((this.currentToken.systemId = ""), (this.state = Te))
                    : e === s.EOF
                      ? (this._err(o.eofInDoctype),
                        (this.currentToken.forceQuirks = !0),
                        this._emitCurrentToken(),
                        this._emitEOFToken())
                      : (this._err(o.missingQuoteBeforeDoctypeSystemIdentifier),
                        (this.currentToken.forceQuirks = !0),
                        this._reconsumeInState(Ee)));
          }
          [be](e) {
            De(e)
              ? (this.state = ve)
              : e === s.QUOTATION_MARK
                ? (this._err(o.missingWhitespaceAfterDoctypeSystemKeyword),
                  (this.currentToken.systemId = ""),
                  (this.state = ke))
                : e === s.APOSTROPHE
                  ? (this._err(o.missingWhitespaceAfterDoctypeSystemKeyword),
                    (this.currentToken.systemId = ""),
                    (this.state = Te))
                  : e === s.GREATER_THAN_SIGN
                    ? (this._err(o.missingDoctypeSystemIdentifier),
                      (this.currentToken.forceQuirks = !0),
                      (this.state = u),
                      this._emitCurrentToken())
                    : e === s.EOF
                      ? (this._err(o.eofInDoctype),
                        (this.currentToken.forceQuirks = !0),
                        this._emitCurrentToken(),
                        this._emitEOFToken())
                      : (this._err(o.missingQuoteBeforeDoctypeSystemIdentifier),
                        (this.currentToken.forceQuirks = !0),
                        this._reconsumeInState(Ee));
          }
          [ve](e) {
            De(e) ||
              (e === s.QUOTATION_MARK
                ? ((this.currentToken.systemId = ""), (this.state = ke))
                : e === s.APOSTROPHE
                  ? ((this.currentToken.systemId = ""), (this.state = Te))
                  : e === s.GREATER_THAN_SIGN
                    ? (this._err(o.missingDoctypeSystemIdentifier),
                      (this.currentToken.forceQuirks = !0),
                      (this.state = u),
                      this._emitCurrentToken())
                    : e === s.EOF
                      ? (this._err(o.eofInDoctype),
                        (this.currentToken.forceQuirks = !0),
                        this._emitCurrentToken(),
                        this._emitEOFToken())
                      : (this._err(o.missingQuoteBeforeDoctypeSystemIdentifier),
                        (this.currentToken.forceQuirks = !0),
                        this._reconsumeInState(Ee)));
          }
          [ke](e) {
            e === s.QUOTATION_MARK
              ? (this.state = ye)
              : e === s.NULL
                ? (this._err(o.unexpectedNullCharacter),
                  (this.currentToken.systemId += r.REPLACEMENT_CHARACTER))
                : e === s.GREATER_THAN_SIGN
                  ? (this._err(o.abruptDoctypeSystemIdentifier),
                    (this.currentToken.forceQuirks = !0),
                    this._emitCurrentToken(),
                    (this.state = u))
                  : e === s.EOF
                    ? (this._err(o.eofInDoctype),
                      (this.currentToken.forceQuirks = !0),
                      this._emitCurrentToken(),
                      this._emitEOFToken())
                    : (this.currentToken.systemId += Ke(e));
          }
          [Te](e) {
            e === s.APOSTROPHE
              ? (this.state = ye)
              : e === s.NULL
                ? (this._err(o.unexpectedNullCharacter),
                  (this.currentToken.systemId += r.REPLACEMENT_CHARACTER))
                : e === s.GREATER_THAN_SIGN
                  ? (this._err(o.abruptDoctypeSystemIdentifier),
                    (this.currentToken.forceQuirks = !0),
                    this._emitCurrentToken(),
                    (this.state = u))
                  : e === s.EOF
                    ? (this._err(o.eofInDoctype),
                      (this.currentToken.forceQuirks = !0),
                      this._emitCurrentToken(),
                      this._emitEOFToken())
                    : (this.currentToken.systemId += Ke(e));
          }
          [ye](e) {
            De(e) ||
              (e === s.GREATER_THAN_SIGN
                ? (this._emitCurrentToken(), (this.state = u))
                : e === s.EOF
                  ? (this._err(o.eofInDoctype),
                    (this.currentToken.forceQuirks = !0),
                    this._emitCurrentToken(),
                    this._emitEOFToken())
                  : (this._err(
                      o.unexpectedCharacterAfterDoctypeSystemIdentifier,
                    ),
                    this._reconsumeInState(Ee)));
          }
          [Ee](e) {
            e === s.GREATER_THAN_SIGN
              ? (this._emitCurrentToken(), (this.state = u))
              : e === s.NULL
                ? this._err(o.unexpectedNullCharacter)
                : e === s.EOF &&
                  (this._emitCurrentToken(), this._emitEOFToken());
          }
          [we](e) {
            e === s.RIGHT_SQUARE_BRACKET
              ? (this.state = Ce)
              : e === s.EOF
                ? (this._err(o.eofInCdata), this._emitEOFToken())
                : this._emitCodePoint(e);
          }
          [Ce](e) {
            e === s.RIGHT_SQUARE_BRACKET
              ? (this.state = Ae)
              : (this._emitChars("]"), this._reconsumeInState(we));
          }
          [Ae](e) {
            e === s.GREATER_THAN_SIGN
              ? (this.state = u)
              : e === s.RIGHT_SQUARE_BRACKET
                ? this._emitChars("]")
                : (this._emitChars("]]"), this._reconsumeInState(we));
          }
          [Se](e) {
            (this.tempBuff = [s.AMPERSAND]),
              e === s.NUMBER_SIGN
                ? (this.tempBuff.push(e), (this.state = Pe))
                : Ue(e)
                  ? this._reconsumeInState(_e)
                  : (this._flushCodePointsConsumedAsCharacterReference(),
                    this._reconsumeInState(this.returnState));
          }
          [_e](e) {
            const t = this._matchNamedCharacterReference(e);
            if (this._ensureHibernation()) this.tempBuff = [s.AMPERSAND];
            else if (t) {
              const e = this.tempBuff[this.tempBuff.length - 1] === s.SEMICOLON;
              this._isCharacterReferenceAttributeQuirk(e) ||
                (e ||
                  this._errOnNextCodePoint(
                    o.missingSemicolonAfterCharacterReference,
                  ),
                (this.tempBuff = t)),
                this._flushCodePointsConsumedAsCharacterReference(),
                (this.state = this.returnState);
            } else
              this._flushCodePointsConsumedAsCharacterReference(),
                (this.state = Ne);
          }
          [Ne](e) {
            Ue(e)
              ? this._isCharacterReferenceInAttribute()
                ? (this.currentAttr.value += Ke(e))
                : this._emitCodePoint(e)
              : (e === s.SEMICOLON &&
                  this._err(o.unknownNamedCharacterReference),
                this._reconsumeInState(this.returnState));
          }
          [Pe](e) {
            (this.charRefCode = 0),
              e === s.LATIN_SMALL_X || e === s.LATIN_CAPITAL_X
                ? (this.tempBuff.push(e), (this.state = Oe))
                : this._reconsumeInState(Le);
          }
          [Oe](e) {
            !(function (e) {
              return je(e) || ze(e) || qe(e);
            })(e)
              ? (this._err(o.absenceOfDigitsInNumericCharacterReference),
                this._flushCodePointsConsumedAsCharacterReference(),
                this._reconsumeInState(this.returnState))
              : this._reconsumeInState(Ie);
          }
          [Le](e) {
            je(e)
              ? this._reconsumeInState(Re)
              : (this._err(o.absenceOfDigitsInNumericCharacterReference),
                this._flushCodePointsConsumedAsCharacterReference(),
                this._reconsumeInState(this.returnState));
          }
          [Ie](e) {
            ze(e)
              ? (this.charRefCode = 16 * this.charRefCode + e - 55)
              : qe(e)
                ? (this.charRefCode = 16 * this.charRefCode + e - 87)
                : je(e)
                  ? (this.charRefCode = 16 * this.charRefCode + e - 48)
                  : e === s.SEMICOLON
                    ? (this.state = Me)
                    : (this._err(o.missingSemicolonAfterCharacterReference),
                      this._reconsumeInState(Me));
          }
          [Re](e) {
            je(e)
              ? (this.charRefCode = 10 * this.charRefCode + e - 48)
              : e === s.SEMICOLON
                ? (this.state = Me)
                : (this._err(o.missingSemicolonAfterCharacterReference),
                  this._reconsumeInState(Me));
          }
          [Me]() {
            if (this.charRefCode === s.NULL)
              this._err(o.nullCharacterReference),
                (this.charRefCode = s.REPLACEMENT_CHARACTER);
            else if (this.charRefCode > 1114111)
              this._err(o.characterReferenceOutsideUnicodeRange),
                (this.charRefCode = s.REPLACEMENT_CHARACTER);
            else if (r.isSurrogate(this.charRefCode))
              this._err(o.surrogateCharacterReference),
                (this.charRefCode = s.REPLACEMENT_CHARACTER);
            else if (r.isUndefinedCodePoint(this.charRefCode))
              this._err(o.noncharacterCharacterReference);
            else if (
              r.isControlCodePoint(this.charRefCode) ||
              this.charRefCode === s.CARRIAGE_RETURN
            ) {
              this._err(o.controlCharacterReference);
              const e = l[this.charRefCode];
              e && (this.charRefCode = e);
            }
            (this.tempBuff = [this.charRefCode]),
              this._flushCodePointsConsumedAsCharacterReference(),
              this._reconsumeInState(this.returnState);
          }
        }
        (Ye.CHARACTER_TOKEN = "CHARACTER_TOKEN"),
          (Ye.NULL_CHARACTER_TOKEN = "NULL_CHARACTER_TOKEN"),
          (Ye.WHITESPACE_CHARACTER_TOKEN = "WHITESPACE_CHARACTER_TOKEN"),
          (Ye.START_TAG_TOKEN = "START_TAG_TOKEN"),
          (Ye.END_TAG_TOKEN = "END_TAG_TOKEN"),
          (Ye.COMMENT_TOKEN = "COMMENT_TOKEN"),
          (Ye.DOCTYPE_TOKEN = "DOCTYPE_TOKEN"),
          (Ye.EOF_TOKEN = "EOF_TOKEN"),
          (Ye.HIBERNATION_TOKEN = "HIBERNATION_TOKEN"),
          (Ye.MODE = {
            DATA: u,
            RCDATA: p,
            RAWTEXT: d,
            SCRIPT_DATA: m,
            PLAINTEXT: h,
          }),
          (Ye.getTokenAttr = function (e, t) {
            for (let n = e.attrs.length - 1; n >= 0; n--)
              if (e.attrs[n].name === t) return e.attrs[n].value;
            return null;
          }),
          (e.exports = Ye);
      },
      (e, t, n) => {
        "use strict";
        const i = n(7),
          r = n(8),
          a = i.CODE_POINTS;
        e.exports = class {
          constructor() {
            (this.html = null),
              (this.pos = -1),
              (this.lastGapPos = -1),
              (this.lastCharPos = -1),
              (this.gapStack = []),
              (this.skipNextNewLine = !1),
              (this.lastChunkWritten = !1),
              (this.endOfChunkHit = !1),
              (this.bufferWaterline = 65536);
          }
          _err() {}
          _addGap() {
            this.gapStack.push(this.lastGapPos), (this.lastGapPos = this.pos);
          }
          _processSurrogate(e) {
            if (this.pos !== this.lastCharPos) {
              const t = this.html.charCodeAt(this.pos + 1);
              if (i.isSurrogatePair(t))
                return (
                  this.pos++, this._addGap(), i.getSurrogatePairCodePoint(e, t)
                );
            } else if (!this.lastChunkWritten)
              return (this.endOfChunkHit = !0), a.EOF;
            return this._err(r.surrogateInInputStream), e;
          }
          dropParsedChunk() {
            this.pos > this.bufferWaterline &&
              ((this.lastCharPos -= this.pos),
              (this.html = this.html.substring(this.pos)),
              (this.pos = 0),
              (this.lastGapPos = -1),
              (this.gapStack = []));
          }
          write(e, t) {
            this.html ? (this.html += e) : (this.html = e),
              (this.lastCharPos = this.html.length - 1),
              (this.endOfChunkHit = !1),
              (this.lastChunkWritten = t);
          }
          insertHtmlAtCurrentPos(e) {
            (this.html =
              this.html.substring(0, this.pos + 1) +
              e +
              this.html.substring(this.pos + 1, this.html.length)),
              (this.lastCharPos = this.html.length - 1),
              (this.endOfChunkHit = !1);
          }
          advance() {
            if ((this.pos++, this.pos > this.lastCharPos))
              return (this.endOfChunkHit = !this.lastChunkWritten), a.EOF;
            let e = this.html.charCodeAt(this.pos);
            if (this.skipNextNewLine && e === a.LINE_FEED)
              return (
                (this.skipNextNewLine = !1), this._addGap(), this.advance()
              );
            if (e === a.CARRIAGE_RETURN)
              return (this.skipNextNewLine = !0), a.LINE_FEED;
            (this.skipNextNewLine = !1),
              i.isSurrogate(e) && (e = this._processSurrogate(e));
            return (
              (e > 31 && e < 127) ||
                e === a.LINE_FEED ||
                e === a.CARRIAGE_RETURN ||
                (e > 159 && e < 64976) ||
                this._checkForProblematicCharacters(e),
              e
            );
          }
          _checkForProblematicCharacters(e) {
            i.isControlCodePoint(e)
              ? this._err(r.controlCharacterInInputStream)
              : i.isUndefinedCodePoint(e) &&
                this._err(r.noncharacterInInputStream);
          }
          retreat() {
            this.pos === this.lastGapPos &&
              ((this.lastGapPos = this.gapStack.pop()), this.pos--),
              this.pos--;
          }
        };
      },
      (e, t) => {
        "use strict";
        const n = [
          65534, 65535, 131070, 131071, 196606, 196607, 262142, 262143, 327678,
          327679, 393214, 393215, 458750, 458751, 524286, 524287, 589822,
          589823, 655358, 655359, 720894, 720895, 786430, 786431, 851966,
          851967, 917502, 917503, 983038, 983039, 1048574, 1048575, 1114110,
          1114111,
        ];
        (t.REPLACEMENT_CHARACTER = "�"),
          (t.CODE_POINTS = {
            EOF: -1,
            NULL: 0,
            TABULATION: 9,
            CARRIAGE_RETURN: 13,
            LINE_FEED: 10,
            FORM_FEED: 12,
            SPACE: 32,
            EXCLAMATION_MARK: 33,
            QUOTATION_MARK: 34,
            NUMBER_SIGN: 35,
            AMPERSAND: 38,
            APOSTROPHE: 39,
            HYPHEN_MINUS: 45,
            SOLIDUS: 47,
            DIGIT_0: 48,
            DIGIT_9: 57,
            SEMICOLON: 59,
            LESS_THAN_SIGN: 60,
            EQUALS_SIGN: 61,
            GREATER_THAN_SIGN: 62,
            QUESTION_MARK: 63,
            LATIN_CAPITAL_A: 65,
            LATIN_CAPITAL_F: 70,
            LATIN_CAPITAL_X: 88,
            LATIN_CAPITAL_Z: 90,
            RIGHT_SQUARE_BRACKET: 93,
            GRAVE_ACCENT: 96,
            LATIN_SMALL_A: 97,
            LATIN_SMALL_F: 102,
            LATIN_SMALL_X: 120,
            LATIN_SMALL_Z: 122,
            REPLACEMENT_CHARACTER: 65533,
          }),
          (t.CODE_POINT_SEQUENCES = {
            DASH_DASH_STRING: [45, 45],
            DOCTYPE_STRING: [68, 79, 67, 84, 89, 80, 69],
            CDATA_START_STRING: [91, 67, 68, 65, 84, 65, 91],
            SCRIPT_STRING: [115, 99, 114, 105, 112, 116],
            PUBLIC_STRING: [80, 85, 66, 76, 73, 67],
            SYSTEM_STRING: [83, 89, 83, 84, 69, 77],
          }),
          (t.isSurrogate = function (e) {
            return e >= 55296 && e <= 57343;
          }),
          (t.isSurrogatePair = function (e) {
            return e >= 56320 && e <= 57343;
          }),
          (t.getSurrogatePairCodePoint = function (e, t) {
            return 1024 * (e - 55296) + 9216 + t;
          }),
          (t.isControlCodePoint = function (e) {
            return (
              (32 !== e &&
                10 !== e &&
                13 !== e &&
                9 !== e &&
                12 !== e &&
                e >= 1 &&
                e <= 31) ||
              (e >= 127 && e <= 159)
            );
          }),
          (t.isUndefinedCodePoint = function (e) {
            return (e >= 64976 && e <= 65007) || n.indexOf(e) > -1;
          });
      },
      (e) => {
        "use strict";
        e.exports = {
          controlCharacterInInputStream: "control-character-in-input-stream",
          noncharacterInInputStream: "noncharacter-in-input-stream",
          surrogateInInputStream: "surrogate-in-input-stream",
          nonVoidHtmlElementStartTagWithTrailingSolidus:
            "non-void-html-element-start-tag-with-trailing-solidus",
          endTagWithAttributes: "end-tag-with-attributes",
          endTagWithTrailingSolidus: "end-tag-with-trailing-solidus",
          unexpectedSolidusInTag: "unexpected-solidus-in-tag",
          unexpectedNullCharacter: "unexpected-null-character",
          unexpectedQuestionMarkInsteadOfTagName:
            "unexpected-question-mark-instead-of-tag-name",
          invalidFirstCharacterOfTagName: "invalid-first-character-of-tag-name",
          unexpectedEqualsSignBeforeAttributeName:
            "unexpected-equals-sign-before-attribute-name",
          missingEndTagName: "missing-end-tag-name",
          unexpectedCharacterInAttributeName:
            "unexpected-character-in-attribute-name",
          unknownNamedCharacterReference: "unknown-named-character-reference",
          missingSemicolonAfterCharacterReference:
            "missing-semicolon-after-character-reference",
          unexpectedCharacterAfterDoctypeSystemIdentifier:
            "unexpected-character-after-doctype-system-identifier",
          unexpectedCharacterInUnquotedAttributeValue:
            "unexpected-character-in-unquoted-attribute-value",
          eofBeforeTagName: "eof-before-tag-name",
          eofInTag: "eof-in-tag",
          missingAttributeValue: "missing-attribute-value",
          missingWhitespaceBetweenAttributes:
            "missing-whitespace-between-attributes",
          missingWhitespaceAfterDoctypePublicKeyword:
            "missing-whitespace-after-doctype-public-keyword",
          missingWhitespaceBetweenDoctypePublicAndSystemIdentifiers:
            "missing-whitespace-between-doctype-public-and-system-identifiers",
          missingWhitespaceAfterDoctypeSystemKeyword:
            "missing-whitespace-after-doctype-system-keyword",
          missingQuoteBeforeDoctypePublicIdentifier:
            "missing-quote-before-doctype-public-identifier",
          missingQuoteBeforeDoctypeSystemIdentifier:
            "missing-quote-before-doctype-system-identifier",
          missingDoctypePublicIdentifier: "missing-doctype-public-identifier",
          missingDoctypeSystemIdentifier: "missing-doctype-system-identifier",
          abruptDoctypePublicIdentifier: "abrupt-doctype-public-identifier",
          abruptDoctypeSystemIdentifier: "abrupt-doctype-system-identifier",
          cdataInHtmlContent: "cdata-in-html-content",
          incorrectlyOpenedComment: "incorrectly-opened-comment",
          eofInScriptHtmlCommentLikeText:
            "eof-in-script-html-comment-like-text",
          eofInDoctype: "eof-in-doctype",
          nestedComment: "nested-comment",
          abruptClosingOfEmptyComment: "abrupt-closing-of-empty-comment",
          eofInComment: "eof-in-comment",
          incorrectlyClosedComment: "incorrectly-closed-comment",
          eofInCdata: "eof-in-cdata",
          absenceOfDigitsInNumericCharacterReference:
            "absence-of-digits-in-numeric-character-reference",
          nullCharacterReference: "null-character-reference",
          surrogateCharacterReference: "surrogate-character-reference",
          characterReferenceOutsideUnicodeRange:
            "character-reference-outside-unicode-range",
          controlCharacterReference: "control-character-reference",
          noncharacterCharacterReference: "noncharacter-character-reference",
          missingWhitespaceBeforeDoctypeName:
            "missing-whitespace-before-doctype-name",
          missingDoctypeName: "missing-doctype-name",
          invalidCharacterSequenceAfterDoctypeName:
            "invalid-character-sequence-after-doctype-name",
          duplicateAttribute: "duplicate-attribute",
          nonConformingDoctype: "non-conforming-doctype",
          missingDoctype: "missing-doctype",
          misplacedDoctype: "misplaced-doctype",
          endTagWithoutMatchingOpenElement:
            "end-tag-without-matching-open-element",
          closingOfElementWithOpenChildElements:
            "closing-of-element-with-open-child-elements",
          disallowedContentInNoscriptInHead:
            "disallowed-content-in-noscript-in-head",
          openElementsLeftAfterEof: "open-elements-left-after-eof",
          abandonedHeadElementChild: "abandoned-head-element-child",
          misplacedStartTagForHeadElement:
            "misplaced-start-tag-for-head-element",
          nestedNoscriptInHead: "nested-noscript-in-head",
          eofInElementThatCanContainOnlyText:
            "eof-in-element-that-can-contain-only-text",
        };
      },
      (e) => {
        "use strict";
        e.exports = new Uint16Array([
          4, 52, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80,
          81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 97, 98, 99, 100, 101, 102,
          103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116,
          117, 118, 119, 120, 121, 122, 106, 303, 412, 810, 1432, 1701, 1796,
          1987, 2114, 2360, 2420, 2484, 3170, 3251, 4140, 4393, 4575, 4610,
          5106, 5512, 5728, 6117, 6274, 6315, 6345, 6427, 6516, 7002, 7910,
          8733, 9323, 9870, 10170, 10631, 10893, 11318, 11386, 11467, 12773,
          13092, 14474, 14922, 15448, 15542, 16419, 17666, 18166, 18611, 19004,
          19095, 19298, 19397, 4, 16, 69, 77, 97, 98, 99, 102, 103, 108, 109,
          110, 111, 112, 114, 115, 116, 117, 140, 150, 158, 169, 176, 194, 199,
          210, 216, 222, 226, 242, 256, 266, 283, 294, 108, 105, 103, 5, 198, 1,
          59, 148, 1, 198, 80, 5, 38, 1, 59, 156, 1, 38, 99, 117, 116, 101, 5,
          193, 1, 59, 167, 1, 193, 114, 101, 118, 101, 59, 1, 258, 4, 2, 105,
          121, 182, 191, 114, 99, 5, 194, 1, 59, 189, 1, 194, 59, 1, 1040, 114,
          59, 3, 55349, 56580, 114, 97, 118, 101, 5, 192, 1, 59, 208, 1, 192,
          112, 104, 97, 59, 1, 913, 97, 99, 114, 59, 1, 256, 100, 59, 1, 10835,
          4, 2, 103, 112, 232, 237, 111, 110, 59, 1, 260, 102, 59, 3, 55349,
          56632, 112, 108, 121, 70, 117, 110, 99, 116, 105, 111, 110, 59, 1,
          8289, 105, 110, 103, 5, 197, 1, 59, 264, 1, 197, 4, 2, 99, 115, 272,
          277, 114, 59, 3, 55349, 56476, 105, 103, 110, 59, 1, 8788, 105, 108,
          100, 101, 5, 195, 1, 59, 292, 1, 195, 109, 108, 5, 196, 1, 59, 301, 1,
          196, 4, 8, 97, 99, 101, 102, 111, 114, 115, 117, 321, 350, 354, 383,
          388, 394, 400, 405, 4, 2, 99, 114, 327, 336, 107, 115, 108, 97, 115,
          104, 59, 1, 8726, 4, 2, 118, 119, 342, 345, 59, 1, 10983, 101, 100,
          59, 1, 8966, 121, 59, 1, 1041, 4, 3, 99, 114, 116, 362, 369, 379, 97,
          117, 115, 101, 59, 1, 8757, 110, 111, 117, 108, 108, 105, 115, 59, 1,
          8492, 97, 59, 1, 914, 114, 59, 3, 55349, 56581, 112, 102, 59, 3,
          55349, 56633, 101, 118, 101, 59, 1, 728, 99, 114, 59, 1, 8492, 109,
          112, 101, 113, 59, 1, 8782, 4, 14, 72, 79, 97, 99, 100, 101, 102, 104,
          105, 108, 111, 114, 115, 117, 442, 447, 456, 504, 542, 547, 569, 573,
          577, 616, 678, 784, 790, 796, 99, 121, 59, 1, 1063, 80, 89, 5, 169, 1,
          59, 454, 1, 169, 4, 3, 99, 112, 121, 464, 470, 497, 117, 116, 101, 59,
          1, 262, 4, 2, 59, 105, 476, 478, 1, 8914, 116, 97, 108, 68, 105, 102,
          102, 101, 114, 101, 110, 116, 105, 97, 108, 68, 59, 1, 8517, 108, 101,
          121, 115, 59, 1, 8493, 4, 4, 97, 101, 105, 111, 514, 520, 530, 535,
          114, 111, 110, 59, 1, 268, 100, 105, 108, 5, 199, 1, 59, 528, 1, 199,
          114, 99, 59, 1, 264, 110, 105, 110, 116, 59, 1, 8752, 111, 116, 59, 1,
          266, 4, 2, 100, 110, 553, 560, 105, 108, 108, 97, 59, 1, 184, 116,
          101, 114, 68, 111, 116, 59, 1, 183, 114, 59, 1, 8493, 105, 59, 1, 935,
          114, 99, 108, 101, 4, 4, 68, 77, 80, 84, 591, 596, 603, 609, 111, 116,
          59, 1, 8857, 105, 110, 117, 115, 59, 1, 8854, 108, 117, 115, 59, 1,
          8853, 105, 109, 101, 115, 59, 1, 8855, 111, 4, 2, 99, 115, 623, 646,
          107, 119, 105, 115, 101, 67, 111, 110, 116, 111, 117, 114, 73, 110,
          116, 101, 103, 114, 97, 108, 59, 1, 8754, 101, 67, 117, 114, 108, 121,
          4, 2, 68, 81, 658, 671, 111, 117, 98, 108, 101, 81, 117, 111, 116,
          101, 59, 1, 8221, 117, 111, 116, 101, 59, 1, 8217, 4, 4, 108, 110,
          112, 117, 688, 701, 736, 753, 111, 110, 4, 2, 59, 101, 696, 698, 1,
          8759, 59, 1, 10868, 4, 3, 103, 105, 116, 709, 717, 722, 114, 117, 101,
          110, 116, 59, 1, 8801, 110, 116, 59, 1, 8751, 111, 117, 114, 73, 110,
          116, 101, 103, 114, 97, 108, 59, 1, 8750, 4, 2, 102, 114, 742, 745,
          59, 1, 8450, 111, 100, 117, 99, 116, 59, 1, 8720, 110, 116, 101, 114,
          67, 108, 111, 99, 107, 119, 105, 115, 101, 67, 111, 110, 116, 111,
          117, 114, 73, 110, 116, 101, 103, 114, 97, 108, 59, 1, 8755, 111, 115,
          115, 59, 1, 10799, 99, 114, 59, 3, 55349, 56478, 112, 4, 2, 59, 67,
          803, 805, 1, 8915, 97, 112, 59, 1, 8781, 4, 11, 68, 74, 83, 90, 97,
          99, 101, 102, 105, 111, 115, 834, 850, 855, 860, 865, 888, 903, 916,
          921, 1011, 1415, 4, 2, 59, 111, 840, 842, 1, 8517, 116, 114, 97, 104,
          100, 59, 1, 10513, 99, 121, 59, 1, 1026, 99, 121, 59, 1, 1029, 99,
          121, 59, 1, 1039, 4, 3, 103, 114, 115, 873, 879, 883, 103, 101, 114,
          59, 1, 8225, 114, 59, 1, 8609, 104, 118, 59, 1, 10980, 4, 2, 97, 121,
          894, 900, 114, 111, 110, 59, 1, 270, 59, 1, 1044, 108, 4, 2, 59, 116,
          910, 912, 1, 8711, 97, 59, 1, 916, 114, 59, 3, 55349, 56583, 4, 2, 97,
          102, 927, 998, 4, 2, 99, 109, 933, 992, 114, 105, 116, 105, 99, 97,
          108, 4, 4, 65, 68, 71, 84, 950, 957, 978, 985, 99, 117, 116, 101, 59,
          1, 180, 111, 4, 2, 116, 117, 964, 967, 59, 1, 729, 98, 108, 101, 65,
          99, 117, 116, 101, 59, 1, 733, 114, 97, 118, 101, 59, 1, 96, 105, 108,
          100, 101, 59, 1, 732, 111, 110, 100, 59, 1, 8900, 102, 101, 114, 101,
          110, 116, 105, 97, 108, 68, 59, 1, 8518, 4, 4, 112, 116, 117, 119,
          1021, 1026, 1048, 1249, 102, 59, 3, 55349, 56635, 4, 3, 59, 68, 69,
          1034, 1036, 1041, 1, 168, 111, 116, 59, 1, 8412, 113, 117, 97, 108,
          59, 1, 8784, 98, 108, 101, 4, 6, 67, 68, 76, 82, 85, 86, 1065, 1082,
          1101, 1189, 1211, 1236, 111, 110, 116, 111, 117, 114, 73, 110, 116,
          101, 103, 114, 97, 108, 59, 1, 8751, 111, 4, 2, 116, 119, 1089, 1092,
          59, 1, 168, 110, 65, 114, 114, 111, 119, 59, 1, 8659, 4, 2, 101, 111,
          1107, 1141, 102, 116, 4, 3, 65, 82, 84, 1117, 1124, 1136, 114, 114,
          111, 119, 59, 1, 8656, 105, 103, 104, 116, 65, 114, 114, 111, 119, 59,
          1, 8660, 101, 101, 59, 1, 10980, 110, 103, 4, 2, 76, 82, 1149, 1177,
          101, 102, 116, 4, 2, 65, 82, 1158, 1165, 114, 114, 111, 119, 59, 1,
          10232, 105, 103, 104, 116, 65, 114, 114, 111, 119, 59, 1, 10234, 105,
          103, 104, 116, 65, 114, 114, 111, 119, 59, 1, 10233, 105, 103, 104,
          116, 4, 2, 65, 84, 1199, 1206, 114, 114, 111, 119, 59, 1, 8658, 101,
          101, 59, 1, 8872, 112, 4, 2, 65, 68, 1218, 1225, 114, 114, 111, 119,
          59, 1, 8657, 111, 119, 110, 65, 114, 114, 111, 119, 59, 1, 8661, 101,
          114, 116, 105, 99, 97, 108, 66, 97, 114, 59, 1, 8741, 110, 4, 6, 65,
          66, 76, 82, 84, 97, 1264, 1292, 1299, 1352, 1391, 1408, 114, 114, 111,
          119, 4, 3, 59, 66, 85, 1276, 1278, 1283, 1, 8595, 97, 114, 59, 1,
          10515, 112, 65, 114, 114, 111, 119, 59, 1, 8693, 114, 101, 118, 101,
          59, 1, 785, 101, 102, 116, 4, 3, 82, 84, 86, 1310, 1323, 1334, 105,
          103, 104, 116, 86, 101, 99, 116, 111, 114, 59, 1, 10576, 101, 101, 86,
          101, 99, 116, 111, 114, 59, 1, 10590, 101, 99, 116, 111, 114, 4, 2,
          59, 66, 1345, 1347, 1, 8637, 97, 114, 59, 1, 10582, 105, 103, 104,
          116, 4, 2, 84, 86, 1362, 1373, 101, 101, 86, 101, 99, 116, 111, 114,
          59, 1, 10591, 101, 99, 116, 111, 114, 4, 2, 59, 66, 1384, 1386, 1,
          8641, 97, 114, 59, 1, 10583, 101, 101, 4, 2, 59, 65, 1399, 1401, 1,
          8868, 114, 114, 111, 119, 59, 1, 8615, 114, 114, 111, 119, 59, 1,
          8659, 4, 2, 99, 116, 1421, 1426, 114, 59, 3, 55349, 56479, 114, 111,
          107, 59, 1, 272, 4, 16, 78, 84, 97, 99, 100, 102, 103, 108, 109, 111,
          112, 113, 115, 116, 117, 120, 1466, 1470, 1478, 1489, 1515, 1520,
          1525, 1536, 1544, 1593, 1609, 1617, 1650, 1664, 1668, 1677, 71, 59, 1,
          330, 72, 5, 208, 1, 59, 1476, 1, 208, 99, 117, 116, 101, 5, 201, 1,
          59, 1487, 1, 201, 4, 3, 97, 105, 121, 1497, 1503, 1512, 114, 111, 110,
          59, 1, 282, 114, 99, 5, 202, 1, 59, 1510, 1, 202, 59, 1, 1069, 111,
          116, 59, 1, 278, 114, 59, 3, 55349, 56584, 114, 97, 118, 101, 5, 200,
          1, 59, 1534, 1, 200, 101, 109, 101, 110, 116, 59, 1, 8712, 4, 2, 97,
          112, 1550, 1555, 99, 114, 59, 1, 274, 116, 121, 4, 2, 83, 86, 1563,
          1576, 109, 97, 108, 108, 83, 113, 117, 97, 114, 101, 59, 1, 9723, 101,
          114, 121, 83, 109, 97, 108, 108, 83, 113, 117, 97, 114, 101, 59, 1,
          9643, 4, 2, 103, 112, 1599, 1604, 111, 110, 59, 1, 280, 102, 59, 3,
          55349, 56636, 115, 105, 108, 111, 110, 59, 1, 917, 117, 4, 2, 97, 105,
          1624, 1640, 108, 4, 2, 59, 84, 1631, 1633, 1, 10869, 105, 108, 100,
          101, 59, 1, 8770, 108, 105, 98, 114, 105, 117, 109, 59, 1, 8652, 4, 2,
          99, 105, 1656, 1660, 114, 59, 1, 8496, 109, 59, 1, 10867, 97, 59, 1,
          919, 109, 108, 5, 203, 1, 59, 1675, 1, 203, 4, 2, 105, 112, 1683,
          1689, 115, 116, 115, 59, 1, 8707, 111, 110, 101, 110, 116, 105, 97,
          108, 69, 59, 1, 8519, 4, 5, 99, 102, 105, 111, 115, 1713, 1717, 1722,
          1762, 1791, 121, 59, 1, 1060, 114, 59, 3, 55349, 56585, 108, 108, 101,
          100, 4, 2, 83, 86, 1732, 1745, 109, 97, 108, 108, 83, 113, 117, 97,
          114, 101, 59, 1, 9724, 101, 114, 121, 83, 109, 97, 108, 108, 83, 113,
          117, 97, 114, 101, 59, 1, 9642, 4, 3, 112, 114, 117, 1770, 1775, 1781,
          102, 59, 3, 55349, 56637, 65, 108, 108, 59, 1, 8704, 114, 105, 101,
          114, 116, 114, 102, 59, 1, 8497, 99, 114, 59, 1, 8497, 4, 12, 74, 84,
          97, 98, 99, 100, 102, 103, 111, 114, 115, 116, 1822, 1827, 1834, 1848,
          1855, 1877, 1882, 1887, 1890, 1896, 1978, 1984, 99, 121, 59, 1, 1027,
          5, 62, 1, 59, 1832, 1, 62, 109, 109, 97, 4, 2, 59, 100, 1843, 1845, 1,
          915, 59, 1, 988, 114, 101, 118, 101, 59, 1, 286, 4, 3, 101, 105, 121,
          1863, 1869, 1874, 100, 105, 108, 59, 1, 290, 114, 99, 59, 1, 284, 59,
          1, 1043, 111, 116, 59, 1, 288, 114, 59, 3, 55349, 56586, 59, 1, 8921,
          112, 102, 59, 3, 55349, 56638, 101, 97, 116, 101, 114, 4, 6, 69, 70,
          71, 76, 83, 84, 1915, 1933, 1944, 1953, 1959, 1971, 113, 117, 97, 108,
          4, 2, 59, 76, 1925, 1927, 1, 8805, 101, 115, 115, 59, 1, 8923, 117,
          108, 108, 69, 113, 117, 97, 108, 59, 1, 8807, 114, 101, 97, 116, 101,
          114, 59, 1, 10914, 101, 115, 115, 59, 1, 8823, 108, 97, 110, 116, 69,
          113, 117, 97, 108, 59, 1, 10878, 105, 108, 100, 101, 59, 1, 8819, 99,
          114, 59, 3, 55349, 56482, 59, 1, 8811, 4, 8, 65, 97, 99, 102, 105,
          111, 115, 117, 2005, 2012, 2026, 2032, 2036, 2049, 2073, 2089, 82, 68,
          99, 121, 59, 1, 1066, 4, 2, 99, 116, 2018, 2023, 101, 107, 59, 1, 711,
          59, 1, 94, 105, 114, 99, 59, 1, 292, 114, 59, 1, 8460, 108, 98, 101,
          114, 116, 83, 112, 97, 99, 101, 59, 1, 8459, 4, 2, 112, 114, 2055,
          2059, 102, 59, 1, 8461, 105, 122, 111, 110, 116, 97, 108, 76, 105,
          110, 101, 59, 1, 9472, 4, 2, 99, 116, 2079, 2083, 114, 59, 1, 8459,
          114, 111, 107, 59, 1, 294, 109, 112, 4, 2, 68, 69, 2097, 2107, 111,
          119, 110, 72, 117, 109, 112, 59, 1, 8782, 113, 117, 97, 108, 59, 1,
          8783, 4, 14, 69, 74, 79, 97, 99, 100, 102, 103, 109, 110, 111, 115,
          116, 117, 2144, 2149, 2155, 2160, 2171, 2189, 2194, 2198, 2209, 2245,
          2307, 2329, 2334, 2341, 99, 121, 59, 1, 1045, 108, 105, 103, 59, 1,
          306, 99, 121, 59, 1, 1025, 99, 117, 116, 101, 5, 205, 1, 59, 2169, 1,
          205, 4, 2, 105, 121, 2177, 2186, 114, 99, 5, 206, 1, 59, 2184, 1, 206,
          59, 1, 1048, 111, 116, 59, 1, 304, 114, 59, 1, 8465, 114, 97, 118,
          101, 5, 204, 1, 59, 2207, 1, 204, 4, 3, 59, 97, 112, 2217, 2219, 2238,
          1, 8465, 4, 2, 99, 103, 2225, 2229, 114, 59, 1, 298, 105, 110, 97,
          114, 121, 73, 59, 1, 8520, 108, 105, 101, 115, 59, 1, 8658, 4, 2, 116,
          118, 2251, 2281, 4, 2, 59, 101, 2257, 2259, 1, 8748, 4, 2, 103, 114,
          2265, 2271, 114, 97, 108, 59, 1, 8747, 115, 101, 99, 116, 105, 111,
          110, 59, 1, 8898, 105, 115, 105, 98, 108, 101, 4, 2, 67, 84, 2293,
          2300, 111, 109, 109, 97, 59, 1, 8291, 105, 109, 101, 115, 59, 1, 8290,
          4, 3, 103, 112, 116, 2315, 2320, 2325, 111, 110, 59, 1, 302, 102, 59,
          3, 55349, 56640, 97, 59, 1, 921, 99, 114, 59, 1, 8464, 105, 108, 100,
          101, 59, 1, 296, 4, 2, 107, 109, 2347, 2352, 99, 121, 59, 1, 1030,
          108, 5, 207, 1, 59, 2358, 1, 207, 4, 5, 99, 102, 111, 115, 117, 2372,
          2386, 2391, 2397, 2414, 4, 2, 105, 121, 2378, 2383, 114, 99, 59, 1,
          308, 59, 1, 1049, 114, 59, 3, 55349, 56589, 112, 102, 59, 3, 55349,
          56641, 4, 2, 99, 101, 2403, 2408, 114, 59, 3, 55349, 56485, 114, 99,
          121, 59, 1, 1032, 107, 99, 121, 59, 1, 1028, 4, 7, 72, 74, 97, 99,
          102, 111, 115, 2436, 2441, 2446, 2452, 2467, 2472, 2478, 99, 121, 59,
          1, 1061, 99, 121, 59, 1, 1036, 112, 112, 97, 59, 1, 922, 4, 2, 101,
          121, 2458, 2464, 100, 105, 108, 59, 1, 310, 59, 1, 1050, 114, 59, 3,
          55349, 56590, 112, 102, 59, 3, 55349, 56642, 99, 114, 59, 3, 55349,
          56486, 4, 11, 74, 84, 97, 99, 101, 102, 108, 109, 111, 115, 116, 2508,
          2513, 2520, 2562, 2585, 2981, 2986, 3004, 3011, 3146, 3167, 99, 121,
          59, 1, 1033, 5, 60, 1, 59, 2518, 1, 60, 4, 5, 99, 109, 110, 112, 114,
          2532, 2538, 2544, 2548, 2558, 117, 116, 101, 59, 1, 313, 98, 100, 97,
          59, 1, 923, 103, 59, 1, 10218, 108, 97, 99, 101, 116, 114, 102, 59, 1,
          8466, 114, 59, 1, 8606, 4, 3, 97, 101, 121, 2570, 2576, 2582, 114,
          111, 110, 59, 1, 317, 100, 105, 108, 59, 1, 315, 59, 1, 1051, 4, 2,
          102, 115, 2591, 2907, 116, 4, 10, 65, 67, 68, 70, 82, 84, 85, 86, 97,
          114, 2614, 2663, 2672, 2728, 2735, 2760, 2820, 2870, 2888, 2895, 4, 2,
          110, 114, 2620, 2633, 103, 108, 101, 66, 114, 97, 99, 107, 101, 116,
          59, 1, 10216, 114, 111, 119, 4, 3, 59, 66, 82, 2644, 2646, 2651, 1,
          8592, 97, 114, 59, 1, 8676, 105, 103, 104, 116, 65, 114, 114, 111,
          119, 59, 1, 8646, 101, 105, 108, 105, 110, 103, 59, 1, 8968, 111, 4,
          2, 117, 119, 2679, 2692, 98, 108, 101, 66, 114, 97, 99, 107, 101, 116,
          59, 1, 10214, 110, 4, 2, 84, 86, 2699, 2710, 101, 101, 86, 101, 99,
          116, 111, 114, 59, 1, 10593, 101, 99, 116, 111, 114, 4, 2, 59, 66,
          2721, 2723, 1, 8643, 97, 114, 59, 1, 10585, 108, 111, 111, 114, 59, 1,
          8970, 105, 103, 104, 116, 4, 2, 65, 86, 2745, 2752, 114, 114, 111,
          119, 59, 1, 8596, 101, 99, 116, 111, 114, 59, 1, 10574, 4, 2, 101,
          114, 2766, 2792, 101, 4, 3, 59, 65, 86, 2775, 2777, 2784, 1, 8867,
          114, 114, 111, 119, 59, 1, 8612, 101, 99, 116, 111, 114, 59, 1, 10586,
          105, 97, 110, 103, 108, 101, 4, 3, 59, 66, 69, 2806, 2808, 2813, 1,
          8882, 97, 114, 59, 1, 10703, 113, 117, 97, 108, 59, 1, 8884, 112, 4,
          3, 68, 84, 86, 2829, 2841, 2852, 111, 119, 110, 86, 101, 99, 116, 111,
          114, 59, 1, 10577, 101, 101, 86, 101, 99, 116, 111, 114, 59, 1, 10592,
          101, 99, 116, 111, 114, 4, 2, 59, 66, 2863, 2865, 1, 8639, 97, 114,
          59, 1, 10584, 101, 99, 116, 111, 114, 4, 2, 59, 66, 2881, 2883, 1,
          8636, 97, 114, 59, 1, 10578, 114, 114, 111, 119, 59, 1, 8656, 105,
          103, 104, 116, 97, 114, 114, 111, 119, 59, 1, 8660, 115, 4, 6, 69, 70,
          71, 76, 83, 84, 2922, 2936, 2947, 2956, 2962, 2974, 113, 117, 97, 108,
          71, 114, 101, 97, 116, 101, 114, 59, 1, 8922, 117, 108, 108, 69, 113,
          117, 97, 108, 59, 1, 8806, 114, 101, 97, 116, 101, 114, 59, 1, 8822,
          101, 115, 115, 59, 1, 10913, 108, 97, 110, 116, 69, 113, 117, 97, 108,
          59, 1, 10877, 105, 108, 100, 101, 59, 1, 8818, 114, 59, 3, 55349,
          56591, 4, 2, 59, 101, 2992, 2994, 1, 8920, 102, 116, 97, 114, 114,
          111, 119, 59, 1, 8666, 105, 100, 111, 116, 59, 1, 319, 4, 3, 110, 112,
          119, 3019, 3110, 3115, 103, 4, 4, 76, 82, 108, 114, 3030, 3058, 3070,
          3098, 101, 102, 116, 4, 2, 65, 82, 3039, 3046, 114, 114, 111, 119, 59,
          1, 10229, 105, 103, 104, 116, 65, 114, 114, 111, 119, 59, 1, 10231,
          105, 103, 104, 116, 65, 114, 114, 111, 119, 59, 1, 10230, 101, 102,
          116, 4, 2, 97, 114, 3079, 3086, 114, 114, 111, 119, 59, 1, 10232, 105,
          103, 104, 116, 97, 114, 114, 111, 119, 59, 1, 10234, 105, 103, 104,
          116, 97, 114, 114, 111, 119, 59, 1, 10233, 102, 59, 3, 55349, 56643,
          101, 114, 4, 2, 76, 82, 3123, 3134, 101, 102, 116, 65, 114, 114, 111,
          119, 59, 1, 8601, 105, 103, 104, 116, 65, 114, 114, 111, 119, 59, 1,
          8600, 4, 3, 99, 104, 116, 3154, 3158, 3161, 114, 59, 1, 8466, 59, 1,
          8624, 114, 111, 107, 59, 1, 321, 59, 1, 8810, 4, 8, 97, 99, 101, 102,
          105, 111, 115, 117, 3188, 3192, 3196, 3222, 3227, 3237, 3243, 3248,
          112, 59, 1, 10501, 121, 59, 1, 1052, 4, 2, 100, 108, 3202, 3213, 105,
          117, 109, 83, 112, 97, 99, 101, 59, 1, 8287, 108, 105, 110, 116, 114,
          102, 59, 1, 8499, 114, 59, 3, 55349, 56592, 110, 117, 115, 80, 108,
          117, 115, 59, 1, 8723, 112, 102, 59, 3, 55349, 56644, 99, 114, 59, 1,
          8499, 59, 1, 924, 4, 9, 74, 97, 99, 101, 102, 111, 115, 116, 117,
          3271, 3276, 3283, 3306, 3422, 3427, 4120, 4126, 4137, 99, 121, 59, 1,
          1034, 99, 117, 116, 101, 59, 1, 323, 4, 3, 97, 101, 121, 3291, 3297,
          3303, 114, 111, 110, 59, 1, 327, 100, 105, 108, 59, 1, 325, 59, 1,
          1053, 4, 3, 103, 115, 119, 3314, 3380, 3415, 97, 116, 105, 118, 101,
          4, 3, 77, 84, 86, 3327, 3340, 3365, 101, 100, 105, 117, 109, 83, 112,
          97, 99, 101, 59, 1, 8203, 104, 105, 4, 2, 99, 110, 3348, 3357, 107,
          83, 112, 97, 99, 101, 59, 1, 8203, 83, 112, 97, 99, 101, 59, 1, 8203,
          101, 114, 121, 84, 104, 105, 110, 83, 112, 97, 99, 101, 59, 1, 8203,
          116, 101, 100, 4, 2, 71, 76, 3389, 3405, 114, 101, 97, 116, 101, 114,
          71, 114, 101, 97, 116, 101, 114, 59, 1, 8811, 101, 115, 115, 76, 101,
          115, 115, 59, 1, 8810, 76, 105, 110, 101, 59, 1, 10, 114, 59, 3,
          55349, 56593, 4, 4, 66, 110, 112, 116, 3437, 3444, 3460, 3464, 114,
          101, 97, 107, 59, 1, 8288, 66, 114, 101, 97, 107, 105, 110, 103, 83,
          112, 97, 99, 101, 59, 1, 160, 102, 59, 1, 8469, 4, 13, 59, 67, 68, 69,
          71, 72, 76, 78, 80, 82, 83, 84, 86, 3492, 3494, 3517, 3536, 3578,
          3657, 3685, 3784, 3823, 3860, 3915, 4066, 4107, 1, 10988, 4, 2, 111,
          117, 3500, 3510, 110, 103, 114, 117, 101, 110, 116, 59, 1, 8802, 112,
          67, 97, 112, 59, 1, 8813, 111, 117, 98, 108, 101, 86, 101, 114, 116,
          105, 99, 97, 108, 66, 97, 114, 59, 1, 8742, 4, 3, 108, 113, 120, 3544,
          3552, 3571, 101, 109, 101, 110, 116, 59, 1, 8713, 117, 97, 108, 4, 2,
          59, 84, 3561, 3563, 1, 8800, 105, 108, 100, 101, 59, 3, 8770, 824,
          105, 115, 116, 115, 59, 1, 8708, 114, 101, 97, 116, 101, 114, 4, 7,
          59, 69, 70, 71, 76, 83, 84, 3600, 3602, 3609, 3621, 3631, 3637, 3650,
          1, 8815, 113, 117, 97, 108, 59, 1, 8817, 117, 108, 108, 69, 113, 117,
          97, 108, 59, 3, 8807, 824, 114, 101, 97, 116, 101, 114, 59, 3, 8811,
          824, 101, 115, 115, 59, 1, 8825, 108, 97, 110, 116, 69, 113, 117, 97,
          108, 59, 3, 10878, 824, 105, 108, 100, 101, 59, 1, 8821, 117, 109,
          112, 4, 2, 68, 69, 3666, 3677, 111, 119, 110, 72, 117, 109, 112, 59,
          3, 8782, 824, 113, 117, 97, 108, 59, 3, 8783, 824, 101, 4, 2, 102,
          115, 3692, 3724, 116, 84, 114, 105, 97, 110, 103, 108, 101, 4, 3, 59,
          66, 69, 3709, 3711, 3717, 1, 8938, 97, 114, 59, 3, 10703, 824, 113,
          117, 97, 108, 59, 1, 8940, 115, 4, 6, 59, 69, 71, 76, 83, 84, 3739,
          3741, 3748, 3757, 3764, 3777, 1, 8814, 113, 117, 97, 108, 59, 1, 8816,
          114, 101, 97, 116, 101, 114, 59, 1, 8824, 101, 115, 115, 59, 3, 8810,
          824, 108, 97, 110, 116, 69, 113, 117, 97, 108, 59, 3, 10877, 824, 105,
          108, 100, 101, 59, 1, 8820, 101, 115, 116, 101, 100, 4, 2, 71, 76,
          3795, 3812, 114, 101, 97, 116, 101, 114, 71, 114, 101, 97, 116, 101,
          114, 59, 3, 10914, 824, 101, 115, 115, 76, 101, 115, 115, 59, 3,
          10913, 824, 114, 101, 99, 101, 100, 101, 115, 4, 3, 59, 69, 83, 3838,
          3840, 3848, 1, 8832, 113, 117, 97, 108, 59, 3, 10927, 824, 108, 97,
          110, 116, 69, 113, 117, 97, 108, 59, 1, 8928, 4, 2, 101, 105, 3866,
          3881, 118, 101, 114, 115, 101, 69, 108, 101, 109, 101, 110, 116, 59,
          1, 8716, 103, 104, 116, 84, 114, 105, 97, 110, 103, 108, 101, 4, 3,
          59, 66, 69, 3900, 3902, 3908, 1, 8939, 97, 114, 59, 3, 10704, 824,
          113, 117, 97, 108, 59, 1, 8941, 4, 2, 113, 117, 3921, 3973, 117, 97,
          114, 101, 83, 117, 4, 2, 98, 112, 3933, 3952, 115, 101, 116, 4, 2, 59,
          69, 3942, 3945, 3, 8847, 824, 113, 117, 97, 108, 59, 1, 8930, 101,
          114, 115, 101, 116, 4, 2, 59, 69, 3963, 3966, 3, 8848, 824, 113, 117,
          97, 108, 59, 1, 8931, 4, 3, 98, 99, 112, 3981, 4e3, 4045, 115, 101,
          116, 4, 2, 59, 69, 3990, 3993, 3, 8834, 8402, 113, 117, 97, 108, 59,
          1, 8840, 99, 101, 101, 100, 115, 4, 4, 59, 69, 83, 84, 4015, 4017,
          4025, 4037, 1, 8833, 113, 117, 97, 108, 59, 3, 10928, 824, 108, 97,
          110, 116, 69, 113, 117, 97, 108, 59, 1, 8929, 105, 108, 100, 101, 59,
          3, 8831, 824, 101, 114, 115, 101, 116, 4, 2, 59, 69, 4056, 4059, 3,
          8835, 8402, 113, 117, 97, 108, 59, 1, 8841, 105, 108, 100, 101, 4, 4,
          59, 69, 70, 84, 4080, 4082, 4089, 4100, 1, 8769, 113, 117, 97, 108,
          59, 1, 8772, 117, 108, 108, 69, 113, 117, 97, 108, 59, 1, 8775, 105,
          108, 100, 101, 59, 1, 8777, 101, 114, 116, 105, 99, 97, 108, 66, 97,
          114, 59, 1, 8740, 99, 114, 59, 3, 55349, 56489, 105, 108, 100, 101, 5,
          209, 1, 59, 4135, 1, 209, 59, 1, 925, 4, 14, 69, 97, 99, 100, 102,
          103, 109, 111, 112, 114, 115, 116, 117, 118, 4170, 4176, 4187, 4205,
          4212, 4217, 4228, 4253, 4259, 4292, 4295, 4316, 4337, 4346, 108, 105,
          103, 59, 1, 338, 99, 117, 116, 101, 5, 211, 1, 59, 4185, 1, 211, 4, 2,
          105, 121, 4193, 4202, 114, 99, 5, 212, 1, 59, 4200, 1, 212, 59, 1,
          1054, 98, 108, 97, 99, 59, 1, 336, 114, 59, 3, 55349, 56594, 114, 97,
          118, 101, 5, 210, 1, 59, 4226, 1, 210, 4, 3, 97, 101, 105, 4236, 4241,
          4246, 99, 114, 59, 1, 332, 103, 97, 59, 1, 937, 99, 114, 111, 110, 59,
          1, 927, 112, 102, 59, 3, 55349, 56646, 101, 110, 67, 117, 114, 108,
          121, 4, 2, 68, 81, 4272, 4285, 111, 117, 98, 108, 101, 81, 117, 111,
          116, 101, 59, 1, 8220, 117, 111, 116, 101, 59, 1, 8216, 59, 1, 10836,
          4, 2, 99, 108, 4301, 4306, 114, 59, 3, 55349, 56490, 97, 115, 104, 5,
          216, 1, 59, 4314, 1, 216, 105, 4, 2, 108, 109, 4323, 4332, 100, 101,
          5, 213, 1, 59, 4330, 1, 213, 101, 115, 59, 1, 10807, 109, 108, 5, 214,
          1, 59, 4344, 1, 214, 101, 114, 4, 2, 66, 80, 4354, 4380, 4, 2, 97,
          114, 4360, 4364, 114, 59, 1, 8254, 97, 99, 4, 2, 101, 107, 4372, 4375,
          59, 1, 9182, 101, 116, 59, 1, 9140, 97, 114, 101, 110, 116, 104, 101,
          115, 105, 115, 59, 1, 9180, 4, 9, 97, 99, 102, 104, 105, 108, 111,
          114, 115, 4413, 4422, 4426, 4431, 4435, 4438, 4448, 4471, 4561, 114,
          116, 105, 97, 108, 68, 59, 1, 8706, 121, 59, 1, 1055, 114, 59, 3,
          55349, 56595, 105, 59, 1, 934, 59, 1, 928, 117, 115, 77, 105, 110,
          117, 115, 59, 1, 177, 4, 2, 105, 112, 4454, 4467, 110, 99, 97, 114,
          101, 112, 108, 97, 110, 101, 59, 1, 8460, 102, 59, 1, 8473, 4, 4, 59,
          101, 105, 111, 4481, 4483, 4526, 4531, 1, 10939, 99, 101, 100, 101,
          115, 4, 4, 59, 69, 83, 84, 4498, 4500, 4507, 4519, 1, 8826, 113, 117,
          97, 108, 59, 1, 10927, 108, 97, 110, 116, 69, 113, 117, 97, 108, 59,
          1, 8828, 105, 108, 100, 101, 59, 1, 8830, 109, 101, 59, 1, 8243, 4, 2,
          100, 112, 4537, 4543, 117, 99, 116, 59, 1, 8719, 111, 114, 116, 105,
          111, 110, 4, 2, 59, 97, 4555, 4557, 1, 8759, 108, 59, 1, 8733, 4, 2,
          99, 105, 4567, 4572, 114, 59, 3, 55349, 56491, 59, 1, 936, 4, 4, 85,
          102, 111, 115, 4585, 4594, 4599, 4604, 79, 84, 5, 34, 1, 59, 4592, 1,
          34, 114, 59, 3, 55349, 56596, 112, 102, 59, 1, 8474, 99, 114, 59, 3,
          55349, 56492, 4, 12, 66, 69, 97, 99, 101, 102, 104, 105, 111, 114,
          115, 117, 4636, 4642, 4650, 4681, 4704, 4763, 4767, 4771, 5047, 5069,
          5081, 5094, 97, 114, 114, 59, 1, 10512, 71, 5, 174, 1, 59, 4648, 1,
          174, 4, 3, 99, 110, 114, 4658, 4664, 4668, 117, 116, 101, 59, 1, 340,
          103, 59, 1, 10219, 114, 4, 2, 59, 116, 4675, 4677, 1, 8608, 108, 59,
          1, 10518, 4, 3, 97, 101, 121, 4689, 4695, 4701, 114, 111, 110, 59, 1,
          344, 100, 105, 108, 59, 1, 342, 59, 1, 1056, 4, 2, 59, 118, 4710,
          4712, 1, 8476, 101, 114, 115, 101, 4, 2, 69, 85, 4722, 4748, 4, 2,
          108, 113, 4728, 4736, 101, 109, 101, 110, 116, 59, 1, 8715, 117, 105,
          108, 105, 98, 114, 105, 117, 109, 59, 1, 8651, 112, 69, 113, 117, 105,
          108, 105, 98, 114, 105, 117, 109, 59, 1, 10607, 114, 59, 1, 8476, 111,
          59, 1, 929, 103, 104, 116, 4, 8, 65, 67, 68, 70, 84, 85, 86, 97, 4792,
          4840, 4849, 4905, 4912, 4972, 5022, 5040, 4, 2, 110, 114, 4798, 4811,
          103, 108, 101, 66, 114, 97, 99, 107, 101, 116, 59, 1, 10217, 114, 111,
          119, 4, 3, 59, 66, 76, 4822, 4824, 4829, 1, 8594, 97, 114, 59, 1,
          8677, 101, 102, 116, 65, 114, 114, 111, 119, 59, 1, 8644, 101, 105,
          108, 105, 110, 103, 59, 1, 8969, 111, 4, 2, 117, 119, 4856, 4869, 98,
          108, 101, 66, 114, 97, 99, 107, 101, 116, 59, 1, 10215, 110, 4, 2, 84,
          86, 4876, 4887, 101, 101, 86, 101, 99, 116, 111, 114, 59, 1, 10589,
          101, 99, 116, 111, 114, 4, 2, 59, 66, 4898, 4900, 1, 8642, 97, 114,
          59, 1, 10581, 108, 111, 111, 114, 59, 1, 8971, 4, 2, 101, 114, 4918,
          4944, 101, 4, 3, 59, 65, 86, 4927, 4929, 4936, 1, 8866, 114, 114, 111,
          119, 59, 1, 8614, 101, 99, 116, 111, 114, 59, 1, 10587, 105, 97, 110,
          103, 108, 101, 4, 3, 59, 66, 69, 4958, 4960, 4965, 1, 8883, 97, 114,
          59, 1, 10704, 113, 117, 97, 108, 59, 1, 8885, 112, 4, 3, 68, 84, 86,
          4981, 4993, 5004, 111, 119, 110, 86, 101, 99, 116, 111, 114, 59, 1,
          10575, 101, 101, 86, 101, 99, 116, 111, 114, 59, 1, 10588, 101, 99,
          116, 111, 114, 4, 2, 59, 66, 5015, 5017, 1, 8638, 97, 114, 59, 1,
          10580, 101, 99, 116, 111, 114, 4, 2, 59, 66, 5033, 5035, 1, 8640, 97,
          114, 59, 1, 10579, 114, 114, 111, 119, 59, 1, 8658, 4, 2, 112, 117,
          5053, 5057, 102, 59, 1, 8477, 110, 100, 73, 109, 112, 108, 105, 101,
          115, 59, 1, 10608, 105, 103, 104, 116, 97, 114, 114, 111, 119, 59, 1,
          8667, 4, 2, 99, 104, 5087, 5091, 114, 59, 1, 8475, 59, 1, 8625, 108,
          101, 68, 101, 108, 97, 121, 101, 100, 59, 1, 10740, 4, 13, 72, 79, 97,
          99, 102, 104, 105, 109, 111, 113, 115, 116, 117, 5134, 5150, 5157,
          5164, 5198, 5203, 5259, 5265, 5277, 5283, 5374, 5380, 5385, 4, 2, 67,
          99, 5140, 5146, 72, 99, 121, 59, 1, 1065, 121, 59, 1, 1064, 70, 84,
          99, 121, 59, 1, 1068, 99, 117, 116, 101, 59, 1, 346, 4, 5, 59, 97,
          101, 105, 121, 5176, 5178, 5184, 5190, 5195, 1, 10940, 114, 111, 110,
          59, 1, 352, 100, 105, 108, 59, 1, 350, 114, 99, 59, 1, 348, 59, 1,
          1057, 114, 59, 3, 55349, 56598, 111, 114, 116, 4, 4, 68, 76, 82, 85,
          5216, 5227, 5238, 5250, 111, 119, 110, 65, 114, 114, 111, 119, 59, 1,
          8595, 101, 102, 116, 65, 114, 114, 111, 119, 59, 1, 8592, 105, 103,
          104, 116, 65, 114, 114, 111, 119, 59, 1, 8594, 112, 65, 114, 114, 111,
          119, 59, 1, 8593, 103, 109, 97, 59, 1, 931, 97, 108, 108, 67, 105,
          114, 99, 108, 101, 59, 1, 8728, 112, 102, 59, 3, 55349, 56650, 4, 2,
          114, 117, 5289, 5293, 116, 59, 1, 8730, 97, 114, 101, 4, 4, 59, 73,
          83, 85, 5306, 5308, 5322, 5367, 1, 9633, 110, 116, 101, 114, 115, 101,
          99, 116, 105, 111, 110, 59, 1, 8851, 117, 4, 2, 98, 112, 5329, 5347,
          115, 101, 116, 4, 2, 59, 69, 5338, 5340, 1, 8847, 113, 117, 97, 108,
          59, 1, 8849, 101, 114, 115, 101, 116, 4, 2, 59, 69, 5358, 5360, 1,
          8848, 113, 117, 97, 108, 59, 1, 8850, 110, 105, 111, 110, 59, 1, 8852,
          99, 114, 59, 3, 55349, 56494, 97, 114, 59, 1, 8902, 4, 4, 98, 99, 109,
          112, 5395, 5420, 5475, 5478, 4, 2, 59, 115, 5401, 5403, 1, 8912, 101,
          116, 4, 2, 59, 69, 5411, 5413, 1, 8912, 113, 117, 97, 108, 59, 1,
          8838, 4, 2, 99, 104, 5426, 5468, 101, 101, 100, 115, 4, 4, 59, 69, 83,
          84, 5440, 5442, 5449, 5461, 1, 8827, 113, 117, 97, 108, 59, 1, 10928,
          108, 97, 110, 116, 69, 113, 117, 97, 108, 59, 1, 8829, 105, 108, 100,
          101, 59, 1, 8831, 84, 104, 97, 116, 59, 1, 8715, 59, 1, 8721, 4, 3,
          59, 101, 115, 5486, 5488, 5507, 1, 8913, 114, 115, 101, 116, 4, 2, 59,
          69, 5498, 5500, 1, 8835, 113, 117, 97, 108, 59, 1, 8839, 101, 116, 59,
          1, 8913, 4, 11, 72, 82, 83, 97, 99, 102, 104, 105, 111, 114, 115,
          5536, 5546, 5552, 5567, 5579, 5602, 5607, 5655, 5695, 5701, 5711, 79,
          82, 78, 5, 222, 1, 59, 5544, 1, 222, 65, 68, 69, 59, 1, 8482, 4, 2,
          72, 99, 5558, 5563, 99, 121, 59, 1, 1035, 121, 59, 1, 1062, 4, 2, 98,
          117, 5573, 5576, 59, 1, 9, 59, 1, 932, 4, 3, 97, 101, 121, 5587, 5593,
          5599, 114, 111, 110, 59, 1, 356, 100, 105, 108, 59, 1, 354, 59, 1,
          1058, 114, 59, 3, 55349, 56599, 4, 2, 101, 105, 5613, 5631, 4, 2, 114,
          116, 5619, 5627, 101, 102, 111, 114, 101, 59, 1, 8756, 97, 59, 1, 920,
          4, 2, 99, 110, 5637, 5647, 107, 83, 112, 97, 99, 101, 59, 3, 8287,
          8202, 83, 112, 97, 99, 101, 59, 1, 8201, 108, 100, 101, 4, 4, 59, 69,
          70, 84, 5668, 5670, 5677, 5688, 1, 8764, 113, 117, 97, 108, 59, 1,
          8771, 117, 108, 108, 69, 113, 117, 97, 108, 59, 1, 8773, 105, 108,
          100, 101, 59, 1, 8776, 112, 102, 59, 3, 55349, 56651, 105, 112, 108,
          101, 68, 111, 116, 59, 1, 8411, 4, 2, 99, 116, 5717, 5722, 114, 59, 3,
          55349, 56495, 114, 111, 107, 59, 1, 358, 4, 14, 97, 98, 99, 100, 102,
          103, 109, 110, 111, 112, 114, 115, 116, 117, 5758, 5789, 5805, 5823,
          5830, 5835, 5846, 5852, 5921, 5937, 6089, 6095, 6101, 6108, 4, 2, 99,
          114, 5764, 5774, 117, 116, 101, 5, 218, 1, 59, 5772, 1, 218, 114, 4,
          2, 59, 111, 5781, 5783, 1, 8607, 99, 105, 114, 59, 1, 10569, 114, 4,
          2, 99, 101, 5796, 5800, 121, 59, 1, 1038, 118, 101, 59, 1, 364, 4, 2,
          105, 121, 5811, 5820, 114, 99, 5, 219, 1, 59, 5818, 1, 219, 59, 1,
          1059, 98, 108, 97, 99, 59, 1, 368, 114, 59, 3, 55349, 56600, 114, 97,
          118, 101, 5, 217, 1, 59, 5844, 1, 217, 97, 99, 114, 59, 1, 362, 4, 2,
          100, 105, 5858, 5905, 101, 114, 4, 2, 66, 80, 5866, 5892, 4, 2, 97,
          114, 5872, 5876, 114, 59, 1, 95, 97, 99, 4, 2, 101, 107, 5884, 5887,
          59, 1, 9183, 101, 116, 59, 1, 9141, 97, 114, 101, 110, 116, 104, 101,
          115, 105, 115, 59, 1, 9181, 111, 110, 4, 2, 59, 80, 5913, 5915, 1,
          8899, 108, 117, 115, 59, 1, 8846, 4, 2, 103, 112, 5927, 5932, 111,
          110, 59, 1, 370, 102, 59, 3, 55349, 56652, 4, 8, 65, 68, 69, 84, 97,
          100, 112, 115, 5955, 5985, 5996, 6009, 6026, 6033, 6044, 6075, 114,
          114, 111, 119, 4, 3, 59, 66, 68, 5967, 5969, 5974, 1, 8593, 97, 114,
          59, 1, 10514, 111, 119, 110, 65, 114, 114, 111, 119, 59, 1, 8645, 111,
          119, 110, 65, 114, 114, 111, 119, 59, 1, 8597, 113, 117, 105, 108,
          105, 98, 114, 105, 117, 109, 59, 1, 10606, 101, 101, 4, 2, 59, 65,
          6017, 6019, 1, 8869, 114, 114, 111, 119, 59, 1, 8613, 114, 114, 111,
          119, 59, 1, 8657, 111, 119, 110, 97, 114, 114, 111, 119, 59, 1, 8661,
          101, 114, 4, 2, 76, 82, 6052, 6063, 101, 102, 116, 65, 114, 114, 111,
          119, 59, 1, 8598, 105, 103, 104, 116, 65, 114, 114, 111, 119, 59, 1,
          8599, 105, 4, 2, 59, 108, 6082, 6084, 1, 978, 111, 110, 59, 1, 933,
          105, 110, 103, 59, 1, 366, 99, 114, 59, 3, 55349, 56496, 105, 108,
          100, 101, 59, 1, 360, 109, 108, 5, 220, 1, 59, 6115, 1, 220, 4, 9, 68,
          98, 99, 100, 101, 102, 111, 115, 118, 6137, 6143, 6148, 6152, 6166,
          6250, 6255, 6261, 6267, 97, 115, 104, 59, 1, 8875, 97, 114, 59, 1,
          10987, 121, 59, 1, 1042, 97, 115, 104, 4, 2, 59, 108, 6161, 6163, 1,
          8873, 59, 1, 10982, 4, 2, 101, 114, 6172, 6175, 59, 1, 8897, 4, 3, 98,
          116, 121, 6183, 6188, 6238, 97, 114, 59, 1, 8214, 4, 2, 59, 105, 6194,
          6196, 1, 8214, 99, 97, 108, 4, 4, 66, 76, 83, 84, 6209, 6214, 6220,
          6231, 97, 114, 59, 1, 8739, 105, 110, 101, 59, 1, 124, 101, 112, 97,
          114, 97, 116, 111, 114, 59, 1, 10072, 105, 108, 100, 101, 59, 1, 8768,
          84, 104, 105, 110, 83, 112, 97, 99, 101, 59, 1, 8202, 114, 59, 3,
          55349, 56601, 112, 102, 59, 3, 55349, 56653, 99, 114, 59, 3, 55349,
          56497, 100, 97, 115, 104, 59, 1, 8874, 4, 5, 99, 101, 102, 111, 115,
          6286, 6292, 6298, 6303, 6309, 105, 114, 99, 59, 1, 372, 100, 103, 101,
          59, 1, 8896, 114, 59, 3, 55349, 56602, 112, 102, 59, 3, 55349, 56654,
          99, 114, 59, 3, 55349, 56498, 4, 4, 102, 105, 111, 115, 6325, 6330,
          6333, 6339, 114, 59, 3, 55349, 56603, 59, 1, 926, 112, 102, 59, 3,
          55349, 56655, 99, 114, 59, 3, 55349, 56499, 4, 9, 65, 73, 85, 97, 99,
          102, 111, 115, 117, 6365, 6370, 6375, 6380, 6391, 6405, 6410, 6416,
          6422, 99, 121, 59, 1, 1071, 99, 121, 59, 1, 1031, 99, 121, 59, 1,
          1070, 99, 117, 116, 101, 5, 221, 1, 59, 6389, 1, 221, 4, 2, 105, 121,
          6397, 6402, 114, 99, 59, 1, 374, 59, 1, 1067, 114, 59, 3, 55349,
          56604, 112, 102, 59, 3, 55349, 56656, 99, 114, 59, 3, 55349, 56500,
          109, 108, 59, 1, 376, 4, 8, 72, 97, 99, 100, 101, 102, 111, 115, 6445,
          6450, 6457, 6472, 6477, 6501, 6505, 6510, 99, 121, 59, 1, 1046, 99,
          117, 116, 101, 59, 1, 377, 4, 2, 97, 121, 6463, 6469, 114, 111, 110,
          59, 1, 381, 59, 1, 1047, 111, 116, 59, 1, 379, 4, 2, 114, 116, 6483,
          6497, 111, 87, 105, 100, 116, 104, 83, 112, 97, 99, 101, 59, 1, 8203,
          97, 59, 1, 918, 114, 59, 1, 8488, 112, 102, 59, 1, 8484, 99, 114, 59,
          3, 55349, 56501, 4, 16, 97, 98, 99, 101, 102, 103, 108, 109, 110, 111,
          112, 114, 115, 116, 117, 119, 6550, 6561, 6568, 6612, 6622, 6634,
          6645, 6672, 6699, 6854, 6870, 6923, 6933, 6963, 6974, 6983, 99, 117,
          116, 101, 5, 225, 1, 59, 6559, 1, 225, 114, 101, 118, 101, 59, 1, 259,
          4, 6, 59, 69, 100, 105, 117, 121, 6582, 6584, 6588, 6591, 6600, 6609,
          1, 8766, 59, 3, 8766, 819, 59, 1, 8767, 114, 99, 5, 226, 1, 59, 6598,
          1, 226, 116, 101, 5, 180, 1, 59, 6607, 1, 180, 59, 1, 1072, 108, 105,
          103, 5, 230, 1, 59, 6620, 1, 230, 4, 2, 59, 114, 6628, 6630, 1, 8289,
          59, 3, 55349, 56606, 114, 97, 118, 101, 5, 224, 1, 59, 6643, 1, 224,
          4, 2, 101, 112, 6651, 6667, 4, 2, 102, 112, 6657, 6663, 115, 121, 109,
          59, 1, 8501, 104, 59, 1, 8501, 104, 97, 59, 1, 945, 4, 2, 97, 112,
          6678, 6692, 4, 2, 99, 108, 6684, 6688, 114, 59, 1, 257, 103, 59, 1,
          10815, 5, 38, 1, 59, 6697, 1, 38, 4, 2, 100, 103, 6705, 6737, 4, 5,
          59, 97, 100, 115, 118, 6717, 6719, 6724, 6727, 6734, 1, 8743, 110,
          100, 59, 1, 10837, 59, 1, 10844, 108, 111, 112, 101, 59, 1, 10840, 59,
          1, 10842, 4, 7, 59, 101, 108, 109, 114, 115, 122, 6753, 6755, 6758,
          6762, 6814, 6835, 6848, 1, 8736, 59, 1, 10660, 101, 59, 1, 8736, 115,
          100, 4, 2, 59, 97, 6770, 6772, 1, 8737, 4, 8, 97, 98, 99, 100, 101,
          102, 103, 104, 6790, 6793, 6796, 6799, 6802, 6805, 6808, 6811, 59, 1,
          10664, 59, 1, 10665, 59, 1, 10666, 59, 1, 10667, 59, 1, 10668, 59, 1,
          10669, 59, 1, 10670, 59, 1, 10671, 116, 4, 2, 59, 118, 6821, 6823, 1,
          8735, 98, 4, 2, 59, 100, 6830, 6832, 1, 8894, 59, 1, 10653, 4, 2, 112,
          116, 6841, 6845, 104, 59, 1, 8738, 59, 1, 197, 97, 114, 114, 59, 1,
          9084, 4, 2, 103, 112, 6860, 6865, 111, 110, 59, 1, 261, 102, 59, 3,
          55349, 56658, 4, 7, 59, 69, 97, 101, 105, 111, 112, 6886, 6888, 6891,
          6897, 6900, 6904, 6908, 1, 8776, 59, 1, 10864, 99, 105, 114, 59, 1,
          10863, 59, 1, 8778, 100, 59, 1, 8779, 115, 59, 1, 39, 114, 111, 120,
          4, 2, 59, 101, 6917, 6919, 1, 8776, 113, 59, 1, 8778, 105, 110, 103,
          5, 229, 1, 59, 6931, 1, 229, 4, 3, 99, 116, 121, 6941, 6946, 6949,
          114, 59, 3, 55349, 56502, 59, 1, 42, 109, 112, 4, 2, 59, 101, 6957,
          6959, 1, 8776, 113, 59, 1, 8781, 105, 108, 100, 101, 5, 227, 1, 59,
          6972, 1, 227, 109, 108, 5, 228, 1, 59, 6981, 1, 228, 4, 2, 99, 105,
          6989, 6997, 111, 110, 105, 110, 116, 59, 1, 8755, 110, 116, 59, 1,
          10769, 4, 16, 78, 97, 98, 99, 100, 101, 102, 105, 107, 108, 110, 111,
          112, 114, 115, 117, 7036, 7041, 7119, 7135, 7149, 7155, 7219, 7224,
          7347, 7354, 7463, 7489, 7786, 7793, 7814, 7866, 111, 116, 59, 1,
          10989, 4, 2, 99, 114, 7047, 7094, 107, 4, 4, 99, 101, 112, 115, 7058,
          7064, 7073, 7080, 111, 110, 103, 59, 1, 8780, 112, 115, 105, 108, 111,
          110, 59, 1, 1014, 114, 105, 109, 101, 59, 1, 8245, 105, 109, 4, 2, 59,
          101, 7088, 7090, 1, 8765, 113, 59, 1, 8909, 4, 2, 118, 119, 7100,
          7105, 101, 101, 59, 1, 8893, 101, 100, 4, 2, 59, 103, 7113, 7115, 1,
          8965, 101, 59, 1, 8965, 114, 107, 4, 2, 59, 116, 7127, 7129, 1, 9141,
          98, 114, 107, 59, 1, 9142, 4, 2, 111, 121, 7141, 7146, 110, 103, 59,
          1, 8780, 59, 1, 1073, 113, 117, 111, 59, 1, 8222, 4, 5, 99, 109, 112,
          114, 116, 7167, 7181, 7188, 7193, 7199, 97, 117, 115, 4, 2, 59, 101,
          7176, 7178, 1, 8757, 59, 1, 8757, 112, 116, 121, 118, 59, 1, 10672,
          115, 105, 59, 1, 1014, 110, 111, 117, 59, 1, 8492, 4, 3, 97, 104, 119,
          7207, 7210, 7213, 59, 1, 946, 59, 1, 8502, 101, 101, 110, 59, 1, 8812,
          114, 59, 3, 55349, 56607, 103, 4, 7, 99, 111, 115, 116, 117, 118, 119,
          7241, 7262, 7288, 7305, 7328, 7335, 7340, 4, 3, 97, 105, 117, 7249,
          7253, 7258, 112, 59, 1, 8898, 114, 99, 59, 1, 9711, 112, 59, 1, 8899,
          4, 3, 100, 112, 116, 7270, 7275, 7281, 111, 116, 59, 1, 10752, 108,
          117, 115, 59, 1, 10753, 105, 109, 101, 115, 59, 1, 10754, 4, 2, 113,
          116, 7294, 7300, 99, 117, 112, 59, 1, 10758, 97, 114, 59, 1, 9733,
          114, 105, 97, 110, 103, 108, 101, 4, 2, 100, 117, 7318, 7324, 111,
          119, 110, 59, 1, 9661, 112, 59, 1, 9651, 112, 108, 117, 115, 59, 1,
          10756, 101, 101, 59, 1, 8897, 101, 100, 103, 101, 59, 1, 8896, 97,
          114, 111, 119, 59, 1, 10509, 4, 3, 97, 107, 111, 7362, 7436, 7458, 4,
          2, 99, 110, 7368, 7432, 107, 4, 3, 108, 115, 116, 7377, 7386, 7394,
          111, 122, 101, 110, 103, 101, 59, 1, 10731, 113, 117, 97, 114, 101,
          59, 1, 9642, 114, 105, 97, 110, 103, 108, 101, 4, 4, 59, 100, 108,
          114, 7411, 7413, 7419, 7425, 1, 9652, 111, 119, 110, 59, 1, 9662, 101,
          102, 116, 59, 1, 9666, 105, 103, 104, 116, 59, 1, 9656, 107, 59, 1,
          9251, 4, 2, 49, 51, 7442, 7454, 4, 2, 50, 52, 7448, 7451, 59, 1, 9618,
          59, 1, 9617, 52, 59, 1, 9619, 99, 107, 59, 1, 9608, 4, 2, 101, 111,
          7469, 7485, 4, 2, 59, 113, 7475, 7478, 3, 61, 8421, 117, 105, 118, 59,
          3, 8801, 8421, 116, 59, 1, 8976, 4, 4, 112, 116, 119, 120, 7499, 7504,
          7517, 7523, 102, 59, 3, 55349, 56659, 4, 2, 59, 116, 7510, 7512, 1,
          8869, 111, 109, 59, 1, 8869, 116, 105, 101, 59, 1, 8904, 4, 12, 68,
          72, 85, 86, 98, 100, 104, 109, 112, 116, 117, 118, 7549, 7571, 7597,
          7619, 7655, 7660, 7682, 7708, 7715, 7721, 7728, 7750, 4, 4, 76, 82,
          108, 114, 7559, 7562, 7565, 7568, 59, 1, 9559, 59, 1, 9556, 59, 1,
          9558, 59, 1, 9555, 4, 5, 59, 68, 85, 100, 117, 7583, 7585, 7588, 7591,
          7594, 1, 9552, 59, 1, 9574, 59, 1, 9577, 59, 1, 9572, 59, 1, 9575, 4,
          4, 76, 82, 108, 114, 7607, 7610, 7613, 7616, 59, 1, 9565, 59, 1, 9562,
          59, 1, 9564, 59, 1, 9561, 4, 7, 59, 72, 76, 82, 104, 108, 114, 7635,
          7637, 7640, 7643, 7646, 7649, 7652, 1, 9553, 59, 1, 9580, 59, 1, 9571,
          59, 1, 9568, 59, 1, 9579, 59, 1, 9570, 59, 1, 9567, 111, 120, 59, 1,
          10697, 4, 4, 76, 82, 108, 114, 7670, 7673, 7676, 7679, 59, 1, 9557,
          59, 1, 9554, 59, 1, 9488, 59, 1, 9484, 4, 5, 59, 68, 85, 100, 117,
          7694, 7696, 7699, 7702, 7705, 1, 9472, 59, 1, 9573, 59, 1, 9576, 59,
          1, 9516, 59, 1, 9524, 105, 110, 117, 115, 59, 1, 8863, 108, 117, 115,
          59, 1, 8862, 105, 109, 101, 115, 59, 1, 8864, 4, 4, 76, 82, 108, 114,
          7738, 7741, 7744, 7747, 59, 1, 9563, 59, 1, 9560, 59, 1, 9496, 59, 1,
          9492, 4, 7, 59, 72, 76, 82, 104, 108, 114, 7766, 7768, 7771, 7774,
          7777, 7780, 7783, 1, 9474, 59, 1, 9578, 59, 1, 9569, 59, 1, 9566, 59,
          1, 9532, 59, 1, 9508, 59, 1, 9500, 114, 105, 109, 101, 59, 1, 8245, 4,
          2, 101, 118, 7799, 7804, 118, 101, 59, 1, 728, 98, 97, 114, 5, 166, 1,
          59, 7812, 1, 166, 4, 4, 99, 101, 105, 111, 7824, 7829, 7834, 7846,
          114, 59, 3, 55349, 56503, 109, 105, 59, 1, 8271, 109, 4, 2, 59, 101,
          7841, 7843, 1, 8765, 59, 1, 8909, 108, 4, 3, 59, 98, 104, 7855, 7857,
          7860, 1, 92, 59, 1, 10693, 115, 117, 98, 59, 1, 10184, 4, 2, 108, 109,
          7872, 7885, 108, 4, 2, 59, 101, 7879, 7881, 1, 8226, 116, 59, 1, 8226,
          112, 4, 3, 59, 69, 101, 7894, 7896, 7899, 1, 8782, 59, 1, 10926, 4, 2,
          59, 113, 7905, 7907, 1, 8783, 59, 1, 8783, 4, 15, 97, 99, 100, 101,
          102, 104, 105, 108, 111, 114, 115, 116, 117, 119, 121, 7942, 8021,
          8075, 8080, 8121, 8126, 8157, 8279, 8295, 8430, 8446, 8485, 8491,
          8707, 8726, 4, 3, 99, 112, 114, 7950, 7956, 8007, 117, 116, 101, 59,
          1, 263, 4, 6, 59, 97, 98, 99, 100, 115, 7970, 7972, 7977, 7984, 7998,
          8003, 1, 8745, 110, 100, 59, 1, 10820, 114, 99, 117, 112, 59, 1,
          10825, 4, 2, 97, 117, 7990, 7994, 112, 59, 1, 10827, 112, 59, 1,
          10823, 111, 116, 59, 1, 10816, 59, 3, 8745, 65024, 4, 2, 101, 111,
          8013, 8017, 116, 59, 1, 8257, 110, 59, 1, 711, 4, 4, 97, 101, 105,
          117, 8031, 8046, 8056, 8061, 4, 2, 112, 114, 8037, 8041, 115, 59, 1,
          10829, 111, 110, 59, 1, 269, 100, 105, 108, 5, 231, 1, 59, 8054, 1,
          231, 114, 99, 59, 1, 265, 112, 115, 4, 2, 59, 115, 8069, 8071, 1,
          10828, 109, 59, 1, 10832, 111, 116, 59, 1, 267, 4, 3, 100, 109, 110,
          8088, 8097, 8104, 105, 108, 5, 184, 1, 59, 8095, 1, 184, 112, 116,
          121, 118, 59, 1, 10674, 116, 5, 162, 2, 59, 101, 8112, 8114, 1, 162,
          114, 100, 111, 116, 59, 1, 183, 114, 59, 3, 55349, 56608, 4, 3, 99,
          101, 105, 8134, 8138, 8154, 121, 59, 1, 1095, 99, 107, 4, 2, 59, 109,
          8146, 8148, 1, 10003, 97, 114, 107, 59, 1, 10003, 59, 1, 967, 114, 4,
          7, 59, 69, 99, 101, 102, 109, 115, 8174, 8176, 8179, 8258, 8261, 8268,
          8273, 1, 9675, 59, 1, 10691, 4, 3, 59, 101, 108, 8187, 8189, 8193, 1,
          710, 113, 59, 1, 8791, 101, 4, 2, 97, 100, 8200, 8223, 114, 114, 111,
          119, 4, 2, 108, 114, 8210, 8216, 101, 102, 116, 59, 1, 8634, 105, 103,
          104, 116, 59, 1, 8635, 4, 5, 82, 83, 97, 99, 100, 8235, 8238, 8241,
          8246, 8252, 59, 1, 174, 59, 1, 9416, 115, 116, 59, 1, 8859, 105, 114,
          99, 59, 1, 8858, 97, 115, 104, 59, 1, 8861, 59, 1, 8791, 110, 105,
          110, 116, 59, 1, 10768, 105, 100, 59, 1, 10991, 99, 105, 114, 59, 1,
          10690, 117, 98, 115, 4, 2, 59, 117, 8288, 8290, 1, 9827, 105, 116, 59,
          1, 9827, 4, 4, 108, 109, 110, 112, 8305, 8326, 8376, 8400, 111, 110,
          4, 2, 59, 101, 8313, 8315, 1, 58, 4, 2, 59, 113, 8321, 8323, 1, 8788,
          59, 1, 8788, 4, 2, 109, 112, 8332, 8344, 97, 4, 2, 59, 116, 8339,
          8341, 1, 44, 59, 1, 64, 4, 3, 59, 102, 108, 8352, 8354, 8358, 1, 8705,
          110, 59, 1, 8728, 101, 4, 2, 109, 120, 8365, 8371, 101, 110, 116, 59,
          1, 8705, 101, 115, 59, 1, 8450, 4, 2, 103, 105, 8382, 8395, 4, 2, 59,
          100, 8388, 8390, 1, 8773, 111, 116, 59, 1, 10861, 110, 116, 59, 1,
          8750, 4, 3, 102, 114, 121, 8408, 8412, 8417, 59, 3, 55349, 56660, 111,
          100, 59, 1, 8720, 5, 169, 2, 59, 115, 8424, 8426, 1, 169, 114, 59, 1,
          8471, 4, 2, 97, 111, 8436, 8441, 114, 114, 59, 1, 8629, 115, 115, 59,
          1, 10007, 4, 2, 99, 117, 8452, 8457, 114, 59, 3, 55349, 56504, 4, 2,
          98, 112, 8463, 8474, 4, 2, 59, 101, 8469, 8471, 1, 10959, 59, 1,
          10961, 4, 2, 59, 101, 8480, 8482, 1, 10960, 59, 1, 10962, 100, 111,
          116, 59, 1, 8943, 4, 7, 100, 101, 108, 112, 114, 118, 119, 8507, 8522,
          8536, 8550, 8600, 8697, 8702, 97, 114, 114, 4, 2, 108, 114, 8516,
          8519, 59, 1, 10552, 59, 1, 10549, 4, 2, 112, 115, 8528, 8532, 114, 59,
          1, 8926, 99, 59, 1, 8927, 97, 114, 114, 4, 2, 59, 112, 8545, 8547, 1,
          8630, 59, 1, 10557, 4, 6, 59, 98, 99, 100, 111, 115, 8564, 8566, 8573,
          8587, 8592, 8596, 1, 8746, 114, 99, 97, 112, 59, 1, 10824, 4, 2, 97,
          117, 8579, 8583, 112, 59, 1, 10822, 112, 59, 1, 10826, 111, 116, 59,
          1, 8845, 114, 59, 1, 10821, 59, 3, 8746, 65024, 4, 4, 97, 108, 114,
          118, 8610, 8623, 8663, 8672, 114, 114, 4, 2, 59, 109, 8618, 8620, 1,
          8631, 59, 1, 10556, 121, 4, 3, 101, 118, 119, 8632, 8651, 8656, 113,
          4, 2, 112, 115, 8639, 8645, 114, 101, 99, 59, 1, 8926, 117, 99, 99,
          59, 1, 8927, 101, 101, 59, 1, 8910, 101, 100, 103, 101, 59, 1, 8911,
          101, 110, 5, 164, 1, 59, 8670, 1, 164, 101, 97, 114, 114, 111, 119, 4,
          2, 108, 114, 8684, 8690, 101, 102, 116, 59, 1, 8630, 105, 103, 104,
          116, 59, 1, 8631, 101, 101, 59, 1, 8910, 101, 100, 59, 1, 8911, 4, 2,
          99, 105, 8713, 8721, 111, 110, 105, 110, 116, 59, 1, 8754, 110, 116,
          59, 1, 8753, 108, 99, 116, 121, 59, 1, 9005, 4, 19, 65, 72, 97, 98,
          99, 100, 101, 102, 104, 105, 106, 108, 111, 114, 115, 116, 117, 119,
          122, 8773, 8778, 8783, 8821, 8839, 8854, 8887, 8914, 8930, 8944, 9036,
          9041, 9058, 9197, 9227, 9258, 9281, 9297, 9305, 114, 114, 59, 1, 8659,
          97, 114, 59, 1, 10597, 4, 4, 103, 108, 114, 115, 8793, 8799, 8805,
          8809, 103, 101, 114, 59, 1, 8224, 101, 116, 104, 59, 1, 8504, 114, 59,
          1, 8595, 104, 4, 2, 59, 118, 8816, 8818, 1, 8208, 59, 1, 8867, 4, 2,
          107, 108, 8827, 8834, 97, 114, 111, 119, 59, 1, 10511, 97, 99, 59, 1,
          733, 4, 2, 97, 121, 8845, 8851, 114, 111, 110, 59, 1, 271, 59, 1,
          1076, 4, 3, 59, 97, 111, 8862, 8864, 8880, 1, 8518, 4, 2, 103, 114,
          8870, 8876, 103, 101, 114, 59, 1, 8225, 114, 59, 1, 8650, 116, 115,
          101, 113, 59, 1, 10871, 4, 3, 103, 108, 109, 8895, 8902, 8907, 5, 176,
          1, 59, 8900, 1, 176, 116, 97, 59, 1, 948, 112, 116, 121, 118, 59, 1,
          10673, 4, 2, 105, 114, 8920, 8926, 115, 104, 116, 59, 1, 10623, 59, 3,
          55349, 56609, 97, 114, 4, 2, 108, 114, 8938, 8941, 59, 1, 8643, 59, 1,
          8642, 4, 5, 97, 101, 103, 115, 118, 8956, 8986, 8989, 8996, 9001, 109,
          4, 3, 59, 111, 115, 8965, 8967, 8983, 1, 8900, 110, 100, 4, 2, 59,
          115, 8975, 8977, 1, 8900, 117, 105, 116, 59, 1, 9830, 59, 1, 9830, 59,
          1, 168, 97, 109, 109, 97, 59, 1, 989, 105, 110, 59, 1, 8946, 4, 3, 59,
          105, 111, 9009, 9011, 9031, 1, 247, 100, 101, 5, 247, 2, 59, 111,
          9020, 9022, 1, 247, 110, 116, 105, 109, 101, 115, 59, 1, 8903, 110,
          120, 59, 1, 8903, 99, 121, 59, 1, 1106, 99, 4, 2, 111, 114, 9048,
          9053, 114, 110, 59, 1, 8990, 111, 112, 59, 1, 8973, 4, 5, 108, 112,
          116, 117, 119, 9070, 9076, 9081, 9130, 9144, 108, 97, 114, 59, 1, 36,
          102, 59, 3, 55349, 56661, 4, 5, 59, 101, 109, 112, 115, 9093, 9095,
          9109, 9116, 9122, 1, 729, 113, 4, 2, 59, 100, 9102, 9104, 1, 8784,
          111, 116, 59, 1, 8785, 105, 110, 117, 115, 59, 1, 8760, 108, 117, 115,
          59, 1, 8724, 113, 117, 97, 114, 101, 59, 1, 8865, 98, 108, 101, 98,
          97, 114, 119, 101, 100, 103, 101, 59, 1, 8966, 110, 4, 3, 97, 100,
          104, 9153, 9160, 9172, 114, 114, 111, 119, 59, 1, 8595, 111, 119, 110,
          97, 114, 114, 111, 119, 115, 59, 1, 8650, 97, 114, 112, 111, 111, 110,
          4, 2, 108, 114, 9184, 9190, 101, 102, 116, 59, 1, 8643, 105, 103, 104,
          116, 59, 1, 8642, 4, 2, 98, 99, 9203, 9211, 107, 97, 114, 111, 119,
          59, 1, 10512, 4, 2, 111, 114, 9217, 9222, 114, 110, 59, 1, 8991, 111,
          112, 59, 1, 8972, 4, 3, 99, 111, 116, 9235, 9248, 9252, 4, 2, 114,
          121, 9241, 9245, 59, 3, 55349, 56505, 59, 1, 1109, 108, 59, 1, 10742,
          114, 111, 107, 59, 1, 273, 4, 2, 100, 114, 9264, 9269, 111, 116, 59,
          1, 8945, 105, 4, 2, 59, 102, 9276, 9278, 1, 9663, 59, 1, 9662, 4, 2,
          97, 104, 9287, 9292, 114, 114, 59, 1, 8693, 97, 114, 59, 1, 10607, 97,
          110, 103, 108, 101, 59, 1, 10662, 4, 2, 99, 105, 9311, 9315, 121, 59,
          1, 1119, 103, 114, 97, 114, 114, 59, 1, 10239, 4, 18, 68, 97, 99, 100,
          101, 102, 103, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120,
          9361, 9376, 9398, 9439, 9444, 9447, 9462, 9495, 9531, 9585, 9598,
          9614, 9659, 9755, 9771, 9792, 9808, 9826, 4, 2, 68, 111, 9367, 9372,
          111, 116, 59, 1, 10871, 116, 59, 1, 8785, 4, 2, 99, 115, 9382, 9392,
          117, 116, 101, 5, 233, 1, 59, 9390, 1, 233, 116, 101, 114, 59, 1,
          10862, 4, 4, 97, 105, 111, 121, 9408, 9414, 9430, 9436, 114, 111, 110,
          59, 1, 283, 114, 4, 2, 59, 99, 9421, 9423, 1, 8790, 5, 234, 1, 59,
          9428, 1, 234, 108, 111, 110, 59, 1, 8789, 59, 1, 1101, 111, 116, 59,
          1, 279, 59, 1, 8519, 4, 2, 68, 114, 9453, 9458, 111, 116, 59, 1, 8786,
          59, 3, 55349, 56610, 4, 3, 59, 114, 115, 9470, 9472, 9482, 1, 10906,
          97, 118, 101, 5, 232, 1, 59, 9480, 1, 232, 4, 2, 59, 100, 9488, 9490,
          1, 10902, 111, 116, 59, 1, 10904, 4, 4, 59, 105, 108, 115, 9505, 9507,
          9515, 9518, 1, 10905, 110, 116, 101, 114, 115, 59, 1, 9191, 59, 1,
          8467, 4, 2, 59, 100, 9524, 9526, 1, 10901, 111, 116, 59, 1, 10903, 4,
          3, 97, 112, 115, 9539, 9544, 9564, 99, 114, 59, 1, 275, 116, 121, 4,
          3, 59, 115, 118, 9554, 9556, 9561, 1, 8709, 101, 116, 59, 1, 8709, 59,
          1, 8709, 112, 4, 2, 49, 59, 9571, 9583, 4, 2, 51, 52, 9577, 9580, 59,
          1, 8196, 59, 1, 8197, 1, 8195, 4, 2, 103, 115, 9591, 9594, 59, 1, 331,
          112, 59, 1, 8194, 4, 2, 103, 112, 9604, 9609, 111, 110, 59, 1, 281,
          102, 59, 3, 55349, 56662, 4, 3, 97, 108, 115, 9622, 9635, 9640, 114,
          4, 2, 59, 115, 9629, 9631, 1, 8917, 108, 59, 1, 10723, 117, 115, 59,
          1, 10865, 105, 4, 3, 59, 108, 118, 9649, 9651, 9656, 1, 949, 111, 110,
          59, 1, 949, 59, 1, 1013, 4, 4, 99, 115, 117, 118, 9669, 9686, 9716,
          9747, 4, 2, 105, 111, 9675, 9680, 114, 99, 59, 1, 8790, 108, 111, 110,
          59, 1, 8789, 4, 2, 105, 108, 9692, 9696, 109, 59, 1, 8770, 97, 110,
          116, 4, 2, 103, 108, 9705, 9710, 116, 114, 59, 1, 10902, 101, 115,
          115, 59, 1, 10901, 4, 3, 97, 101, 105, 9724, 9729, 9734, 108, 115, 59,
          1, 61, 115, 116, 59, 1, 8799, 118, 4, 2, 59, 68, 9741, 9743, 1, 8801,
          68, 59, 1, 10872, 112, 97, 114, 115, 108, 59, 1, 10725, 4, 2, 68, 97,
          9761, 9766, 111, 116, 59, 1, 8787, 114, 114, 59, 1, 10609, 4, 3, 99,
          100, 105, 9779, 9783, 9788, 114, 59, 1, 8495, 111, 116, 59, 1, 8784,
          109, 59, 1, 8770, 4, 2, 97, 104, 9798, 9801, 59, 1, 951, 5, 240, 1,
          59, 9806, 1, 240, 4, 2, 109, 114, 9814, 9822, 108, 5, 235, 1, 59,
          9820, 1, 235, 111, 59, 1, 8364, 4, 3, 99, 105, 112, 9834, 9838, 9843,
          108, 59, 1, 33, 115, 116, 59, 1, 8707, 4, 2, 101, 111, 9849, 9859, 99,
          116, 97, 116, 105, 111, 110, 59, 1, 8496, 110, 101, 110, 116, 105, 97,
          108, 101, 59, 1, 8519, 4, 12, 97, 99, 101, 102, 105, 106, 108, 110,
          111, 112, 114, 115, 9896, 9910, 9914, 9921, 9954, 9960, 9967, 9989,
          9994, 10027, 10036, 10164, 108, 108, 105, 110, 103, 100, 111, 116,
          115, 101, 113, 59, 1, 8786, 121, 59, 1, 1092, 109, 97, 108, 101, 59,
          1, 9792, 4, 3, 105, 108, 114, 9929, 9935, 9950, 108, 105, 103, 59, 1,
          64259, 4, 2, 105, 108, 9941, 9945, 103, 59, 1, 64256, 105, 103, 59, 1,
          64260, 59, 3, 55349, 56611, 108, 105, 103, 59, 1, 64257, 108, 105,
          103, 59, 3, 102, 106, 4, 3, 97, 108, 116, 9975, 9979, 9984, 116, 59,
          1, 9837, 105, 103, 59, 1, 64258, 110, 115, 59, 1, 9649, 111, 102, 59,
          1, 402, 4, 2, 112, 114, 1e4, 10005, 102, 59, 3, 55349, 56663, 4, 2,
          97, 107, 10011, 10016, 108, 108, 59, 1, 8704, 4, 2, 59, 118, 10022,
          10024, 1, 8916, 59, 1, 10969, 97, 114, 116, 105, 110, 116, 59, 1,
          10765, 4, 2, 97, 111, 10042, 10159, 4, 2, 99, 115, 10048, 10155, 4, 6,
          49, 50, 51, 52, 53, 55, 10062, 10102, 10114, 10135, 10139, 10151, 4,
          6, 50, 51, 52, 53, 54, 56, 10076, 10083, 10086, 10093, 10096, 10099,
          5, 189, 1, 59, 10081, 1, 189, 59, 1, 8531, 5, 188, 1, 59, 10091, 1,
          188, 59, 1, 8533, 59, 1, 8537, 59, 1, 8539, 4, 2, 51, 53, 10108,
          10111, 59, 1, 8532, 59, 1, 8534, 4, 3, 52, 53, 56, 10122, 10129,
          10132, 5, 190, 1, 59, 10127, 1, 190, 59, 1, 8535, 59, 1, 8540, 53, 59,
          1, 8536, 4, 2, 54, 56, 10145, 10148, 59, 1, 8538, 59, 1, 8541, 56, 59,
          1, 8542, 108, 59, 1, 8260, 119, 110, 59, 1, 8994, 99, 114, 59, 3,
          55349, 56507, 4, 17, 69, 97, 98, 99, 100, 101, 102, 103, 105, 106,
          108, 110, 111, 114, 115, 116, 118, 10206, 10217, 10247, 10254, 10268,
          10273, 10358, 10363, 10374, 10380, 10385, 10406, 10458, 10464, 10470,
          10497, 10610, 4, 2, 59, 108, 10212, 10214, 1, 8807, 59, 1, 10892, 4,
          3, 99, 109, 112, 10225, 10231, 10244, 117, 116, 101, 59, 1, 501, 109,
          97, 4, 2, 59, 100, 10239, 10241, 1, 947, 59, 1, 989, 59, 1, 10886,
          114, 101, 118, 101, 59, 1, 287, 4, 2, 105, 121, 10260, 10265, 114, 99,
          59, 1, 285, 59, 1, 1075, 111, 116, 59, 1, 289, 4, 4, 59, 108, 113,
          115, 10283, 10285, 10288, 10308, 1, 8805, 59, 1, 8923, 4, 3, 59, 113,
          115, 10296, 10298, 10301, 1, 8805, 59, 1, 8807, 108, 97, 110, 116, 59,
          1, 10878, 4, 4, 59, 99, 100, 108, 10318, 10320, 10324, 10345, 1,
          10878, 99, 59, 1, 10921, 111, 116, 4, 2, 59, 111, 10332, 10334, 1,
          10880, 4, 2, 59, 108, 10340, 10342, 1, 10882, 59, 1, 10884, 4, 2, 59,
          101, 10351, 10354, 3, 8923, 65024, 115, 59, 1, 10900, 114, 59, 3,
          55349, 56612, 4, 2, 59, 103, 10369, 10371, 1, 8811, 59, 1, 8921, 109,
          101, 108, 59, 1, 8503, 99, 121, 59, 1, 1107, 4, 4, 59, 69, 97, 106,
          10395, 10397, 10400, 10403, 1, 8823, 59, 1, 10898, 59, 1, 10917, 59,
          1, 10916, 4, 4, 69, 97, 101, 115, 10416, 10419, 10434, 10453, 59, 1,
          8809, 112, 4, 2, 59, 112, 10426, 10428, 1, 10890, 114, 111, 120, 59,
          1, 10890, 4, 2, 59, 113, 10440, 10442, 1, 10888, 4, 2, 59, 113, 10448,
          10450, 1, 10888, 59, 1, 8809, 105, 109, 59, 1, 8935, 112, 102, 59, 3,
          55349, 56664, 97, 118, 101, 59, 1, 96, 4, 2, 99, 105, 10476, 10480,
          114, 59, 1, 8458, 109, 4, 3, 59, 101, 108, 10489, 10491, 10494, 1,
          8819, 59, 1, 10894, 59, 1, 10896, 5, 62, 6, 59, 99, 100, 108, 113,
          114, 10512, 10514, 10527, 10532, 10538, 10545, 1, 62, 4, 2, 99, 105,
          10520, 10523, 59, 1, 10919, 114, 59, 1, 10874, 111, 116, 59, 1, 8919,
          80, 97, 114, 59, 1, 10645, 117, 101, 115, 116, 59, 1, 10876, 4, 5, 97,
          100, 101, 108, 115, 10557, 10574, 10579, 10599, 10605, 4, 2, 112, 114,
          10563, 10570, 112, 114, 111, 120, 59, 1, 10886, 114, 59, 1, 10616,
          111, 116, 59, 1, 8919, 113, 4, 2, 108, 113, 10586, 10592, 101, 115,
          115, 59, 1, 8923, 108, 101, 115, 115, 59, 1, 10892, 101, 115, 115, 59,
          1, 8823, 105, 109, 59, 1, 8819, 4, 2, 101, 110, 10616, 10626, 114,
          116, 110, 101, 113, 113, 59, 3, 8809, 65024, 69, 59, 3, 8809, 65024,
          4, 10, 65, 97, 98, 99, 101, 102, 107, 111, 115, 121, 10653, 10658,
          10713, 10718, 10724, 10760, 10765, 10786, 10850, 10875, 114, 114, 59,
          1, 8660, 4, 4, 105, 108, 109, 114, 10668, 10674, 10678, 10684, 114,
          115, 112, 59, 1, 8202, 102, 59, 1, 189, 105, 108, 116, 59, 1, 8459, 4,
          2, 100, 114, 10690, 10695, 99, 121, 59, 1, 1098, 4, 3, 59, 99, 119,
          10703, 10705, 10710, 1, 8596, 105, 114, 59, 1, 10568, 59, 1, 8621, 97,
          114, 59, 1, 8463, 105, 114, 99, 59, 1, 293, 4, 3, 97, 108, 114, 10732,
          10748, 10754, 114, 116, 115, 4, 2, 59, 117, 10741, 10743, 1, 9829,
          105, 116, 59, 1, 9829, 108, 105, 112, 59, 1, 8230, 99, 111, 110, 59,
          1, 8889, 114, 59, 3, 55349, 56613, 115, 4, 2, 101, 119, 10772, 10779,
          97, 114, 111, 119, 59, 1, 10533, 97, 114, 111, 119, 59, 1, 10534, 4,
          5, 97, 109, 111, 112, 114, 10798, 10803, 10809, 10839, 10844, 114,
          114, 59, 1, 8703, 116, 104, 116, 59, 1, 8763, 107, 4, 2, 108, 114,
          10816, 10827, 101, 102, 116, 97, 114, 114, 111, 119, 59, 1, 8617, 105,
          103, 104, 116, 97, 114, 114, 111, 119, 59, 1, 8618, 102, 59, 3, 55349,
          56665, 98, 97, 114, 59, 1, 8213, 4, 3, 99, 108, 116, 10858, 10863,
          10869, 114, 59, 3, 55349, 56509, 97, 115, 104, 59, 1, 8463, 114, 111,
          107, 59, 1, 295, 4, 2, 98, 112, 10881, 10887, 117, 108, 108, 59, 1,
          8259, 104, 101, 110, 59, 1, 8208, 4, 15, 97, 99, 101, 102, 103, 105,
          106, 109, 110, 111, 112, 113, 115, 116, 117, 10925, 10936, 10958,
          10977, 10990, 11001, 11039, 11045, 11101, 11192, 11220, 11226, 11237,
          11285, 11299, 99, 117, 116, 101, 5, 237, 1, 59, 10934, 1, 237, 4, 3,
          59, 105, 121, 10944, 10946, 10955, 1, 8291, 114, 99, 5, 238, 1, 59,
          10953, 1, 238, 59, 1, 1080, 4, 2, 99, 120, 10964, 10968, 121, 59, 1,
          1077, 99, 108, 5, 161, 1, 59, 10975, 1, 161, 4, 2, 102, 114, 10983,
          10986, 59, 1, 8660, 59, 3, 55349, 56614, 114, 97, 118, 101, 5, 236, 1,
          59, 10999, 1, 236, 4, 4, 59, 105, 110, 111, 11011, 11013, 11028,
          11034, 1, 8520, 4, 2, 105, 110, 11019, 11024, 110, 116, 59, 1, 10764,
          116, 59, 1, 8749, 102, 105, 110, 59, 1, 10716, 116, 97, 59, 1, 8489,
          108, 105, 103, 59, 1, 307, 4, 3, 97, 111, 112, 11053, 11092, 11096, 4,
          3, 99, 103, 116, 11061, 11065, 11088, 114, 59, 1, 299, 4, 3, 101, 108,
          112, 11073, 11076, 11082, 59, 1, 8465, 105, 110, 101, 59, 1, 8464, 97,
          114, 116, 59, 1, 8465, 104, 59, 1, 305, 102, 59, 1, 8887, 101, 100,
          59, 1, 437, 4, 5, 59, 99, 102, 111, 116, 11113, 11115, 11121, 11136,
          11142, 1, 8712, 97, 114, 101, 59, 1, 8453, 105, 110, 4, 2, 59, 116,
          11129, 11131, 1, 8734, 105, 101, 59, 1, 10717, 100, 111, 116, 59, 1,
          305, 4, 5, 59, 99, 101, 108, 112, 11154, 11156, 11161, 11179, 11186,
          1, 8747, 97, 108, 59, 1, 8890, 4, 2, 103, 114, 11167, 11173, 101, 114,
          115, 59, 1, 8484, 99, 97, 108, 59, 1, 8890, 97, 114, 104, 107, 59, 1,
          10775, 114, 111, 100, 59, 1, 10812, 4, 4, 99, 103, 112, 116, 11202,
          11206, 11211, 11216, 121, 59, 1, 1105, 111, 110, 59, 1, 303, 102, 59,
          3, 55349, 56666, 97, 59, 1, 953, 114, 111, 100, 59, 1, 10812, 117,
          101, 115, 116, 5, 191, 1, 59, 11235, 1, 191, 4, 2, 99, 105, 11243,
          11248, 114, 59, 3, 55349, 56510, 110, 4, 5, 59, 69, 100, 115, 118,
          11261, 11263, 11266, 11271, 11282, 1, 8712, 59, 1, 8953, 111, 116, 59,
          1, 8949, 4, 2, 59, 118, 11277, 11279, 1, 8948, 59, 1, 8947, 59, 1,
          8712, 4, 2, 59, 105, 11291, 11293, 1, 8290, 108, 100, 101, 59, 1, 297,
          4, 2, 107, 109, 11305, 11310, 99, 121, 59, 1, 1110, 108, 5, 239, 1,
          59, 11316, 1, 239, 4, 6, 99, 102, 109, 111, 115, 117, 11332, 11346,
          11351, 11357, 11363, 11380, 4, 2, 105, 121, 11338, 11343, 114, 99, 59,
          1, 309, 59, 1, 1081, 114, 59, 3, 55349, 56615, 97, 116, 104, 59, 1,
          567, 112, 102, 59, 3, 55349, 56667, 4, 2, 99, 101, 11369, 11374, 114,
          59, 3, 55349, 56511, 114, 99, 121, 59, 1, 1112, 107, 99, 121, 59, 1,
          1108, 4, 8, 97, 99, 102, 103, 104, 106, 111, 115, 11404, 11418, 11433,
          11438, 11445, 11450, 11455, 11461, 112, 112, 97, 4, 2, 59, 118, 11413,
          11415, 1, 954, 59, 1, 1008, 4, 2, 101, 121, 11424, 11430, 100, 105,
          108, 59, 1, 311, 59, 1, 1082, 114, 59, 3, 55349, 56616, 114, 101, 101,
          110, 59, 1, 312, 99, 121, 59, 1, 1093, 99, 121, 59, 1, 1116, 112, 102,
          59, 3, 55349, 56668, 99, 114, 59, 3, 55349, 56512, 4, 23, 65, 66, 69,
          72, 97, 98, 99, 100, 101, 102, 103, 104, 106, 108, 109, 110, 111, 112,
          114, 115, 116, 117, 118, 11515, 11538, 11544, 11555, 11560, 11721,
          11780, 11818, 11868, 12136, 12160, 12171, 12203, 12208, 12246, 12275,
          12327, 12509, 12523, 12569, 12641, 12732, 12752, 4, 3, 97, 114, 116,
          11523, 11528, 11532, 114, 114, 59, 1, 8666, 114, 59, 1, 8656, 97, 105,
          108, 59, 1, 10523, 97, 114, 114, 59, 1, 10510, 4, 2, 59, 103, 11550,
          11552, 1, 8806, 59, 1, 10891, 97, 114, 59, 1, 10594, 4, 9, 99, 101,
          103, 109, 110, 112, 113, 114, 116, 11580, 11586, 11594, 11600, 11606,
          11624, 11627, 11636, 11694, 117, 116, 101, 59, 1, 314, 109, 112, 116,
          121, 118, 59, 1, 10676, 114, 97, 110, 59, 1, 8466, 98, 100, 97, 59, 1,
          955, 103, 4, 3, 59, 100, 108, 11615, 11617, 11620, 1, 10216, 59, 1,
          10641, 101, 59, 1, 10216, 59, 1, 10885, 117, 111, 5, 171, 1, 59,
          11634, 1, 171, 114, 4, 8, 59, 98, 102, 104, 108, 112, 115, 116, 11655,
          11657, 11669, 11673, 11677, 11681, 11685, 11690, 1, 8592, 4, 2, 59,
          102, 11663, 11665, 1, 8676, 115, 59, 1, 10527, 115, 59, 1, 10525, 107,
          59, 1, 8617, 112, 59, 1, 8619, 108, 59, 1, 10553, 105, 109, 59, 1,
          10611, 108, 59, 1, 8610, 4, 3, 59, 97, 101, 11702, 11704, 11709, 1,
          10923, 105, 108, 59, 1, 10521, 4, 2, 59, 115, 11715, 11717, 1, 10925,
          59, 3, 10925, 65024, 4, 3, 97, 98, 114, 11729, 11734, 11739, 114, 114,
          59, 1, 10508, 114, 107, 59, 1, 10098, 4, 2, 97, 107, 11745, 11758, 99,
          4, 2, 101, 107, 11752, 11755, 59, 1, 123, 59, 1, 91, 4, 2, 101, 115,
          11764, 11767, 59, 1, 10635, 108, 4, 2, 100, 117, 11774, 11777, 59, 1,
          10639, 59, 1, 10637, 4, 4, 97, 101, 117, 121, 11790, 11796, 11811,
          11815, 114, 111, 110, 59, 1, 318, 4, 2, 100, 105, 11802, 11807, 105,
          108, 59, 1, 316, 108, 59, 1, 8968, 98, 59, 1, 123, 59, 1, 1083, 4, 4,
          99, 113, 114, 115, 11828, 11832, 11845, 11864, 97, 59, 1, 10550, 117,
          111, 4, 2, 59, 114, 11840, 11842, 1, 8220, 59, 1, 8222, 4, 2, 100,
          117, 11851, 11857, 104, 97, 114, 59, 1, 10599, 115, 104, 97, 114, 59,
          1, 10571, 104, 59, 1, 8626, 4, 5, 59, 102, 103, 113, 115, 11880,
          11882, 12008, 12011, 12031, 1, 8804, 116, 4, 5, 97, 104, 108, 114,
          116, 11895, 11913, 11935, 11947, 11996, 114, 114, 111, 119, 4, 2, 59,
          116, 11905, 11907, 1, 8592, 97, 105, 108, 59, 1, 8610, 97, 114, 112,
          111, 111, 110, 4, 2, 100, 117, 11925, 11931, 111, 119, 110, 59, 1,
          8637, 112, 59, 1, 8636, 101, 102, 116, 97, 114, 114, 111, 119, 115,
          59, 1, 8647, 105, 103, 104, 116, 4, 3, 97, 104, 115, 11959, 11974,
          11984, 114, 114, 111, 119, 4, 2, 59, 115, 11969, 11971, 1, 8596, 59,
          1, 8646, 97, 114, 112, 111, 111, 110, 115, 59, 1, 8651, 113, 117, 105,
          103, 97, 114, 114, 111, 119, 59, 1, 8621, 104, 114, 101, 101, 116,
          105, 109, 101, 115, 59, 1, 8907, 59, 1, 8922, 4, 3, 59, 113, 115,
          12019, 12021, 12024, 1, 8804, 59, 1, 8806, 108, 97, 110, 116, 59, 1,
          10877, 4, 5, 59, 99, 100, 103, 115, 12043, 12045, 12049, 12070, 12083,
          1, 10877, 99, 59, 1, 10920, 111, 116, 4, 2, 59, 111, 12057, 12059, 1,
          10879, 4, 2, 59, 114, 12065, 12067, 1, 10881, 59, 1, 10883, 4, 2, 59,
          101, 12076, 12079, 3, 8922, 65024, 115, 59, 1, 10899, 4, 5, 97, 100,
          101, 103, 115, 12095, 12103, 12108, 12126, 12131, 112, 112, 114, 111,
          120, 59, 1, 10885, 111, 116, 59, 1, 8918, 113, 4, 2, 103, 113, 12115,
          12120, 116, 114, 59, 1, 8922, 103, 116, 114, 59, 1, 10891, 116, 114,
          59, 1, 8822, 105, 109, 59, 1, 8818, 4, 3, 105, 108, 114, 12144, 12150,
          12156, 115, 104, 116, 59, 1, 10620, 111, 111, 114, 59, 1, 8970, 59, 3,
          55349, 56617, 4, 2, 59, 69, 12166, 12168, 1, 8822, 59, 1, 10897, 4, 2,
          97, 98, 12177, 12198, 114, 4, 2, 100, 117, 12184, 12187, 59, 1, 8637,
          4, 2, 59, 108, 12193, 12195, 1, 8636, 59, 1, 10602, 108, 107, 59, 1,
          9604, 99, 121, 59, 1, 1113, 4, 5, 59, 97, 99, 104, 116, 12220, 12222,
          12227, 12235, 12241, 1, 8810, 114, 114, 59, 1, 8647, 111, 114, 110,
          101, 114, 59, 1, 8990, 97, 114, 100, 59, 1, 10603, 114, 105, 59, 1,
          9722, 4, 2, 105, 111, 12252, 12258, 100, 111, 116, 59, 1, 320, 117,
          115, 116, 4, 2, 59, 97, 12267, 12269, 1, 9136, 99, 104, 101, 59, 1,
          9136, 4, 4, 69, 97, 101, 115, 12285, 12288, 12303, 12322, 59, 1, 8808,
          112, 4, 2, 59, 112, 12295, 12297, 1, 10889, 114, 111, 120, 59, 1,
          10889, 4, 2, 59, 113, 12309, 12311, 1, 10887, 4, 2, 59, 113, 12317,
          12319, 1, 10887, 59, 1, 8808, 105, 109, 59, 1, 8934, 4, 8, 97, 98,
          110, 111, 112, 116, 119, 122, 12345, 12359, 12364, 12421, 12446,
          12467, 12474, 12490, 4, 2, 110, 114, 12351, 12355, 103, 59, 1, 10220,
          114, 59, 1, 8701, 114, 107, 59, 1, 10214, 103, 4, 3, 108, 109, 114,
          12373, 12401, 12409, 101, 102, 116, 4, 2, 97, 114, 12382, 12389, 114,
          114, 111, 119, 59, 1, 10229, 105, 103, 104, 116, 97, 114, 114, 111,
          119, 59, 1, 10231, 97, 112, 115, 116, 111, 59, 1, 10236, 105, 103,
          104, 116, 97, 114, 114, 111, 119, 59, 1, 10230, 112, 97, 114, 114,
          111, 119, 4, 2, 108, 114, 12433, 12439, 101, 102, 116, 59, 1, 8619,
          105, 103, 104, 116, 59, 1, 8620, 4, 3, 97, 102, 108, 12454, 12458,
          12462, 114, 59, 1, 10629, 59, 3, 55349, 56669, 117, 115, 59, 1, 10797,
          105, 109, 101, 115, 59, 1, 10804, 4, 2, 97, 98, 12480, 12485, 115,
          116, 59, 1, 8727, 97, 114, 59, 1, 95, 4, 3, 59, 101, 102, 12498,
          12500, 12506, 1, 9674, 110, 103, 101, 59, 1, 9674, 59, 1, 10731, 97,
          114, 4, 2, 59, 108, 12517, 12519, 1, 40, 116, 59, 1, 10643, 4, 5, 97,
          99, 104, 109, 116, 12535, 12540, 12548, 12561, 12564, 114, 114, 59, 1,
          8646, 111, 114, 110, 101, 114, 59, 1, 8991, 97, 114, 4, 2, 59, 100,
          12556, 12558, 1, 8651, 59, 1, 10605, 59, 1, 8206, 114, 105, 59, 1,
          8895, 4, 6, 97, 99, 104, 105, 113, 116, 12583, 12589, 12594, 12597,
          12614, 12635, 113, 117, 111, 59, 1, 8249, 114, 59, 3, 55349, 56513,
          59, 1, 8624, 109, 4, 3, 59, 101, 103, 12606, 12608, 12611, 1, 8818,
          59, 1, 10893, 59, 1, 10895, 4, 2, 98, 117, 12620, 12623, 59, 1, 91,
          111, 4, 2, 59, 114, 12630, 12632, 1, 8216, 59, 1, 8218, 114, 111, 107,
          59, 1, 322, 5, 60, 8, 59, 99, 100, 104, 105, 108, 113, 114, 12660,
          12662, 12675, 12680, 12686, 12692, 12698, 12705, 1, 60, 4, 2, 99, 105,
          12668, 12671, 59, 1, 10918, 114, 59, 1, 10873, 111, 116, 59, 1, 8918,
          114, 101, 101, 59, 1, 8907, 109, 101, 115, 59, 1, 8905, 97, 114, 114,
          59, 1, 10614, 117, 101, 115, 116, 59, 1, 10875, 4, 2, 80, 105, 12711,
          12716, 97, 114, 59, 1, 10646, 4, 3, 59, 101, 102, 12724, 12726, 12729,
          1, 9667, 59, 1, 8884, 59, 1, 9666, 114, 4, 2, 100, 117, 12739, 12746,
          115, 104, 97, 114, 59, 1, 10570, 104, 97, 114, 59, 1, 10598, 4, 2,
          101, 110, 12758, 12768, 114, 116, 110, 101, 113, 113, 59, 3, 8808,
          65024, 69, 59, 3, 8808, 65024, 4, 14, 68, 97, 99, 100, 101, 102, 104,
          105, 108, 110, 111, 112, 115, 117, 12803, 12809, 12893, 12908, 12914,
          12928, 12933, 12937, 13011, 13025, 13032, 13049, 13052, 13069, 68,
          111, 116, 59, 1, 8762, 4, 4, 99, 108, 112, 114, 12819, 12827, 12849,
          12887, 114, 5, 175, 1, 59, 12825, 1, 175, 4, 2, 101, 116, 12833,
          12836, 59, 1, 9794, 4, 2, 59, 101, 12842, 12844, 1, 10016, 115, 101,
          59, 1, 10016, 4, 2, 59, 115, 12855, 12857, 1, 8614, 116, 111, 4, 4,
          59, 100, 108, 117, 12869, 12871, 12877, 12883, 1, 8614, 111, 119, 110,
          59, 1, 8615, 101, 102, 116, 59, 1, 8612, 112, 59, 1, 8613, 107, 101,
          114, 59, 1, 9646, 4, 2, 111, 121, 12899, 12905, 109, 109, 97, 59, 1,
          10793, 59, 1, 1084, 97, 115, 104, 59, 1, 8212, 97, 115, 117, 114, 101,
          100, 97, 110, 103, 108, 101, 59, 1, 8737, 114, 59, 3, 55349, 56618,
          111, 59, 1, 8487, 4, 3, 99, 100, 110, 12945, 12954, 12985, 114, 111,
          5, 181, 1, 59, 12952, 1, 181, 4, 4, 59, 97, 99, 100, 12964, 12966,
          12971, 12976, 1, 8739, 115, 116, 59, 1, 42, 105, 114, 59, 1, 10992,
          111, 116, 5, 183, 1, 59, 12983, 1, 183, 117, 115, 4, 3, 59, 98, 100,
          12995, 12997, 13e3, 1, 8722, 59, 1, 8863, 4, 2, 59, 117, 13006, 13008,
          1, 8760, 59, 1, 10794, 4, 2, 99, 100, 13017, 13021, 112, 59, 1, 10971,
          114, 59, 1, 8230, 112, 108, 117, 115, 59, 1, 8723, 4, 2, 100, 112,
          13038, 13044, 101, 108, 115, 59, 1, 8871, 102, 59, 3, 55349, 56670,
          59, 1, 8723, 4, 2, 99, 116, 13058, 13063, 114, 59, 3, 55349, 56514,
          112, 111, 115, 59, 1, 8766, 4, 3, 59, 108, 109, 13077, 13079, 13087,
          1, 956, 116, 105, 109, 97, 112, 59, 1, 8888, 97, 112, 59, 1, 8888, 4,
          24, 71, 76, 82, 86, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106,
          108, 109, 111, 112, 114, 115, 116, 117, 118, 119, 13142, 13165, 13217,
          13229, 13247, 13330, 13359, 13414, 13420, 13508, 13513, 13579, 13602,
          13626, 13631, 13762, 13767, 13855, 13936, 13995, 14214, 14285, 14312,
          14432, 4, 2, 103, 116, 13148, 13152, 59, 3, 8921, 824, 4, 2, 59, 118,
          13158, 13161, 3, 8811, 8402, 59, 3, 8811, 824, 4, 3, 101, 108, 116,
          13173, 13200, 13204, 102, 116, 4, 2, 97, 114, 13181, 13188, 114, 114,
          111, 119, 59, 1, 8653, 105, 103, 104, 116, 97, 114, 114, 111, 119, 59,
          1, 8654, 59, 3, 8920, 824, 4, 2, 59, 118, 13210, 13213, 3, 8810, 8402,
          59, 3, 8810, 824, 105, 103, 104, 116, 97, 114, 114, 111, 119, 59, 1,
          8655, 4, 2, 68, 100, 13235, 13241, 97, 115, 104, 59, 1, 8879, 97, 115,
          104, 59, 1, 8878, 4, 5, 98, 99, 110, 112, 116, 13259, 13264, 13270,
          13275, 13308, 108, 97, 59, 1, 8711, 117, 116, 101, 59, 1, 324, 103,
          59, 3, 8736, 8402, 4, 5, 59, 69, 105, 111, 112, 13287, 13289, 13293,
          13298, 13302, 1, 8777, 59, 3, 10864, 824, 100, 59, 3, 8779, 824, 115,
          59, 1, 329, 114, 111, 120, 59, 1, 8777, 117, 114, 4, 2, 59, 97, 13316,
          13318, 1, 9838, 108, 4, 2, 59, 115, 13325, 13327, 1, 9838, 59, 1,
          8469, 4, 2, 115, 117, 13336, 13344, 112, 5, 160, 1, 59, 13342, 1, 160,
          109, 112, 4, 2, 59, 101, 13352, 13355, 3, 8782, 824, 59, 3, 8783, 824,
          4, 5, 97, 101, 111, 117, 121, 13371, 13385, 13391, 13407, 13411, 4, 2,
          112, 114, 13377, 13380, 59, 1, 10819, 111, 110, 59, 1, 328, 100, 105,
          108, 59, 1, 326, 110, 103, 4, 2, 59, 100, 13399, 13401, 1, 8775, 111,
          116, 59, 3, 10861, 824, 112, 59, 1, 10818, 59, 1, 1085, 97, 115, 104,
          59, 1, 8211, 4, 7, 59, 65, 97, 100, 113, 115, 120, 13436, 13438,
          13443, 13466, 13472, 13478, 13494, 1, 8800, 114, 114, 59, 1, 8663,
          114, 4, 2, 104, 114, 13450, 13454, 107, 59, 1, 10532, 4, 2, 59, 111,
          13460, 13462, 1, 8599, 119, 59, 1, 8599, 111, 116, 59, 3, 8784, 824,
          117, 105, 118, 59, 1, 8802, 4, 2, 101, 105, 13484, 13489, 97, 114, 59,
          1, 10536, 109, 59, 3, 8770, 824, 105, 115, 116, 4, 2, 59, 115, 13503,
          13505, 1, 8708, 59, 1, 8708, 114, 59, 3, 55349, 56619, 4, 4, 69, 101,
          115, 116, 13523, 13527, 13563, 13568, 59, 3, 8807, 824, 4, 3, 59, 113,
          115, 13535, 13537, 13559, 1, 8817, 4, 3, 59, 113, 115, 13545, 13547,
          13551, 1, 8817, 59, 3, 8807, 824, 108, 97, 110, 116, 59, 3, 10878,
          824, 59, 3, 10878, 824, 105, 109, 59, 1, 8821, 4, 2, 59, 114, 13574,
          13576, 1, 8815, 59, 1, 8815, 4, 3, 65, 97, 112, 13587, 13592, 13597,
          114, 114, 59, 1, 8654, 114, 114, 59, 1, 8622, 97, 114, 59, 1, 10994,
          4, 3, 59, 115, 118, 13610, 13612, 13623, 1, 8715, 4, 2, 59, 100,
          13618, 13620, 1, 8956, 59, 1, 8954, 59, 1, 8715, 99, 121, 59, 1, 1114,
          4, 7, 65, 69, 97, 100, 101, 115, 116, 13647, 13652, 13656, 13661,
          13665, 13737, 13742, 114, 114, 59, 1, 8653, 59, 3, 8806, 824, 114,
          114, 59, 1, 8602, 114, 59, 1, 8229, 4, 4, 59, 102, 113, 115, 13675,
          13677, 13703, 13725, 1, 8816, 116, 4, 2, 97, 114, 13684, 13691, 114,
          114, 111, 119, 59, 1, 8602, 105, 103, 104, 116, 97, 114, 114, 111,
          119, 59, 1, 8622, 4, 3, 59, 113, 115, 13711, 13713, 13717, 1, 8816,
          59, 3, 8806, 824, 108, 97, 110, 116, 59, 3, 10877, 824, 4, 2, 59, 115,
          13731, 13734, 3, 10877, 824, 59, 1, 8814, 105, 109, 59, 1, 8820, 4, 2,
          59, 114, 13748, 13750, 1, 8814, 105, 4, 2, 59, 101, 13757, 13759, 1,
          8938, 59, 1, 8940, 105, 100, 59, 1, 8740, 4, 2, 112, 116, 13773,
          13778, 102, 59, 3, 55349, 56671, 5, 172, 3, 59, 105, 110, 13787,
          13789, 13829, 1, 172, 110, 4, 4, 59, 69, 100, 118, 13800, 13802,
          13806, 13812, 1, 8713, 59, 3, 8953, 824, 111, 116, 59, 3, 8949, 824,
          4, 3, 97, 98, 99, 13820, 13823, 13826, 59, 1, 8713, 59, 1, 8951, 59,
          1, 8950, 105, 4, 2, 59, 118, 13836, 13838, 1, 8716, 4, 3, 97, 98, 99,
          13846, 13849, 13852, 59, 1, 8716, 59, 1, 8958, 59, 1, 8957, 4, 3, 97,
          111, 114, 13863, 13892, 13899, 114, 4, 4, 59, 97, 115, 116, 13874,
          13876, 13883, 13888, 1, 8742, 108, 108, 101, 108, 59, 1, 8742, 108,
          59, 3, 11005, 8421, 59, 3, 8706, 824, 108, 105, 110, 116, 59, 1,
          10772, 4, 3, 59, 99, 101, 13907, 13909, 13914, 1, 8832, 117, 101, 59,
          1, 8928, 4, 2, 59, 99, 13920, 13923, 3, 10927, 824, 4, 2, 59, 101,
          13929, 13931, 1, 8832, 113, 59, 3, 10927, 824, 4, 4, 65, 97, 105, 116,
          13946, 13951, 13971, 13982, 114, 114, 59, 1, 8655, 114, 114, 4, 3, 59,
          99, 119, 13961, 13963, 13967, 1, 8603, 59, 3, 10547, 824, 59, 3, 8605,
          824, 103, 104, 116, 97, 114, 114, 111, 119, 59, 1, 8603, 114, 105, 4,
          2, 59, 101, 13990, 13992, 1, 8939, 59, 1, 8941, 4, 7, 99, 104, 105,
          109, 112, 113, 117, 14011, 14036, 14060, 14080, 14085, 14090, 14106,
          4, 4, 59, 99, 101, 114, 14021, 14023, 14028, 14032, 1, 8833, 117, 101,
          59, 1, 8929, 59, 3, 10928, 824, 59, 3, 55349, 56515, 111, 114, 116, 4,
          2, 109, 112, 14045, 14050, 105, 100, 59, 1, 8740, 97, 114, 97, 108,
          108, 101, 108, 59, 1, 8742, 109, 4, 2, 59, 101, 14067, 14069, 1, 8769,
          4, 2, 59, 113, 14075, 14077, 1, 8772, 59, 1, 8772, 105, 100, 59, 1,
          8740, 97, 114, 59, 1, 8742, 115, 117, 4, 2, 98, 112, 14098, 14102,
          101, 59, 1, 8930, 101, 59, 1, 8931, 4, 3, 98, 99, 112, 14114, 14157,
          14171, 4, 4, 59, 69, 101, 115, 14124, 14126, 14130, 14133, 1, 8836,
          59, 3, 10949, 824, 59, 1, 8840, 101, 116, 4, 2, 59, 101, 14141, 14144,
          3, 8834, 8402, 113, 4, 2, 59, 113, 14151, 14153, 1, 8840, 59, 3,
          10949, 824, 99, 4, 2, 59, 101, 14164, 14166, 1, 8833, 113, 59, 3,
          10928, 824, 4, 4, 59, 69, 101, 115, 14181, 14183, 14187, 14190, 1,
          8837, 59, 3, 10950, 824, 59, 1, 8841, 101, 116, 4, 2, 59, 101, 14198,
          14201, 3, 8835, 8402, 113, 4, 2, 59, 113, 14208, 14210, 1, 8841, 59,
          3, 10950, 824, 4, 4, 103, 105, 108, 114, 14224, 14228, 14238, 14242,
          108, 59, 1, 8825, 108, 100, 101, 5, 241, 1, 59, 14236, 1, 241, 103,
          59, 1, 8824, 105, 97, 110, 103, 108, 101, 4, 2, 108, 114, 14254,
          14269, 101, 102, 116, 4, 2, 59, 101, 14263, 14265, 1, 8938, 113, 59,
          1, 8940, 105, 103, 104, 116, 4, 2, 59, 101, 14279, 14281, 1, 8939,
          113, 59, 1, 8941, 4, 2, 59, 109, 14291, 14293, 1, 957, 4, 3, 59, 101,
          115, 14301, 14303, 14308, 1, 35, 114, 111, 59, 1, 8470, 112, 59, 1,
          8199, 4, 9, 68, 72, 97, 100, 103, 105, 108, 114, 115, 14332, 14338,
          14344, 14349, 14355, 14369, 14376, 14408, 14426, 97, 115, 104, 59, 1,
          8877, 97, 114, 114, 59, 1, 10500, 112, 59, 3, 8781, 8402, 97, 115,
          104, 59, 1, 8876, 4, 2, 101, 116, 14361, 14365, 59, 3, 8805, 8402, 59,
          3, 62, 8402, 110, 102, 105, 110, 59, 1, 10718, 4, 3, 65, 101, 116,
          14384, 14389, 14393, 114, 114, 59, 1, 10498, 59, 3, 8804, 8402, 4, 2,
          59, 114, 14399, 14402, 3, 60, 8402, 105, 101, 59, 3, 8884, 8402, 4, 2,
          65, 116, 14414, 14419, 114, 114, 59, 1, 10499, 114, 105, 101, 59, 3,
          8885, 8402, 105, 109, 59, 3, 8764, 8402, 4, 3, 65, 97, 110, 14440,
          14445, 14468, 114, 114, 59, 1, 8662, 114, 4, 2, 104, 114, 14452,
          14456, 107, 59, 1, 10531, 4, 2, 59, 111, 14462, 14464, 1, 8598, 119,
          59, 1, 8598, 101, 97, 114, 59, 1, 10535, 4, 18, 83, 97, 99, 100, 101,
          102, 103, 104, 105, 108, 109, 111, 112, 114, 115, 116, 117, 118,
          14512, 14515, 14535, 14560, 14597, 14603, 14618, 14643, 14657, 14662,
          14701, 14741, 14747, 14769, 14851, 14877, 14907, 14916, 59, 1, 9416,
          4, 2, 99, 115, 14521, 14531, 117, 116, 101, 5, 243, 1, 59, 14529, 1,
          243, 116, 59, 1, 8859, 4, 2, 105, 121, 14541, 14557, 114, 4, 2, 59,
          99, 14548, 14550, 1, 8858, 5, 244, 1, 59, 14555, 1, 244, 59, 1, 1086,
          4, 5, 97, 98, 105, 111, 115, 14572, 14577, 14583, 14587, 14591, 115,
          104, 59, 1, 8861, 108, 97, 99, 59, 1, 337, 118, 59, 1, 10808, 116, 59,
          1, 8857, 111, 108, 100, 59, 1, 10684, 108, 105, 103, 59, 1, 339, 4, 2,
          99, 114, 14609, 14614, 105, 114, 59, 1, 10687, 59, 3, 55349, 56620, 4,
          3, 111, 114, 116, 14626, 14630, 14640, 110, 59, 1, 731, 97, 118, 101,
          5, 242, 1, 59, 14638, 1, 242, 59, 1, 10689, 4, 2, 98, 109, 14649,
          14654, 97, 114, 59, 1, 10677, 59, 1, 937, 110, 116, 59, 1, 8750, 4, 4,
          97, 99, 105, 116, 14672, 14677, 14693, 14698, 114, 114, 59, 1, 8634,
          4, 2, 105, 114, 14683, 14687, 114, 59, 1, 10686, 111, 115, 115, 59, 1,
          10683, 110, 101, 59, 1, 8254, 59, 1, 10688, 4, 3, 97, 101, 105, 14709,
          14714, 14719, 99, 114, 59, 1, 333, 103, 97, 59, 1, 969, 4, 3, 99, 100,
          110, 14727, 14733, 14736, 114, 111, 110, 59, 1, 959, 59, 1, 10678,
          117, 115, 59, 1, 8854, 112, 102, 59, 3, 55349, 56672, 4, 3, 97, 101,
          108, 14755, 14759, 14764, 114, 59, 1, 10679, 114, 112, 59, 1, 10681,
          117, 115, 59, 1, 8853, 4, 7, 59, 97, 100, 105, 111, 115, 118, 14785,
          14787, 14792, 14831, 14837, 14841, 14848, 1, 8744, 114, 114, 59, 1,
          8635, 4, 4, 59, 101, 102, 109, 14802, 14804, 14817, 14824, 1, 10845,
          114, 4, 2, 59, 111, 14811, 14813, 1, 8500, 102, 59, 1, 8500, 5, 170,
          1, 59, 14822, 1, 170, 5, 186, 1, 59, 14829, 1, 186, 103, 111, 102, 59,
          1, 8886, 114, 59, 1, 10838, 108, 111, 112, 101, 59, 1, 10839, 59, 1,
          10843, 4, 3, 99, 108, 111, 14859, 14863, 14873, 114, 59, 1, 8500, 97,
          115, 104, 5, 248, 1, 59, 14871, 1, 248, 108, 59, 1, 8856, 105, 4, 2,
          108, 109, 14884, 14893, 100, 101, 5, 245, 1, 59, 14891, 1, 245, 101,
          115, 4, 2, 59, 97, 14901, 14903, 1, 8855, 115, 59, 1, 10806, 109, 108,
          5, 246, 1, 59, 14914, 1, 246, 98, 97, 114, 59, 1, 9021, 4, 12, 97, 99,
          101, 102, 104, 105, 108, 109, 111, 114, 115, 117, 14948, 14992, 14996,
          15033, 15038, 15068, 15090, 15189, 15192, 15222, 15427, 15441, 114, 4,
          4, 59, 97, 115, 116, 14959, 14961, 14976, 14989, 1, 8741, 5, 182, 2,
          59, 108, 14968, 14970, 1, 182, 108, 101, 108, 59, 1, 8741, 4, 2, 105,
          108, 14982, 14986, 109, 59, 1, 10995, 59, 1, 11005, 59, 1, 8706, 121,
          59, 1, 1087, 114, 4, 5, 99, 105, 109, 112, 116, 15009, 15014, 15019,
          15024, 15027, 110, 116, 59, 1, 37, 111, 100, 59, 1, 46, 105, 108, 59,
          1, 8240, 59, 1, 8869, 101, 110, 107, 59, 1, 8241, 114, 59, 3, 55349,
          56621, 4, 3, 105, 109, 111, 15046, 15057, 15063, 4, 2, 59, 118, 15052,
          15054, 1, 966, 59, 1, 981, 109, 97, 116, 59, 1, 8499, 110, 101, 59, 1,
          9742, 4, 3, 59, 116, 118, 15076, 15078, 15087, 1, 960, 99, 104, 102,
          111, 114, 107, 59, 1, 8916, 59, 1, 982, 4, 2, 97, 117, 15096, 15119,
          110, 4, 2, 99, 107, 15103, 15115, 107, 4, 2, 59, 104, 15110, 15112, 1,
          8463, 59, 1, 8462, 118, 59, 1, 8463, 115, 4, 9, 59, 97, 98, 99, 100,
          101, 109, 115, 116, 15140, 15142, 15148, 15151, 15156, 15168, 15171,
          15179, 15184, 1, 43, 99, 105, 114, 59, 1, 10787, 59, 1, 8862, 105,
          114, 59, 1, 10786, 4, 2, 111, 117, 15162, 15165, 59, 1, 8724, 59, 1,
          10789, 59, 1, 10866, 110, 5, 177, 1, 59, 15177, 1, 177, 105, 109, 59,
          1, 10790, 119, 111, 59, 1, 10791, 59, 1, 177, 4, 3, 105, 112, 117,
          15200, 15208, 15213, 110, 116, 105, 110, 116, 59, 1, 10773, 102, 59,
          3, 55349, 56673, 110, 100, 5, 163, 1, 59, 15220, 1, 163, 4, 10, 59,
          69, 97, 99, 101, 105, 110, 111, 115, 117, 15244, 15246, 15249, 15253,
          15258, 15334, 15347, 15367, 15416, 15421, 1, 8826, 59, 1, 10931, 112,
          59, 1, 10935, 117, 101, 59, 1, 8828, 4, 2, 59, 99, 15264, 15266, 1,
          10927, 4, 6, 59, 97, 99, 101, 110, 115, 15280, 15282, 15290, 15299,
          15303, 15329, 1, 8826, 112, 112, 114, 111, 120, 59, 1, 10935, 117,
          114, 108, 121, 101, 113, 59, 1, 8828, 113, 59, 1, 10927, 4, 3, 97,
          101, 115, 15311, 15319, 15324, 112, 112, 114, 111, 120, 59, 1, 10937,
          113, 113, 59, 1, 10933, 105, 109, 59, 1, 8936, 105, 109, 59, 1, 8830,
          109, 101, 4, 2, 59, 115, 15342, 15344, 1, 8242, 59, 1, 8473, 4, 3, 69,
          97, 115, 15355, 15358, 15362, 59, 1, 10933, 112, 59, 1, 10937, 105,
          109, 59, 1, 8936, 4, 3, 100, 102, 112, 15375, 15378, 15404, 59, 1,
          8719, 4, 3, 97, 108, 115, 15386, 15392, 15398, 108, 97, 114, 59, 1,
          9006, 105, 110, 101, 59, 1, 8978, 117, 114, 102, 59, 1, 8979, 4, 2,
          59, 116, 15410, 15412, 1, 8733, 111, 59, 1, 8733, 105, 109, 59, 1,
          8830, 114, 101, 108, 59, 1, 8880, 4, 2, 99, 105, 15433, 15438, 114,
          59, 3, 55349, 56517, 59, 1, 968, 110, 99, 115, 112, 59, 1, 8200, 4, 6,
          102, 105, 111, 112, 115, 117, 15462, 15467, 15472, 15478, 15485,
          15491, 114, 59, 3, 55349, 56622, 110, 116, 59, 1, 10764, 112, 102, 59,
          3, 55349, 56674, 114, 105, 109, 101, 59, 1, 8279, 99, 114, 59, 3,
          55349, 56518, 4, 3, 97, 101, 111, 15499, 15520, 15534, 116, 4, 2, 101,
          105, 15506, 15515, 114, 110, 105, 111, 110, 115, 59, 1, 8461, 110,
          116, 59, 1, 10774, 115, 116, 4, 2, 59, 101, 15528, 15530, 1, 63, 113,
          59, 1, 8799, 116, 5, 34, 1, 59, 15540, 1, 34, 4, 21, 65, 66, 72, 97,
          98, 99, 100, 101, 102, 104, 105, 108, 109, 110, 111, 112, 114, 115,
          116, 117, 120, 15586, 15609, 15615, 15620, 15796, 15855, 15893, 15931,
          15977, 16001, 16039, 16183, 16204, 16222, 16228, 16285, 16312, 16318,
          16363, 16408, 16416, 4, 3, 97, 114, 116, 15594, 15599, 15603, 114,
          114, 59, 1, 8667, 114, 59, 1, 8658, 97, 105, 108, 59, 1, 10524, 97,
          114, 114, 59, 1, 10511, 97, 114, 59, 1, 10596, 4, 7, 99, 100, 101,
          110, 113, 114, 116, 15636, 15651, 15656, 15664, 15687, 15696, 15770,
          4, 2, 101, 117, 15642, 15646, 59, 3, 8765, 817, 116, 101, 59, 1, 341,
          105, 99, 59, 1, 8730, 109, 112, 116, 121, 118, 59, 1, 10675, 103, 4,
          4, 59, 100, 101, 108, 15675, 15677, 15680, 15683, 1, 10217, 59, 1,
          10642, 59, 1, 10661, 101, 59, 1, 10217, 117, 111, 5, 187, 1, 59,
          15694, 1, 187, 114, 4, 11, 59, 97, 98, 99, 102, 104, 108, 112, 115,
          116, 119, 15721, 15723, 15727, 15739, 15742, 15746, 15750, 15754,
          15758, 15763, 15767, 1, 8594, 112, 59, 1, 10613, 4, 2, 59, 102, 15733,
          15735, 1, 8677, 115, 59, 1, 10528, 59, 1, 10547, 115, 59, 1, 10526,
          107, 59, 1, 8618, 112, 59, 1, 8620, 108, 59, 1, 10565, 105, 109, 59,
          1, 10612, 108, 59, 1, 8611, 59, 1, 8605, 4, 2, 97, 105, 15776, 15781,
          105, 108, 59, 1, 10522, 111, 4, 2, 59, 110, 15788, 15790, 1, 8758, 97,
          108, 115, 59, 1, 8474, 4, 3, 97, 98, 114, 15804, 15809, 15814, 114,
          114, 59, 1, 10509, 114, 107, 59, 1, 10099, 4, 2, 97, 107, 15820,
          15833, 99, 4, 2, 101, 107, 15827, 15830, 59, 1, 125, 59, 1, 93, 4, 2,
          101, 115, 15839, 15842, 59, 1, 10636, 108, 4, 2, 100, 117, 15849,
          15852, 59, 1, 10638, 59, 1, 10640, 4, 4, 97, 101, 117, 121, 15865,
          15871, 15886, 15890, 114, 111, 110, 59, 1, 345, 4, 2, 100, 105, 15877,
          15882, 105, 108, 59, 1, 343, 108, 59, 1, 8969, 98, 59, 1, 125, 59, 1,
          1088, 4, 4, 99, 108, 113, 115, 15903, 15907, 15914, 15927, 97, 59, 1,
          10551, 100, 104, 97, 114, 59, 1, 10601, 117, 111, 4, 2, 59, 114,
          15922, 15924, 1, 8221, 59, 1, 8221, 104, 59, 1, 8627, 4, 3, 97, 99,
          103, 15939, 15966, 15970, 108, 4, 4, 59, 105, 112, 115, 15950, 15952,
          15957, 15963, 1, 8476, 110, 101, 59, 1, 8475, 97, 114, 116, 59, 1,
          8476, 59, 1, 8477, 116, 59, 1, 9645, 5, 174, 1, 59, 15975, 1, 174, 4,
          3, 105, 108, 114, 15985, 15991, 15997, 115, 104, 116, 59, 1, 10621,
          111, 111, 114, 59, 1, 8971, 59, 3, 55349, 56623, 4, 2, 97, 111, 16007,
          16028, 114, 4, 2, 100, 117, 16014, 16017, 59, 1, 8641, 4, 2, 59, 108,
          16023, 16025, 1, 8640, 59, 1, 10604, 4, 2, 59, 118, 16034, 16036, 1,
          961, 59, 1, 1009, 4, 3, 103, 110, 115, 16047, 16167, 16171, 104, 116,
          4, 6, 97, 104, 108, 114, 115, 116, 16063, 16081, 16103, 16130, 16143,
          16155, 114, 114, 111, 119, 4, 2, 59, 116, 16073, 16075, 1, 8594, 97,
          105, 108, 59, 1, 8611, 97, 114, 112, 111, 111, 110, 4, 2, 100, 117,
          16093, 16099, 111, 119, 110, 59, 1, 8641, 112, 59, 1, 8640, 101, 102,
          116, 4, 2, 97, 104, 16112, 16120, 114, 114, 111, 119, 115, 59, 1,
          8644, 97, 114, 112, 111, 111, 110, 115, 59, 1, 8652, 105, 103, 104,
          116, 97, 114, 114, 111, 119, 115, 59, 1, 8649, 113, 117, 105, 103, 97,
          114, 114, 111, 119, 59, 1, 8605, 104, 114, 101, 101, 116, 105, 109,
          101, 115, 59, 1, 8908, 103, 59, 1, 730, 105, 110, 103, 100, 111, 116,
          115, 101, 113, 59, 1, 8787, 4, 3, 97, 104, 109, 16191, 16196, 16201,
          114, 114, 59, 1, 8644, 97, 114, 59, 1, 8652, 59, 1, 8207, 111, 117,
          115, 116, 4, 2, 59, 97, 16214, 16216, 1, 9137, 99, 104, 101, 59, 1,
          9137, 109, 105, 100, 59, 1, 10990, 4, 4, 97, 98, 112, 116, 16238,
          16252, 16257, 16278, 4, 2, 110, 114, 16244, 16248, 103, 59, 1, 10221,
          114, 59, 1, 8702, 114, 107, 59, 1, 10215, 4, 3, 97, 102, 108, 16265,
          16269, 16273, 114, 59, 1, 10630, 59, 3, 55349, 56675, 117, 115, 59, 1,
          10798, 105, 109, 101, 115, 59, 1, 10805, 4, 2, 97, 112, 16291, 16304,
          114, 4, 2, 59, 103, 16298, 16300, 1, 41, 116, 59, 1, 10644, 111, 108,
          105, 110, 116, 59, 1, 10770, 97, 114, 114, 59, 1, 8649, 4, 4, 97, 99,
          104, 113, 16328, 16334, 16339, 16342, 113, 117, 111, 59, 1, 8250, 114,
          59, 3, 55349, 56519, 59, 1, 8625, 4, 2, 98, 117, 16348, 16351, 59, 1,
          93, 111, 4, 2, 59, 114, 16358, 16360, 1, 8217, 59, 1, 8217, 4, 3, 104,
          105, 114, 16371, 16377, 16383, 114, 101, 101, 59, 1, 8908, 109, 101,
          115, 59, 1, 8906, 105, 4, 4, 59, 101, 102, 108, 16394, 16396, 16399,
          16402, 1, 9657, 59, 1, 8885, 59, 1, 9656, 116, 114, 105, 59, 1, 10702,
          108, 117, 104, 97, 114, 59, 1, 10600, 59, 1, 8478, 4, 19, 97, 98, 99,
          100, 101, 102, 104, 105, 108, 109, 111, 112, 113, 114, 115, 116, 117,
          119, 122, 16459, 16466, 16472, 16572, 16590, 16672, 16687, 16746,
          16844, 16850, 16924, 16963, 16988, 17115, 17121, 17154, 17206, 17614,
          17656, 99, 117, 116, 101, 59, 1, 347, 113, 117, 111, 59, 1, 8218, 4,
          10, 59, 69, 97, 99, 101, 105, 110, 112, 115, 121, 16494, 16496, 16499,
          16513, 16518, 16531, 16536, 16556, 16564, 16569, 1, 8827, 59, 1,
          10932, 4, 2, 112, 114, 16505, 16508, 59, 1, 10936, 111, 110, 59, 1,
          353, 117, 101, 59, 1, 8829, 4, 2, 59, 100, 16524, 16526, 1, 10928,
          105, 108, 59, 1, 351, 114, 99, 59, 1, 349, 4, 3, 69, 97, 115, 16544,
          16547, 16551, 59, 1, 10934, 112, 59, 1, 10938, 105, 109, 59, 1, 8937,
          111, 108, 105, 110, 116, 59, 1, 10771, 105, 109, 59, 1, 8831, 59, 1,
          1089, 111, 116, 4, 3, 59, 98, 101, 16582, 16584, 16587, 1, 8901, 59,
          1, 8865, 59, 1, 10854, 4, 7, 65, 97, 99, 109, 115, 116, 120, 16606,
          16611, 16634, 16642, 16646, 16652, 16668, 114, 114, 59, 1, 8664, 114,
          4, 2, 104, 114, 16618, 16622, 107, 59, 1, 10533, 4, 2, 59, 111, 16628,
          16630, 1, 8600, 119, 59, 1, 8600, 116, 5, 167, 1, 59, 16640, 1, 167,
          105, 59, 1, 59, 119, 97, 114, 59, 1, 10537, 109, 4, 2, 105, 110,
          16659, 16665, 110, 117, 115, 59, 1, 8726, 59, 1, 8726, 116, 59, 1,
          10038, 114, 4, 2, 59, 111, 16679, 16682, 3, 55349, 56624, 119, 110,
          59, 1, 8994, 4, 4, 97, 99, 111, 121, 16697, 16702, 16716, 16739, 114,
          112, 59, 1, 9839, 4, 2, 104, 121, 16708, 16713, 99, 121, 59, 1, 1097,
          59, 1, 1096, 114, 116, 4, 2, 109, 112, 16724, 16729, 105, 100, 59, 1,
          8739, 97, 114, 97, 108, 108, 101, 108, 59, 1, 8741, 5, 173, 1, 59,
          16744, 1, 173, 4, 2, 103, 109, 16752, 16770, 109, 97, 4, 3, 59, 102,
          118, 16762, 16764, 16767, 1, 963, 59, 1, 962, 59, 1, 962, 4, 8, 59,
          100, 101, 103, 108, 110, 112, 114, 16788, 16790, 16795, 16806, 16817,
          16828, 16832, 16838, 1, 8764, 111, 116, 59, 1, 10858, 4, 2, 59, 113,
          16801, 16803, 1, 8771, 59, 1, 8771, 4, 2, 59, 69, 16812, 16814, 1,
          10910, 59, 1, 10912, 4, 2, 59, 69, 16823, 16825, 1, 10909, 59, 1,
          10911, 101, 59, 1, 8774, 108, 117, 115, 59, 1, 10788, 97, 114, 114,
          59, 1, 10610, 97, 114, 114, 59, 1, 8592, 4, 4, 97, 101, 105, 116,
          16860, 16883, 16891, 16904, 4, 2, 108, 115, 16866, 16878, 108, 115,
          101, 116, 109, 105, 110, 117, 115, 59, 1, 8726, 104, 112, 59, 1,
          10803, 112, 97, 114, 115, 108, 59, 1, 10724, 4, 2, 100, 108, 16897,
          16900, 59, 1, 8739, 101, 59, 1, 8995, 4, 2, 59, 101, 16910, 16912, 1,
          10922, 4, 2, 59, 115, 16918, 16920, 1, 10924, 59, 3, 10924, 65024, 4,
          3, 102, 108, 112, 16932, 16938, 16958, 116, 99, 121, 59, 1, 1100, 4,
          2, 59, 98, 16944, 16946, 1, 47, 4, 2, 59, 97, 16952, 16954, 1, 10692,
          114, 59, 1, 9023, 102, 59, 3, 55349, 56676, 97, 4, 2, 100, 114, 16970,
          16985, 101, 115, 4, 2, 59, 117, 16978, 16980, 1, 9824, 105, 116, 59,
          1, 9824, 59, 1, 8741, 4, 3, 99, 115, 117, 16996, 17028, 17089, 4, 2,
          97, 117, 17002, 17015, 112, 4, 2, 59, 115, 17009, 17011, 1, 8851, 59,
          3, 8851, 65024, 112, 4, 2, 59, 115, 17022, 17024, 1, 8852, 59, 3,
          8852, 65024, 117, 4, 2, 98, 112, 17035, 17062, 4, 3, 59, 101, 115,
          17043, 17045, 17048, 1, 8847, 59, 1, 8849, 101, 116, 4, 2, 59, 101,
          17056, 17058, 1, 8847, 113, 59, 1, 8849, 4, 3, 59, 101, 115, 17070,
          17072, 17075, 1, 8848, 59, 1, 8850, 101, 116, 4, 2, 59, 101, 17083,
          17085, 1, 8848, 113, 59, 1, 8850, 4, 3, 59, 97, 102, 17097, 17099,
          17112, 1, 9633, 114, 4, 2, 101, 102, 17106, 17109, 59, 1, 9633, 59, 1,
          9642, 59, 1, 9642, 97, 114, 114, 59, 1, 8594, 4, 4, 99, 101, 109, 116,
          17131, 17136, 17142, 17148, 114, 59, 3, 55349, 56520, 116, 109, 110,
          59, 1, 8726, 105, 108, 101, 59, 1, 8995, 97, 114, 102, 59, 1, 8902, 4,
          2, 97, 114, 17160, 17172, 114, 4, 2, 59, 102, 17167, 17169, 1, 9734,
          59, 1, 9733, 4, 2, 97, 110, 17178, 17202, 105, 103, 104, 116, 4, 2,
          101, 112, 17188, 17197, 112, 115, 105, 108, 111, 110, 59, 1, 1013,
          104, 105, 59, 1, 981, 115, 59, 1, 175, 4, 5, 98, 99, 109, 110, 112,
          17218, 17351, 17420, 17423, 17427, 4, 9, 59, 69, 100, 101, 109, 110,
          112, 114, 115, 17238, 17240, 17243, 17248, 17261, 17267, 17279, 17285,
          17291, 1, 8834, 59, 1, 10949, 111, 116, 59, 1, 10941, 4, 2, 59, 100,
          17254, 17256, 1, 8838, 111, 116, 59, 1, 10947, 117, 108, 116, 59, 1,
          10945, 4, 2, 69, 101, 17273, 17276, 59, 1, 10955, 59, 1, 8842, 108,
          117, 115, 59, 1, 10943, 97, 114, 114, 59, 1, 10617, 4, 3, 101, 105,
          117, 17299, 17335, 17339, 116, 4, 3, 59, 101, 110, 17308, 17310,
          17322, 1, 8834, 113, 4, 2, 59, 113, 17317, 17319, 1, 8838, 59, 1,
          10949, 101, 113, 4, 2, 59, 113, 17330, 17332, 1, 8842, 59, 1, 10955,
          109, 59, 1, 10951, 4, 2, 98, 112, 17345, 17348, 59, 1, 10965, 59, 1,
          10963, 99, 4, 6, 59, 97, 99, 101, 110, 115, 17366, 17368, 17376,
          17385, 17389, 17415, 1, 8827, 112, 112, 114, 111, 120, 59, 1, 10936,
          117, 114, 108, 121, 101, 113, 59, 1, 8829, 113, 59, 1, 10928, 4, 3,
          97, 101, 115, 17397, 17405, 17410, 112, 112, 114, 111, 120, 59, 1,
          10938, 113, 113, 59, 1, 10934, 105, 109, 59, 1, 8937, 105, 109, 59, 1,
          8831, 59, 1, 8721, 103, 59, 1, 9834, 4, 13, 49, 50, 51, 59, 69, 100,
          101, 104, 108, 109, 110, 112, 115, 17455, 17462, 17469, 17476, 17478,
          17481, 17496, 17509, 17524, 17530, 17536, 17548, 17554, 5, 185, 1, 59,
          17460, 1, 185, 5, 178, 1, 59, 17467, 1, 178, 5, 179, 1, 59, 17474, 1,
          179, 1, 8835, 59, 1, 10950, 4, 2, 111, 115, 17487, 17491, 116, 59, 1,
          10942, 117, 98, 59, 1, 10968, 4, 2, 59, 100, 17502, 17504, 1, 8839,
          111, 116, 59, 1, 10948, 115, 4, 2, 111, 117, 17516, 17520, 108, 59, 1,
          10185, 98, 59, 1, 10967, 97, 114, 114, 59, 1, 10619, 117, 108, 116,
          59, 1, 10946, 4, 2, 69, 101, 17542, 17545, 59, 1, 10956, 59, 1, 8843,
          108, 117, 115, 59, 1, 10944, 4, 3, 101, 105, 117, 17562, 17598, 17602,
          116, 4, 3, 59, 101, 110, 17571, 17573, 17585, 1, 8835, 113, 4, 2, 59,
          113, 17580, 17582, 1, 8839, 59, 1, 10950, 101, 113, 4, 2, 59, 113,
          17593, 17595, 1, 8843, 59, 1, 10956, 109, 59, 1, 10952, 4, 2, 98, 112,
          17608, 17611, 59, 1, 10964, 59, 1, 10966, 4, 3, 65, 97, 110, 17622,
          17627, 17650, 114, 114, 59, 1, 8665, 114, 4, 2, 104, 114, 17634,
          17638, 107, 59, 1, 10534, 4, 2, 59, 111, 17644, 17646, 1, 8601, 119,
          59, 1, 8601, 119, 97, 114, 59, 1, 10538, 108, 105, 103, 5, 223, 1, 59,
          17664, 1, 223, 4, 13, 97, 98, 99, 100, 101, 102, 104, 105, 111, 112,
          114, 115, 119, 17694, 17709, 17714, 17737, 17742, 17749, 17754, 17860,
          17905, 17957, 17964, 18090, 18122, 4, 2, 114, 117, 17700, 17706, 103,
          101, 116, 59, 1, 8982, 59, 1, 964, 114, 107, 59, 1, 9140, 4, 3, 97,
          101, 121, 17722, 17728, 17734, 114, 111, 110, 59, 1, 357, 100, 105,
          108, 59, 1, 355, 59, 1, 1090, 111, 116, 59, 1, 8411, 108, 114, 101,
          99, 59, 1, 8981, 114, 59, 3, 55349, 56625, 4, 4, 101, 105, 107, 111,
          17764, 17805, 17836, 17851, 4, 2, 114, 116, 17770, 17786, 101, 4, 2,
          52, 102, 17777, 17780, 59, 1, 8756, 111, 114, 101, 59, 1, 8756, 97, 4,
          3, 59, 115, 118, 17795, 17797, 17802, 1, 952, 121, 109, 59, 1, 977,
          59, 1, 977, 4, 2, 99, 110, 17811, 17831, 107, 4, 2, 97, 115, 17818,
          17826, 112, 112, 114, 111, 120, 59, 1, 8776, 105, 109, 59, 1, 8764,
          115, 112, 59, 1, 8201, 4, 2, 97, 115, 17842, 17846, 112, 59, 1, 8776,
          105, 109, 59, 1, 8764, 114, 110, 5, 254, 1, 59, 17858, 1, 254, 4, 3,
          108, 109, 110, 17868, 17873, 17901, 100, 101, 59, 1, 732, 101, 115, 5,
          215, 3, 59, 98, 100, 17884, 17886, 17898, 1, 215, 4, 2, 59, 97, 17892,
          17894, 1, 8864, 114, 59, 1, 10801, 59, 1, 10800, 116, 59, 1, 8749, 4,
          3, 101, 112, 115, 17913, 17917, 17953, 97, 59, 1, 10536, 4, 4, 59, 98,
          99, 102, 17927, 17929, 17934, 17939, 1, 8868, 111, 116, 59, 1, 9014,
          105, 114, 59, 1, 10993, 4, 2, 59, 111, 17945, 17948, 3, 55349, 56677,
          114, 107, 59, 1, 10970, 97, 59, 1, 10537, 114, 105, 109, 101, 59, 1,
          8244, 4, 3, 97, 105, 112, 17972, 17977, 18082, 100, 101, 59, 1, 8482,
          4, 7, 97, 100, 101, 109, 112, 115, 116, 17993, 18051, 18056, 18059,
          18066, 18072, 18076, 110, 103, 108, 101, 4, 5, 59, 100, 108, 113, 114,
          18009, 18011, 18017, 18032, 18035, 1, 9653, 111, 119, 110, 59, 1,
          9663, 101, 102, 116, 4, 2, 59, 101, 18026, 18028, 1, 9667, 113, 59, 1,
          8884, 59, 1, 8796, 105, 103, 104, 116, 4, 2, 59, 101, 18045, 18047, 1,
          9657, 113, 59, 1, 8885, 111, 116, 59, 1, 9708, 59, 1, 8796, 105, 110,
          117, 115, 59, 1, 10810, 108, 117, 115, 59, 1, 10809, 98, 59, 1, 10701,
          105, 109, 101, 59, 1, 10811, 101, 122, 105, 117, 109, 59, 1, 9186, 4,
          3, 99, 104, 116, 18098, 18111, 18116, 4, 2, 114, 121, 18104, 18108,
          59, 3, 55349, 56521, 59, 1, 1094, 99, 121, 59, 1, 1115, 114, 111, 107,
          59, 1, 359, 4, 2, 105, 111, 18128, 18133, 120, 116, 59, 1, 8812, 104,
          101, 97, 100, 4, 2, 108, 114, 18143, 18154, 101, 102, 116, 97, 114,
          114, 111, 119, 59, 1, 8606, 105, 103, 104, 116, 97, 114, 114, 111,
          119, 59, 1, 8608, 4, 18, 65, 72, 97, 98, 99, 100, 102, 103, 104, 108,
          109, 111, 112, 114, 115, 116, 117, 119, 18204, 18209, 18214, 18234,
          18250, 18268, 18292, 18308, 18319, 18343, 18379, 18397, 18413, 18504,
          18547, 18553, 18584, 18603, 114, 114, 59, 1, 8657, 97, 114, 59, 1,
          10595, 4, 2, 99, 114, 18220, 18230, 117, 116, 101, 5, 250, 1, 59,
          18228, 1, 250, 114, 59, 1, 8593, 114, 4, 2, 99, 101, 18241, 18245,
          121, 59, 1, 1118, 118, 101, 59, 1, 365, 4, 2, 105, 121, 18256, 18265,
          114, 99, 5, 251, 1, 59, 18263, 1, 251, 59, 1, 1091, 4, 3, 97, 98, 104,
          18276, 18281, 18287, 114, 114, 59, 1, 8645, 108, 97, 99, 59, 1, 369,
          97, 114, 59, 1, 10606, 4, 2, 105, 114, 18298, 18304, 115, 104, 116,
          59, 1, 10622, 59, 3, 55349, 56626, 114, 97, 118, 101, 5, 249, 1, 59,
          18317, 1, 249, 4, 2, 97, 98, 18325, 18338, 114, 4, 2, 108, 114, 18332,
          18335, 59, 1, 8639, 59, 1, 8638, 108, 107, 59, 1, 9600, 4, 2, 99, 116,
          18349, 18374, 4, 2, 111, 114, 18355, 18369, 114, 110, 4, 2, 59, 101,
          18363, 18365, 1, 8988, 114, 59, 1, 8988, 111, 112, 59, 1, 8975, 114,
          105, 59, 1, 9720, 4, 2, 97, 108, 18385, 18390, 99, 114, 59, 1, 363, 5,
          168, 1, 59, 18395, 1, 168, 4, 2, 103, 112, 18403, 18408, 111, 110, 59,
          1, 371, 102, 59, 3, 55349, 56678, 4, 6, 97, 100, 104, 108, 115, 117,
          18427, 18434, 18445, 18470, 18475, 18494, 114, 114, 111, 119, 59, 1,
          8593, 111, 119, 110, 97, 114, 114, 111, 119, 59, 1, 8597, 97, 114,
          112, 111, 111, 110, 4, 2, 108, 114, 18457, 18463, 101, 102, 116, 59,
          1, 8639, 105, 103, 104, 116, 59, 1, 8638, 117, 115, 59, 1, 8846, 105,
          4, 3, 59, 104, 108, 18484, 18486, 18489, 1, 965, 59, 1, 978, 111, 110,
          59, 1, 965, 112, 97, 114, 114, 111, 119, 115, 59, 1, 8648, 4, 3, 99,
          105, 116, 18512, 18537, 18542, 4, 2, 111, 114, 18518, 18532, 114, 110,
          4, 2, 59, 101, 18526, 18528, 1, 8989, 114, 59, 1, 8989, 111, 112, 59,
          1, 8974, 110, 103, 59, 1, 367, 114, 105, 59, 1, 9721, 99, 114, 59, 3,
          55349, 56522, 4, 3, 100, 105, 114, 18561, 18566, 18572, 111, 116, 59,
          1, 8944, 108, 100, 101, 59, 1, 361, 105, 4, 2, 59, 102, 18579, 18581,
          1, 9653, 59, 1, 9652, 4, 2, 97, 109, 18590, 18595, 114, 114, 59, 1,
          8648, 108, 5, 252, 1, 59, 18601, 1, 252, 97, 110, 103, 108, 101, 59,
          1, 10663, 4, 15, 65, 66, 68, 97, 99, 100, 101, 102, 108, 110, 111,
          112, 114, 115, 122, 18643, 18648, 18661, 18667, 18847, 18851, 18857,
          18904, 18909, 18915, 18931, 18937, 18943, 18949, 18996, 114, 114, 59,
          1, 8661, 97, 114, 4, 2, 59, 118, 18656, 18658, 1, 10984, 59, 1, 10985,
          97, 115, 104, 59, 1, 8872, 4, 2, 110, 114, 18673, 18679, 103, 114,
          116, 59, 1, 10652, 4, 7, 101, 107, 110, 112, 114, 115, 116, 18695,
          18704, 18711, 18720, 18742, 18754, 18810, 112, 115, 105, 108, 111,
          110, 59, 1, 1013, 97, 112, 112, 97, 59, 1, 1008, 111, 116, 104, 105,
          110, 103, 59, 1, 8709, 4, 3, 104, 105, 114, 18728, 18732, 18735, 105,
          59, 1, 981, 59, 1, 982, 111, 112, 116, 111, 59, 1, 8733, 4, 2, 59,
          104, 18748, 18750, 1, 8597, 111, 59, 1, 1009, 4, 2, 105, 117, 18760,
          18766, 103, 109, 97, 59, 1, 962, 4, 2, 98, 112, 18772, 18791, 115,
          101, 116, 110, 101, 113, 4, 2, 59, 113, 18784, 18787, 3, 8842, 65024,
          59, 3, 10955, 65024, 115, 101, 116, 110, 101, 113, 4, 2, 59, 113,
          18803, 18806, 3, 8843, 65024, 59, 3, 10956, 65024, 4, 2, 104, 114,
          18816, 18822, 101, 116, 97, 59, 1, 977, 105, 97, 110, 103, 108, 101,
          4, 2, 108, 114, 18834, 18840, 101, 102, 116, 59, 1, 8882, 105, 103,
          104, 116, 59, 1, 8883, 121, 59, 1, 1074, 97, 115, 104, 59, 1, 8866, 4,
          3, 101, 108, 114, 18865, 18884, 18890, 4, 3, 59, 98, 101, 18873,
          18875, 18880, 1, 8744, 97, 114, 59, 1, 8891, 113, 59, 1, 8794, 108,
          105, 112, 59, 1, 8942, 4, 2, 98, 116, 18896, 18901, 97, 114, 59, 1,
          124, 59, 1, 124, 114, 59, 3, 55349, 56627, 116, 114, 105, 59, 1, 8882,
          115, 117, 4, 2, 98, 112, 18923, 18927, 59, 3, 8834, 8402, 59, 3, 8835,
          8402, 112, 102, 59, 3, 55349, 56679, 114, 111, 112, 59, 1, 8733, 116,
          114, 105, 59, 1, 8883, 4, 2, 99, 117, 18955, 18960, 114, 59, 3, 55349,
          56523, 4, 2, 98, 112, 18966, 18981, 110, 4, 2, 69, 101, 18973, 18977,
          59, 3, 10955, 65024, 59, 3, 8842, 65024, 110, 4, 2, 69, 101, 18988,
          18992, 59, 3, 10956, 65024, 59, 3, 8843, 65024, 105, 103, 122, 97,
          103, 59, 1, 10650, 4, 7, 99, 101, 102, 111, 112, 114, 115, 19020,
          19026, 19061, 19066, 19072, 19075, 19089, 105, 114, 99, 59, 1, 373, 4,
          2, 100, 105, 19032, 19055, 4, 2, 98, 103, 19038, 19043, 97, 114, 59,
          1, 10847, 101, 4, 2, 59, 113, 19050, 19052, 1, 8743, 59, 1, 8793, 101,
          114, 112, 59, 1, 8472, 114, 59, 3, 55349, 56628, 112, 102, 59, 3,
          55349, 56680, 59, 1, 8472, 4, 2, 59, 101, 19081, 19083, 1, 8768, 97,
          116, 104, 59, 1, 8768, 99, 114, 59, 3, 55349, 56524, 4, 14, 99, 100,
          102, 104, 105, 108, 109, 110, 111, 114, 115, 117, 118, 119, 19125,
          19146, 19152, 19157, 19173, 19176, 19192, 19197, 19202, 19236, 19252,
          19269, 19286, 19291, 4, 3, 97, 105, 117, 19133, 19137, 19142, 112, 59,
          1, 8898, 114, 99, 59, 1, 9711, 112, 59, 1, 8899, 116, 114, 105, 59, 1,
          9661, 114, 59, 3, 55349, 56629, 4, 2, 65, 97, 19163, 19168, 114, 114,
          59, 1, 10234, 114, 114, 59, 1, 10231, 59, 1, 958, 4, 2, 65, 97, 19182,
          19187, 114, 114, 59, 1, 10232, 114, 114, 59, 1, 10229, 97, 112, 59, 1,
          10236, 105, 115, 59, 1, 8955, 4, 3, 100, 112, 116, 19210, 19215,
          19230, 111, 116, 59, 1, 10752, 4, 2, 102, 108, 19221, 19225, 59, 3,
          55349, 56681, 117, 115, 59, 1, 10753, 105, 109, 101, 59, 1, 10754, 4,
          2, 65, 97, 19242, 19247, 114, 114, 59, 1, 10233, 114, 114, 59, 1,
          10230, 4, 2, 99, 113, 19258, 19263, 114, 59, 3, 55349, 56525, 99, 117,
          112, 59, 1, 10758, 4, 2, 112, 116, 19275, 19281, 108, 117, 115, 59, 1,
          10756, 114, 105, 59, 1, 9651, 101, 101, 59, 1, 8897, 101, 100, 103,
          101, 59, 1, 8896, 4, 8, 97, 99, 101, 102, 105, 111, 115, 117, 19316,
          19335, 19349, 19357, 19362, 19367, 19373, 19379, 99, 4, 2, 117, 121,
          19323, 19332, 116, 101, 5, 253, 1, 59, 19330, 1, 253, 59, 1, 1103, 4,
          2, 105, 121, 19341, 19346, 114, 99, 59, 1, 375, 59, 1, 1099, 110, 5,
          165, 1, 59, 19355, 1, 165, 114, 59, 3, 55349, 56630, 99, 121, 59, 1,
          1111, 112, 102, 59, 3, 55349, 56682, 99, 114, 59, 3, 55349, 56526, 4,
          2, 99, 109, 19385, 19389, 121, 59, 1, 1102, 108, 5, 255, 1, 59, 19395,
          1, 255, 4, 10, 97, 99, 100, 101, 102, 104, 105, 111, 115, 119, 19419,
          19426, 19441, 19446, 19462, 19467, 19472, 19480, 19486, 19492, 99,
          117, 116, 101, 59, 1, 378, 4, 2, 97, 121, 19432, 19438, 114, 111, 110,
          59, 1, 382, 59, 1, 1079, 111, 116, 59, 1, 380, 4, 2, 101, 116, 19452,
          19458, 116, 114, 102, 59, 1, 8488, 97, 59, 1, 950, 114, 59, 3, 55349,
          56631, 99, 121, 59, 1, 1078, 103, 114, 97, 114, 114, 59, 1, 8669, 112,
          102, 59, 3, 55349, 56683, 99, 114, 59, 3, 55349, 56527, 4, 2, 106,
          110, 19498, 19501, 59, 1, 8205, 106, 59, 1, 8204,
        ]);
      },
      (e, t, n) => {
        "use strict";
        const i = n(11),
          r = i.TAG_NAMES,
          a = i.NAMESPACES;
        function o(e) {
          switch (e.length) {
            case 1:
              return e === r.P;
            case 2:
              return (
                e === r.RB ||
                e === r.RP ||
                e === r.RT ||
                e === r.DD ||
                e === r.DT ||
                e === r.LI
              );
            case 3:
              return e === r.RTC;
            case 6:
              return e === r.OPTION;
            case 8:
              return e === r.OPTGROUP;
          }
          return !1;
        }
        function s(e) {
          switch (e.length) {
            case 1:
              return e === r.P;
            case 2:
              return (
                e === r.RB ||
                e === r.RP ||
                e === r.RT ||
                e === r.DD ||
                e === r.DT ||
                e === r.LI ||
                e === r.TD ||
                e === r.TH ||
                e === r.TR
              );
            case 3:
              return e === r.RTC;
            case 5:
              return e === r.TBODY || e === r.TFOOT || e === r.THEAD;
            case 6:
              return e === r.OPTION;
            case 7:
              return e === r.CAPTION;
            case 8:
              return e === r.OPTGROUP || e === r.COLGROUP;
          }
          return !1;
        }
        function c(e, t) {
          switch (e.length) {
            case 2:
              if (e === r.TD || e === r.TH) return t === a.HTML;
              if (e === r.MI || e === r.MO || e === r.MN || e === r.MS)
                return t === a.MATHML;
              break;
            case 4:
              if (e === r.HTML) return t === a.HTML;
              if (e === r.DESC) return t === a.SVG;
              break;
            case 5:
              if (e === r.TABLE) return t === a.HTML;
              if (e === r.MTEXT) return t === a.MATHML;
              if (e === r.TITLE) return t === a.SVG;
              break;
            case 6:
              return (e === r.APPLET || e === r.OBJECT) && t === a.HTML;
            case 7:
              return (e === r.CAPTION || e === r.MARQUEE) && t === a.HTML;
            case 8:
              return e === r.TEMPLATE && t === a.HTML;
            case 13:
              return e === r.FOREIGN_OBJECT && t === a.SVG;
            case 14:
              return e === r.ANNOTATION_XML && t === a.MATHML;
          }
          return !1;
        }
        e.exports = class {
          constructor(e, t) {
            (this.stackTop = -1),
              (this.items = []),
              (this.current = e),
              (this.currentTagName = null),
              (this.currentTmplContent = null),
              (this.tmplCount = 0),
              (this.treeAdapter = t);
          }
          _indexOf(e) {
            let t = -1;
            for (let n = this.stackTop; n >= 0; n--)
              if (this.items[n] === e) {
                t = n;
                break;
              }
            return t;
          }
          _isInTemplate() {
            return (
              this.currentTagName === r.TEMPLATE &&
              this.treeAdapter.getNamespaceURI(this.current) === a.HTML
            );
          }
          _updateCurrentElement() {
            (this.current = this.items[this.stackTop]),
              (this.currentTagName =
                this.current && this.treeAdapter.getTagName(this.current)),
              (this.currentTmplContent = this._isInTemplate()
                ? this.treeAdapter.getTemplateContent(this.current)
                : null);
          }
          push(e) {
            (this.items[++this.stackTop] = e),
              this._updateCurrentElement(),
              this._isInTemplate() && this.tmplCount++;
          }
          pop() {
            this.stackTop--,
              this.tmplCount > 0 && this._isInTemplate() && this.tmplCount--,
              this._updateCurrentElement();
          }
          replace(e, t) {
            const n = this._indexOf(e);
            (this.items[n] = t),
              n === this.stackTop && this._updateCurrentElement();
          }
          insertAfter(e, t) {
            const n = this._indexOf(e) + 1;
            this.items.splice(n, 0, t),
              n === ++this.stackTop && this._updateCurrentElement();
          }
          popUntilTagNamePopped(e) {
            for (; this.stackTop > -1; ) {
              const t = this.currentTagName,
                n = this.treeAdapter.getNamespaceURI(this.current);
              if ((this.pop(), t === e && n === a.HTML)) break;
            }
          }
          popUntilElementPopped(e) {
            for (; this.stackTop > -1; ) {
              const t = this.current;
              if ((this.pop(), t === e)) break;
            }
          }
          popUntilNumberedHeaderPopped() {
            for (; this.stackTop > -1; ) {
              const e = this.currentTagName,
                t = this.treeAdapter.getNamespaceURI(this.current);
              if (
                (this.pop(),
                e === r.H1 ||
                  e === r.H2 ||
                  e === r.H3 ||
                  e === r.H4 ||
                  e === r.H5 ||
                  (e === r.H6 && t === a.HTML))
              )
                break;
            }
          }
          popUntilTableCellPopped() {
            for (; this.stackTop > -1; ) {
              const e = this.currentTagName,
                t = this.treeAdapter.getNamespaceURI(this.current);
              if ((this.pop(), e === r.TD || (e === r.TH && t === a.HTML)))
                break;
            }
          }
          popAllUpToHtmlElement() {
            (this.stackTop = 0), this._updateCurrentElement();
          }
          clearBackToTableContext() {
            for (
              ;
              (this.currentTagName !== r.TABLE &&
                this.currentTagName !== r.TEMPLATE &&
                this.currentTagName !== r.HTML) ||
              this.treeAdapter.getNamespaceURI(this.current) !== a.HTML;

            )
              this.pop();
          }
          clearBackToTableBodyContext() {
            for (
              ;
              (this.currentTagName !== r.TBODY &&
                this.currentTagName !== r.TFOOT &&
                this.currentTagName !== r.THEAD &&
                this.currentTagName !== r.TEMPLATE &&
                this.currentTagName !== r.HTML) ||
              this.treeAdapter.getNamespaceURI(this.current) !== a.HTML;

            )
              this.pop();
          }
          clearBackToTableRowContext() {
            for (
              ;
              (this.currentTagName !== r.TR &&
                this.currentTagName !== r.TEMPLATE &&
                this.currentTagName !== r.HTML) ||
              this.treeAdapter.getNamespaceURI(this.current) !== a.HTML;

            )
              this.pop();
          }
          remove(e) {
            for (let t = this.stackTop; t >= 0; t--)
              if (this.items[t] === e) {
                this.items.splice(t, 1),
                  this.stackTop--,
                  this._updateCurrentElement();
                break;
              }
          }
          tryPeekProperlyNestedBodyElement() {
            const e = this.items[1];
            return e && this.treeAdapter.getTagName(e) === r.BODY ? e : null;
          }
          contains(e) {
            return this._indexOf(e) > -1;
          }
          getCommonAncestor(e) {
            let t = this._indexOf(e);
            return --t >= 0 ? this.items[t] : null;
          }
          isRootHtmlElementCurrent() {
            return 0 === this.stackTop && this.currentTagName === r.HTML;
          }
          hasInScope(e) {
            for (let t = this.stackTop; t >= 0; t--) {
              const n = this.treeAdapter.getTagName(this.items[t]),
                i = this.treeAdapter.getNamespaceURI(this.items[t]);
              if (n === e && i === a.HTML) return !0;
              if (c(n, i)) return !1;
            }
            return !0;
          }
          hasNumberedHeaderInScope() {
            for (let e = this.stackTop; e >= 0; e--) {
              const t = this.treeAdapter.getTagName(this.items[e]),
                n = this.treeAdapter.getNamespaceURI(this.items[e]);
              if (
                (t === r.H1 ||
                  t === r.H2 ||
                  t === r.H3 ||
                  t === r.H4 ||
                  t === r.H5 ||
                  t === r.H6) &&
                n === a.HTML
              )
                return !0;
              if (c(t, n)) return !1;
            }
            return !0;
          }
          hasInListItemScope(e) {
            for (let t = this.stackTop; t >= 0; t--) {
              const n = this.treeAdapter.getTagName(this.items[t]),
                i = this.treeAdapter.getNamespaceURI(this.items[t]);
              if (n === e && i === a.HTML) return !0;
              if (((n === r.UL || n === r.OL) && i === a.HTML) || c(n, i))
                return !1;
            }
            return !0;
          }
          hasInButtonScope(e) {
            for (let t = this.stackTop; t >= 0; t--) {
              const n = this.treeAdapter.getTagName(this.items[t]),
                i = this.treeAdapter.getNamespaceURI(this.items[t]);
              if (n === e && i === a.HTML) return !0;
              if ((n === r.BUTTON && i === a.HTML) || c(n, i)) return !1;
            }
            return !0;
          }
          hasInTableScope(e) {
            for (let t = this.stackTop; t >= 0; t--) {
              const n = this.treeAdapter.getTagName(this.items[t]);
              if (this.treeAdapter.getNamespaceURI(this.items[t]) === a.HTML) {
                if (n === e) return !0;
                if (n === r.TABLE || n === r.TEMPLATE || n === r.HTML)
                  return !1;
              }
            }
            return !0;
          }
          hasTableBodyContextInTableScope() {
            for (let e = this.stackTop; e >= 0; e--) {
              const t = this.treeAdapter.getTagName(this.items[e]);
              if (this.treeAdapter.getNamespaceURI(this.items[e]) === a.HTML) {
                if (t === r.TBODY || t === r.THEAD || t === r.TFOOT) return !0;
                if (t === r.TABLE || t === r.HTML) return !1;
              }
            }
            return !0;
          }
          hasInSelectScope(e) {
            for (let t = this.stackTop; t >= 0; t--) {
              const n = this.treeAdapter.getTagName(this.items[t]);
              if (this.treeAdapter.getNamespaceURI(this.items[t]) === a.HTML) {
                if (n === e) return !0;
                if (n !== r.OPTION && n !== r.OPTGROUP) return !1;
              }
            }
            return !0;
          }
          generateImpliedEndTags() {
            for (; o(this.currentTagName); ) this.pop();
          }
          generateImpliedEndTagsThoroughly() {
            for (; s(this.currentTagName); ) this.pop();
          }
          generateImpliedEndTagsWithExclusion(e) {
            for (; o(this.currentTagName) && this.currentTagName !== e; )
              this.pop();
          }
        };
      },
      (e, t) => {
        "use strict";
        const n = (t.NAMESPACES = {
          HTML: "http://www.w3.org/1999/xhtml",
          MATHML: "http://www.w3.org/1998/Math/MathML",
          SVG: "http://www.w3.org/2000/svg",
          XLINK: "http://www.w3.org/1999/xlink",
          XML: "http://www.w3.org/XML/1998/namespace",
          XMLNS: "http://www.w3.org/2000/xmlns/",
        });
        (t.ATTRS = {
          TYPE: "type",
          ACTION: "action",
          ENCODING: "encoding",
          PROMPT: "prompt",
          NAME: "name",
          COLOR: "color",
          FACE: "face",
          SIZE: "size",
        }),
          (t.DOCUMENT_MODE = {
            NO_QUIRKS: "no-quirks",
            QUIRKS: "quirks",
            LIMITED_QUIRKS: "limited-quirks",
          });
        const i = (t.TAG_NAMES = {
          A: "a",
          ADDRESS: "address",
          ANNOTATION_XML: "annotation-xml",
          APPLET: "applet",
          AREA: "area",
          ARTICLE: "article",
          ASIDE: "aside",
          B: "b",
          BASE: "base",
          BASEFONT: "basefont",
          BGSOUND: "bgsound",
          BIG: "big",
          BLOCKQUOTE: "blockquote",
          BODY: "body",
          BR: "br",
          BUTTON: "button",
          CAPTION: "caption",
          CENTER: "center",
          CODE: "code",
          COL: "col",
          COLGROUP: "colgroup",
          DD: "dd",
          DESC: "desc",
          DETAILS: "details",
          DIALOG: "dialog",
          DIR: "dir",
          DIV: "div",
          DL: "dl",
          DT: "dt",
          EM: "em",
          EMBED: "embed",
          FIELDSET: "fieldset",
          FIGCAPTION: "figcaption",
          FIGURE: "figure",
          FONT: "font",
          FOOTER: "footer",
          FOREIGN_OBJECT: "foreignObject",
          FORM: "form",
          FRAME: "frame",
          FRAMESET: "frameset",
          H1: "h1",
          H2: "h2",
          H3: "h3",
          H4: "h4",
          H5: "h5",
          H6: "h6",
          HEAD: "head",
          HEADER: "header",
          HGROUP: "hgroup",
          HR: "hr",
          HTML: "html",
          I: "i",
          IMG: "img",
          IMAGE: "image",
          INPUT: "input",
          IFRAME: "iframe",
          KEYGEN: "keygen",
          LABEL: "label",
          LI: "li",
          LINK: "link",
          LISTING: "listing",
          MAIN: "main",
          MALIGNMARK: "malignmark",
          MARQUEE: "marquee",
          MATH: "math",
          MENU: "menu",
          META: "meta",
          MGLYPH: "mglyph",
          MI: "mi",
          MO: "mo",
          MN: "mn",
          MS: "ms",
          MTEXT: "mtext",
          NAV: "nav",
          NOBR: "nobr",
          NOFRAMES: "noframes",
          NOEMBED: "noembed",
          NOSCRIPT: "noscript",
          OBJECT: "object",
          OL: "ol",
          OPTGROUP: "optgroup",
          OPTION: "option",
          P: "p",
          PARAM: "param",
          PLAINTEXT: "plaintext",
          PRE: "pre",
          RB: "rb",
          RP: "rp",
          RT: "rt",
          RTC: "rtc",
          RUBY: "ruby",
          S: "s",
          SCRIPT: "script",
          SECTION: "section",
          SELECT: "select",
          SOURCE: "source",
          SMALL: "small",
          SPAN: "span",
          STRIKE: "strike",
          STRONG: "strong",
          STYLE: "style",
          SUB: "sub",
          SUMMARY: "summary",
          SUP: "sup",
          TABLE: "table",
          TBODY: "tbody",
          TEMPLATE: "template",
          TEXTAREA: "textarea",
          TFOOT: "tfoot",
          TD: "td",
          TH: "th",
          THEAD: "thead",
          TITLE: "title",
          TR: "tr",
          TRACK: "track",
          TT: "tt",
          U: "u",
          UL: "ul",
          SVG: "svg",
          VAR: "var",
          WBR: "wbr",
          XMP: "xmp",
        });
        t.SPECIAL_ELEMENTS = {
          [n.HTML]: {
            [i.ADDRESS]: !0,
            [i.APPLET]: !0,
            [i.AREA]: !0,
            [i.ARTICLE]: !0,
            [i.ASIDE]: !0,
            [i.BASE]: !0,
            [i.BASEFONT]: !0,
            [i.BGSOUND]: !0,
            [i.BLOCKQUOTE]: !0,
            [i.BODY]: !0,
            [i.BR]: !0,
            [i.BUTTON]: !0,
            [i.CAPTION]: !0,
            [i.CENTER]: !0,
            [i.COL]: !0,
            [i.COLGROUP]: !0,
            [i.DD]: !0,
            [i.DETAILS]: !0,
            [i.DIR]: !0,
            [i.DIV]: !0,
            [i.DL]: !0,
            [i.DT]: !0,
            [i.EMBED]: !0,
            [i.FIELDSET]: !0,
            [i.FIGCAPTION]: !0,
            [i.FIGURE]: !0,
            [i.FOOTER]: !0,
            [i.FORM]: !0,
            [i.FRAME]: !0,
            [i.FRAMESET]: !0,
            [i.H1]: !0,
            [i.H2]: !0,
            [i.H3]: !0,
            [i.H4]: !0,
            [i.H5]: !0,
            [i.H6]: !0,
            [i.HEAD]: !0,
            [i.HEADER]: !0,
            [i.HGROUP]: !0,
            [i.HR]: !0,
            [i.HTML]: !0,
            [i.IFRAME]: !0,
            [i.IMG]: !0,
            [i.INPUT]: !0,
            [i.LI]: !0,
            [i.LINK]: !0,
            [i.LISTING]: !0,
            [i.MAIN]: !0,
            [i.MARQUEE]: !0,
            [i.MENU]: !0,
            [i.META]: !0,
            [i.NAV]: !0,
            [i.NOEMBED]: !0,
            [i.NOFRAMES]: !0,
            [i.NOSCRIPT]: !0,
            [i.OBJECT]: !0,
            [i.OL]: !0,
            [i.P]: !0,
            [i.PARAM]: !0,
            [i.PLAINTEXT]: !0,
            [i.PRE]: !0,
            [i.SCRIPT]: !0,
            [i.SECTION]: !0,
            [i.SELECT]: !0,
            [i.SOURCE]: !0,
            [i.STYLE]: !0,
            [i.SUMMARY]: !0,
            [i.TABLE]: !0,
            [i.TBODY]: !0,
            [i.TD]: !0,
            [i.TEMPLATE]: !0,
            [i.TEXTAREA]: !0,
            [i.TFOOT]: !0,
            [i.TH]: !0,
            [i.THEAD]: !0,
            [i.TITLE]: !0,
            [i.TR]: !0,
            [i.TRACK]: !0,
            [i.UL]: !0,
            [i.WBR]: !0,
            [i.XMP]: !0,
          },
          [n.MATHML]: {
            [i.MI]: !0,
            [i.MO]: !0,
            [i.MN]: !0,
            [i.MS]: !0,
            [i.MTEXT]: !0,
            [i.ANNOTATION_XML]: !0,
          },
          [n.SVG]: { [i.TITLE]: !0, [i.FOREIGN_OBJECT]: !0, [i.DESC]: !0 },
        };
      },
      (e) => {
        "use strict";
        class t {
          constructor(e) {
            (this.length = 0),
              (this.entries = []),
              (this.treeAdapter = e),
              (this.bookmark = null);
          }
          _getNoahArkConditionCandidates(e) {
            const n = [];
            if (this.length >= 3) {
              const i = this.treeAdapter.getAttrList(e).length,
                r = this.treeAdapter.getTagName(e),
                a = this.treeAdapter.getNamespaceURI(e);
              for (let e = this.length - 1; e >= 0; e--) {
                const o = this.entries[e];
                if (o.type === t.MARKER_ENTRY) break;
                const s = o.element,
                  c = this.treeAdapter.getAttrList(s);
                this.treeAdapter.getTagName(s) === r &&
                  this.treeAdapter.getNamespaceURI(s) === a &&
                  c.length === i &&
                  n.push({ idx: e, attrs: c });
              }
            }
            return n.length < 3 ? [] : n;
          }
          _ensureNoahArkCondition(e) {
            const t = this._getNoahArkConditionCandidates(e);
            let n = t.length;
            if (n) {
              const i = this.treeAdapter.getAttrList(e),
                r = i.length,
                a = Object.create(null);
              for (let e = 0; e < r; e++) {
                const t = i[e];
                a[t.name] = t.value;
              }
              for (let e = 0; e < r; e++)
                for (let i = 0; i < n; i++) {
                  const r = t[i].attrs[e];
                  if (
                    (a[r.name] !== r.value && (t.splice(i, 1), n--),
                    t.length < 3)
                  )
                    return;
                }
              for (let e = n - 1; e >= 2; e--)
                this.entries.splice(t[e].idx, 1), this.length--;
            }
          }
          insertMarker() {
            this.entries.push({ type: t.MARKER_ENTRY }), this.length++;
          }
          pushElement(e, n) {
            this._ensureNoahArkCondition(e),
              this.entries.push({
                type: t.ELEMENT_ENTRY,
                element: e,
                token: n,
              }),
              this.length++;
          }
          insertElementAfterBookmark(e, n) {
            let i = this.length - 1;
            for (; i >= 0 && this.entries[i] !== this.bookmark; i--);
            this.entries.splice(i + 1, 0, {
              type: t.ELEMENT_ENTRY,
              element: e,
              token: n,
            }),
              this.length++;
          }
          removeEntry(e) {
            for (let t = this.length - 1; t >= 0; t--)
              if (this.entries[t] === e) {
                this.entries.splice(t, 1), this.length--;
                break;
              }
          }
          clearToLastMarker() {
            for (; this.length; ) {
              const e = this.entries.pop();
              if ((this.length--, e.type === t.MARKER_ENTRY)) break;
            }
          }
          getElementEntryInScopeWithTagName(e) {
            for (let n = this.length - 1; n >= 0; n--) {
              const i = this.entries[n];
              if (i.type === t.MARKER_ENTRY) return null;
              if (this.treeAdapter.getTagName(i.element) === e) return i;
            }
            return null;
          }
          getElementEntry(e) {
            for (let n = this.length - 1; n >= 0; n--) {
              const i = this.entries[n];
              if (i.type === t.ELEMENT_ENTRY && i.element === e) return i;
            }
            return null;
          }
        }
        (t.MARKER_ENTRY = "MARKER_ENTRY"),
          (t.ELEMENT_ENTRY = "ELEMENT_ENTRY"),
          (e.exports = t);
      },
      (e, t, n) => {
        "use strict";
        const i = n(14),
          r = n(5),
          a = n(15),
          o = n(17),
          s = n(11).TAG_NAMES;
        e.exports = class extends i {
          constructor(e) {
            super(e),
              (this.parser = e),
              (this.treeAdapter = this.parser.treeAdapter),
              (this.posTracker = null),
              (this.lastStartTagToken = null),
              (this.lastFosterParentingLocation = null),
              (this.currentToken = null);
          }
          _setStartLocation(e) {
            let t = null;
            this.lastStartTagToken &&
              ((t = Object.assign({}, this.lastStartTagToken.location)),
              (t.startTag = this.lastStartTagToken.location)),
              this.treeAdapter.setNodeSourceCodeLocation(e, t);
          }
          _setEndLocation(e, t) {
            if (this.treeAdapter.getNodeSourceCodeLocation(e) && t.location) {
              const n = t.location,
                i = this.treeAdapter.getTagName(e),
                a = {};
              t.type === r.END_TAG_TOKEN && i === t.tagName
                ? ((a.endTag = Object.assign({}, n)),
                  (a.endLine = n.endLine),
                  (a.endCol = n.endCol),
                  (a.endOffset = n.endOffset))
                : ((a.endLine = n.startLine),
                  (a.endCol = n.startCol),
                  (a.endOffset = n.startOffset)),
                this.treeAdapter.updateNodeSourceCodeLocation(e, a);
            }
          }
          _getOverriddenMethods(e, t) {
            return {
              _bootstrap(n, r) {
                t._bootstrap.call(this, n, r),
                  (e.lastStartTagToken = null),
                  (e.lastFosterParentingLocation = null),
                  (e.currentToken = null);
                const s = i.install(this.tokenizer, a);
                (e.posTracker = s.posTracker),
                  i.install(this.openElements, o, {
                    onItemPop: function (t) {
                      e._setEndLocation(t, e.currentToken);
                    },
                  });
              },
              _runParsingLoop(n) {
                t._runParsingLoop.call(this, n);
                for (let t = this.openElements.stackTop; t >= 0; t--)
                  e._setEndLocation(this.openElements.items[t], e.currentToken);
              },
              _processTokenInForeignContent(n) {
                (e.currentToken = n),
                  t._processTokenInForeignContent.call(this, n);
              },
              _processToken(n) {
                (e.currentToken = n), t._processToken.call(this, n);
                if (
                  n.type === r.END_TAG_TOKEN &&
                  (n.tagName === s.HTML ||
                    (n.tagName === s.BODY &&
                      this.openElements.hasInScope(s.BODY)))
                )
                  for (let t = this.openElements.stackTop; t >= 0; t--) {
                    const i = this.openElements.items[t];
                    if (this.treeAdapter.getTagName(i) === n.tagName) {
                      e._setEndLocation(i, n);
                      break;
                    }
                  }
              },
              _setDocumentType(e) {
                t._setDocumentType.call(this, e);
                const n = this.treeAdapter.getChildNodes(this.document),
                  i = n.length;
                for (let t = 0; t < i; t++) {
                  const i = n[t];
                  if (this.treeAdapter.isDocumentTypeNode(i)) {
                    this.treeAdapter.setNodeSourceCodeLocation(i, e.location);
                    break;
                  }
                }
              },
              _attachElementToTree(n) {
                e._setStartLocation(n),
                  (e.lastStartTagToken = null),
                  t._attachElementToTree.call(this, n);
              },
              _appendElement(n, i) {
                (e.lastStartTagToken = n), t._appendElement.call(this, n, i);
              },
              _insertElement(n, i) {
                (e.lastStartTagToken = n), t._insertElement.call(this, n, i);
              },
              _insertTemplate(n) {
                (e.lastStartTagToken = n), t._insertTemplate.call(this, n);
                const i = this.treeAdapter.getTemplateContent(
                  this.openElements.current,
                );
                this.treeAdapter.setNodeSourceCodeLocation(i, null);
              },
              _insertFakeRootElement() {
                t._insertFakeRootElement.call(this),
                  this.treeAdapter.setNodeSourceCodeLocation(
                    this.openElements.current,
                    null,
                  );
              },
              _appendCommentNode(e, n) {
                t._appendCommentNode.call(this, e, n);
                const i = this.treeAdapter.getChildNodes(n),
                  r = i[i.length - 1];
                this.treeAdapter.setNodeSourceCodeLocation(r, e.location);
              },
              _findFosterParentingLocation() {
                return (
                  (e.lastFosterParentingLocation =
                    t._findFosterParentingLocation.call(this)),
                  e.lastFosterParentingLocation
                );
              },
              _insertCharacters(n) {
                t._insertCharacters.call(this, n);
                const i = this._shouldFosterParentOnInsertion(),
                  r =
                    (i && e.lastFosterParentingLocation.parent) ||
                    this.openElements.currentTmplContent ||
                    this.openElements.current,
                  a = this.treeAdapter.getChildNodes(r),
                  o =
                    i && e.lastFosterParentingLocation.beforeElement
                      ? a.indexOf(e.lastFosterParentingLocation.beforeElement) -
                        1
                      : a.length - 1,
                  s = a[o];
                if (this.treeAdapter.getNodeSourceCodeLocation(s)) {
                  const { endLine: e, endCol: t, endOffset: i } = n.location;
                  this.treeAdapter.updateNodeSourceCodeLocation(s, {
                    endLine: e,
                    endCol: t,
                    endOffset: i,
                  });
                } else
                  this.treeAdapter.setNodeSourceCodeLocation(s, n.location);
              },
            };
          }
        };
      },
      (e) => {
        "use strict";
        class t {
          constructor(e) {
            const t = {},
              n = this._getOverriddenMethods(this, t);
            for (const i of Object.keys(n))
              "function" == typeof n[i] && ((t[i] = e[i]), (e[i] = n[i]));
          }
          _getOverriddenMethods() {
            throw new Error("Not implemented");
          }
        }
        (t.install = function (e, t, n) {
          e.__mixins || (e.__mixins = []);
          for (let n = 0; n < e.__mixins.length; n++)
            if (e.__mixins[n].constructor === t) return e.__mixins[n];
          const i = new t(e, n);
          return e.__mixins.push(i), i;
        }),
          (e.exports = t);
      },
      (e, t, n) => {
        "use strict";
        const i = n(14),
          r = n(5),
          a = n(16);
        e.exports = class extends i {
          constructor(e) {
            super(e),
              (this.tokenizer = e),
              (this.posTracker = i.install(e.preprocessor, a)),
              (this.currentAttrLocation = null),
              (this.ctLoc = null);
          }
          _getCurrentLocation() {
            return {
              startLine: this.posTracker.line,
              startCol: this.posTracker.col,
              startOffset: this.posTracker.offset,
              endLine: -1,
              endCol: -1,
              endOffset: -1,
            };
          }
          _attachCurrentAttrLocationInfo() {
            (this.currentAttrLocation.endLine = this.posTracker.line),
              (this.currentAttrLocation.endCol = this.posTracker.col),
              (this.currentAttrLocation.endOffset = this.posTracker.offset);
            const e = this.tokenizer.currentToken,
              t = this.tokenizer.currentAttr;
            e.location.attrs || (e.location.attrs = Object.create(null)),
              (e.location.attrs[t.name] = this.currentAttrLocation);
          }
          _getOverriddenMethods(e, t) {
            const n = {
              _createStartTagToken() {
                t._createStartTagToken.call(this),
                  (this.currentToken.location = e.ctLoc);
              },
              _createEndTagToken() {
                t._createEndTagToken.call(this),
                  (this.currentToken.location = e.ctLoc);
              },
              _createCommentToken() {
                t._createCommentToken.call(this),
                  (this.currentToken.location = e.ctLoc);
              },
              _createDoctypeToken(n) {
                t._createDoctypeToken.call(this, n),
                  (this.currentToken.location = e.ctLoc);
              },
              _createCharacterToken(n, i) {
                t._createCharacterToken.call(this, n, i),
                  (this.currentCharacterToken.location = e.ctLoc);
              },
              _createEOFToken() {
                t._createEOFToken.call(this),
                  (this.currentToken.location = e._getCurrentLocation());
              },
              _createAttr(n) {
                t._createAttr.call(this, n),
                  (e.currentAttrLocation = e._getCurrentLocation());
              },
              _leaveAttrName(n) {
                t._leaveAttrName.call(this, n),
                  e._attachCurrentAttrLocationInfo();
              },
              _leaveAttrValue(n) {
                t._leaveAttrValue.call(this, n),
                  e._attachCurrentAttrLocationInfo();
              },
              _emitCurrentToken() {
                const n = this.currentToken.location;
                this.currentCharacterToken &&
                  ((this.currentCharacterToken.location.endLine = n.startLine),
                  (this.currentCharacterToken.location.endCol = n.startCol),
                  (this.currentCharacterToken.location.endOffset =
                    n.startOffset)),
                  this.currentToken.type === r.EOF_TOKEN
                    ? ((n.endLine = n.startLine),
                      (n.endCol = n.startCol),
                      (n.endOffset = n.startOffset))
                    : ((n.endLine = e.posTracker.line),
                      (n.endCol = e.posTracker.col + 1),
                      (n.endOffset = e.posTracker.offset + 1)),
                  t._emitCurrentToken.call(this);
              },
              _emitCurrentCharacterToken() {
                const n =
                  this.currentCharacterToken &&
                  this.currentCharacterToken.location;
                n &&
                  -1 === n.endOffset &&
                  ((n.endLine = e.posTracker.line),
                  (n.endCol = e.posTracker.col),
                  (n.endOffset = e.posTracker.offset)),
                  t._emitCurrentCharacterToken.call(this);
              },
            };
            return (
              Object.keys(r.MODE).forEach((i) => {
                const a = r.MODE[i];
                n[a] = function (n) {
                  (e.ctLoc = e._getCurrentLocation()), t[a].call(this, n);
                };
              }),
              n
            );
          }
        };
      },
      (e, t, n) => {
        "use strict";
        const i = n(14);
        e.exports = class extends i {
          constructor(e) {
            super(e),
              (this.preprocessor = e),
              (this.isEol = !1),
              (this.lineStartPos = 0),
              (this.droppedBufferSize = 0),
              (this.offset = 0),
              (this.col = 0),
              (this.line = 1);
          }
          _getOverriddenMethods(e, t) {
            return {
              advance() {
                const n = this.pos + 1,
                  i = this.html[n];
                return (
                  e.isEol && ((e.isEol = !1), e.line++, (e.lineStartPos = n)),
                  ("\n" === i || ("\r" === i && "\n" !== this.html[n + 1])) &&
                    (e.isEol = !0),
                  (e.col = n - e.lineStartPos + 1),
                  (e.offset = e.droppedBufferSize + n),
                  t.advance.call(this)
                );
              },
              retreat() {
                t.retreat.call(this),
                  (e.isEol = !1),
                  (e.col = this.pos - e.lineStartPos + 1);
              },
              dropParsedChunk() {
                const n = this.pos;
                t.dropParsedChunk.call(this);
                const i = n - this.pos;
                (e.lineStartPos -= i),
                  (e.droppedBufferSize += i),
                  (e.offset = e.droppedBufferSize + this.pos);
              },
            };
          }
        };
      },
      (e, t, n) => {
        "use strict";
        const i = n(14);
        e.exports = class extends i {
          constructor(e, t) {
            super(e), (this.onItemPop = t.onItemPop);
          }
          _getOverriddenMethods(e, t) {
            return {
              pop() {
                e.onItemPop(this.current), t.pop.call(this);
              },
              popAllUpToHtmlElement() {
                for (let t = this.stackTop; t > 0; t--)
                  e.onItemPop(this.items[t]);
                t.popAllUpToHtmlElement.call(this);
              },
              remove(n) {
                e.onItemPop(this.current), t.remove.call(this, n);
              },
            };
          }
        };
      },
      (e, t, n) => {
        "use strict";
        const i = n(19),
          r = n(20),
          a = n(15),
          o = n(14);
        e.exports = class extends i {
          constructor(e, t) {
            super(e, t),
              (this.opts = t),
              (this.ctLoc = null),
              (this.locBeforeToken = !1);
          }
          _setErrorLocation(e) {
            this.ctLoc &&
              ((e.startLine = this.ctLoc.startLine),
              (e.startCol = this.ctLoc.startCol),
              (e.startOffset = this.ctLoc.startOffset),
              (e.endLine = this.locBeforeToken
                ? this.ctLoc.startLine
                : this.ctLoc.endLine),
              (e.endCol = this.locBeforeToken
                ? this.ctLoc.startCol
                : this.ctLoc.endCol),
              (e.endOffset = this.locBeforeToken
                ? this.ctLoc.startOffset
                : this.ctLoc.endOffset));
          }
          _getOverriddenMethods(e, t) {
            return {
              _bootstrap(n, i) {
                t._bootstrap.call(this, n, i),
                  o.install(this.tokenizer, r, e.opts),
                  o.install(this.tokenizer, a);
              },
              _processInputToken(n) {
                (e.ctLoc = n.location), t._processInputToken.call(this, n);
              },
              _err(t, n) {
                (e.locBeforeToken = n && n.beforeToken), e._reportError(t);
              },
            };
          }
        };
      },
      (e, t, n) => {
        "use strict";
        const i = n(14);
        e.exports = class extends i {
          constructor(e, t) {
            super(e),
              (this.posTracker = null),
              (this.onParseError = t.onParseError);
          }
          _setErrorLocation(e) {
            (e.startLine = e.endLine = this.posTracker.line),
              (e.startCol = e.endCol = this.posTracker.col),
              (e.startOffset = e.endOffset = this.posTracker.offset);
          }
          _reportError(e) {
            const t = {
              code: e,
              startLine: -1,
              startCol: -1,
              startOffset: -1,
              endLine: -1,
              endCol: -1,
              endOffset: -1,
            };
            this._setErrorLocation(t), this.onParseError(t);
          }
          _getOverriddenMethods(e) {
            return {
              _err(t) {
                e._reportError(t);
              },
            };
          }
        };
      },
      (e, t, n) => {
        "use strict";
        const i = n(19),
          r = n(21),
          a = n(14);
        e.exports = class extends i {
          constructor(e, t) {
            super(e, t);
            const n = a.install(e.preprocessor, r, t);
            this.posTracker = n.posTracker;
          }
        };
      },
      (e, t, n) => {
        "use strict";
        const i = n(19),
          r = n(16),
          a = n(14);
        e.exports = class extends i {
          constructor(e, t) {
            super(e, t),
              (this.posTracker = a.install(e, r)),
              (this.lastErrOffset = -1);
          }
          _reportError(e) {
            this.lastErrOffset !== this.posTracker.offset &&
              ((this.lastErrOffset = this.posTracker.offset),
              super._reportError(e));
          }
        };
      },
      (e, t, n) => {
        "use strict";
        const { DOCUMENT_MODE: i } = n(11);
        (t.createDocument = function () {
          return { nodeName: "#document", mode: i.NO_QUIRKS, childNodes: [] };
        }),
          (t.createDocumentFragment = function () {
            return { nodeName: "#document-fragment", childNodes: [] };
          }),
          (t.createElement = function (e, t, n) {
            return {
              nodeName: e,
              tagName: e,
              attrs: n,
              namespaceURI: t,
              childNodes: [],
              parentNode: null,
            };
          }),
          (t.createCommentNode = function (e) {
            return { nodeName: "#comment", data: e, parentNode: null };
          });
        const r = function (e) {
            return { nodeName: "#text", value: e, parentNode: null };
          },
          a = (t.appendChild = function (e, t) {
            e.childNodes.push(t), (t.parentNode = e);
          }),
          o = (t.insertBefore = function (e, t, n) {
            const i = e.childNodes.indexOf(n);
            e.childNodes.splice(i, 0, t), (t.parentNode = e);
          });
        (t.setTemplateContent = function (e, t) {
          e.content = t;
        }),
          (t.getTemplateContent = function (e) {
            return e.content;
          }),
          (t.setDocumentType = function (e, t, n, i) {
            let r = null;
            for (let t = 0; t < e.childNodes.length; t++)
              if ("#documentType" === e.childNodes[t].nodeName) {
                r = e.childNodes[t];
                break;
              }
            r
              ? ((r.name = t), (r.publicId = n), (r.systemId = i))
              : a(e, {
                  nodeName: "#documentType",
                  name: t,
                  publicId: n,
                  systemId: i,
                });
          }),
          (t.setDocumentMode = function (e, t) {
            e.mode = t;
          }),
          (t.getDocumentMode = function (e) {
            return e.mode;
          }),
          (t.detachNode = function (e) {
            if (e.parentNode) {
              const t = e.parentNode.childNodes.indexOf(e);
              e.parentNode.childNodes.splice(t, 1), (e.parentNode = null);
            }
          }),
          (t.insertText = function (e, t) {
            if (e.childNodes.length) {
              const n = e.childNodes[e.childNodes.length - 1];
              if ("#text" === n.nodeName) return void (n.value += t);
            }
            a(e, r(t));
          }),
          (t.insertTextBefore = function (e, t, n) {
            const i = e.childNodes[e.childNodes.indexOf(n) - 1];
            i && "#text" === i.nodeName ? (i.value += t) : o(e, r(t), n);
          }),
          (t.adoptAttributes = function (e, t) {
            const n = [];
            for (let t = 0; t < e.attrs.length; t++) n.push(e.attrs[t].name);
            for (let i = 0; i < t.length; i++)
              -1 === n.indexOf(t[i].name) && e.attrs.push(t[i]);
          }),
          (t.getFirstChild = function (e) {
            return e.childNodes[0];
          }),
          (t.getChildNodes = function (e) {
            return e.childNodes;
          }),
          (t.getParentNode = function (e) {
            return e.parentNode;
          }),
          (t.getAttrList = function (e) {
            return e.attrs;
          }),
          (t.getTagName = function (e) {
            return e.tagName;
          }),
          (t.getNamespaceURI = function (e) {
            return e.namespaceURI;
          }),
          (t.getTextNodeContent = function (e) {
            return e.value;
          }),
          (t.getCommentNodeContent = function (e) {
            return e.data;
          }),
          (t.getDocumentTypeNodeName = function (e) {
            return e.name;
          }),
          (t.getDocumentTypeNodePublicId = function (e) {
            return e.publicId;
          }),
          (t.getDocumentTypeNodeSystemId = function (e) {
            return e.systemId;
          }),
          (t.isTextNode = function (e) {
            return "#text" === e.nodeName;
          }),
          (t.isCommentNode = function (e) {
            return "#comment" === e.nodeName;
          }),
          (t.isDocumentTypeNode = function (e) {
            return "#documentType" === e.nodeName;
          }),
          (t.isElementNode = function (e) {
            return !!e.tagName;
          }),
          (t.setNodeSourceCodeLocation = function (e, t) {
            e.sourceCodeLocation = t;
          }),
          (t.getNodeSourceCodeLocation = function (e) {
            return e.sourceCodeLocation;
          }),
          (t.updateNodeSourceCodeLocation = function (e, t) {
            e.sourceCodeLocation = Object.assign(e.sourceCodeLocation, t);
          });
      },
      (e) => {
        "use strict";
        e.exports = function (e, t) {
          return [e, (t = t || Object.create(null))].reduce(
            (e, t) => (
              Object.keys(t).forEach((n) => {
                e[n] = t[n];
              }),
              e
            ),
            Object.create(null),
          );
        };
      },
      (e, t, n) => {
        "use strict";
        const { DOCUMENT_MODE: i } = n(11),
          r = "html",
          a = [
            "+//silmaril//dtd html pro v0r11 19970101//",
            "-//as//dtd html 3.0 aswedit + extensions//",
            "-//advasoft ltd//dtd html 3.0 aswedit + extensions//",
            "-//ietf//dtd html 2.0 level 1//",
            "-//ietf//dtd html 2.0 level 2//",
            "-//ietf//dtd html 2.0 strict level 1//",
            "-//ietf//dtd html 2.0 strict level 2//",
            "-//ietf//dtd html 2.0 strict//",
            "-//ietf//dtd html 2.0//",
            "-//ietf//dtd html 2.1e//",
            "-//ietf//dtd html 3.0//",
            "-//ietf//dtd html 3.2 final//",
            "-//ietf//dtd html 3.2//",
            "-//ietf//dtd html 3//",
            "-//ietf//dtd html level 0//",
            "-//ietf//dtd html level 1//",
            "-//ietf//dtd html level 2//",
            "-//ietf//dtd html level 3//",
            "-//ietf//dtd html strict level 0//",
            "-//ietf//dtd html strict level 1//",
            "-//ietf//dtd html strict level 2//",
            "-//ietf//dtd html strict level 3//",
            "-//ietf//dtd html strict//",
            "-//ietf//dtd html//",
            "-//metrius//dtd metrius presentational//",
            "-//microsoft//dtd internet explorer 2.0 html strict//",
            "-//microsoft//dtd internet explorer 2.0 html//",
            "-//microsoft//dtd internet explorer 2.0 tables//",
            "-//microsoft//dtd internet explorer 3.0 html strict//",
            "-//microsoft//dtd internet explorer 3.0 html//",
            "-//microsoft//dtd internet explorer 3.0 tables//",
            "-//netscape comm. corp.//dtd html//",
            "-//netscape comm. corp.//dtd strict html//",
            "-//o'reilly and associates//dtd html 2.0//",
            "-//o'reilly and associates//dtd html extended 1.0//",
            "-//o'reilly and associates//dtd html extended relaxed 1.0//",
            "-//sq//dtd html 2.0 hotmetal + extensions//",
            "-//softquad software//dtd hotmetal pro 6.0::19990601::extensions to html 4.0//",
            "-//softquad//dtd hotmetal pro 4.0::19971010::extensions to html 4.0//",
            "-//spyglass//dtd html 2.0 extended//",
            "-//sun microsystems corp.//dtd hotjava html//",
            "-//sun microsystems corp.//dtd hotjava strict html//",
            "-//w3c//dtd html 3 1995-03-24//",
            "-//w3c//dtd html 3.2 draft//",
            "-//w3c//dtd html 3.2 final//",
            "-//w3c//dtd html 3.2//",
            "-//w3c//dtd html 3.2s draft//",
            "-//w3c//dtd html 4.0 frameset//",
            "-//w3c//dtd html 4.0 transitional//",
            "-//w3c//dtd html experimental 19960712//",
            "-//w3c//dtd html experimental 970421//",
            "-//w3c//dtd w3 html//",
            "-//w3o//dtd w3 html 3.0//",
            "-//webtechs//dtd mozilla html 2.0//",
            "-//webtechs//dtd mozilla html//",
          ],
          o = a.concat([
            "-//w3c//dtd html 4.01 frameset//",
            "-//w3c//dtd html 4.01 transitional//",
          ]),
          s = [
            "-//w3o//dtd w3 html strict 3.0//en//",
            "-/w3c/dtd html 4.0 transitional/en",
            "html",
          ],
          c = [
            "-//w3c//dtd xhtml 1.0 frameset//",
            "-//w3c//dtd xhtml 1.0 transitional//",
          ],
          l = c.concat([
            "-//w3c//dtd html 4.01 frameset//",
            "-//w3c//dtd html 4.01 transitional//",
          ]);
        function u(e) {
          const t = -1 !== e.indexOf('"') ? "'" : '"';
          return t + e + t;
        }
        function p(e, t) {
          for (let n = 0; n < t.length; n++)
            if (0 === e.indexOf(t[n])) return !0;
          return !1;
        }
        (t.isConforming = function (e) {
          return (
            e.name === r &&
            null === e.publicId &&
            (null === e.systemId || "about:legacy-compat" === e.systemId)
          );
        }),
          (t.getDocumentMode = function (e) {
            if (e.name !== r) return i.QUIRKS;
            const t = e.systemId;
            if (
              t &&
              "http://www.ibm.com/data/dtd/v11/ibmxhtml1-transitional.dtd" ===
                t.toLowerCase()
            )
              return i.QUIRKS;
            let n = e.publicId;
            if (null !== n) {
              if (((n = n.toLowerCase()), s.indexOf(n) > -1)) return i.QUIRKS;
              let e = null === t ? o : a;
              if (p(n, e)) return i.QUIRKS;
              if (((e = null === t ? c : l), p(n, e))) return i.LIMITED_QUIRKS;
            }
            return i.NO_QUIRKS;
          }),
          (t.serializeContent = function (e, t, n) {
            let i = "!DOCTYPE ";
            return (
              e && (i += e),
              t ? (i += " PUBLIC " + u(t)) : n && (i += " SYSTEM"),
              null !== n && (i += " " + u(n)),
              i
            );
          });
      },
      (e, t, n) => {
        "use strict";
        const i = n(5),
          r = n(11),
          a = r.TAG_NAMES,
          o = r.NAMESPACES,
          s = r.ATTRS,
          c = "text/html",
          l = "application/xhtml+xml",
          u = {
            attributename: "attributeName",
            attributetype: "attributeType",
            basefrequency: "baseFrequency",
            baseprofile: "baseProfile",
            calcmode: "calcMode",
            clippathunits: "clipPathUnits",
            diffuseconstant: "diffuseConstant",
            edgemode: "edgeMode",
            filterunits: "filterUnits",
            glyphref: "glyphRef",
            gradienttransform: "gradientTransform",
            gradientunits: "gradientUnits",
            kernelmatrix: "kernelMatrix",
            kernelunitlength: "kernelUnitLength",
            keypoints: "keyPoints",
            keysplines: "keySplines",
            keytimes: "keyTimes",
            lengthadjust: "lengthAdjust",
            limitingconeangle: "limitingConeAngle",
            markerheight: "markerHeight",
            markerunits: "markerUnits",
            markerwidth: "markerWidth",
            maskcontentunits: "maskContentUnits",
            maskunits: "maskUnits",
            numoctaves: "numOctaves",
            pathlength: "pathLength",
            patterncontentunits: "patternContentUnits",
            patterntransform: "patternTransform",
            patternunits: "patternUnits",
            pointsatx: "pointsAtX",
            pointsaty: "pointsAtY",
            pointsatz: "pointsAtZ",
            preservealpha: "preserveAlpha",
            preserveaspectratio: "preserveAspectRatio",
            primitiveunits: "primitiveUnits",
            refx: "refX",
            refy: "refY",
            repeatcount: "repeatCount",
            repeatdur: "repeatDur",
            requiredextensions: "requiredExtensions",
            requiredfeatures: "requiredFeatures",
            specularconstant: "specularConstant",
            specularexponent: "specularExponent",
            spreadmethod: "spreadMethod",
            startoffset: "startOffset",
            stddeviation: "stdDeviation",
            stitchtiles: "stitchTiles",
            surfacescale: "surfaceScale",
            systemlanguage: "systemLanguage",
            tablevalues: "tableValues",
            targetx: "targetX",
            targety: "targetY",
            textlength: "textLength",
            viewbox: "viewBox",
            viewtarget: "viewTarget",
            xchannelselector: "xChannelSelector",
            ychannelselector: "yChannelSelector",
            zoomandpan: "zoomAndPan",
          },
          p = {
            "xlink:actuate": {
              prefix: "xlink",
              name: "actuate",
              namespace: o.XLINK,
            },
            "xlink:arcrole": {
              prefix: "xlink",
              name: "arcrole",
              namespace: o.XLINK,
            },
            "xlink:href": { prefix: "xlink", name: "href", namespace: o.XLINK },
            "xlink:role": { prefix: "xlink", name: "role", namespace: o.XLINK },
            "xlink:show": { prefix: "xlink", name: "show", namespace: o.XLINK },
            "xlink:title": {
              prefix: "xlink",
              name: "title",
              namespace: o.XLINK,
            },
            "xlink:type": { prefix: "xlink", name: "type", namespace: o.XLINK },
            "xml:base": { prefix: "xml", name: "base", namespace: o.XML },
            "xml:lang": { prefix: "xml", name: "lang", namespace: o.XML },
            "xml:space": { prefix: "xml", name: "space", namespace: o.XML },
            xmlns: { prefix: "", name: "xmlns", namespace: o.XMLNS },
            "xmlns:xlink": {
              prefix: "xmlns",
              name: "xlink",
              namespace: o.XMLNS,
            },
          },
          d = (t.SVG_TAG_NAMES_ADJUSTMENT_MAP = {
            altglyph: "altGlyph",
            altglyphdef: "altGlyphDef",
            altglyphitem: "altGlyphItem",
            animatecolor: "animateColor",
            animatemotion: "animateMotion",
            animatetransform: "animateTransform",
            clippath: "clipPath",
            feblend: "feBlend",
            fecolormatrix: "feColorMatrix",
            fecomponenttransfer: "feComponentTransfer",
            fecomposite: "feComposite",
            feconvolvematrix: "feConvolveMatrix",
            fediffuselighting: "feDiffuseLighting",
            fedisplacementmap: "feDisplacementMap",
            fedistantlight: "feDistantLight",
            feflood: "feFlood",
            fefunca: "feFuncA",
            fefuncb: "feFuncB",
            fefuncg: "feFuncG",
            fefuncr: "feFuncR",
            fegaussianblur: "feGaussianBlur",
            feimage: "feImage",
            femerge: "feMerge",
            femergenode: "feMergeNode",
            femorphology: "feMorphology",
            feoffset: "feOffset",
            fepointlight: "fePointLight",
            fespecularlighting: "feSpecularLighting",
            fespotlight: "feSpotLight",
            fetile: "feTile",
            feturbulence: "feTurbulence",
            foreignobject: "foreignObject",
            glyphref: "glyphRef",
            lineargradient: "linearGradient",
            radialgradient: "radialGradient",
            textpath: "textPath",
          }),
          m = {
            [a.B]: !0,
            [a.BIG]: !0,
            [a.BLOCKQUOTE]: !0,
            [a.BODY]: !0,
            [a.BR]: !0,
            [a.CENTER]: !0,
            [a.CODE]: !0,
            [a.DD]: !0,
            [a.DIV]: !0,
            [a.DL]: !0,
            [a.DT]: !0,
            [a.EM]: !0,
            [a.EMBED]: !0,
            [a.H1]: !0,
            [a.H2]: !0,
            [a.H3]: !0,
            [a.H4]: !0,
            [a.H5]: !0,
            [a.H6]: !0,
            [a.HEAD]: !0,
            [a.HR]: !0,
            [a.I]: !0,
            [a.IMG]: !0,
            [a.LI]: !0,
            [a.LISTING]: !0,
            [a.MENU]: !0,
            [a.META]: !0,
            [a.NOBR]: !0,
            [a.OL]: !0,
            [a.P]: !0,
            [a.PRE]: !0,
            [a.RUBY]: !0,
            [a.S]: !0,
            [a.SMALL]: !0,
            [a.SPAN]: !0,
            [a.STRONG]: !0,
            [a.STRIKE]: !0,
            [a.SUB]: !0,
            [a.SUP]: !0,
            [a.TABLE]: !0,
            [a.TT]: !0,
            [a.U]: !0,
            [a.UL]: !0,
            [a.VAR]: !0,
          };
        (t.causesExit = function (e) {
          const t = e.tagName;
          return (
            !!(
              t === a.FONT &&
              (null !== i.getTokenAttr(e, s.COLOR) ||
                null !== i.getTokenAttr(e, s.SIZE) ||
                null !== i.getTokenAttr(e, s.FACE))
            ) || m[t]
          );
        }),
          (t.adjustTokenMathMLAttrs = function (e) {
            for (let t = 0; t < e.attrs.length; t++)
              if ("definitionurl" === e.attrs[t].name) {
                e.attrs[t].name = "definitionURL";
                break;
              }
          }),
          (t.adjustTokenSVGAttrs = function (e) {
            for (let t = 0; t < e.attrs.length; t++) {
              const n = u[e.attrs[t].name];
              n && (e.attrs[t].name = n);
            }
          }),
          (t.adjustTokenXMLAttrs = function (e) {
            for (let t = 0; t < e.attrs.length; t++) {
              const n = p[e.attrs[t].name];
              n &&
                ((e.attrs[t].prefix = n.prefix),
                (e.attrs[t].name = n.name),
                (e.attrs[t].namespace = n.namespace));
            }
          }),
          (t.adjustTokenSVGTagName = function (e) {
            const t = d[e.tagName];
            t && (e.tagName = t);
          }),
          (t.isIntegrationPoint = function (e, t, n, i) {
            return (
              !(
                (i && i !== o.HTML) ||
                !(function (e, t, n) {
                  if (t === o.MATHML && e === a.ANNOTATION_XML)
                    for (let e = 0; e < n.length; e++)
                      if (n[e].name === s.ENCODING) {
                        const t = n[e].value.toLowerCase();
                        return t === c || t === l;
                      }
                  return (
                    t === o.SVG &&
                    (e === a.FOREIGN_OBJECT || e === a.DESC || e === a.TITLE)
                  );
                })(e, t, n)
              ) ||
              !(
                (i && i !== o.MATHML) ||
                !(function (e, t) {
                  return (
                    t === o.MATHML &&
                    (e === a.MI ||
                      e === a.MO ||
                      e === a.MN ||
                      e === a.MS ||
                      e === a.MTEXT)
                  );
                })(e, t)
              )
            );
          });
      },
      (e, t, n) => {
        "use strict";
        const i = n(22),
          r = n(23),
          a = n(24),
          o = n(11),
          s = o.TAG_NAMES,
          c = o.NAMESPACES,
          l = { treeAdapter: i },
          u = /&/g,
          p = /\u00a0/g,
          d = /"/g,
          m = /</g,
          h = />/g;
        class f {
          constructor(e, t) {
            (this.options = r(l, t)),
              (this.treeAdapter = this.options.treeAdapter),
              (this.html = ""),
              (this.startNode = e);
          }
          serialize() {
            return this._serializeChildNodes(this.startNode), this.html;
          }
          _serializeChildNodes(e) {
            const t = this.treeAdapter.getChildNodes(e);
            if (t)
              for (let e = 0, n = t.length; e < n; e++) {
                const n = t[e];
                this.treeAdapter.isElementNode(n)
                  ? this._serializeElement(n)
                  : this.treeAdapter.isTextNode(n)
                    ? this._serializeTextNode(n)
                    : this.treeAdapter.isCommentNode(n)
                      ? this._serializeCommentNode(n)
                      : this.treeAdapter.isDocumentTypeNode(n) &&
                        this._serializeDocumentTypeNode(n);
              }
          }
          _serializeElement(e) {
            const t = this.treeAdapter.getTagName(e),
              n = this.treeAdapter.getNamespaceURI(e);
            if (
              ((this.html += "<" + t),
              this._serializeAttributes(e),
              (this.html += ">"),
              t !== s.AREA &&
                t !== s.BASE &&
                t !== s.BASEFONT &&
                t !== s.BGSOUND &&
                t !== s.BR &&
                t !== s.COL &&
                t !== s.EMBED &&
                t !== s.FRAME &&
                t !== s.HR &&
                t !== s.IMG &&
                t !== s.INPUT &&
                t !== s.KEYGEN &&
                t !== s.LINK &&
                t !== s.META &&
                t !== s.PARAM &&
                t !== s.SOURCE &&
                t !== s.TRACK &&
                t !== s.WBR)
            ) {
              const i =
                t === s.TEMPLATE && n === c.HTML
                  ? this.treeAdapter.getTemplateContent(e)
                  : e;
              this._serializeChildNodes(i), (this.html += "</" + t + ">");
            }
          }
          _serializeAttributes(e) {
            const t = this.treeAdapter.getAttrList(e);
            for (let e = 0, n = t.length; e < n; e++) {
              const n = t[e],
                i = f.escapeString(n.value, !0);
              (this.html += " "),
                n.namespace
                  ? n.namespace === c.XML
                    ? (this.html += "xml:" + n.name)
                    : n.namespace === c.XMLNS
                      ? ("xmlns" !== n.name && (this.html += "xmlns:"),
                        (this.html += n.name))
                      : n.namespace === c.XLINK
                        ? (this.html += "xlink:" + n.name)
                        : (this.html += n.prefix + ":" + n.name)
                  : (this.html += n.name),
                (this.html += '="' + i + '"');
            }
          }
          _serializeTextNode(e) {
            const t = this.treeAdapter.getTextNodeContent(e),
              n = this.treeAdapter.getParentNode(e);
            let i;
            n &&
              this.treeAdapter.isElementNode(n) &&
              (i = this.treeAdapter.getTagName(n)),
              i === s.STYLE ||
              i === s.SCRIPT ||
              i === s.XMP ||
              i === s.IFRAME ||
              i === s.NOEMBED ||
              i === s.NOFRAMES ||
              i === s.PLAINTEXT ||
              i === s.NOSCRIPT
                ? (this.html += t)
                : (this.html += f.escapeString(t, !1));
          }
          _serializeCommentNode(e) {
            this.html +=
              "\x3c!--" + this.treeAdapter.getCommentNodeContent(e) + "--\x3e";
          }
          _serializeDocumentTypeNode(e) {
            const t = this.treeAdapter.getDocumentTypeNodeName(e);
            this.html += "<" + a.serializeContent(t, null, null) + ">";
          }
        }
        (f.escapeString = function (e, t) {
          return (
            (e = e.replace(u, "&amp;").replace(p, "&nbsp;")),
            (e = t
              ? e.replace(d, "&quot;")
              : e.replace(m, "&lt;").replace(h, "&gt;"))
          );
        }),
          (e.exports = f);
      },
      (e, t, n) => {
        "use strict";
        n.r(t), n.d(t, { default: () => s });
        var i = n(28),
          r = n(2),
          a = n(138);
        class o extends r.default {
          constructor(e) {
            super(),
              (this.ctx = e),
              (this.meta = e.meta),
              (this.parsel = a.default),
              (this.parse = i.parse),
              (this.walk = i.walk),
              (this.generate = i.generate);
          }
          rewrite(e, t) {
            return this.recast(e, t, "rewrite");
          }
          source(e, t) {
            return this.recast(e, t, "source");
          }
          recast(e, t, n) {
            if (!e) return e;
            e = new String(e).toString();
            try {
              const i = this.parse(e, { ...t, parseCustomProperty: !0 });
              return (
                this.walk(i, (e) => {
                  this.emit(e.type, e, t, n);
                }),
                this.generate(i)
              );
            } catch (t) {
              return e;
            }
          }
        }
        const s = o;
      },
      (e, t, n) => {
        "use strict";
        n.r(t),
          n.d(t, {
            version: () => r.version,
            createSyntax: () => a.default,
            List: () => o.List,
            Lexer: () => s.Lexer,
            tokenTypes: () => c.tokenTypes,
            tokenNames: () => c.tokenNames,
            TokenStream: () => c.TokenStream,
            definitionSyntax: () => l,
            clone: () => u.clone,
            isCustomProperty: () => p.isCustomProperty,
            keyword: () => p.keyword,
            property: () => p.property,
            vendorPrefix: () => p.vendorPrefix,
            ident: () => d,
            string: () => m,
            url: () => h,
            tokenize: () => f,
            parse: () => g,
            generate: () => x,
            lexer: () => b,
            createLexer: () => v,
            walk: () => k,
            find: () => T,
            findLast: () => y,
            findAll: () => E,
            toPlainObject: () => w,
            fromPlainObject: () => C,
            fork: () => A,
          });
        var i = n(29),
          r = n(135),
          a = n(30),
          o = n(40),
          s = n(55),
          c = n(31),
          l = n(62),
          u = n(136),
          p = n(58),
          d = n(137),
          m = n(111),
          h = n(116);
        const {
          tokenize: f,
          parse: g,
          generate: x,
          lexer: b,
          createLexer: v,
          walk: k,
          find: T,
          findLast: y,
          findAll: E,
          toPlainObject: w,
          fromPlainObject: C,
          fork: A,
        } = i.default;
      },
      (e, t, n) => {
        "use strict";
        n.r(t), n.d(t, { default: () => s });
        var i = n(30),
          r = n(74),
          a = n(119),
          o = n(134);
        const s = (0, i.default)({ ...r.default, ...a.default, ...o.default });
      },
      (e, t, n) => {
        "use strict";
        n.r(t), n.d(t, { default: () => p });
        var i = n(31),
          r = n(39),
          a = n(44),
          o = n(53),
          s = n(54),
          c = n(55),
          l = n(73);
        function u(e) {
          const t = (0, r.createParser)(e),
            n = (0, s.createWalker)(e),
            p = (0, a.createGenerator)(e),
            { fromPlainObject: d, toPlainObject: m } = (0, o.createConvertor)(
              n,
            ),
            h = {
              lexer: null,
              createLexer: (e) => new c.Lexer(e, h, h.lexer.structure),
              tokenize: i.tokenize,
              parse: t,
              generate: p,
              walk: n,
              find: n.find,
              findLast: n.findLast,
              findAll: n.findAll,
              fromPlainObject: d,
              toPlainObject: m,
              fork(t) {
                const n = (0, l.default)({}, e);
                return u(
                  "function" == typeof t
                    ? t(n, Object.assign)
                    : (0, l.default)(n, t),
                );
              },
            };
          return (
            (h.lexer = new c.Lexer(
              {
                generic: !0,
                types: e.types,
                atrules: e.atrules,
                properties: e.properties,
                node: e.node,
              },
              h,
            )),
            h
          );
        }
        const p = (e) => u((0, l.default)({}, e));
      },
      (e, t, n) => {
        "use strict";
        n.r(t),
          n.d(t, {
            tokenize: () => l,
            AtKeyword: () => i.AtKeyword,
            BadString: () => i.BadString,
            BadUrl: () => i.BadUrl,
            CDC: () => i.CDC,
            CDO: () => i.CDO,
            Colon: () => i.Colon,
            Comma: () => i.Comma,
            Comment: () => i.Comment,
            Delim: () => i.Delim,
            Dimension: () => i.Dimension,
            EOF: () => i.EOF,
            Function: () => i.Function,
            Hash: () => i.Hash,
            Ident: () => i.Ident,
            LeftCurlyBracket: () => i.LeftCurlyBracket,
            LeftParenthesis: () => i.LeftParenthesis,
            LeftSquareBracket: () => i.LeftSquareBracket,
            Number: () => i.Number,
            Percentage: () => i.Percentage,
            RightCurlyBracket: () => i.RightCurlyBracket,
            RightParenthesis: () => i.RightParenthesis,
            RightSquareBracket: () => i.RightSquareBracket,
            Semicolon: () => i.Semicolon,
            String: () => i.String,
            Url: () => i.Url,
            WhiteSpace: () => i.WhiteSpace,
            tokenTypes: () => i,
            tokenNames: () => o.default,
            DigitCategory: () => r.DigitCategory,
            EofCategory: () => r.EofCategory,
            NameStartCategory: () => r.NameStartCategory,
            NonPrintableCategory: () => r.NonPrintableCategory,
            WhiteSpaceCategory: () => r.WhiteSpaceCategory,
            charCodeCategory: () => r.charCodeCategory,
            isBOM: () => r.isBOM,
            isDigit: () => r.isDigit,
            isHexDigit: () => r.isHexDigit,
            isIdentifierStart: () => r.isIdentifierStart,
            isLetter: () => r.isLetter,
            isLowercaseLetter: () => r.isLowercaseLetter,
            isName: () => r.isName,
            isNameStart: () => r.isNameStart,
            isNewline: () => r.isNewline,
            isNonAscii: () => r.isNonAscii,
            isNonPrintable: () => r.isNonPrintable,
            isNumberStart: () => r.isNumberStart,
            isUppercaseLetter: () => r.isUppercaseLetter,
            isValidEscape: () => r.isValidEscape,
            isWhiteSpace: () => r.isWhiteSpace,
            cmpChar: () => a.cmpChar,
            cmpStr: () => a.cmpStr,
            consumeBadUrlRemnants: () => a.consumeBadUrlRemnants,
            consumeEscaped: () => a.consumeEscaped,
            consumeName: () => a.consumeName,
            consumeNumber: () => a.consumeNumber,
            decodeEscaped: () => a.decodeEscaped,
            findDecimalNumberEnd: () => a.findDecimalNumberEnd,
            findWhiteSpaceEnd: () => a.findWhiteSpaceEnd,
            findWhiteSpaceStart: () => a.findWhiteSpaceStart,
            getNewlineLength: () => a.getNewlineLength,
            OffsetToLocation: () => s.OffsetToLocation,
            TokenStream: () => c.TokenStream,
          });
        var i = n(32),
          r = n(33),
          a = n(34),
          o = n(35),
          s = n(36),
          c = n(38);
        function l(e, t) {
          function n(t) {
            return t < l ? e.charCodeAt(t) : 0;
          }
          function o() {
            return (
              (d = (0, a.consumeNumber)(e, d)),
              (0, r.isIdentifierStart)(n(d), n(d + 1), n(d + 2))
                ? ((u = i.Dimension), void (d = (0, a.consumeName)(e, d)))
                : 37 === n(d)
                  ? ((u = i.Percentage), void d++)
                  : void (u = i.Number)
            );
          }
          function s() {
            const t = d;
            return (
              (d = (0, a.consumeName)(e, d)),
              (0, a.cmpStr)(e, t, d, "url") && 40 === n(d)
                ? ((d = (0, a.findWhiteSpaceEnd)(e, d + 1)),
                  34 === n(d) || 39 === n(d)
                    ? ((u = i.Function), void (d = t + 4))
                    : void (function () {
                        for (
                          u = i.Url, d = (0, a.findWhiteSpaceEnd)(e, d);
                          d < e.length;
                          d++
                        ) {
                          const t = e.charCodeAt(d);
                          switch ((0, r.charCodeCategory)(t)) {
                            case 41:
                              return void d++;
                            case r.WhiteSpaceCategory:
                              return (
                                (d = (0, a.findWhiteSpaceEnd)(e, d)),
                                41 === n(d) || d >= e.length
                                  ? void (d < e.length && d++)
                                  : ((d = (0, a.consumeBadUrlRemnants)(e, d)),
                                    void (u = i.BadUrl))
                              );
                            case 34:
                            case 39:
                            case 40:
                            case r.NonPrintableCategory:
                              return (
                                (d = (0, a.consumeBadUrlRemnants)(e, d)),
                                void (u = i.BadUrl)
                              );
                            case 92:
                              if ((0, r.isValidEscape)(t, n(d + 1))) {
                                d = (0, a.consumeEscaped)(e, d) - 1;
                                break;
                              }
                              return (
                                (d = (0, a.consumeBadUrlRemnants)(e, d)),
                                void (u = i.BadUrl)
                              );
                          }
                        }
                      })())
                : 40 === n(d)
                  ? ((u = i.Function), void d++)
                  : void (u = i.Ident)
            );
          }
          function c(t) {
            for (t || (t = n(d++)), u = i.String; d < e.length; d++) {
              const o = e.charCodeAt(d);
              switch ((0, r.charCodeCategory)(o)) {
                case t:
                  return void d++;
                case r.WhiteSpaceCategory:
                  if ((0, r.isNewline)(o))
                    return (
                      (d += (0, a.getNewlineLength)(e, d, o)),
                      void (u = i.BadString)
                    );
                  break;
                case 92:
                  if (d === e.length - 1) break;
                  const s = n(d + 1);
                  (0, r.isNewline)(s)
                    ? (d += (0, a.getNewlineLength)(e, d + 1, s))
                    : (0, r.isValidEscape)(o, s) &&
                      (d = (0, a.consumeEscaped)(e, d) - 1);
              }
            }
          }
          const l = (e = String(e || "")).length;
          let u,
            p = (0, r.isBOM)(n(0)),
            d = p;
          for (; d < l; ) {
            const l = e.charCodeAt(d);
            switch ((0, r.charCodeCategory)(l)) {
              case r.WhiteSpaceCategory:
                (u = i.WhiteSpace), (d = (0, a.findWhiteSpaceEnd)(e, d + 1));
                break;
              case 34:
                c();
                break;
              case 35:
                (0, r.isName)(n(d + 1)) ||
                (0, r.isValidEscape)(n(d + 1), n(d + 2))
                  ? ((u = i.Hash), (d = (0, a.consumeName)(e, d + 1)))
                  : ((u = i.Delim), d++);
                break;
              case 39:
                c();
                break;
              case 40:
                (u = i.LeftParenthesis), d++;
                break;
              case 41:
                (u = i.RightParenthesis), d++;
                break;
              case 43:
                (0, r.isNumberStart)(l, n(d + 1), n(d + 2))
                  ? o()
                  : ((u = i.Delim), d++);
                break;
              case 44:
                (u = i.Comma), d++;
                break;
              case 45:
                (0, r.isNumberStart)(l, n(d + 1), n(d + 2))
                  ? o()
                  : 45 === n(d + 1) && 62 === n(d + 2)
                    ? ((u = i.CDC), (d += 3))
                    : (0, r.isIdentifierStart)(l, n(d + 1), n(d + 2))
                      ? s()
                      : ((u = i.Delim), d++);
                break;
              case 46:
                (0, r.isNumberStart)(l, n(d + 1), n(d + 2))
                  ? o()
                  : ((u = i.Delim), d++);
                break;
              case 47:
                42 === n(d + 1)
                  ? ((u = i.Comment),
                    (d = e.indexOf("*/", d + 2)),
                    (d = -1 === d ? e.length : d + 2))
                  : ((u = i.Delim), d++);
                break;
              case 58:
                (u = i.Colon), d++;
                break;
              case 59:
                (u = i.Semicolon), d++;
                break;
              case 60:
                33 === n(d + 1) && 45 === n(d + 2) && 45 === n(d + 3)
                  ? ((u = i.CDO), (d += 4))
                  : ((u = i.Delim), d++);
                break;
              case 64:
                (0, r.isIdentifierStart)(n(d + 1), n(d + 2), n(d + 3))
                  ? ((u = i.AtKeyword), (d = (0, a.consumeName)(e, d + 1)))
                  : ((u = i.Delim), d++);
                break;
              case 91:
                (u = i.LeftSquareBracket), d++;
                break;
              case 92:
                (0, r.isValidEscape)(l, n(d + 1)) ? s() : ((u = i.Delim), d++);
                break;
              case 93:
                (u = i.RightSquareBracket), d++;
                break;
              case 123:
                (u = i.LeftCurlyBracket), d++;
                break;
              case 125:
                (u = i.RightCurlyBracket), d++;
                break;
              case r.DigitCategory:
                o();
                break;
              case r.NameStartCategory:
                s();
                break;
              default:
                (u = i.Delim), d++;
            }
            t(u, p, (p = d));
          }
        }
      },
      (e, t, n) => {
        "use strict";
        n.r(t),
          n.d(t, {
            EOF: () => i,
            Ident: () => r,
            Function: () => a,
            AtKeyword: () => o,
            Hash: () => s,
            String: () => c,
            BadString: () => l,
            Url: () => u,
            BadUrl: () => p,
            Delim: () => d,
            Number: () => m,
            Percentage: () => h,
            Dimension: () => f,
            WhiteSpace: () => g,
            CDO: () => x,
            CDC: () => b,
            Colon: () => v,
            Semicolon: () => k,
            Comma: () => T,
            LeftSquareBracket: () => y,
            RightSquareBracket: () => E,
            LeftParenthesis: () => w,
            RightParenthesis: () => C,
            LeftCurlyBracket: () => A,
            RightCurlyBracket: () => S,
            Comment: () => _,
          });
        const i = 0,
          r = 1,
          a = 2,
          o = 3,
          s = 4,
          c = 5,
          l = 6,
          u = 7,
          p = 8,
          d = 9,
          m = 10,
          h = 11,
          f = 12,
          g = 13,
          x = 14,
          b = 15,
          v = 16,
          k = 17,
          T = 18,
          y = 19,
          E = 20,
          w = 21,
          C = 22,
          A = 23,
          S = 24,
          _ = 25;
      },
      (e, t, n) => {
        "use strict";
        n.r(t),
          n.d(t, {
            isDigit: () => r,
            isHexDigit: () => a,
            isUppercaseLetter: () => o,
            isLowercaseLetter: () => s,
            isLetter: () => c,
            isNonAscii: () => l,
            isNameStart: () => u,
            isName: () => p,
            isNonPrintable: () => d,
            isNewline: () => m,
            isWhiteSpace: () => h,
            isValidEscape: () => f,
            isIdentifierStart: () => g,
            isNumberStart: () => x,
            isBOM: () => b,
            EofCategory: () => k,
            WhiteSpaceCategory: () => T,
            DigitCategory: () => y,
            NameStartCategory: () => E,
            NonPrintableCategory: () => w,
            charCodeCategory: () => C,
          });
        const i = 0;
        function r(e) {
          return e >= 48 && e <= 57;
        }
        function a(e) {
          return r(e) || (e >= 65 && e <= 70) || (e >= 97 && e <= 102);
        }
        function o(e) {
          return e >= 65 && e <= 90;
        }
        function s(e) {
          return e >= 97 && e <= 122;
        }
        function c(e) {
          return o(e) || s(e);
        }
        function l(e) {
          return e >= 128;
        }
        function u(e) {
          return c(e) || l(e) || 95 === e;
        }
        function p(e) {
          return u(e) || r(e) || 45 === e;
        }
        function d(e) {
          return (
            (e >= 0 && e <= 8) || 11 === e || (e >= 14 && e <= 31) || 127 === e
          );
        }
        function m(e) {
          return 10 === e || 13 === e || 12 === e;
        }
        function h(e) {
          return m(e) || 32 === e || 9 === e;
        }
        function f(e, t) {
          return 92 === e && !m(t) && t !== i;
        }
        function g(e, t, n) {
          return 45 === e
            ? u(t) || 45 === t || f(t, n)
            : !!u(e) || (92 === e && f(e, t));
        }
        function x(e, t, n) {
          return 43 === e || 45 === e
            ? r(t)
              ? 2
              : 46 === t && r(n)
                ? 3
                : 0
            : 46 === e
              ? r(t)
                ? 2
                : 0
              : r(e)
                ? 1
                : 0;
        }
        function b(e) {
          return 65279 === e || 65534 === e ? 1 : 0;
        }
        const v = new Array(128),
          k = 128,
          T = 130,
          y = 131,
          E = 132,
          w = 133;
        for (let e = 0; e < v.length; e++)
          v[e] =
            (h(e) && T) || (r(e) && y) || (u(e) && E) || (d(e) && w) || e || k;
        function C(e) {
          return e < 128 ? v[e] : E;
        }
      },
      (e, t, n) => {
        "use strict";
        n.r(t),
          n.d(t, {
            getNewlineLength: () => a,
            cmpChar: () => o,
            cmpStr: () => s,
            findWhiteSpaceStart: () => c,
            findWhiteSpaceEnd: () => l,
            findDecimalNumberEnd: () => u,
            consumeEscaped: () => p,
            consumeName: () => d,
            consumeNumber: () => m,
            consumeBadUrlRemnants: () => h,
            decodeEscaped: () => f,
          });
        var i = n(33);
        function r(e, t) {
          return t < e.length ? e.charCodeAt(t) : 0;
        }
        function a(e, t, n) {
          return 13 === n && 10 === r(e, t + 1) ? 2 : 1;
        }
        function o(e, t, n) {
          let r = e.charCodeAt(t);
          return (0, i.isUppercaseLetter)(r) && (r |= 32), r === n;
        }
        function s(e, t, n, r) {
          if (n - t !== r.length) return !1;
          if (t < 0 || n > e.length) return !1;
          for (let a = t; a < n; a++) {
            const n = r.charCodeAt(a - t);
            let o = e.charCodeAt(a);
            if (((0, i.isUppercaseLetter)(o) && (o |= 32), o !== n)) return !1;
          }
          return !0;
        }
        function c(e, t) {
          for (; t >= 0 && (0, i.isWhiteSpace)(e.charCodeAt(t)); t--);
          return t + 1;
        }
        function l(e, t) {
          for (; t < e.length && (0, i.isWhiteSpace)(e.charCodeAt(t)); t++);
          return t;
        }
        function u(e, t) {
          for (; t < e.length && (0, i.isDigit)(e.charCodeAt(t)); t++);
          return t;
        }
        function p(e, t) {
          if (((t += 2), (0, i.isHexDigit)(r(e, t - 1)))) {
            for (
              const n = Math.min(e.length, t + 5);
              t < n && (0, i.isHexDigit)(r(e, t));
              t++
            );
            const n = r(e, t);
            (0, i.isWhiteSpace)(n) && (t += a(e, t, n));
          }
          return t;
        }
        function d(e, t) {
          for (; t < e.length; t++) {
            const n = e.charCodeAt(t);
            if (!(0, i.isName)(n)) {
              if (!(0, i.isValidEscape)(n, r(e, t + 1))) break;
              t = p(e, t) - 1;
            }
          }
          return t;
        }
        function m(e, t) {
          let n = e.charCodeAt(t);
          if (
            ((43 !== n && 45 !== n) || (n = e.charCodeAt((t += 1))),
            (0, i.isDigit)(n) && ((t = u(e, t + 1)), (n = e.charCodeAt(t))),
            46 === n &&
              (0, i.isDigit)(e.charCodeAt(t + 1)) &&
              (t = u(e, (t += 2))),
            o(e, t, 101))
          ) {
            let r = 0;
            (n = e.charCodeAt(t + 1)),
              (45 !== n && 43 !== n) || ((r = 1), (n = e.charCodeAt(t + 2))),
              (0, i.isDigit)(n) && (t = u(e, t + 1 + r + 1));
          }
          return t;
        }
        function h(e, t) {
          for (; t < e.length; t++) {
            const n = e.charCodeAt(t);
            if (41 === n) {
              t++;
              break;
            }
            (0, i.isValidEscape)(n, r(e, t + 1)) && (t = p(e, t));
          }
          return t;
        }
        function f(e) {
          if (1 === e.length && !(0, i.isHexDigit)(e.charCodeAt(0)))
            return e[0];
          let t = parseInt(e, 16);
          return (
            (0 === t || (t >= 55296 && t <= 57343) || t > 1114111) &&
              (t = 65533),
            String.fromCodePoint(t)
          );
        }
      },
      (e, t, n) => {
        "use strict";
        n.r(t), n.d(t, { default: () => i });
        const i = [
          "EOF-token",
          "ident-token",
          "function-token",
          "at-keyword-token",
          "hash-token",
          "string-token",
          "bad-string-token",
          "url-token",
          "bad-url-token",
          "delim-token",
          "number-token",
          "percentage-token",
          "dimension-token",
          "whitespace-token",
          "CDO-token",
          "CDC-token",
          "colon-token",
          "semicolon-token",
          "comma-token",
          "[-token",
          "]-token",
          "(-token",
          ")-token",
          "{-token",
          "}-token",
        ];
      },
      (e, t, n) => {
        "use strict";
        n.r(t), n.d(t, { OffsetToLocation: () => o });
        var i = n(37),
          r = n(33);
        function a(e) {
          const t = e.source,
            n = t.length,
            a = t.length > 0 ? (0, r.isBOM)(t.charCodeAt(0)) : 0,
            o = (0, i.adoptBuffer)(e.lines, n),
            s = (0, i.adoptBuffer)(e.columns, n);
          let c = e.startLine,
            l = e.startColumn;
          for (let e = a; e < n; e++) {
            const i = t.charCodeAt(e);
            (o[e] = c),
              (s[e] = l++),
              (10 !== i && 13 !== i && 12 !== i) ||
                (13 === i &&
                  e + 1 < n &&
                  10 === t.charCodeAt(e + 1) &&
                  (e++, (o[e] = c), (s[e] = l)),
                c++,
                (l = 1));
          }
          (o[n] = c),
            (s[n] = l),
            (e.lines = o),
            (e.columns = s),
            (e.computed = !0);
        }
        class o {
          constructor() {
            (this.lines = null), (this.columns = null), (this.computed = !1);
          }
          setSource(e, t = 0, n = 1, i = 1) {
            (this.source = e),
              (this.startOffset = t),
              (this.startLine = n),
              (this.startColumn = i),
              (this.computed = !1);
          }
          getLocation(e, t) {
            return (
              this.computed || a(this),
              {
                source: t,
                offset: this.startOffset + e,
                line: this.lines[e],
                column: this.columns[e],
              }
            );
          }
          getLocationRange(e, t, n) {
            return (
              this.computed || a(this),
              {
                source: n,
                start: {
                  offset: this.startOffset + e,
                  line: this.lines[e],
                  column: this.columns[e],
                },
                end: {
                  offset: this.startOffset + t,
                  line: this.lines[t],
                  column: this.columns[t],
                },
              }
            );
          }
        }
      },
      (e, t, n) => {
        "use strict";
        n.r(t), n.d(t, { adoptBuffer: () => r });
        const i = 16384;
        function r(e = null, t) {
          return null === e || e.length < t
            ? new Uint32Array(Math.max(t + 1024, i))
            : e;
        }
      },
      (e, t, n) => {
        "use strict";
        n.r(t), n.d(t, { TokenStream: () => u });
        var i = n(37),
          r = n(34),
          a = n(35),
          o = n(32);
        const s = 16777215,
          c = 24,
          l = new Map([
            [o.Function, o.RightParenthesis],
            [o.LeftParenthesis, o.RightParenthesis],
            [o.LeftSquareBracket, o.RightSquareBracket],
            [o.LeftCurlyBracket, o.RightCurlyBracket],
          ]);
        class u {
          constructor(e, t) {
            this.setSource(e, t);
          }
          reset() {
            (this.eof = !1),
              (this.tokenIndex = -1),
              (this.tokenType = 0),
              (this.tokenStart = this.firstCharOffset),
              (this.tokenEnd = this.firstCharOffset);
          }
          setSource(e = "", t = () => {}) {
            const n = (e = String(e || "")).length,
              r = (0, i.adoptBuffer)(this.offsetAndType, e.length + 1),
              a = (0, i.adoptBuffer)(this.balance, e.length + 1);
            let u = 0,
              p = 0,
              d = 0,
              m = -1;
            for (
              this.offsetAndType = null,
                this.balance = null,
                t(e, (e, t, i) => {
                  switch (e) {
                    default:
                      a[u] = n;
                      break;
                    case p: {
                      let e = d & s;
                      for (
                        d = a[e], p = d >> c, a[u] = e, a[e++] = u;
                        e < u;
                        e++
                      )
                        a[e] === n && (a[e] = u);
                      break;
                    }
                    case o.LeftParenthesis:
                    case o.Function:
                    case o.LeftSquareBracket:
                    case o.LeftCurlyBracket:
                      (a[u] = d), (p = l.get(e)), (d = (p << c) | u);
                  }
                  (r[u++] = (e << c) | i), -1 === m && (m = t);
                }),
                r[u] = (o.EOF << c) | n,
                a[u] = n,
                a[n] = n;
              0 !== d;

            ) {
              const e = d & s;
              (d = a[e]), (a[e] = n);
            }
            (this.source = e),
              (this.firstCharOffset = -1 === m ? 0 : m),
              (this.tokenCount = u),
              (this.offsetAndType = r),
              (this.balance = a),
              this.reset(),
              this.next();
          }
          lookupType(e) {
            return (e += this.tokenIndex) < this.tokenCount
              ? this.offsetAndType[e] >> c
              : o.EOF;
          }
          lookupOffset(e) {
            return (e += this.tokenIndex) < this.tokenCount
              ? this.offsetAndType[e - 1] & s
              : this.source.length;
          }
          lookupValue(e, t) {
            return (
              (e += this.tokenIndex) < this.tokenCount &&
              (0, r.cmpStr)(
                this.source,
                this.offsetAndType[e - 1] & s,
                this.offsetAndType[e] & s,
                t,
              )
            );
          }
          getTokenStart(e) {
            return e === this.tokenIndex
              ? this.tokenStart
              : e > 0
                ? e < this.tokenCount
                  ? this.offsetAndType[e - 1] & s
                  : this.offsetAndType[this.tokenCount] & s
                : this.firstCharOffset;
          }
          substrToCursor(e) {
            return this.source.substring(e, this.tokenStart);
          }
          isBalanceEdge(e) {
            return this.balance[this.tokenIndex] < e;
          }
          isDelim(e, t) {
            return t
              ? this.lookupType(t) === o.Delim &&
                  this.source.charCodeAt(this.lookupOffset(t)) === e
              : this.tokenType === o.Delim &&
                  this.source.charCodeAt(this.tokenStart) === e;
          }
          skip(e) {
            let t = this.tokenIndex + e;
            t < this.tokenCount
              ? ((this.tokenIndex = t),
                (this.tokenStart = this.offsetAndType[t - 1] & s),
                (t = this.offsetAndType[t]),
                (this.tokenType = t >> c),
                (this.tokenEnd = t & s))
              : ((this.tokenIndex = this.tokenCount), this.next());
          }
          next() {
            let e = this.tokenIndex + 1;
            e < this.tokenCount
              ? ((this.tokenIndex = e),
                (this.tokenStart = this.tokenEnd),
                (e = this.offsetAndType[e]),
                (this.tokenType = e >> c),
                (this.tokenEnd = e & s))
              : ((this.eof = !0),
                (this.tokenIndex = this.tokenCount),
                (this.tokenType = o.EOF),
                (this.tokenStart = this.tokenEnd = this.source.length));
          }
          skipSC() {
            for (
              ;
              this.tokenType === o.WhiteSpace || this.tokenType === o.Comment;

            )
              this.next();
          }
          skipUntilBalanced(e, t) {
            let n,
              i,
              r = e;
            e: for (
              ;
              r < this.tokenCount && ((n = this.balance[r]), !(n < e));
              r++
            )
              switch (
                ((i =
                  r > 0 ? this.offsetAndType[r - 1] & s : this.firstCharOffset),
                t(this.source.charCodeAt(i)))
              ) {
                case 1:
                  break e;
                case 2:
                  r++;
                  break e;
                default:
                  this.balance[n] === r && (r = n);
              }
            this.skip(r - this.tokenIndex);
          }
          forEachToken(e) {
            for (
              let t = 0, n = this.firstCharOffset;
              t < this.tokenCount;
              t++
            ) {
              const i = n,
                r = this.offsetAndType[t],
                a = r & s;
              (n = a), e(r >> c, i, a, t);
            }
          }
          dump() {
            const e = new Array(this.tokenCount);
            return (
              this.forEachToken((t, n, i, r) => {
                e[r] = {
                  idx: r,
                  type: a.default[t],
                  chunk: this.source.substring(n, i),
                  balance: this.balance[r],
                };
              }),
              e
            );
          }
        }
      },
      (e, t, n) => {
        "use strict";
        n.r(t), n.d(t, { createParser: () => f });
        var i = n(40),
          r = n(41),
          a = n(31),
          o = n(43);
        const s = () => {},
          c = 33,
          l = 35,
          u = 59,
          p = 123,
          d = 0;
        function m(e) {
          return function () {
            return this[e]();
          };
        }
        function h(e) {
          const t = Object.create(null);
          for (const n in e) {
            const i = e[n];
            i.parse && (t[n] = i.parse);
          }
          return t;
        }
        function f(e) {
          let t = "",
            n = "<unknown>",
            f = !1,
            g = s,
            x = !1;
          const b = new a.OffsetToLocation(),
            v = Object.assign(
              new a.TokenStream(),
              (function (e) {
                const t = {
                  context: Object.create(null),
                  scope: Object.assign(Object.create(null), e.scope),
                  atrule: h(e.atrule),
                  pseudo: h(e.pseudo),
                  node: h(e.node),
                };
                for (const n in e.parseContext)
                  switch (typeof e.parseContext[n]) {
                    case "function":
                      t.context[n] = e.parseContext[n];
                      break;
                    case "string":
                      t.context[n] = m(e.parseContext[n]);
                  }
                return { config: t, ...t, ...t.node };
              })(e || {}),
              {
                parseAtrulePrelude: !0,
                parseRulePrelude: !0,
                parseValue: !0,
                parseCustomProperty: !1,
                readSequence: o.readSequence,
                consumeUntilBalanceEnd: () => 0,
                consumeUntilLeftCurlyBracket: (e) => (e === p ? 1 : 0),
                consumeUntilLeftCurlyBracketOrSemicolon: (e) =>
                  e === p || e === u ? 1 : 0,
                consumeUntilExclamationMarkOrSemicolon: (e) =>
                  e === c || e === u ? 1 : 0,
                consumeUntilSemicolonIncluded: (e) => (e === u ? 2 : 0),
                createList: () => new i.List(),
                createSingleNodeList: (e) => new i.List().appendData(e),
                getFirstListNode: (e) => e && e.first,
                getLastListNode: (e) => e && e.last,
                parseWithFallback(e, t) {
                  const n = this.tokenIndex;
                  try {
                    return e.call(this);
                  } catch (e) {
                    if (x) throw e;
                    const i = t.call(this, n);
                    return (x = !0), g(e, i), (x = !1), i;
                  }
                },
                lookupNonWSType(e) {
                  let t;
                  do {
                    if (((t = this.lookupType(e++)), t !== a.WhiteSpace))
                      return t;
                  } while (t !== d);
                  return d;
                },
                charCodeAt: (e) =>
                  e >= 0 && e < t.length ? t.charCodeAt(e) : 0,
                substring: (e, n) => t.substring(e, n),
                substrToCursor(e) {
                  return this.source.substring(e, this.tokenStart);
                },
                cmpChar: (e, n) => (0, a.cmpChar)(t, e, n),
                cmpStr: (e, n, i) => (0, a.cmpStr)(t, e, n, i),
                consume(e) {
                  const t = this.tokenStart;
                  return this.eat(e), this.substrToCursor(t);
                },
                consumeFunctionName() {
                  const e = t.substring(this.tokenStart, this.tokenEnd - 1);
                  return this.eat(a.Function), e;
                },
                consumeNumber(e) {
                  const n = t.substring(
                    this.tokenStart,
                    (0, a.consumeNumber)(t, this.tokenStart),
                  );
                  return this.eat(e), n;
                },
                eat(e) {
                  if (this.tokenType !== e) {
                    const t = a.tokenNames[e]
                      .slice(0, -6)
                      .replace(/-/g, " ")
                      .replace(/^./, (e) => e.toUpperCase());
                    let n = `${/[[\](){}]/.test(t) ? `"${t}"` : t} is expected`,
                      i = this.tokenStart;
                    switch (e) {
                      case a.Ident:
                        this.tokenType === a.Function ||
                        this.tokenType === a.Url
                          ? ((i = this.tokenEnd - 1),
                            (n = "Identifier is expected but function found"))
                          : (n = "Identifier is expected");
                        break;
                      case a.Hash:
                        this.isDelim(l) &&
                          (this.next(), i++, (n = "Name is expected"));
                        break;
                      case a.Percentage:
                        this.tokenType === a.Number &&
                          ((i = this.tokenEnd),
                          (n = "Percent sign is expected"));
                    }
                    this.error(n, i);
                  }
                  this.next();
                },
                eatIdent(e) {
                  (this.tokenType === a.Ident &&
                    !1 !== this.lookupValue(0, e)) ||
                    this.error(`Identifier "${e}" is expected`),
                    this.next();
                },
                eatDelim(e) {
                  this.isDelim(e) ||
                    this.error(`Delim "${String.fromCharCode(e)}" is expected`),
                    this.next();
                },
                getLocation: (e, t) => (f ? b.getLocationRange(e, t, n) : null),
                getLocationFromList(e) {
                  if (f) {
                    const t = this.getFirstListNode(e),
                      i = this.getLastListNode(e);
                    return b.getLocationRange(
                      null !== t
                        ? t.loc.start.offset - b.startOffset
                        : this.tokenStart,
                      null !== i
                        ? i.loc.end.offset - b.startOffset
                        : this.tokenStart,
                      n,
                    );
                  }
                  return null;
                },
                error(e, n) {
                  const i =
                    void 0 !== n && n < t.length
                      ? b.getLocation(n)
                      : this.eof
                        ? b.getLocation(
                            (0, a.findWhiteSpaceStart)(t, t.length - 1),
                          )
                        : b.getLocation(this.tokenStart);
                  throw new r.SyntaxError(
                    e || "Unexpected input",
                    t,
                    i.offset,
                    i.line,
                    i.column,
                  );
                },
              },
            );
          return Object.assign(
            function (e, i) {
              (t = e),
                (i = i || {}),
                v.setSource(t, a.tokenize),
                b.setSource(t, i.offset, i.line, i.column),
                (n = i.filename || "<unknown>"),
                (f = Boolean(i.positions)),
                (g = "function" == typeof i.onParseError ? i.onParseError : s),
                (x = !1),
                (v.parseAtrulePrelude =
                  !("parseAtrulePrelude" in i) ||
                  Boolean(i.parseAtrulePrelude)),
                (v.parseRulePrelude =
                  !("parseRulePrelude" in i) || Boolean(i.parseRulePrelude)),
                (v.parseValue = !("parseValue" in i) || Boolean(i.parseValue)),
                (v.parseCustomProperty =
                  "parseCustomProperty" in i && Boolean(i.parseCustomProperty));
              const { context: r = "default", onComment: o } = i;
              if (r in v.context == !1)
                throw new Error("Unknown context `" + r + "`");
              "function" == typeof o &&
                v.forEachToken((e, n, i) => {
                  if (e === a.Comment) {
                    const e = v.getLocation(n, i),
                      r = (0, a.cmpStr)(t, i - 2, i, "*/")
                        ? t.slice(n + 2, i - 2)
                        : t.slice(n + 2, i);
                    o(r, e);
                  }
                });
              const c = v.context[r].call(v, i);
              return v.eof || v.error(), c;
            },
            { SyntaxError: r.SyntaxError, config: v.config },
          );
        }
      },
      (e, t, n) => {
        "use strict";
        n.r(t), n.d(t, { List: () => r });
        let i = null;
        class r {
          static createItem(e) {
            return { prev: null, next: null, data: e };
          }
          constructor() {
            (this.head = null), (this.tail = null), (this.cursor = null);
          }
          createItem(e) {
            return r.createItem(e);
          }
          allocateCursor(e, t) {
            let n;
            return (
              null !== i
                ? ((n = i),
                  (i = i.cursor),
                  (n.prev = e),
                  (n.next = t),
                  (n.cursor = this.cursor))
                : (n = { prev: e, next: t, cursor: this.cursor }),
              (this.cursor = n),
              n
            );
          }
          releaseCursor() {
            const { cursor: e } = this;
            (this.cursor = e.cursor),
              (e.prev = null),
              (e.next = null),
              (e.cursor = i),
              (i = e);
          }
          updateCursors(e, t, n, i) {
            let { cursor: r } = this;
            for (; null !== r; )
              r.prev === e && (r.prev = t),
                r.next === n && (r.next = i),
                (r = r.cursor);
          }
          *[Symbol.iterator]() {
            for (let e = this.head; null !== e; e = e.next) yield e.data;
          }
          get size() {
            let e = 0;
            for (let t = this.head; null !== t; t = t.next) e++;
            return e;
          }
          get isEmpty() {
            return null === this.head;
          }
          get first() {
            return this.head && this.head.data;
          }
          get last() {
            return this.tail && this.tail.data;
          }
          fromArray(e) {
            let t = null;
            this.head = null;
            for (let n of e) {
              const e = r.createItem(n);
              null !== t ? (t.next = e) : (this.head = e),
                (e.prev = t),
                (t = e);
            }
            return (this.tail = t), this;
          }
          toArray() {
            return [...this];
          }
          toJSON() {
            return [...this];
          }
          forEach(e, t = this) {
            const n = this.allocateCursor(null, this.head);
            for (; null !== n.next; ) {
              const i = n.next;
              (n.next = i.next), e.call(t, i.data, i, this);
            }
            this.releaseCursor();
          }
          forEachRight(e, t = this) {
            const n = this.allocateCursor(this.tail, null);
            for (; null !== n.prev; ) {
              const i = n.prev;
              (n.prev = i.prev), e.call(t, i.data, i, this);
            }
            this.releaseCursor();
          }
          reduce(e, t, n = this) {
            let i,
              r = this.allocateCursor(null, this.head),
              a = t;
            for (; null !== r.next; )
              (i = r.next),
                (r.next = i.next),
                (a = e.call(n, a, i.data, i, this));
            return this.releaseCursor(), a;
          }
          reduceRight(e, t, n = this) {
            let i,
              r = this.allocateCursor(this.tail, null),
              a = t;
            for (; null !== r.prev; )
              (i = r.prev),
                (r.prev = i.prev),
                (a = e.call(n, a, i.data, i, this));
            return this.releaseCursor(), a;
          }
          some(e, t = this) {
            for (let n = this.head; null !== n; n = n.next)
              if (e.call(t, n.data, n, this)) return !0;
            return !1;
          }
          map(e, t = this) {
            const n = new r();
            for (let i = this.head; null !== i; i = i.next)
              n.appendData(e.call(t, i.data, i, this));
            return n;
          }
          filter(e, t = this) {
            const n = new r();
            for (let i = this.head; null !== i; i = i.next)
              e.call(t, i.data, i, this) && n.appendData(i.data);
            return n;
          }
          nextUntil(e, t, n = this) {
            if (null === e) return;
            const i = this.allocateCursor(null, e);
            for (; null !== i.next; ) {
              const e = i.next;
              if (((i.next = e.next), t.call(n, e.data, e, this))) break;
            }
            this.releaseCursor();
          }
          prevUntil(e, t, n = this) {
            if (null === e) return;
            const i = this.allocateCursor(e, null);
            for (; null !== i.prev; ) {
              const e = i.prev;
              if (((i.prev = e.prev), t.call(n, e.data, e, this))) break;
            }
            this.releaseCursor();
          }
          clear() {
            (this.head = null), (this.tail = null);
          }
          copy() {
            const e = new r();
            for (let t of this) e.appendData(t);
            return e;
          }
          prepend(e) {
            return (
              this.updateCursors(null, e, this.head, e),
              null !== this.head
                ? ((this.head.prev = e), (e.next = this.head))
                : (this.tail = e),
              (this.head = e),
              this
            );
          }
          prependData(e) {
            return this.prepend(r.createItem(e));
          }
          append(e) {
            return this.insert(e);
          }
          appendData(e) {
            return this.insert(r.createItem(e));
          }
          insert(e, t = null) {
            if (null !== t)
              if ((this.updateCursors(t.prev, e, t, e), null === t.prev)) {
                if (this.head !== t)
                  throw new Error("before doesn't belong to list");
                (this.head = e),
                  (t.prev = e),
                  (e.next = t),
                  this.updateCursors(null, e);
              } else
                (t.prev.next = e),
                  (e.prev = t.prev),
                  (t.prev = e),
                  (e.next = t);
            else
              this.updateCursors(this.tail, e, null, e),
                null !== this.tail
                  ? ((this.tail.next = e), (e.prev = this.tail))
                  : (this.head = e),
                (this.tail = e);
            return this;
          }
          insertData(e, t) {
            return this.insert(r.createItem(e), t);
          }
          remove(e) {
            if ((this.updateCursors(e, e.prev, e, e.next), null !== e.prev))
              e.prev.next = e.next;
            else {
              if (this.head !== e)
                throw new Error("item doesn't belong to list");
              this.head = e.next;
            }
            if (null !== e.next) e.next.prev = e.prev;
            else {
              if (this.tail !== e)
                throw new Error("item doesn't belong to list");
              this.tail = e.prev;
            }
            return (e.prev = null), (e.next = null), e;
          }
          push(e) {
            this.insert(r.createItem(e));
          }
          pop() {
            return null !== this.tail ? this.remove(this.tail) : null;
          }
          unshift(e) {
            this.prepend(r.createItem(e));
          }
          shift() {
            return null !== this.head ? this.remove(this.head) : null;
          }
          prependList(e) {
            return this.insertList(e, this.head);
          }
          appendList(e) {
            return this.insertList(e);
          }
          insertList(e, t) {
            return (
              null === e.head ||
                (null != t
                  ? (this.updateCursors(t.prev, e.tail, t, e.head),
                    null !== t.prev
                      ? ((t.prev.next = e.head), (e.head.prev = t.prev))
                      : (this.head = e.head),
                    (t.prev = e.tail),
                    (e.tail.next = t))
                  : (this.updateCursors(this.tail, e.tail, null, e.head),
                    null !== this.tail
                      ? ((this.tail.next = e.head), (e.head.prev = this.tail))
                      : (this.head = e.head),
                    (this.tail = e.tail)),
                (e.head = null),
                (e.tail = null)),
              this
            );
          }
          replace(e, t) {
            "head" in t ? this.insertList(t, e) : this.insert(t, e),
              this.remove(e);
          }
        }
      },
      (e, t, n) => {
        "use strict";
        n.r(t), n.d(t, { SyntaxError: () => c });
        var i = n(42);
        const r = 100,
          a = 60,
          o = "    ";
        function s({ source: e, line: t, column: n }, i) {
          function s(e, t) {
            return c
              .slice(e, t)
              .map((t, n) => String(e + n + 1).padStart(p) + " |" + t)
              .join("\n");
          }
          const c = e.split(/\r\n?|\n|\f/),
            l = Math.max(1, t - i) - 1,
            u = Math.min(t + i, c.length + 1),
            p = Math.max(4, String(u).length) + 1;
          let d = 0;
          (n +=
            (o.length - 1) *
            (c[t - 1].substr(0, n - 1).match(/\t/g) || []).length) > r &&
            ((d = n - a + 3), (n = a - 2));
          for (let e = l; e <= u; e++)
            e >= 0 &&
              e < c.length &&
              ((c[e] = c[e].replace(/\t/g, o)),
              (c[e] =
                (d > 0 && c[e].length > d ? "…" : "") +
                c[e].substr(d, r - 2) +
                (c[e].length > d + r - 1 ? "…" : "")));
          return [s(l, t), new Array(n + p + 2).join("-") + "^", s(t, u)]
            .filter(Boolean)
            .join("\n");
        }
        function c(e, t, n, r, a) {
          return Object.assign((0, i.createCustomError)("SyntaxError", e), {
            source: t,
            offset: n,
            line: r,
            column: a,
            sourceFragment: (e) =>
              s({ source: t, line: r, column: a }, isNaN(e) ? 0 : e),
            get formattedMessage() {
              return (
                `Parse error: ${e}\n` + s({ source: t, line: r, column: a }, 2)
              );
            },
          });
        }
      },
      (e, t, n) => {
        "use strict";
        function i(e, t) {
          const n = Object.create(SyntaxError.prototype),
            i = new Error();
          return Object.assign(n, {
            name: e,
            message: t,
            get stack() {
              return (i.stack || "").replace(/^(.+\n){1,3}/, `${e}: ${t}\n`);
            },
          });
        }
        n.r(t), n.d(t, { createCustomError: () => i });
      },
      (e, t, n) => {
        "use strict";
        n.r(t), n.d(t, { readSequence: () => r });
        var i = n(31);
        function r(e) {
          const t = this.createList();
          let n = !1;
          const r = { recognizer: e };
          for (; !this.eof; ) {
            switch (this.tokenType) {
              case i.Comment:
                this.next();
                continue;
              case i.WhiteSpace:
                (n = !0), this.next();
                continue;
            }
            let a = e.getNode.call(this, r);
            if (void 0 === a) break;
            n &&
              (e.onWhiteSpace && e.onWhiteSpace.call(this, a, t, r), (n = !1)),
              t.push(a);
          }
          return (
            n && e.onWhiteSpace && e.onWhiteSpace.call(this, null, t, r), t
          );
        }
      },
      (e, t, n) => {
        "use strict";
        n.r(t), n.d(t, { createGenerator: () => l });
        var i = n(31),
          r = n(45),
          a = n(52);
        const o = 92;
        function s(e, t) {
          if ("function" != typeof t) e.children.forEach(this.node, this);
          else {
            let n = null;
            e.children.forEach((e) => {
              null !== n && t.call(this, n), this.node(e), (n = e);
            });
          }
        }
        function c(e) {
          (0, i.tokenize)(e, (t, n, i) => {
            this.token(t, e.slice(n, i));
          });
        }
        function l(e) {
          const t = new Map();
          for (let n in e.node) t.set(n, e.node[n].generate);
          return function (e, n) {
            let l = "",
              u = 0,
              p = {
                node(e) {
                  if (!t.has(e.type))
                    throw new Error("Unknown node type: " + e.type);
                  t.get(e.type).call(d, e);
                },
                tokenBefore: a.safe,
                token(e, t) {
                  (u = this.tokenBefore(u, e, t)),
                    this.emit(t, e, !1),
                    e === i.Delim &&
                      t.charCodeAt(0) === o &&
                      this.emit("\n", i.WhiteSpace, !0);
                },
                emit(e) {
                  l += e;
                },
                result: () => l,
              };
            n &&
              ("function" == typeof n.decorator && (p = n.decorator(p)),
              n.sourceMap && (p = (0, r.generateSourceMap)(p)),
              n.mode in a && (p.tokenBefore = a[n.mode]));
            const d = {
              node: (e) => p.node(e),
              children: s,
              token: (e, t) => p.token(e, t),
              tokenize: c,
            };
            return p.node(e), p.result();
          };
        }
      },
      (e, t, n) => {
        "use strict";
        n.r(t), n.d(t, { generateSourceMap: () => a });
        var i = n(46);
        const r = new Set(["Atrule", "Selector", "Declaration"]);
        function a(e) {
          const t = new i.SourceMapGenerator(),
            n = { line: 1, column: 0 },
            a = { line: 0, column: 0 },
            o = { line: 1, column: 0 },
            s = { generated: o };
          let c = 1,
            l = 0,
            u = !1;
          const p = e.node;
          e.node = function (e) {
            if (e.loc && e.loc.start && r.has(e.type)) {
              const i = e.loc.start.line,
                r = e.loc.start.column - 1;
              (a.line === i && a.column === r) ||
                ((a.line = i),
                (a.column = r),
                (n.line = c),
                (n.column = l),
                u &&
                  ((u = !1),
                  (n.line === o.line && n.column === o.column) ||
                    t.addMapping(s)),
                (u = !0),
                t.addMapping({
                  source: e.loc.source,
                  original: a,
                  generated: n,
                }));
            }
            p.call(this, e),
              u && r.has(e.type) && ((o.line = c), (o.column = l));
          };
          const d = e.emit;
          e.emit = function (e, t, n) {
            for (let t = 0; t < e.length; t++)
              10 === e.charCodeAt(t) ? (c++, (l = 0)) : l++;
            d(e, t, n);
          };
          const m = e.result;
          return (
            (e.result = function () {
              return u && t.addMapping(s), { css: m(), map: t };
            }),
            e
          );
        }
      },
      (e, t, n) => {
        var i = n(47),
          r = n(49),
          a = n(50).ArraySet,
          o = n(51).MappingList;
        function s(e) {
          e || (e = {}),
            (this._file = r.getArg(e, "file", null)),
            (this._sourceRoot = r.getArg(e, "sourceRoot", null)),
            (this._skipValidation = r.getArg(e, "skipValidation", !1)),
            (this._sources = new a()),
            (this._names = new a()),
            (this._mappings = new o()),
            (this._sourcesContents = null);
        }
        (s.prototype._version = 3),
          (s.fromSourceMap = function (e) {
            var t = e.sourceRoot,
              n = new s({ file: e.file, sourceRoot: t });
            return (
              e.eachMapping(function (e) {
                var i = {
                  generated: {
                    line: e.generatedLine,
                    column: e.generatedColumn,
                  },
                };
                null != e.source &&
                  ((i.source = e.source),
                  null != t && (i.source = r.relative(t, i.source)),
                  (i.original = {
                    line: e.originalLine,
                    column: e.originalColumn,
                  }),
                  null != e.name && (i.name = e.name)),
                  n.addMapping(i);
              }),
              e.sources.forEach(function (i) {
                var a = i;
                null !== t && (a = r.relative(t, i)),
                  n._sources.has(a) || n._sources.add(a);
                var o = e.sourceContentFor(i);
                null != o && n.setSourceContent(i, o);
              }),
              n
            );
          }),
          (s.prototype.addMapping = function (e) {
            var t = r.getArg(e, "generated"),
              n = r.getArg(e, "original", null),
              i = r.getArg(e, "source", null),
              a = r.getArg(e, "name", null);
            this._skipValidation || this._validateMapping(t, n, i, a),
              null != i &&
                ((i = String(i)), this._sources.has(i) || this._sources.add(i)),
              null != a &&
                ((a = String(a)), this._names.has(a) || this._names.add(a)),
              this._mappings.add({
                generatedLine: t.line,
                generatedColumn: t.column,
                originalLine: null != n && n.line,
                originalColumn: null != n && n.column,
                source: i,
                name: a,
              });
          }),
          (s.prototype.setSourceContent = function (e, t) {
            var n = e;
            null != this._sourceRoot && (n = r.relative(this._sourceRoot, n)),
              null != t
                ? (this._sourcesContents ||
                    (this._sourcesContents = Object.create(null)),
                  (this._sourcesContents[r.toSetString(n)] = t))
                : this._sourcesContents &&
                  (delete this._sourcesContents[r.toSetString(n)],
                  0 === Object.keys(this._sourcesContents).length &&
                    (this._sourcesContents = null));
          }),
          (s.prototype.applySourceMap = function (e, t, n) {
            var i = t;
            if (null == t) {
              if (null == e.file)
                throw new Error(
                  'SourceMapGenerator.prototype.applySourceMap requires either an explicit source file, or the source map\'s "file" property. Both were omitted.',
                );
              i = e.file;
            }
            var o = this._sourceRoot;
            null != o && (i = r.relative(o, i));
            var s = new a(),
              c = new a();
            this._mappings.unsortedForEach(function (t) {
              if (t.source === i && null != t.originalLine) {
                var a = e.originalPositionFor({
                  line: t.originalLine,
                  column: t.originalColumn,
                });
                null != a.source &&
                  ((t.source = a.source),
                  null != n && (t.source = r.join(n, t.source)),
                  null != o && (t.source = r.relative(o, t.source)),
                  (t.originalLine = a.line),
                  (t.originalColumn = a.column),
                  null != a.name && (t.name = a.name));
              }
              var l = t.source;
              null == l || s.has(l) || s.add(l);
              var u = t.name;
              null == u || c.has(u) || c.add(u);
            }, this),
              (this._sources = s),
              (this._names = c),
              e.sources.forEach(function (t) {
                var i = e.sourceContentFor(t);
                null != i &&
                  (null != n && (t = r.join(n, t)),
                  null != o && (t = r.relative(o, t)),
                  this.setSourceContent(t, i));
              }, this);
          }),
          (s.prototype._validateMapping = function (e, t, n, i) {
            if (t && "number" != typeof t.line && "number" != typeof t.column)
              throw new Error(
                "original.line and original.column are not numbers -- you probably meant to omit the original mapping entirely and only map the generated position. If so, pass null for the original mapping instead of an object with empty or null values.",
              );
            if (
              (!(
                e &&
                "line" in e &&
                "column" in e &&
                e.line > 0 &&
                e.column >= 0
              ) ||
                t ||
                n ||
                i) &&
              !(
                e &&
                "line" in e &&
                "column" in e &&
                t &&
                "line" in t &&
                "column" in t &&
                e.line > 0 &&
                e.column >= 0 &&
                t.line > 0 &&
                t.column >= 0 &&
                n
              )
            )
              throw new Error(
                "Invalid mapping: " +
                  JSON.stringify({
                    generated: e,
                    source: n,
                    original: t,
                    name: i,
                  }),
              );
          }),
          (s.prototype._serializeMappings = function () {
            for (
              var e,
                t,
                n,
                a,
                o = 0,
                s = 1,
                c = 0,
                l = 0,
                u = 0,
                p = 0,
                d = "",
                m = this._mappings.toArray(),
                h = 0,
                f = m.length;
              h < f;
              h++
            ) {
              if (((e = ""), (t = m[h]).generatedLine !== s))
                for (o = 0; t.generatedLine !== s; ) (e += ";"), s++;
              else if (h > 0) {
                if (!r.compareByGeneratedPositionsInflated(t, m[h - 1]))
                  continue;
                e += ",";
              }
              (e += i.encode(t.generatedColumn - o)),
                (o = t.generatedColumn),
                null != t.source &&
                  ((a = this._sources.indexOf(t.source)),
                  (e += i.encode(a - p)),
                  (p = a),
                  (e += i.encode(t.originalLine - 1 - l)),
                  (l = t.originalLine - 1),
                  (e += i.encode(t.originalColumn - c)),
                  (c = t.originalColumn),
                  null != t.name &&
                    ((n = this._names.indexOf(t.name)),
                    (e += i.encode(n - u)),
                    (u = n))),
                (d += e);
            }
            return d;
          }),
          (s.prototype._generateSourcesContent = function (e, t) {
            return e.map(function (e) {
              if (!this._sourcesContents) return null;
              null != t && (e = r.relative(t, e));
              var n = r.toSetString(e);
              return Object.prototype.hasOwnProperty.call(
                this._sourcesContents,
                n,
              )
                ? this._sourcesContents[n]
                : null;
            }, this);
          }),
          (s.prototype.toJSON = function () {
            var e = {
              version: this._version,
              sources: this._sources.toArray(),
              names: this._names.toArray(),
              mappings: this._serializeMappings(),
            };
            return (
              null != this._file && (e.file = this._file),
              null != this._sourceRoot && (e.sourceRoot = this._sourceRoot),
              this._sourcesContents &&
                (e.sourcesContent = this._generateSourcesContent(
                  e.sources,
                  e.sourceRoot,
                )),
              e
            );
          }),
          (s.prototype.toString = function () {
            return JSON.stringify(this.toJSON());
          }),
          (t.SourceMapGenerator = s);
      },
      (e, t, n) => {
        var i = n(48);
        (t.encode = function (e) {
          var t,
            n = "",
            r = (function (e) {
              return e < 0 ? 1 + (-e << 1) : 0 + (e << 1);
            })(e);
          do {
            (t = 31 & r), (r >>>= 5) > 0 && (t |= 32), (n += i.encode(t));
          } while (r > 0);
          return n;
        }),
          (t.decode = function (e, t, n) {
            var r,
              a,
              o,
              s,
              c = e.length,
              l = 0,
              u = 0;
            do {
              if (t >= c)
                throw new Error("Expected more digits in base 64 VLQ value.");
              if (-1 === (a = i.decode(e.charCodeAt(t++))))
                throw new Error("Invalid base64 digit: " + e.charAt(t - 1));
              (r = !!(32 & a)), (l += (a &= 31) << u), (u += 5);
            } while (r);
            (n.value = ((s = (o = l) >> 1), 1 == (1 & o) ? -s : s)),
              (n.rest = t);
          });
      },
      (e, t) => {
        var n =
          "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/".split(
            "",
          );
        (t.encode = function (e) {
          if (0 <= e && e < n.length) return n[e];
          throw new TypeError("Must be between 0 and 63: " + e);
        }),
          (t.decode = function (e) {
            return 65 <= e && e <= 90
              ? e - 65
              : 97 <= e && e <= 122
                ? e - 97 + 26
                : 48 <= e && e <= 57
                  ? e - 48 + 52
                  : 43 == e
                    ? 62
                    : 47 == e
                      ? 63
                      : -1;
          });
      },
      (e, t) => {
        t.getArg = function (e, t, n) {
          if (t in e) return e[t];
          if (3 === arguments.length) return n;
          throw new Error('"' + t + '" is a required argument.');
        };
        var n =
            /^(?:([\w+\-.]+):)?\/\/(?:(\w+:\w+)@)?([\w.-]*)(?::(\d+))?(.*)$/,
          i = /^data:.+\,.+$/;
        function r(e) {
          var t = e.match(n);
          return t
            ? { scheme: t[1], auth: t[2], host: t[3], port: t[4], path: t[5] }
            : null;
        }
        function a(e) {
          var t = "";
          return (
            e.scheme && (t += e.scheme + ":"),
            (t += "//"),
            e.auth && (t += e.auth + "@"),
            e.host && (t += e.host),
            e.port && (t += ":" + e.port),
            e.path && (t += e.path),
            t
          );
        }
        (t.urlParse = r), (t.urlGenerate = a);
        var o,
          s,
          c =
            ((o = function (e) {
              var n = e,
                i = r(e);
              if (i) {
                if (!i.path) return e;
                n = i.path;
              }
              for (var o = t.isAbsolute(n), s = [], c = 0, l = 0; ; ) {
                if (((c = l), -1 === (l = n.indexOf("/", c)))) {
                  s.push(n.slice(c));
                  break;
                }
                for (s.push(n.slice(c, l)); l < n.length && "/" === n[l]; ) l++;
              }
              var u,
                p = 0;
              for (l = s.length - 1; l >= 0; l--)
                "." === (u = s[l])
                  ? s.splice(l, 1)
                  : ".." === u
                    ? p++
                    : p > 0 &&
                      ("" === u
                        ? (s.splice(l + 1, p), (p = 0))
                        : (s.splice(l, 2), p--));
              return (
                "" === (n = s.join("/")) && (n = o ? "/" : "."),
                i ? ((i.path = n), a(i)) : n
              );
            }),
            (s = []),
            function (e) {
              for (var t = 0; t < s.length; t++)
                if (s[t].input === e) {
                  var n = s[0];
                  return (s[0] = s[t]), (s[t] = n), s[0].result;
                }
              var i = o(e);
              return (
                s.unshift({ input: e, result: i }), s.length > 32 && s.pop(), i
              );
            });
        function l(e, t) {
          "" === e && (e = "."), "" === t && (t = ".");
          var n = r(t),
            o = r(e);
          if ((o && (e = o.path || "/"), n && !n.scheme))
            return o && (n.scheme = o.scheme), a(n);
          if (n || t.match(i)) return t;
          if (o && !o.host && !o.path) return (o.host = t), a(o);
          var s = "/" === t.charAt(0) ? t : c(e.replace(/\/+$/, "") + "/" + t);
          return o ? ((o.path = s), a(o)) : s;
        }
        (t.normalize = c),
          (t.join = l),
          (t.isAbsolute = function (e) {
            return "/" === e.charAt(0) || n.test(e);
          }),
          (t.relative = function (e, t) {
            "" === e && (e = "."), (e = e.replace(/\/$/, ""));
            for (var n = 0; 0 !== t.indexOf(e + "/"); ) {
              var i = e.lastIndexOf("/");
              if (i < 0) return t;
              if ((e = e.slice(0, i)).match(/^([^\/]+:\/)?\/*$/)) return t;
              ++n;
            }
            return Array(n + 1).join("../") + t.substr(e.length + 1);
          });
        var u = !("__proto__" in Object.create(null));
        function p(e) {
          return e;
        }
        function d(e) {
          if (!e) return !1;
          var t = e.length;
          if (t < 9) return !1;
          if (
            95 !== e.charCodeAt(t - 1) ||
            95 !== e.charCodeAt(t - 2) ||
            111 !== e.charCodeAt(t - 3) ||
            116 !== e.charCodeAt(t - 4) ||
            111 !== e.charCodeAt(t - 5) ||
            114 !== e.charCodeAt(t - 6) ||
            112 !== e.charCodeAt(t - 7) ||
            95 !== e.charCodeAt(t - 8) ||
            95 !== e.charCodeAt(t - 9)
          )
            return !1;
          for (var n = t - 10; n >= 0; n--)
            if (36 !== e.charCodeAt(n)) return !1;
          return !0;
        }
        function m(e, t) {
          return e === t
            ? 0
            : null === e
              ? 1
              : null === t
                ? -1
                : e > t
                  ? 1
                  : -1;
        }
        (t.toSetString = u
          ? p
          : function (e) {
              return d(e) ? "$" + e : e;
            }),
          (t.fromSetString = u
            ? p
            : function (e) {
                return d(e) ? e.slice(1) : e;
              }),
          (t.compareByOriginalPositions = function (e, t, n) {
            var i = m(e.source, t.source);
            return 0 !== i ||
              0 !== (i = e.originalLine - t.originalLine) ||
              0 !== (i = e.originalColumn - t.originalColumn) ||
              n ||
              0 !== (i = e.generatedColumn - t.generatedColumn) ||
              0 !== (i = e.generatedLine - t.generatedLine)
              ? i
              : m(e.name, t.name);
          }),
          (t.compareByOriginalPositionsNoSource = function (e, t, n) {
            var i;
            return 0 !== (i = e.originalLine - t.originalLine) ||
              0 !== (i = e.originalColumn - t.originalColumn) ||
              n ||
              0 !== (i = e.generatedColumn - t.generatedColumn) ||
              0 !== (i = e.generatedLine - t.generatedLine)
              ? i
              : m(e.name, t.name);
          }),
          (t.compareByGeneratedPositionsDeflated = function (e, t, n) {
            var i = e.generatedLine - t.generatedLine;
            return 0 !== i ||
              0 !== (i = e.generatedColumn - t.generatedColumn) ||
              n ||
              0 !== (i = m(e.source, t.source)) ||
              0 !== (i = e.originalLine - t.originalLine) ||
              0 !== (i = e.originalColumn - t.originalColumn)
              ? i
              : m(e.name, t.name);
          }),
          (t.compareByGeneratedPositionsDeflatedNoLine = function (e, t, n) {
            var i = e.generatedColumn - t.generatedColumn;
            return 0 !== i ||
              n ||
              0 !== (i = m(e.source, t.source)) ||
              0 !== (i = e.originalLine - t.originalLine) ||
              0 !== (i = e.originalColumn - t.originalColumn)
              ? i
              : m(e.name, t.name);
          }),
          (t.compareByGeneratedPositionsInflated = function (e, t) {
            var n = e.generatedLine - t.generatedLine;
            return 0 !== n ||
              0 !== (n = e.generatedColumn - t.generatedColumn) ||
              0 !== (n = m(e.source, t.source)) ||
              0 !== (n = e.originalLine - t.originalLine) ||
              0 !== (n = e.originalColumn - t.originalColumn)
              ? n
              : m(e.name, t.name);
          }),
          (t.parseSourceMapInput = function (e) {
            return JSON.parse(e.replace(/^\)]}'[^\n]*\n/, ""));
          }),
          (t.computeSourceURL = function (e, t, n) {
            if (
              ((t = t || ""),
              e &&
                ("/" !== e[e.length - 1] && "/" !== t[0] && (e += "/"),
                (t = e + t)),
              n)
            ) {
              var i = r(n);
              if (!i) throw new Error("sourceMapURL could not be parsed");
              if (i.path) {
                var o = i.path.lastIndexOf("/");
                o >= 0 && (i.path = i.path.substring(0, o + 1));
              }
              t = l(a(i), t);
            }
            return c(t);
          });
      },
      (e, t, n) => {
        var i = n(49),
          r = Object.prototype.hasOwnProperty,
          a = "undefined" != typeof Map;
        function o() {
          (this._array = []), (this._set = a ? new Map() : Object.create(null));
        }
        (o.fromArray = function (e, t) {
          for (var n = new o(), i = 0, r = e.length; i < r; i++) n.add(e[i], t);
          return n;
        }),
          (o.prototype.size = function () {
            return a
              ? this._set.size
              : Object.getOwnPropertyNames(this._set).length;
          }),
          (o.prototype.add = function (e, t) {
            var n = a ? e : i.toSetString(e),
              o = a ? this.has(e) : r.call(this._set, n),
              s = this._array.length;
            (o && !t) || this._array.push(e),
              o || (a ? this._set.set(e, s) : (this._set[n] = s));
          }),
          (o.prototype.has = function (e) {
            if (a) return this._set.has(e);
            var t = i.toSetString(e);
            return r.call(this._set, t);
          }),
          (o.prototype.indexOf = function (e) {
            if (a) {
              var t = this._set.get(e);
              if (t >= 0) return t;
            } else {
              var n = i.toSetString(e);
              if (r.call(this._set, n)) return this._set[n];
            }
            throw new Error('"' + e + '" is not in the set.');
          }),
          (o.prototype.at = function (e) {
            if (e >= 0 && e < this._array.length) return this._array[e];
            throw new Error("No element indexed by " + e);
          }),
          (o.prototype.toArray = function () {
            return this._array.slice();
          }),
          (t.ArraySet = o);
      },
      (e, t, n) => {
        var i = n(49);
        function r() {
          (this._array = []),
            (this._sorted = !0),
            (this._last = { generatedLine: -1, generatedColumn: 0 });
        }
        (r.prototype.unsortedForEach = function (e, t) {
          this._array.forEach(e, t);
        }),
          (r.prototype.add = function (e) {
            var t, n, r, a, o, s;
            (t = this._last),
              (n = e),
              (r = t.generatedLine),
              (a = n.generatedLine),
              (o = t.generatedColumn),
              (s = n.generatedColumn),
              a > r ||
              (a == r && s >= o) ||
              i.compareByGeneratedPositionsInflated(t, n) <= 0
                ? ((this._last = e), this._array.push(e))
                : ((this._sorted = !1), this._array.push(e));
          }),
          (r.prototype.toArray = function () {
            return (
              this._sorted ||
                (this._array.sort(i.compareByGeneratedPositionsInflated),
                (this._sorted = !0)),
              this._array
            );
          }),
          (t.MappingList = r);
      },
      (e, t, n) => {
        "use strict";
        n.r(t), n.d(t, { spec: () => c, safe: () => l });
        var i = n(31);
        const r = (e, t) => {
            if ((e === i.Delim && (e = t), "string" == typeof e)) {
              const t = e.charCodeAt(0);
              return t > 127 ? 32768 : t << 8;
            }
            return e;
          },
          a = [
            [i.Ident, i.Ident],
            [i.Ident, i.Function],
            [i.Ident, i.Url],
            [i.Ident, i.BadUrl],
            [i.Ident, "-"],
            [i.Ident, i.Number],
            [i.Ident, i.Percentage],
            [i.Ident, i.Dimension],
            [i.Ident, i.CDC],
            [i.Ident, i.LeftParenthesis],
            [i.AtKeyword, i.Ident],
            [i.AtKeyword, i.Function],
            [i.AtKeyword, i.Url],
            [i.AtKeyword, i.BadUrl],
            [i.AtKeyword, "-"],
            [i.AtKeyword, i.Number],
            [i.AtKeyword, i.Percentage],
            [i.AtKeyword, i.Dimension],
            [i.AtKeyword, i.CDC],
            [i.Hash, i.Ident],
            [i.Hash, i.Function],
            [i.Hash, i.Url],
            [i.Hash, i.BadUrl],
            [i.Hash, "-"],
            [i.Hash, i.Number],
            [i.Hash, i.Percentage],
            [i.Hash, i.Dimension],
            [i.Hash, i.CDC],
            [i.Dimension, i.Ident],
            [i.Dimension, i.Function],
            [i.Dimension, i.Url],
            [i.Dimension, i.BadUrl],
            [i.Dimension, "-"],
            [i.Dimension, i.Number],
            [i.Dimension, i.Percentage],
            [i.Dimension, i.Dimension],
            [i.Dimension, i.CDC],
            ["#", i.Ident],
            ["#", i.Function],
            ["#", i.Url],
            ["#", i.BadUrl],
            ["#", "-"],
            ["#", i.Number],
            ["#", i.Percentage],
            ["#", i.Dimension],
            ["#", i.CDC],
            ["-", i.Ident],
            ["-", i.Function],
            ["-", i.Url],
            ["-", i.BadUrl],
            ["-", "-"],
            ["-", i.Number],
            ["-", i.Percentage],
            ["-", i.Dimension],
            ["-", i.CDC],
            [i.Number, i.Ident],
            [i.Number, i.Function],
            [i.Number, i.Url],
            [i.Number, i.BadUrl],
            [i.Number, i.Number],
            [i.Number, i.Percentage],
            [i.Number, i.Dimension],
            [i.Number, "%"],
            [i.Number, i.CDC],
            ["@", i.Ident],
            ["@", i.Function],
            ["@", i.Url],
            ["@", i.BadUrl],
            ["@", "-"],
            ["@", i.CDC],
            [".", i.Number],
            [".", i.Percentage],
            [".", i.Dimension],
            ["+", i.Number],
            ["+", i.Percentage],
            ["+", i.Dimension],
            ["/", "*"],
          ],
          o = a.concat([
            [i.Ident, i.Hash],
            [i.Dimension, i.Hash],
            [i.Hash, i.Hash],
            [i.AtKeyword, i.LeftParenthesis],
            [i.AtKeyword, i.String],
            [i.AtKeyword, i.Colon],
            [i.Percentage, i.Percentage],
            [i.Percentage, i.Dimension],
            [i.Percentage, i.Function],
            [i.Percentage, "-"],
            [i.RightParenthesis, i.Ident],
            [i.RightParenthesis, i.Function],
            [i.RightParenthesis, i.Percentage],
            [i.RightParenthesis, i.Dimension],
            [i.RightParenthesis, i.Hash],
            [i.RightParenthesis, "-"],
          ]);
        function s(e) {
          const t = new Set(e.map(([e, t]) => (r(e) << 16) | r(t)));
          return function (e, n, a) {
            const o = r(n, a),
              s = a.charCodeAt(0);
            return (
              ((45 === s && n !== i.Ident && n !== i.Function && n !== i.CDC) ||
              43 === s
                ? t.has((e << 16) | (s << 8))
                : t.has((e << 16) | o)) && this.emit(" ", i.WhiteSpace, !0),
              o
            );
          };
        }
        const c = s(a),
          l = s(o);
      },
      (e, t, n) => {
        "use strict";
        n.r(t), n.d(t, { createConvertor: () => r });
        var i = n(40);
        function r(e) {
          return {
            fromPlainObject: function (t) {
              return (
                e(t, {
                  enter: function (e) {
                    e.children &&
                      e.children instanceof i.List == !1 &&
                      (e.children = new i.List().fromArray(e.children));
                  },
                }),
                t
              );
            },
            toPlainObject: function (t) {
              return (
                e(t, {
                  leave: function (e) {
                    e.children &&
                      e.children instanceof i.List &&
                      (e.children = e.children.toArray());
                  },
                }),
                t
              );
            },
          };
        }
      },
      (e, t, n) => {
        "use strict";
        n.r(t), n.d(t, { createWalker: () => u });
        const { hasOwnProperty: i } = Object.prototype,
          r = function () {};
        function a(e) {
          return "function" == typeof e ? e : r;
        }
        function o(e, t) {
          return function (n, i, r) {
            n.type === t && e.call(this, n, i, r);
          };
        }
        function s(e, t) {
          const n = t.structure,
            r = [];
          for (const e in n) {
            if (!1 === i.call(n, e)) continue;
            let t = n[e];
            const a = { name: e, type: !1, nullable: !1 };
            Array.isArray(t) || (t = [t]);
            for (const e of t)
              null === e
                ? (a.nullable = !0)
                : "string" == typeof e
                  ? (a.type = "node")
                  : Array.isArray(e) && (a.type = "list");
            a.type && r.push(a);
          }
          return r.length ? { context: t.walkContext, fields: r } : null;
        }
        function c(e, t) {
          const n = e.fields.slice(),
            i = e.context,
            r = "string" == typeof i;
          return (
            t && n.reverse(),
            function (e, a, o, s) {
              let c;
              r && ((c = a[i]), (a[i] = e));
              for (const i of n) {
                const n = e[i.name];
                if (!i.nullable || n)
                  if ("list" === i.type) {
                    if (t ? n.reduceRight(s, !1) : n.reduce(s, !1)) return !0;
                  } else if (o(n)) return !0;
              }
              r && (a[i] = c);
            }
          );
        }
        function l({
          StyleSheet: e,
          Atrule: t,
          Rule: n,
          Block: i,
          DeclarationList: r,
        }) {
          return {
            Atrule: { StyleSheet: e, Atrule: t, Rule: n, Block: i },
            Rule: { StyleSheet: e, Atrule: t, Rule: n, Block: i },
            Declaration: {
              StyleSheet: e,
              Atrule: t,
              Rule: n,
              Block: i,
              DeclarationList: r,
            },
          };
        }
        function u(e) {
          const t = (function (e) {
              const t = {};
              for (const n in e.node)
                if (i.call(e.node, n)) {
                  const i = e.node[n];
                  if (!i.structure)
                    throw new Error(
                      "Missed `structure` field in `" +
                        n +
                        "` node type definition",
                    );
                  t[n] = s(0, i);
                }
              return t;
            })(e),
            n = {},
            u = {},
            p = Symbol("break-walk"),
            d = Symbol("skip-node");
          for (const e in t)
            i.call(t, e) &&
              null !== t[e] &&
              ((n[e] = c(t[e], !1)), (u[e] = c(t[e], !0)));
          const m = l(n),
            h = l(u),
            f = function (e, i) {
              function s(e, t, n) {
                const i = c.call(x, e, t, n);
                return (
                  i === p ||
                  (i !== d &&
                    (!(!f.hasOwnProperty(e.type) || !f[e.type](e, x, s, g)) ||
                      l.call(x, e, t, n) === p))
                );
              }
              let c = r,
                l = r,
                f = n,
                g = (e, t, n, i) => e || s(t, n, i);
              const x = {
                break: p,
                skip: d,
                root: e,
                stylesheet: null,
                atrule: null,
                atrulePrelude: null,
                rule: null,
                selector: null,
                block: null,
                declaration: null,
                function: null,
              };
              if ("function" == typeof i) c = i;
              else if (
                i &&
                ((c = a(i.enter)),
                (l = a(i.leave)),
                i.reverse && (f = u),
                i.visit)
              ) {
                if (m.hasOwnProperty(i.visit))
                  f = i.reverse ? h[i.visit] : m[i.visit];
                else if (!t.hasOwnProperty(i.visit))
                  throw new Error(
                    "Bad value `" +
                      i.visit +
                      "` for `visit` option (should be: " +
                      Object.keys(t).sort().join(", ") +
                      ")",
                  );
                (c = o(c, i.visit)), (l = o(l, i.visit));
              }
              if (c === r && l === r)
                throw new Error(
                  "Neither `enter` nor `leave` walker handler is set or both aren't a function",
                );
              s(e);
            };
          return (
            (f.break = p),
            (f.skip = d),
            (f.find = function (e, t) {
              let n = null;
              return (
                f(e, function (e, i, r) {
                  if (t.call(this, e, i, r)) return (n = e), p;
                }),
                n
              );
            }),
            (f.findLast = function (e, t) {
              let n = null;
              return (
                f(e, {
                  reverse: !0,
                  enter: function (e, i, r) {
                    if (t.call(this, e, i, r)) return (n = e), p;
                  },
                }),
                n
              );
            }),
            (f.findAll = function (e, t) {
              const n = [];
              return (
                f(e, function (e, i, r) {
                  t.call(this, e, i, r) && n.push(e);
                }),
                n
              );
            }),
            f
          );
        }
      },
      (e, t, n) => {
        "use strict";
        n.r(t), n.d(t, { Lexer: () => v });
        var i = n(56),
          r = n(58),
          a = n(59),
          o = n(62),
          s = n(67),
          c = n(68),
          l = n(69),
          u = n(70),
          p = n(71),
          d = n(72);
        const m = (0, c.buildMatchGraph)("inherit | initial | unset"),
          h = (0, c.buildMatchGraph)(
            "inherit | initial | unset | <-ms-legacy-expression>",
          );
        function f(e, t, n) {
          const i = {};
          for (const r in e)
            e[r].syntax &&
              (i[r] = n
                ? e[r].syntax
                : (0, o.generate)(e[r].syntax, { compact: t }));
          return i;
        }
        function g(e, t, n) {
          const i = {};
          for (const [r, a] of Object.entries(e))
            i[r] = {
              prelude:
                a.prelude &&
                (n
                  ? a.prelude.syntax
                  : (0, o.generate)(a.prelude.syntax, { compact: t })),
              descriptors: a.descriptors && f(a.descriptors, t, n),
            };
          return i;
        }
        function x(e, t, n) {
          return { matched: e, iterations: n, error: t, ...u };
        }
        function b(e, t, n, r) {
          const a = (0, s.default)(n, e.syntax);
          let o;
          return (function (e) {
            for (let t = 0; t < e.length; t++)
              if ("var(" === e[t].value.toLowerCase()) return !0;
            return !1;
          })(a)
            ? x(
                null,
                new Error("Matching for a tree with var() is not supported"),
              )
            : (r && (o = (0, l.matchAsTree)(a, e.valueCommonSyntax, e)),
              (r && o.match) ||
              ((o = (0, l.matchAsTree)(a, t.match, e)), o.match)
                ? x(o.match, null, o.iterations)
                : x(
                    null,
                    new i.SyntaxMatchError(o.reason, t.syntax, n, o),
                    o.iterations,
                  ));
        }
        class v {
          constructor(e, t, n) {
            if (
              ((this.valueCommonSyntax = m),
              (this.syntax = t),
              (this.generic = !1),
              (this.atrules = Object.create(null)),
              (this.properties = Object.create(null)),
              (this.types = Object.create(null)),
              (this.structure = n || (0, d.getStructureFromConfig)(e)),
              e)
            ) {
              if (e.types)
                for (const t in e.types) this.addType_(t, e.types[t]);
              if (e.generic) {
                this.generic = !0;
                for (const e in a.default) this.addType_(e, a.default[e]);
              }
              if (e.atrules)
                for (const t in e.atrules) this.addAtrule_(t, e.atrules[t]);
              if (e.properties)
                for (const t in e.properties)
                  this.addProperty_(t, e.properties[t]);
            }
          }
          checkStructure(e) {
            function t(e, t) {
              i.push({ node: e, message: t });
            }
            const n = this.structure,
              i = [];
            return (
              this.syntax.walk(e, function (e) {
                n.hasOwnProperty(e.type)
                  ? n[e.type].check(e, t)
                  : t(e, "Unknown node type `" + e.type + "`");
              }),
              !!i.length && i
            );
          }
          createDescriptor(e, t, n, i = null) {
            const r = { type: t, name: n },
              a = {
                type: t,
                name: n,
                parent: i,
                serializable:
                  "string" == typeof e || (e && "string" == typeof e.type),
                syntax: null,
                match: null,
              };
            return (
              "function" == typeof e
                ? (a.match = (0, c.buildMatchGraph)(e, r))
                : ("string" == typeof e
                    ? Object.defineProperty(a, "syntax", {
                        get: () => (
                          Object.defineProperty(a, "syntax", {
                            value: (0, o.parse)(e),
                          }),
                          a.syntax
                        ),
                      })
                    : (a.syntax = e),
                  Object.defineProperty(a, "match", {
                    get: () => (
                      Object.defineProperty(a, "match", {
                        value: (0, c.buildMatchGraph)(a.syntax, r),
                      }),
                      a.match
                    ),
                  })),
              a
            );
          }
          addAtrule_(e, t) {
            t &&
              (this.atrules[e] = {
                type: "Atrule",
                name: e,
                prelude: t.prelude
                  ? this.createDescriptor(t.prelude, "AtrulePrelude", e)
                  : null,
                descriptors: t.descriptors
                  ? Object.keys(t.descriptors).reduce(
                      (n, i) => (
                        (n[i] = this.createDescriptor(
                          t.descriptors[i],
                          "AtruleDescriptor",
                          i,
                          e,
                        )),
                        n
                      ),
                      Object.create(null),
                    )
                  : null,
              });
          }
          addProperty_(e, t) {
            t && (this.properties[e] = this.createDescriptor(t, "Property", e));
          }
          addType_(e, t) {
            t &&
              ((this.types[e] = this.createDescriptor(t, "Type", e)),
              t === a.default["-ms-legacy-expression"] &&
                (this.valueCommonSyntax = h));
          }
          checkAtruleName(e) {
            if (!this.getAtrule(e))
              return new i.SyntaxReferenceError("Unknown at-rule", "@" + e);
          }
          checkAtrulePrelude(e, t) {
            const n = this.checkAtruleName(e);
            if (n) return n;
            const i = this.getAtrule(e);
            return !i.prelude && t
              ? new SyntaxError(
                  "At-rule `@" + e + "` should not contain a prelude",
                )
              : i.prelude && !t
                ? new SyntaxError(
                    "At-rule `@" + e + "` should contain a prelude",
                  )
                : void 0;
          }
          checkAtruleDescriptorName(e, t) {
            const n = this.checkAtruleName(e);
            if (n) return n;
            const a = this.getAtrule(e),
              o = r.keyword(t);
            return a.descriptors
              ? a.descriptors[o.name] || a.descriptors[o.basename]
                ? void 0
                : new i.SyntaxReferenceError("Unknown at-rule descriptor", t)
              : new SyntaxError(
                  "At-rule `@" + e + "` has no known descriptors",
                );
          }
          checkPropertyName(e) {
            if (!this.getProperty(e))
              return new i.SyntaxReferenceError("Unknown property", e);
          }
          matchAtrulePrelude(e, t) {
            const n = this.checkAtrulePrelude(e, t);
            return n
              ? x(null, n)
              : t
                ? b(this, this.getAtrule(e).prelude, t, !1)
                : x(null, null);
          }
          matchAtruleDescriptor(e, t, n) {
            const i = this.checkAtruleDescriptorName(e, t);
            if (i) return x(null, i);
            const a = this.getAtrule(e),
              o = r.keyword(t);
            return b(
              this,
              a.descriptors[o.name] || a.descriptors[o.basename],
              n,
              !1,
            );
          }
          matchDeclaration(e) {
            return "Declaration" !== e.type
              ? x(null, new Error("Not a Declaration node"))
              : this.matchProperty(e.property, e.value);
          }
          matchProperty(e, t) {
            if (r.property(e).custom)
              return x(
                null,
                new Error(
                  "Lexer matching doesn't applicable for custom properties",
                ),
              );
            const n = this.checkPropertyName(e);
            return n ? x(null, n) : b(this, this.getProperty(e), t, !0);
          }
          matchType(e, t) {
            const n = this.getType(e);
            return n
              ? b(this, n, t, !1)
              : x(null, new i.SyntaxReferenceError("Unknown type", e));
          }
          match(e, t) {
            return "string" == typeof e || (e && e.type)
              ? (("string" != typeof e && e.match) ||
                  (e = this.createDescriptor(e, "Type", "anonymous")),
                b(this, e, t, !1))
              : x(null, new i.SyntaxReferenceError("Bad syntax"));
          }
          findValueFragments(e, t, n, i) {
            return (0, p.matchFragments)(
              this,
              t,
              this.matchProperty(e, t),
              n,
              i,
            );
          }
          findDeclarationValueFragments(e, t, n) {
            return (0, p.matchFragments)(
              this,
              e.value,
              this.matchDeclaration(e),
              t,
              n,
            );
          }
          findAllFragments(e, t, n) {
            const i = [];
            return (
              this.syntax.walk(e, {
                visit: "Declaration",
                enter: (e) => {
                  i.push.apply(i, this.findDeclarationValueFragments(e, t, n));
                },
              }),
              i
            );
          }
          getAtrule(e, t = !0) {
            const n = r.keyword(e);
            return (
              (n.vendor && t
                ? this.atrules[n.name] || this.atrules[n.basename]
                : this.atrules[n.name]) || null
            );
          }
          getAtrulePrelude(e, t = !0) {
            const n = this.getAtrule(e, t);
            return (n && n.prelude) || null;
          }
          getAtruleDescriptor(e, t) {
            return (
              (this.atrules.hasOwnProperty(e) &&
                this.atrules.declarators &&
                this.atrules[e].declarators[t]) ||
              null
            );
          }
          getProperty(e, t = !0) {
            const n = r.property(e);
            return (
              (n.vendor && t
                ? this.properties[n.name] || this.properties[n.basename]
                : this.properties[n.name]) || null
            );
          }
          getType(e) {
            return hasOwnProperty.call(this.types, e) ? this.types[e] : null;
          }
          validate() {
            function e(i, r, a, s) {
              if (a.has(r)) return a.get(r);
              a.set(r, !1),
                null !== s.syntax &&
                  (0, o.walk)(
                    s.syntax,
                    function (o) {
                      if ("Type" !== o.type && "Property" !== o.type) return;
                      const s = "Type" === o.type ? i.types : i.properties,
                        c = "Type" === o.type ? t : n;
                      (hasOwnProperty.call(s, o.name) &&
                        !e(i, o.name, c, s[o.name])) ||
                        a.set(r, !0);
                    },
                    this,
                  );
            }
            let t = new Map(),
              n = new Map();
            for (const n in this.types) e(this, n, t, this.types[n]);
            for (const t in this.properties) e(this, t, n, this.properties[t]);
            return (
              (t = [...t.keys()].filter((e) => t.get(e))),
              (n = [...n.keys()].filter((e) => n.get(e))),
              t.length || n.length ? { types: t, properties: n } : null
            );
          }
          dump(e, t) {
            return {
              generic: this.generic,
              types: f(this.types, !t, e),
              properties: f(this.properties, !t, e),
              atrules: g(this.atrules, !t, e),
            };
          }
          toString() {
            return JSON.stringify(this.dump());
          }
        }
      },
      (e, t, n) => {
        "use strict";
        n.r(t),
          n.d(t, { SyntaxReferenceError: () => c, SyntaxMatchError: () => l });
        var i = n(42),
          r = n(57);
        const a = { offset: 0, line: 1, column: 1 };
        function o(e, t) {
          const n = e && e.loc && e.loc[t];
          return n ? ("line" in n ? s(n) : n) : null;
        }
        function s({ offset: e, line: t, column: n }, i) {
          const r = { offset: e, line: t, column: n };
          if (i) {
            const e = i.split(/\n|\r\n?|\f/);
            (r.offset += i.length),
              (r.line += e.length - 1),
              (r.column =
                1 === e.length ? r.column + i.length : e.pop().length + 1);
          }
          return r;
        }
        const c = function (e, t) {
            const n = (0, i.createCustomError)(
              "SyntaxReferenceError",
              e + (t ? " `" + t + "`" : ""),
            );
            return (n.reference = t), n;
          },
          l = function (e, t, n, c) {
            const l = (0, i.createCustomError)("SyntaxMatchError", e),
              {
                css: u,
                mismatchOffset: p,
                mismatchLength: d,
                start: m,
                end: h,
              } = (function (e, t) {
                const n = e.tokens,
                  i = e.longestMatch,
                  r = (i < n.length && n[i].node) || null,
                  c = r !== t ? r : null;
                let l,
                  u,
                  p = 0,
                  d = 0,
                  m = 0,
                  h = "";
                for (let e = 0; e < n.length; e++) {
                  const t = n[e].value;
                  e === i && ((d = t.length), (p = h.length)),
                    null !== c && n[e].node === c && (e <= i ? m++ : (m = 0)),
                    (h += t);
                }
                return (
                  i === n.length || m > 1
                    ? ((l = o(c || t, "end") || s(a, h)), (u = s(l)))
                    : ((l =
                        o(c, "start") || s(o(t, "start") || a, h.slice(0, p))),
                      (u = o(c, "end") || s(l, h.substr(p, d)))),
                  {
                    css: h,
                    mismatchOffset: p,
                    mismatchLength: d,
                    start: l,
                    end: u,
                  }
                );
              })(c, n);
            return (
              (l.rawMessage = e),
              (l.syntax = t ? (0, r.generate)(t) : "<generic>"),
              (l.css = u),
              (l.mismatchOffset = p),
              (l.mismatchLength = d),
              (l.message =
                e +
                "\n  syntax: " +
                l.syntax +
                "\n   value: " +
                (u || "<empty string>") +
                "\n  --------" +
                new Array(l.mismatchOffset + 1).join("-") +
                "^"),
              Object.assign(l, m),
              (l.loc = {
                source: (n && n.loc && n.loc.source) || "<unknown>",
                start: m,
                end: h,
              }),
              l
            );
          };
      },
      (e, t, n) => {
        "use strict";
        function i(e) {
          return e;
        }
        function r(e, t, n, i) {
          let a;
          switch (e.type) {
            case "Group":
              a =
                (function (e, t, n, i) {
                  const a =
                      " " === e.combinator || i
                        ? e.combinator
                        : " " + e.combinator + " ",
                    o = e.terms.map((e) => r(e, t, n, i)).join(a);
                  return e.explicit || n
                    ? (i || "," === o[0] ? "[" : "[ ") + o + (i ? "]" : " ]")
                    : o;
                })(e, t, n, i) + (e.disallowEmpty ? "!" : "");
              break;
            case "Multiplier":
              return (
                r(e.term, t, n, i) +
                t(
                  (function (e) {
                    const { min: t, max: n, comma: i } = e;
                    return 0 === t && 0 === n
                      ? "*"
                      : 0 === t && 1 === n
                        ? "?"
                        : 1 === t && 0 === n
                          ? i
                            ? "#"
                            : "+"
                          : 1 === t && 1 === n
                            ? ""
                            : (i ? "#" : "") +
                              (t === n
                                ? "{" + t + "}"
                                : "{" + t + "," + (0 !== n ? n : "") + "}");
                  })(e),
                  e,
                )
              );
            case "Type":
              a =
                "<" +
                e.name +
                (e.opts
                  ? t(
                      (function (e) {
                        if ("Range" === e.type)
                          return (
                            " [" +
                            (null === e.min ? "-∞" : e.min) +
                            "," +
                            (null === e.max ? "∞" : e.max) +
                            "]"
                          );
                        throw new Error("Unknown node type `" + e.type + "`");
                      })(e.opts),
                      e.opts,
                    )
                  : "") +
                ">";
              break;
            case "Property":
              a = "<'" + e.name + "'>";
              break;
            case "Keyword":
              a = e.name;
              break;
            case "AtKeyword":
              a = "@" + e.name;
              break;
            case "Function":
              a = e.name + "(";
              break;
            case "String":
            case "Token":
              a = e.value;
              break;
            case "Comma":
              a = ",";
              break;
            default:
              throw new Error("Unknown node type `" + e.type + "`");
          }
          return t(a, e);
        }
        function a(e, t) {
          let n = i,
            a = !1,
            o = !1;
          return (
            "function" == typeof t
              ? (n = t)
              : t &&
                ((a = Boolean(t.forceBraces)),
                (o = Boolean(t.compact)),
                "function" == typeof t.decorate && (n = t.decorate)),
            r(e, n, a, o)
          );
        }
        n.r(t), n.d(t, { generate: () => a });
      },
      (e, t, n) => {
        "use strict";
        n.r(t),
          n.d(t, {
            keyword: () => o,
            property: () => s,
            vendorPrefix: () => c,
            isCustomProperty: () => l,
          });
        const i = new Map(),
          r = new Map(),
          a = 45,
          o = function (e) {
            if (i.has(e)) return i.get(e);
            const t = e.toLowerCase();
            let n = i.get(t);
            if (void 0 === n) {
              const e = l(t, 0),
                i = e ? "" : u(t, 0);
              n = Object.freeze({
                basename: t.substr(i.length),
                name: t,
                prefix: i,
                vendor: i,
                custom: e,
              });
            }
            return i.set(e, n), n;
          },
          s = function (e) {
            if (r.has(e)) return r.get(e);
            let t = e,
              n = e[0];
            "/" === n
              ? (n = "/" === e[1] ? "//" : "/")
              : "_" !== n &&
                "*" !== n &&
                "$" !== n &&
                "#" !== n &&
                "+" !== n &&
                "&" !== n &&
                (n = "");
            const i = l(t, n.length);
            if (!i && ((t = t.toLowerCase()), r.has(t))) {
              const n = r.get(t);
              return r.set(e, n), n;
            }
            const a = i ? "" : u(t, n.length),
              o = t.substr(0, n.length + a.length),
              s = Object.freeze({
                basename: t.substr(o.length),
                name: t.substr(n.length),
                hack: n,
                vendor: a,
                prefix: o,
                custom: i,
              });
            return r.set(e, s), s;
          },
          c = u;
        function l(e, t) {
          return (
            (t = t || 0),
            e.length - t >= 2 &&
              e.charCodeAt(t) === a &&
              e.charCodeAt(t + 1) === a
          );
        }
        function u(e, t) {
          if (
            ((t = t || 0),
            e.length - t >= 3 &&
              e.charCodeAt(t) === a &&
              e.charCodeAt(t + 1) !== a)
          ) {
            const n = e.indexOf("-", t + 2);
            if (-1 !== n) return e.substring(t, n + 1);
          }
          return "";
        }
      },
      (e, t, n) => {
        "use strict";
        n.r(t), n.d(t, { default: () => v });
        var i = n(60),
          r = n(61),
          a = n(31);
        const o = ["unset", "initial", "inherit"],
          s = ["calc(", "-moz-calc(", "-webkit-calc("],
          c = new Map([
            [a.Function, a.RightParenthesis],
            [a.LeftParenthesis, a.RightParenthesis],
            [a.LeftSquareBracket, a.RightSquareBracket],
            [a.LeftCurlyBracket, a.RightCurlyBracket],
          ]);
        function l(e, t) {
          return t < e.length ? e.charCodeAt(t) : 0;
        }
        function u(e, t) {
          return (0, a.cmpStr)(e, 0, e.length, t);
        }
        function p(e, t) {
          for (let n = 0; n < t.length; n++) if (u(e, t[n])) return !0;
          return !1;
        }
        function d(e, t) {
          return (
            t === e.length - 2 && 92 === l(e, t) && (0, a.isDigit)(l(e, t + 1))
          );
        }
        function m(e, t, n) {
          if (e && "Range" === e.type) {
            const i = Number(
              void 0 !== n && n !== t.length ? t.substr(0, n) : t,
            );
            if (isNaN(i)) return !0;
            if (null !== e.min && i < e.min) return !0;
            if (null !== e.max && i > e.max) return !0;
          }
          return !1;
        }
        function h(e, t) {
          let n = 0,
            i = [],
            r = 0;
          e: do {
            switch (e.type) {
              case a.RightCurlyBracket:
              case a.RightParenthesis:
              case a.RightSquareBracket:
                if (e.type !== n) break e;
                if (((n = i.pop()), 0 === i.length)) {
                  r++;
                  break e;
                }
                break;
              case a.Function:
              case a.LeftParenthesis:
              case a.LeftSquareBracket:
              case a.LeftCurlyBracket:
                i.push(n), (n = c.get(e.type));
            }
            r++;
          } while ((e = t(r)));
          return r;
        }
        function f(e) {
          return function (t, n, i) {
            return null === t
              ? 0
              : t.type === a.Function && p(t.value, s)
                ? h(t, n)
                : e(t, n, i);
          };
        }
        function g(e) {
          return function (t) {
            return null === t || t.type !== e ? 0 : 1;
          };
        }
        function x(e) {
          return (
            e && (e = new Set(e)),
            function (t, n, i) {
              if (null === t || t.type !== a.Dimension) return 0;
              const r = (0, a.consumeNumber)(t.value, 0);
              if (null !== e) {
                const n = t.value.indexOf("\\", r),
                  i =
                    -1 !== n && d(t.value, n)
                      ? t.value.substring(r, n)
                      : t.value.substr(r);
                if (!1 === e.has(i.toLowerCase())) return 0;
              }
              return m(i, t.value, r) ? 0 : 1;
            }
          );
        }
        function b(e) {
          return (
            "function" != typeof e &&
              (e = function () {
                return 0;
              }),
            function (t, n, i) {
              return null !== t && t.type === a.Number && 0 === Number(t.value)
                ? 1
                : e(t, n, i);
            }
          );
        }
        const v = {
          "ident-token": g(a.Ident),
          "function-token": g(a.Function),
          "at-keyword-token": g(a.AtKeyword),
          "hash-token": g(a.Hash),
          "string-token": g(a.String),
          "bad-string-token": g(a.BadString),
          "url-token": g(a.Url),
          "bad-url-token": g(a.BadUrl),
          "delim-token": g(a.Delim),
          "number-token": g(a.Number),
          "percentage-token": g(a.Percentage),
          "dimension-token": g(a.Dimension),
          "whitespace-token": g(a.WhiteSpace),
          "CDO-token": g(a.CDO),
          "CDC-token": g(a.CDC),
          "colon-token": g(a.Colon),
          "semicolon-token": g(a.Semicolon),
          "comma-token": g(a.Comma),
          "[-token": g(a.LeftSquareBracket),
          "]-token": g(a.RightSquareBracket),
          "(-token": g(a.LeftParenthesis),
          ")-token": g(a.RightParenthesis),
          "{-token": g(a.LeftCurlyBracket),
          "}-token": g(a.RightCurlyBracket),
          string: g(a.String),
          ident: g(a.Ident),
          "custom-ident": function (e) {
            if (null === e || e.type !== a.Ident) return 0;
            const t = e.value.toLowerCase();
            return p(t, o) || u(t, "default") ? 0 : 1;
          },
          "custom-property-name": function (e) {
            return null === e ||
              e.type !== a.Ident ||
              45 !== l(e.value, 0) ||
              45 !== l(e.value, 1)
              ? 0
              : 1;
          },
          "hex-color": function (e) {
            if (null === e || e.type !== a.Hash) return 0;
            const t = e.value.length;
            if (4 !== t && 5 !== t && 7 !== t && 9 !== t) return 0;
            for (let n = 1; n < t; n++)
              if (!(0, a.isHexDigit)(l(e.value, n))) return 0;
            return 1;
          },
          "id-selector": function (e) {
            return null === e || e.type !== a.Hash
              ? 0
              : (0, a.isIdentifierStart)(
                    l(e.value, 1),
                    l(e.value, 2),
                    l(e.value, 3),
                  )
                ? 1
                : 0;
          },
          "an-plus-b": i.default,
          urange: r.default,
          "declaration-value": function (e, t) {
            if (!e) return 0;
            let n = 0,
              i = [],
              r = 0;
            e: do {
              switch (e.type) {
                case a.BadString:
                case a.BadUrl:
                  break e;
                case a.RightCurlyBracket:
                case a.RightParenthesis:
                case a.RightSquareBracket:
                  if (e.type !== n) break e;
                  n = i.pop();
                  break;
                case a.Semicolon:
                  if (0 === n) break e;
                  break;
                case a.Delim:
                  if (0 === n && "!" === e.value) break e;
                  break;
                case a.Function:
                case a.LeftParenthesis:
                case a.LeftSquareBracket:
                case a.LeftCurlyBracket:
                  i.push(n), (n = c.get(e.type));
              }
              r++;
            } while ((e = t(r)));
            return r;
          },
          "any-value": function (e, t) {
            if (!e) return 0;
            let n = 0,
              i = [],
              r = 0;
            e: do {
              switch (e.type) {
                case a.BadString:
                case a.BadUrl:
                  break e;
                case a.RightCurlyBracket:
                case a.RightParenthesis:
                case a.RightSquareBracket:
                  if (e.type !== n) break e;
                  n = i.pop();
                  break;
                case a.Function:
                case a.LeftParenthesis:
                case a.LeftSquareBracket:
                case a.LeftCurlyBracket:
                  i.push(n), (n = c.get(e.type));
              }
              r++;
            } while ((e = t(r)));
            return r;
          },
          dimension: f(x(null)),
          angle: f(x(["deg", "grad", "rad", "turn"])),
          decibel: f(x(["db"])),
          frequency: f(x(["hz", "khz"])),
          flex: f(x(["fr"])),
          length: f(
            b(
              x([
                "px",
                "mm",
                "cm",
                "in",
                "pt",
                "pc",
                "q",
                "em",
                "ex",
                "ch",
                "rem",
                "vh",
                "vw",
                "vmin",
                "vmax",
                "vm",
              ]),
            ),
          ),
          resolution: f(x(["dpi", "dpcm", "dppx", "x"])),
          semitones: f(x(["st"])),
          time: f(x(["s", "ms"])),
          percentage: f(function (e, t, n) {
            return null === e ||
              e.type !== a.Percentage ||
              m(n, e.value, e.value.length - 1)
              ? 0
              : 1;
          }),
          zero: b(),
          number: f(function (e, t, n) {
            if (null === e) return 0;
            const i = (0, a.consumeNumber)(e.value, 0);
            return i === e.value.length || d(e.value, i)
              ? m(n, e.value, i)
                ? 0
                : 1
              : 0;
          }),
          integer: f(function (e, t, n) {
            if (null === e || e.type !== a.Number) return 0;
            let i = 43 === l(e.value, 0) || 45 === l(e.value, 0) ? 1 : 0;
            for (; i < e.value.length; i++)
              if (!(0, a.isDigit)(l(e.value, i))) return 0;
            return m(n, e.value, i) ? 0 : 1;
          }),
          "-ms-legacy-expression":
            ((k = "expression"),
            (k += "("),
            function (e, t) {
              return null !== e && u(e.value, k) ? h(e, t) : 0;
            }),
        };
        var k;
      },
      (e, t, n) => {
        "use strict";
        n.r(t), n.d(t, { default: () => m });
        var i = n(31);
        const r = 43,
          a = 45,
          o = 110,
          s = !0,
          c = !1;
        function l(e, t) {
          return (
            null !== e && e.type === i.Delim && e.value.charCodeAt(0) === t
          );
        }
        function u(e, t, n) {
          for (
            ;
            null !== e && (e.type === i.WhiteSpace || e.type === i.Comment);

          )
            e = n(++t);
          return t;
        }
        function p(e, t, n, o) {
          if (!e) return 0;
          const s = e.value.charCodeAt(t);
          if (s === r || s === a) {
            if (n) return 0;
            t++;
          }
          for (; t < e.value.length; t++)
            if (!(0, i.isDigit)(e.value.charCodeAt(t))) return 0;
          return o + 1;
        }
        function d(e, t, n) {
          let o = !1,
            s = u(e, t, n);
          if (null === (e = n(s))) return t;
          if (e.type !== i.Number) {
            if (!l(e, r) && !l(e, a)) return t;
            if (
              ((o = !0),
              (s = u(n(++s), s, n)),
              null === (e = n(s)) || e.type !== i.Number)
            )
              return 0;
          }
          if (!o) {
            const t = e.value.charCodeAt(0);
            if (t !== r && t !== a) return 0;
          }
          return p(e, o ? 0 : 1, o, s);
        }
        function m(e, t) {
          let n = 0;
          if (!e) return 0;
          if (e.type === i.Number) return p(e, 0, c, n);
          if (e.type === i.Ident && e.value.charCodeAt(0) === a) {
            if (!(0, i.cmpChar)(e.value, 1, o)) return 0;
            switch (e.value.length) {
              case 2:
                return d(t(++n), n, t);
              case 3:
                return e.value.charCodeAt(2) !== a
                  ? 0
                  : ((n = u(t(++n), n, t)), p((e = t(n)), 0, s, n));
              default:
                return e.value.charCodeAt(2) !== a ? 0 : p(e, 3, s, n);
            }
          } else if (
            e.type === i.Ident ||
            (l(e, r) && t(n + 1).type === i.Ident)
          ) {
            if (
              (e.type !== i.Ident && (e = t(++n)),
              null === e || !(0, i.cmpChar)(e.value, 0, o))
            )
              return 0;
            switch (e.value.length) {
              case 1:
                return d(t(++n), n, t);
              case 2:
                return e.value.charCodeAt(1) !== a
                  ? 0
                  : ((n = u(t(++n), n, t)), p((e = t(n)), 0, s, n));
              default:
                return e.value.charCodeAt(1) !== a ? 0 : p(e, 2, s, n);
            }
          } else if (e.type === i.Dimension) {
            let c = e.value.charCodeAt(0),
              l = c === r || c === a ? 1 : 0,
              m = l;
            for (
              ;
              m < e.value.length && (0, i.isDigit)(e.value.charCodeAt(m));
              m++
            );
            return m === l
              ? 0
              : (0, i.cmpChar)(e.value, m, o)
                ? m + 1 === e.value.length
                  ? d(t(++n), n, t)
                  : e.value.charCodeAt(m + 1) !== a
                    ? 0
                    : m + 2 === e.value.length
                      ? ((n = u(t(++n), n, t)), p((e = t(n)), 0, s, n))
                      : p(e, m + 2, s, n)
                : 0;
          }
          return 0;
        }
      },
      (e, t, n) => {
        "use strict";
        n.r(t), n.d(t, { default: () => p });
        var i = n(31);
        const r = 43,
          a = 45,
          o = 63,
          s = 117;
        function c(e, t) {
          return (
            null !== e && e.type === i.Delim && e.value.charCodeAt(0) === t
          );
        }
        function l(e, t, n) {
          let r = 0;
          for (let o = t; o < e.value.length; o++) {
            const s = e.value.charCodeAt(o);
            if (s === a && n && 0 !== r) return l(e, t + r + 1, !1), 6;
            if (!(0, i.isHexDigit)(s)) return 0;
            if (++r > 6) return 0;
          }
          return r;
        }
        function u(e, t, n) {
          if (!e) return 0;
          for (; c(n(t), o); ) {
            if (++e > 6) return 0;
            t++;
          }
          return t;
        }
        function p(e, t) {
          let n = 0;
          if (
            null === e ||
            e.type !== i.Ident ||
            !(0, i.cmpChar)(e.value, 0, s)
          )
            return 0;
          if (null === (e = t(++n))) return 0;
          if (c(e, r))
            return null === (e = t(++n))
              ? 0
              : e.type === i.Ident
                ? u(l(e, 0, !0), ++n, t)
                : c(e, o)
                  ? u(1, ++n, t)
                  : 0;
          if (e.type === i.Number) {
            const r = l(e, 1, !0);
            return 0 === r
              ? 0
              : null === (e = t(++n))
                ? n
                : e.type === i.Dimension || e.type === i.Number
                  ? (function (e, t) {
                      return e.value.charCodeAt(0) === t;
                    })(e, a) && l(e, 1, !1)
                    ? n + 1
                    : 0
                  : u(r, n, t);
          }
          return e.type === i.Dimension ? u(l(e, 1, !0), ++n, t) : 0;
        }
      },
      (e, t, n) => {
        "use strict";
        n.r(t),
          n.d(t, {
            SyntaxError: () => i.SyntaxError,
            generate: () => r.generate,
            parse: () => a.parse,
            walk: () => o.walk,
          });
        var i = n(63),
          r = n(57),
          a = n(64),
          o = n(66);
      },
      (e, t, n) => {
        "use strict";
        n.r(t), n.d(t, { SyntaxError: () => r });
        var i = n(42);
        function r(e, t, n) {
          return Object.assign((0, i.createCustomError)("SyntaxError", e), {
            input: t,
            offset: n,
            rawMessage: e,
            message:
              e +
              "\n  " +
              t +
              "\n--" +
              new Array((n || t.length) + 1).join("-") +
              "^",
          });
        }
      },
      (e, t, n) => {
        "use strict";
        n.r(t), n.d(t, { parse: () => z });
        var i = n(65);
        const r = 9,
          a = 10,
          o = 12,
          s = 13,
          c = 32,
          l = 33,
          u = 35,
          p = 38,
          d = 39,
          m = 40,
          h = 41,
          f = 42,
          g = 43,
          x = 44,
          b = 45,
          v = 60,
          k = 62,
          T = 63,
          y = 64,
          E = 91,
          w = 93,
          C = 123,
          A = 124,
          S = 125,
          _ = 8734,
          N = new Uint8Array(128).map((e, t) =>
            /[a-zA-Z0-9\-]/.test(String.fromCharCode(t)) ? 1 : 0,
          ),
          P = { " ": 1, "&&": 2, "||": 3, "|": 4 };
        function O(e) {
          return e.substringToPos(e.findWsEnd(e.pos));
        }
        function L(e) {
          let t = e.pos;
          for (; t < e.str.length; t++) {
            const n = e.str.charCodeAt(t);
            if (n >= 128 || 0 === N[n]) break;
          }
          return (
            e.pos === t && e.error("Expect a keyword"), e.substringToPos(t)
          );
        }
        function I(e) {
          let t = e.pos;
          for (; t < e.str.length; t++) {
            const n = e.str.charCodeAt(t);
            if (n < 48 || n > 57) break;
          }
          return e.pos === t && e.error("Expect a number"), e.substringToPos(t);
        }
        function R(e) {
          const t = e.str.indexOf("'", e.pos + 1);
          return (
            -1 === t &&
              ((e.pos = e.str.length), e.error("Expect an apostrophe")),
            e.substringToPos(t + 1)
          );
        }
        function M(e) {
          let t = null,
            n = null;
          return (
            e.eat(C),
            (t = I(e)),
            e.charCode() === x
              ? (e.pos++, e.charCode() !== S && (n = I(e)))
              : (n = t),
            e.eat(S),
            { min: Number(t), max: n ? Number(n) : 0 }
          );
        }
        function D(e, t) {
          const n = (function (e) {
            let t = null,
              n = !1;
            switch (e.charCode()) {
              case f:
                e.pos++, (t = { min: 0, max: 0 });
                break;
              case g:
                e.pos++, (t = { min: 1, max: 0 });
                break;
              case T:
                e.pos++, (t = { min: 0, max: 1 });
                break;
              case u:
                e.pos++,
                  (n = !0),
                  (t = e.charCode() === C ? M(e) : { min: 1, max: 0 });
                break;
              case C:
                t = M(e);
                break;
              default:
                return null;
            }
            return {
              type: "Multiplier",
              comma: n,
              min: t.min,
              max: t.max,
              term: null,
            };
          })(e);
          return null !== n ? ((n.term = t), n) : t;
        }
        function j(e) {
          const t = e.peek();
          return "" === t ? null : { type: "Token", value: t };
        }
        function H(e) {
          let t,
            n = null;
          return (
            e.eat(v),
            (t = L(e)),
            e.charCode() === m &&
              e.nextCharCode() === h &&
              ((e.pos += 2), (t += "()")),
            e.charCodeAt(e.findWsEnd(e.pos)) === E &&
              (O(e),
              (n = (function (e) {
                let t = null,
                  n = null,
                  i = 1;
                return (
                  e.eat(E),
                  e.charCode() === b && (e.peek(), (i = -1)),
                  -1 == i && e.charCode() === _
                    ? e.peek()
                    : (t = i * Number(I(e))),
                  O(e),
                  e.eat(x),
                  O(e),
                  e.charCode() === _
                    ? e.peek()
                    : ((i = 1),
                      e.charCode() === b && (e.peek(), (i = -1)),
                      (n = i * Number(I(e)))),
                  e.eat(w),
                  null === t && null === n
                    ? null
                    : { type: "Range", min: t, max: n }
                );
              })(e))),
            e.eat(k),
            D(e, { type: "Type", name: t, opts: n })
          );
        }
        function F(e, t) {
          function n(e, t) {
            return {
              type: "Group",
              terms: e,
              combinator: t,
              disallowEmpty: !1,
              explicit: !1,
            };
          }
          let i;
          for (t = Object.keys(t).sort((e, t) => P[e] - P[t]); t.length > 0; ) {
            i = t.shift();
            let r = 0,
              a = 0;
            for (; r < e.length; r++) {
              const t = e[r];
              "Combinator" === t.type &&
                (t.value === i
                  ? (-1 === a && (a = r - 1), e.splice(r, 1), r--)
                  : (-1 !== a &&
                      r - a > 1 &&
                      (e.splice(a, r - a, n(e.slice(a, r), i)), (r = a + 1)),
                    (a = -1)));
            }
            -1 !== a && t.length && e.splice(a, r - a, n(e.slice(a, r), i));
          }
          return i;
        }
        function B(e) {
          const t = [],
            n = {};
          let i,
            r = null,
            a = e.pos;
          for (; (i = U(e)); )
            "Spaces" !== i.type &&
              ("Combinator" === i.type
                ? ((null !== r && "Combinator" !== r.type) ||
                    ((e.pos = a), e.error("Unexpected combinator")),
                  (n[i.value] = !0))
                : null !== r &&
                  "Combinator" !== r.type &&
                  ((n[" "] = !0), t.push({ type: "Combinator", value: " " })),
              t.push(i),
              (r = i),
              (a = e.pos));
          return (
            null !== r &&
              "Combinator" === r.type &&
              ((e.pos -= a), e.error("Unexpected combinator")),
            {
              type: "Group",
              terms: t,
              combinator: F(t, n) || " ",
              disallowEmpty: !1,
              explicit: !1,
            }
          );
        }
        function U(e) {
          let t = e.charCode();
          if (t < 128 && 1 === N[t])
            return (function (e) {
              const t = L(e);
              return e.charCode() === m
                ? (e.pos++, { type: "Function", name: t })
                : D(e, { type: "Keyword", name: t });
            })(e);
          switch (t) {
            case w:
              break;
            case E:
              return D(
                e,
                (function (e) {
                  let t;
                  return (
                    e.eat(E),
                    (t = B(e)),
                    e.eat(w),
                    (t.explicit = !0),
                    e.charCode() === l && (e.pos++, (t.disallowEmpty = !0)),
                    t
                  );
                })(e),
              );
            case v:
              return e.nextCharCode() === d
                ? (function (e) {
                    let t;
                    return (
                      e.eat(v),
                      e.eat(d),
                      (t = L(e)),
                      e.eat(d),
                      e.eat(k),
                      D(e, { type: "Property", name: t })
                    );
                  })(e)
                : H(e);
            case A:
              return {
                type: "Combinator",
                value: e.substringToPos(
                  e.pos + (e.nextCharCode() === A ? 2 : 1),
                ),
              };
            case p:
              return e.pos++, e.eat(p), { type: "Combinator", value: "&&" };
            case x:
              return e.pos++, { type: "Comma" };
            case d:
              return D(e, { type: "String", value: R(e) });
            case c:
            case r:
            case a:
            case s:
            case o:
              return { type: "Spaces", value: O(e) };
            case y:
              return (
                (t = e.nextCharCode()),
                t < 128 && 1 === N[t]
                  ? (e.pos++, { type: "AtKeyword", name: L(e) })
                  : j(e)
              );
            case f:
            case g:
            case T:
            case u:
            case l:
              break;
            case C:
              if (((t = e.nextCharCode()), t < 48 || t > 57)) return j(e);
              break;
            default:
              return j(e);
          }
        }
        function z(e) {
          const t = new i.Tokenizer(e),
            n = B(t);
          return (
            t.pos !== e.length && t.error("Unexpected input"),
            1 === n.terms.length && "Group" === n.terms[0].type ? n.terms[0] : n
          );
        }
      },
      (e, t, n) => {
        "use strict";
        n.r(t), n.d(t, { Tokenizer: () => r });
        var i = n(63);
        class r {
          constructor(e) {
            (this.str = e), (this.pos = 0);
          }
          charCodeAt(e) {
            return e < this.str.length ? this.str.charCodeAt(e) : 0;
          }
          charCode() {
            return this.charCodeAt(this.pos);
          }
          nextCharCode() {
            return this.charCodeAt(this.pos + 1);
          }
          nextNonWsCode(e) {
            return this.charCodeAt(this.findWsEnd(e));
          }
          findWsEnd(e) {
            for (; e < this.str.length; e++) {
              const t = this.str.charCodeAt(e);
              if (13 !== t && 10 !== t && 12 !== t && 32 !== t && 9 !== t)
                break;
            }
            return e;
          }
          substringToPos(e) {
            return this.str.substring(this.pos, (this.pos = e));
          }
          eat(e) {
            this.charCode() !== e &&
              this.error("Expect `" + String.fromCharCode(e) + "`"),
              this.pos++;
          }
          peek() {
            return this.pos < this.str.length
              ? this.str.charAt(this.pos++)
              : "";
          }
          error(e) {
            throw new i.SyntaxError(e, this.str, this.pos);
          }
        }
      },
      (e, t, n) => {
        "use strict";
        n.r(t), n.d(t, { walk: () => a });
        const i = function () {};
        function r(e) {
          return "function" == typeof e ? e : i;
        }
        function a(e, t, n) {
          let a = i,
            o = i;
          if (
            ("function" == typeof t
              ? (a = t)
              : t && ((a = r(t.enter)), (o = r(t.leave))),
            a === i && o === i)
          )
            throw new Error(
              "Neither `enter` nor `leave` walker handler is set or both aren't a function",
            );
          !(function e(t) {
            switch ((a.call(n, t), t.type)) {
              case "Group":
                t.terms.forEach(e);
                break;
              case "Multiplier":
                e(t.term);
                break;
              case "Type":
              case "Property":
              case "Keyword":
              case "AtKeyword":
              case "Function":
              case "String":
              case "Token":
              case "Comma":
                break;
              default:
                throw new Error("Unknown type: " + t.type);
            }
            o.call(n, t);
          })(e);
        }
      },
      (e, t, n) => {
        "use strict";
        n.r(t), n.d(t, { default: () => a });
        var i = n(31);
        const r = {
          decorator: function (e) {
            const t = [];
            let n = null;
            return {
              ...e,
              node(t) {
                const i = n;
                (n = t), e.node.call(this, t), (n = i);
              },
              emit(e, i, r) {
                t.push({ type: i, value: e, node: r ? null : n });
              },
              result: () => t,
            };
          },
        };
        function a(e, t) {
          return "string" == typeof e
            ? (function (e) {
                const t = [];
                return (
                  (0, i.tokenize)(e, (n, i, r) =>
                    t.push({ type: n, value: e.slice(i, r), node: null }),
                  ),
                  t
                );
              })(e)
            : t.generate(e, r);
        }
      },
      (e, t, n) => {
        "use strict";
        n.r(t),
          n.d(t, {
            MATCH: () => r,
            MISMATCH: () => a,
            DISALLOW_EMPTY: () => o,
            buildMatchGraph: () => h,
          });
        var i = n(64);
        const r = { type: "Match" },
          a = { type: "Mismatch" },
          o = { type: "DisallowEmpty" },
          s = 40,
          c = 41;
        function l(e, t, n) {
          return (t === r && n === a) || (e === r && t === r && n === r)
            ? e
            : ("If" === e.type &&
                e.else === a &&
                t === r &&
                ((t = e.then), (e = e.match)),
              { type: "If", match: e, then: t, else: n });
        }
        function u(e) {
          return (
            e.length > 2 &&
            e.charCodeAt(e.length - 2) === s &&
            e.charCodeAt(e.length - 1) === c
          );
        }
        function p(e) {
          return (
            "Keyword" === e.type ||
            "AtKeyword" === e.type ||
            "Function" === e.type ||
            ("Type" === e.type && u(e.name))
          );
        }
        function d(e, t, n) {
          switch (e) {
            case " ": {
              let e = r;
              for (let n = t.length - 1; n >= 0; n--) {
                e = l(t[n], e, a);
              }
              return e;
            }
            case "|": {
              let e = a,
                n = null;
              for (let i = t.length - 1; i >= 0; i--) {
                let a = t[i];
                if (
                  p(a) &&
                  (null === n &&
                    i > 0 &&
                    p(t[i - 1]) &&
                    ((n = Object.create(null)),
                    (e = l({ type: "Enum", map: n }, r, e))),
                  null !== n)
                ) {
                  const e = (
                    u(a.name) ? a.name.slice(0, -1) : a.name
                  ).toLowerCase();
                  if (e in n == !1) {
                    n[e] = a;
                    continue;
                  }
                }
                (n = null), (e = l(a, r, e));
              }
              return e;
            }
            case "&&": {
              if (t.length > 5) return { type: "MatchOnce", terms: t, all: !0 };
              let n = a;
              for (let i = t.length - 1; i >= 0; i--) {
                const a = t[i];
                let o;
                (o =
                  t.length > 1
                    ? d(
                        e,
                        t.filter(function (e) {
                          return e !== a;
                        }),
                        !1,
                      )
                    : r),
                  (n = l(a, o, n));
              }
              return n;
            }
            case "||": {
              if (t.length > 5) return { type: "MatchOnce", terms: t, all: !1 };
              let i = n ? r : a;
              for (let n = t.length - 1; n >= 0; n--) {
                const a = t[n];
                let o;
                (o =
                  t.length > 1
                    ? d(
                        e,
                        t.filter(function (e) {
                          return e !== a;
                        }),
                        !0,
                      )
                    : r),
                  (i = l(a, o, i));
              }
              return i;
            }
          }
        }
        function m(e) {
          if ("function" == typeof e) return { type: "Generic", fn: e };
          switch (e.type) {
            case "Group": {
              let t = d(e.combinator, e.terms.map(m), !1);
              return e.disallowEmpty && (t = l(t, o, a)), t;
            }
            case "Multiplier":
              return (function (e) {
                let t = r,
                  n = m(e.term);
                if (0 === e.max)
                  (n = l(n, o, a)),
                    (t = l(n, null, a)),
                    (t.then = l(r, r, t)),
                    e.comma &&
                      (t.then.else = l({ type: "Comma", syntax: e }, t, a));
                else
                  for (let i = e.min || 1; i <= e.max; i++)
                    e.comma &&
                      t !== r &&
                      (t = l({ type: "Comma", syntax: e }, t, a)),
                      (t = l(n, l(r, r, t), a));
                if (0 === e.min) t = l(r, r, t);
                else
                  for (let i = 0; i < e.min - 1; i++)
                    e.comma &&
                      t !== r &&
                      (t = l({ type: "Comma", syntax: e }, t, a)),
                      (t = l(n, t, a));
                return t;
              })(e);
            case "Type":
            case "Property":
              return { type: e.type, name: e.name, syntax: e };
            case "Keyword":
              return { type: e.type, name: e.name.toLowerCase(), syntax: e };
            case "AtKeyword":
              return {
                type: e.type,
                name: "@" + e.name.toLowerCase(),
                syntax: e,
              };
            case "Function":
              return {
                type: e.type,
                name: e.name.toLowerCase() + "(",
                syntax: e,
              };
            case "String":
              return 3 === e.value.length
                ? { type: "Token", value: e.value.charAt(1), syntax: e }
                : {
                    type: e.type,
                    value: e.value
                      .substr(1, e.value.length - 2)
                      .replace(/\\'/g, "'"),
                    syntax: e,
                  };
            case "Token":
              return { type: e.type, value: e.value, syntax: e };
            case "Comma":
              return { type: e.type, syntax: e };
            default:
              throw new Error("Unknown node type:", e.type);
          }
        }
        function h(e, t) {
          return (
            "string" == typeof e && (e = (0, i.parse)(e)),
            { type: "MatchGraph", match: m(e), syntax: t || null, source: e }
          );
        }
      },
      (e, t, n) => {
        "use strict";
        n.r(t),
          n.d(t, {
            totalIterationCount: () => h,
            matchAsList: () => k,
            matchAsTree: () => T,
          });
        var i = n(68),
          r = n(32);
        const { hasOwnProperty: a } = Object.prototype,
          o = 0,
          s = 1,
          c = 2,
          l = 3,
          u = "Match",
          p = "Mismatch",
          d =
            "Maximum iteration number exceeded (please fill an issue on https://github.com/csstree/csstree/issues)",
          m = 15e3;
        let h = 0;
        function f(e) {
          let t = null,
            n = null,
            i = e;
          for (; null !== i; ) (n = i.prev), (i.prev = t), (t = i), (i = n);
          return t;
        }
        function g(e, t) {
          if (e.length !== t.length) return !1;
          for (let n = 0; n < e.length; n++) {
            const i = t.charCodeAt(n);
            let r = e.charCodeAt(n);
            if ((r >= 65 && r <= 90 && (r |= 32), r !== i)) return !1;
          }
          return !0;
        }
        function x(e) {
          return (
            null === e ||
            e.type === r.Comma ||
            e.type === r.Function ||
            e.type === r.LeftParenthesis ||
            e.type === r.LeftSquareBracket ||
            e.type === r.LeftCurlyBracket ||
            (function (e) {
              return e.type === r.Delim && "?" !== e.value;
            })(e)
          );
        }
        function b(e) {
          return (
            null === e ||
            e.type === r.RightParenthesis ||
            e.type === r.RightSquareBracket ||
            e.type === r.RightCurlyBracket ||
            e.type === r.Delim
          );
        }
        function v(e, t, n) {
          function f() {
            do {
              L++, (O = L < e.length ? e[L] : null);
            } while (
              null !== O &&
              (O.type === r.WhiteSpace || O.type === r.Comment)
            );
          }
          function v(t) {
            const n = L + t;
            return n < e.length ? e[n] : null;
          }
          function k(e, t) {
            return {
              nextState: e,
              matchStack: R,
              syntaxStack: C,
              thenStack: A,
              tokenIndex: L,
              prev: t,
            };
          }
          function T(e) {
            A = { nextState: e, matchStack: R, syntaxStack: C, prev: A };
          }
          function y(e) {
            S = k(e, S);
          }
          function E() {
            (R = { type: s, syntax: t.syntax, token: O, prev: R }),
              f(),
              (_ = null),
              L > I && (I = L);
          }
          function w() {
            (R =
              R.type === c
                ? R.prev
                : { type: l, syntax: C.syntax, token: R.token, prev: R }),
              (C = C.prev);
          }
          let C = null,
            A = null,
            S = null,
            _ = null,
            N = 0,
            P = null,
            O = null,
            L = -1,
            I = 0,
            R = { type: o, syntax: null, token: null, prev: null };
          for (f(); null === P && ++N < m; )
            switch (t.type) {
              case "Match":
                if (null === A) {
                  if (
                    null !== O &&
                    (L !== e.length - 1 ||
                      ("\\0" !== O.value && "\\9" !== O.value))
                  ) {
                    t = i.MISMATCH;
                    break;
                  }
                  P = u;
                  break;
                }
                if ((t = A.nextState) === i.DISALLOW_EMPTY) {
                  if (A.matchStack === R) {
                    t = i.MISMATCH;
                    break;
                  }
                  t = i.MATCH;
                }
                for (; A.syntaxStack !== C; ) w();
                A = A.prev;
                break;
              case "Mismatch":
                if (null !== _ && !1 !== _)
                  (null === S || L > S.tokenIndex) && ((S = _), (_ = !1));
                else if (null === S) {
                  P = p;
                  break;
                }
                (t = S.nextState),
                  (A = S.thenStack),
                  (C = S.syntaxStack),
                  (R = S.matchStack),
                  (L = S.tokenIndex),
                  (O = L < e.length ? e[L] : null),
                  (S = S.prev);
                break;
              case "MatchGraph":
                t = t.match;
                break;
              case "If":
                t.else !== i.MISMATCH && y(t.else),
                  t.then !== i.MATCH && T(t.then),
                  (t = t.match);
                break;
              case "MatchOnce":
                t = { type: "MatchOnceBuffer", syntax: t, index: 0, mask: 0 };
                break;
              case "MatchOnceBuffer": {
                const e = t.syntax.terms;
                if (t.index === e.length) {
                  if (0 === t.mask || t.syntax.all) {
                    t = i.MISMATCH;
                    break;
                  }
                  t = i.MATCH;
                  break;
                }
                if (t.mask === (1 << e.length) - 1) {
                  t = i.MATCH;
                  break;
                }
                for (; t.index < e.length; t.index++) {
                  const n = 1 << t.index;
                  if (0 == (t.mask & n)) {
                    y(t),
                      T({
                        type: "AddMatchOnce",
                        syntax: t.syntax,
                        mask: t.mask | n,
                      }),
                      (t = e[t.index++]);
                    break;
                  }
                }
                break;
              }
              case "AddMatchOnce":
                t = {
                  type: "MatchOnceBuffer",
                  syntax: t.syntax,
                  index: 0,
                  mask: t.mask,
                };
                break;
              case "Enum":
                if (null !== O) {
                  let e = O.value.toLowerCase();
                  if (
                    (-1 !== e.indexOf("\\") && (e = e.replace(/\\[09].*$/, "")),
                    a.call(t.map, e))
                  ) {
                    t = t.map[e];
                    break;
                  }
                }
                t = i.MISMATCH;
                break;
              case "Generic": {
                const e = null !== C ? C.opts : null,
                  n = L + Math.floor(t.fn(O, v, e));
                if (!isNaN(n) && n > L) {
                  for (; L < n; ) E();
                  t = i.MATCH;
                } else t = i.MISMATCH;
                break;
              }
              case "Type":
              case "Property": {
                const e = "Type" === t.type ? "types" : "properties",
                  o = a.call(n, e) ? n[e][t.name] : null;
                if (!o || !o.match)
                  throw new Error(
                    "Bad syntax reference: " +
                      ("Type" === t.type
                        ? "<" + t.name + ">"
                        : "<'" + t.name + "'>"),
                  );
                if (!1 !== _ && null !== O && "Type" === t.type) {
                  if (
                    ("custom-ident" === t.name && O.type === r.Ident) ||
                    ("length" === t.name && "0" === O.value)
                  ) {
                    null === _ && (_ = k(t, S)), (t = i.MISMATCH);
                    break;
                  }
                }
                (C = {
                  syntax: t.syntax,
                  opts: t.syntax.opts || (null !== C && C.opts) || null,
                  prev: C,
                }),
                  (R = { type: c, syntax: t.syntax, token: R.token, prev: R }),
                  (t = o.match);
                break;
              }
              case "Keyword": {
                const e = t.name;
                if (null !== O) {
                  let n = O.value;
                  if (
                    (-1 !== n.indexOf("\\") && (n = n.replace(/\\[09].*$/, "")),
                    g(n, e))
                  ) {
                    E(), (t = i.MATCH);
                    break;
                  }
                }
                t = i.MISMATCH;
                break;
              }
              case "AtKeyword":
              case "Function":
                if (null !== O && g(O.value, t.name)) {
                  E(), (t = i.MATCH);
                  break;
                }
                t = i.MISMATCH;
                break;
              case "Token":
                if (null !== O && O.value === t.value) {
                  E(), (t = i.MATCH);
                  break;
                }
                t = i.MISMATCH;
                break;
              case "Comma":
                null !== O && O.type === r.Comma
                  ? x(R.token)
                    ? (t = i.MISMATCH)
                    : (E(), (t = b(O) ? i.MISMATCH : i.MATCH))
                  : (t = x(R.token) || b(O) ? i.MATCH : i.MISMATCH);
                break;
              case "String":
                let o = "",
                  s = L;
                for (; s < e.length && o.length < t.value.length; s++)
                  o += e[s].value;
                if (g(o, t.value)) {
                  for (; L < s; ) E();
                  t = i.MATCH;
                } else t = i.MISMATCH;
                break;
              default:
                throw new Error("Unknown node type: " + t.type);
            }
          switch (((h += N), P)) {
            case null:
              console.warn("[csstree-match] BREAK after " + m + " iterations"),
                (P = d),
                (R = null);
              break;
            case u:
              for (; null !== C; ) w();
              break;
            default:
              R = null;
          }
          return {
            tokens: e,
            reason: P,
            iterations: N,
            match: R,
            longestMatch: I,
          };
        }
        function k(e, t, n) {
          const i = v(e, t, n || {});
          if (null !== i.match) {
            let e = f(i.match).prev;
            for (i.match = []; null !== e; ) {
              switch (e.type) {
                case c:
                case l:
                  i.match.push({ type: e.type, syntax: e.syntax });
                  break;
                default:
                  i.match.push({ token: e.token.value, node: e.token.node });
              }
              e = e.prev;
            }
          }
          return i;
        }
        function T(e, t, n) {
          const i = v(e, t, n || {});
          if (null === i.match) return i;
          let r = i.match,
            a = (i.match = { syntax: t.syntax || null, match: [] });
          const o = [a];
          for (r = f(r).prev; null !== r; ) {
            switch (r.type) {
              case c:
                a.match.push((a = { syntax: r.syntax, match: [] })), o.push(a);
                break;
              case l:
                o.pop(), (a = o[o.length - 1]);
                break;
              default:
                a.match.push({
                  syntax: r.syntax || null,
                  token: r.token.value,
                  node: r.token.node,
                });
            }
            r = r.prev;
          }
          return i;
        }
      },
      (e, t, n) => {
        "use strict";
        function i(e) {
          function t(e) {
            return (
              null !== e &&
              ("Type" === e.type ||
                "Property" === e.type ||
                "Keyword" === e.type)
            );
          }
          let n = null;
          return (
            null !== this.matched &&
              (function i(r) {
                if (Array.isArray(r.match)) {
                  for (let e = 0; e < r.match.length; e++)
                    if (i(r.match[e]))
                      return t(r.syntax) && n.unshift(r.syntax), !0;
                } else if (r.node === e)
                  return (n = t(r.syntax) ? [r.syntax] : []), !0;
                return !1;
              })(this.matched),
            n
          );
        }
        function r(e, t) {
          return s(this, e, (e) => "Type" === e.type && e.name === t);
        }
        function a(e, t) {
          return s(this, e, (e) => "Property" === e.type && e.name === t);
        }
        function o(e) {
          return s(this, e, (e) => "Keyword" === e.type);
        }
        function s(e, t, n) {
          const r = i.call(e, t);
          return null !== r && r.some(n);
        }
        n.r(t),
          n.d(t, {
            getTrace: () => i,
            isType: () => r,
            isProperty: () => a,
            isKeyword: () => o,
          });
      },
      (e, t, n) => {
        "use strict";
        n.r(t), n.d(t, { matchFragments: () => o });
        var i = n(40);
        function r(e) {
          return "node" in e ? e.node : r(e.match[0]);
        }
        function a(e) {
          return "node" in e ? e.node : a(e.match[e.match.length - 1]);
        }
        function o(e, t, n, o, s) {
          const c = [];
          return (
            null !== n.matched &&
              (function n(l) {
                if (
                  null !== l.syntax &&
                  l.syntax.type === o &&
                  l.syntax.name === s
                ) {
                  const n = r(l),
                    o = a(l);
                  e.syntax.walk(t, function (e, t, r) {
                    if (e === n) {
                      const e = new i.List();
                      do {
                        if ((e.appendData(t.data), t.data === o)) break;
                        t = t.next;
                      } while (null !== t);
                      c.push({ parent: r, nodes: e });
                    }
                  });
                }
                Array.isArray(l.match) && l.match.forEach(n);
              })(n.matched),
            c
          );
        }
      },
      (e, t, n) => {
        "use strict";
        n.r(t), n.d(t, { getStructureFromConfig: () => l });
        var i = n(40);
        const { hasOwnProperty: r } = Object.prototype;
        function a(e) {
          return (
            "number" == typeof e && isFinite(e) && Math.floor(e) === e && e >= 0
          );
        }
        function o(e) {
          return Boolean(e) && a(e.offset) && a(e.line) && a(e.column);
        }
        function s(e, t) {
          return function (n, a) {
            if (!n || n.constructor !== Object)
              return a(n, "Type of node should be an Object");
            for (let s in n) {
              let c = !0;
              if (!1 !== r.call(n, s)) {
                if ("type" === s)
                  n.type !== e &&
                    a(
                      n,
                      "Wrong node type `" + n.type + "`, expected `" + e + "`",
                    );
                else if ("loc" === s) {
                  if (null === n.loc) continue;
                  if (n.loc && n.loc.constructor === Object)
                    if ("string" != typeof n.loc.source) s += ".source";
                    else if (o(n.loc.start)) {
                      if (o(n.loc.end)) continue;
                      s += ".end";
                    } else s += ".start";
                  c = !1;
                } else if (t.hasOwnProperty(s)) {
                  c = !1;
                  for (let e = 0; !c && e < t[s].length; e++) {
                    const r = t[s][e];
                    switch (r) {
                      case String:
                        c = "string" == typeof n[s];
                        break;
                      case Boolean:
                        c = "boolean" == typeof n[s];
                        break;
                      case null:
                        c = null === n[s];
                        break;
                      default:
                        "string" == typeof r
                          ? (c = n[s] && n[s].type === r)
                          : Array.isArray(r) && (c = n[s] instanceof i.List);
                    }
                  }
                } else
                  a(n, "Unknown field `" + s + "` for " + e + " node type");
                c || a(n, "Bad value for `" + e + "." + s + "`");
              }
            }
            for (const i in t)
              r.call(t, i) &&
                !1 === r.call(n, i) &&
                a(n, "Field `" + e + "." + i + "` is missed");
          };
        }
        function c(e, t) {
          const n = t.structure,
            i = { type: String, loc: !0 },
            a = { type: '"' + e + '"' };
          for (const t in n) {
            if (!1 === r.call(n, t)) continue;
            const o = [],
              s = (i[t] = Array.isArray(n[t]) ? n[t].slice() : [n[t]]);
            for (let n = 0; n < s.length; n++) {
              const i = s[n];
              if (i === String || i === Boolean) o.push(i.name);
              else if (null === i) o.push("null");
              else if ("string" == typeof i) o.push("<" + i + ">");
              else {
                if (!Array.isArray(i))
                  throw new Error(
                    "Wrong value `" +
                      i +
                      "` in `" +
                      e +
                      "." +
                      t +
                      "` structure definition",
                  );
                o.push("List");
              }
            }
            a[t] = o.join(" | ");
          }
          return { docs: a, check: s(e, i) };
        }
        function l(e) {
          const t = {};
          if (e.node)
            for (const n in e.node)
              if (r.call(e.node, n)) {
                const i = e.node[n];
                if (!i.structure)
                  throw new Error(
                    "Missed `structure` field in `" +
                      n +
                      "` node type definition",
                  );
                t[n] = c(n, i);
              }
          return t;
        }
      },
      (e, t, n) => {
        "use strict";
        n.r(t), n.d(t, { default: () => p });
        const { hasOwnProperty: i } = Object.prototype,
          r = {
            generic: !0,
            types: c,
            atrules: { prelude: l, descriptors: l },
            properties: c,
            parseContext: function (e, t) {
              return Object.assign(e, t);
            },
            scope: function e(t, n) {
              for (const r in n)
                i.call(n, r) && (a(t[r]) ? e(t[r], o(n[r])) : (t[r] = o(n[r])));
              return t;
            },
            atrule: ["parse"],
            pseudo: ["parse"],
            node: ["name", "structure", "parse", "generate", "walkContext"],
          };
        function a(e) {
          return e && e.constructor === Object;
        }
        function o(e) {
          return a(e) ? { ...e } : e;
        }
        function s(e, t) {
          return "string" == typeof t && /^\s*\|/.test(t)
            ? "string" == typeof e
              ? e + t
              : t.replace(/^\s*\|\s*/, "")
            : t || null;
        }
        function c(e, t) {
          if ("string" == typeof t) return s(e, t);
          const n = { ...e };
          for (let r in t)
            i.call(t, r) && (n[r] = s(i.call(e, r) ? e[r] : void 0, t[r]));
          return n;
        }
        function l(e, t) {
          const n = c(e, t);
          return !a(n) || Object.keys(n).length ? n : null;
        }
        function u(e, t, n) {
          for (const r in n)
            if (!1 !== i.call(n, r))
              if (!0 === n[r]) r in t && i.call(t, r) && (e[r] = o(t[r]));
              else if (n[r])
                if ("function" == typeof n[r]) {
                  const i = n[r];
                  (e[r] = i({}, e[r])), (e[r] = i(e[r] || {}, t[r]));
                } else if (a(n[r])) {
                  const i = {};
                  for (let t in e[r]) i[t] = u({}, e[r][t], n[r]);
                  for (let e in t[r]) i[e] = u(i[e] || {}, t[r][e], n[r]);
                  e[r] = i;
                } else if (Array.isArray(n[r])) {
                  const a = {},
                    o = n[r].reduce(function (e, t) {
                      return (e[t] = !0), e;
                    }, {});
                  for (const [t, n] of Object.entries(e[r] || {}))
                    (a[t] = {}), n && u(a[t], n, o);
                  for (const e in t[r])
                    i.call(t[r], e) &&
                      (a[e] || (a[e] = {}),
                      t[r] && t[r][e] && u(a[e], t[r][e], o));
                  e[r] = a;
                }
          return e;
        }
        const p = (e, t) => u(e, t, r);
      },
      (e, t, n) => {
        "use strict";
        n.r(t), n.d(t, { default: () => a });
        var i = n(75),
          r = n(76);
        const a = { generic: !0, ...i.default, node: r };
      },
      (e, t, n) => {
        "use strict";
        n.r(t), n.d(t, { default: () => i });
        const i = {
          generic: !0,
          types: {
            "absolute-size":
              "xx-small|x-small|small|medium|large|x-large|xx-large|xxx-large",
            "alpha-value": "<number>|<percentage>",
            "angle-percentage": "<angle>|<percentage>",
            "angular-color-hint": "<angle-percentage>",
            "angular-color-stop": "<color>&&<color-stop-angle>?",
            "angular-color-stop-list":
              "[<angular-color-stop> [, <angular-color-hint>]?]# , <angular-color-stop>",
            "animateable-feature": "scroll-position|contents|<custom-ident>",
            attachment: "scroll|fixed|local",
            "attr()":
              "attr( <attr-name> <type-or-unit>? [, <attr-fallback>]? )",
            "attr-matcher": "['~'|'|'|'^'|'$'|'*']? '='",
            "attr-modifier": "i|s",
            "attribute-selector":
              "'[' <wq-name> ']'|'[' <wq-name> <attr-matcher> [<string-token>|<ident-token>] <attr-modifier>? ']'",
            "auto-repeat":
              "repeat( [auto-fill|auto-fit] , [<line-names>? <fixed-size>]+ <line-names>? )",
            "auto-track-list":
              "[<line-names>? [<fixed-size>|<fixed-repeat>]]* <line-names>? <auto-repeat> [<line-names>? [<fixed-size>|<fixed-repeat>]]* <line-names>?",
            "baseline-position": "[first|last]? baseline",
            "basic-shape":
              "<inset()>|<circle()>|<ellipse()>|<polygon()>|<path()>",
            "bg-image": "none|<image>",
            "bg-layer":
              "<bg-image>||<bg-position> [/ <bg-size>]?||<repeat-style>||<attachment>||<box>||<box>",
            "bg-position":
              "[[left|center|right|top|bottom|<length-percentage>]|[left|center|right|<length-percentage>] [top|center|bottom|<length-percentage>]|[center|[left|right] <length-percentage>?]&&[center|[top|bottom] <length-percentage>?]]",
            "bg-size": "[<length-percentage>|auto]{1,2}|cover|contain",
            "blur()": "blur( <length> )",
            "blend-mode":
              "normal|multiply|screen|overlay|darken|lighten|color-dodge|color-burn|hard-light|soft-light|difference|exclusion|hue|saturation|color|luminosity",
            box: "border-box|padding-box|content-box",
            "brightness()": "brightness( <number-percentage> )",
            "calc()": "calc( <calc-sum> )",
            "calc-sum": "<calc-product> [['+'|'-'] <calc-product>]*",
            "calc-product": "<calc-value> ['*' <calc-value>|'/' <number>]*",
            "calc-value": "<number>|<dimension>|<percentage>|( <calc-sum> )",
            "cf-final-image": "<image>|<color>",
            "cf-mixing-image": "<percentage>?&&<image>",
            "circle()": "circle( [<shape-radius>]? [at <position>]? )",
            "clamp()": "clamp( <calc-sum>#{3} )",
            "class-selector": "'.' <ident-token>",
            "clip-source": "<url>",
            color:
              "<rgb()>|<rgba()>|<hsl()>|<hsla()>|<hex-color>|<named-color>|currentcolor|<deprecated-system-color>",
            "color-stop": "<color-stop-length>|<color-stop-angle>",
            "color-stop-angle": "<angle-percentage>{1,2}",
            "color-stop-length": "<length-percentage>{1,2}",
            "color-stop-list":
              "[<linear-color-stop> [, <linear-color-hint>]?]# , <linear-color-stop>",
            combinator: "'>'|'+'|'~'|['||']",
            "common-lig-values": "[common-ligatures|no-common-ligatures]",
            "compat-auto":
              "searchfield|textarea|push-button|slider-horizontal|checkbox|radio|square-button|menulist|listbox|meter|progress-bar|button",
            "composite-style":
              "clear|copy|source-over|source-in|source-out|source-atop|destination-over|destination-in|destination-out|destination-atop|xor",
            "compositing-operator": "add|subtract|intersect|exclude",
            "compound-selector":
              "[<type-selector>? <subclass-selector>* [<pseudo-element-selector> <pseudo-class-selector>*]*]!",
            "compound-selector-list": "<compound-selector>#",
            "complex-selector":
              "<compound-selector> [<combinator>? <compound-selector>]*",
            "complex-selector-list": "<complex-selector>#",
            "conic-gradient()":
              "conic-gradient( [from <angle>]? [at <position>]? , <angular-color-stop-list> )",
            "contextual-alt-values": "[contextual|no-contextual]",
            "content-distribution":
              "space-between|space-around|space-evenly|stretch",
            "content-list":
              "[<string>|contents|<image>|<counter>|<quote>|<target>|<leader()>]+",
            "content-position": "center|start|end|flex-start|flex-end",
            "content-replacement": "<image>",
            "contrast()": "contrast( [<number-percentage>] )",
            "counter()": "counter( <counter-name> , <counter-style>? )",
            "counter-style": "<counter-style-name>|symbols( )",
            "counter-style-name": "<custom-ident>",
            "counters()":
              "counters( <counter-name> , <string> , <counter-style>? )",
            "cross-fade()":
              "cross-fade( <cf-mixing-image> , <cf-final-image>? )",
            "cubic-bezier-timing-function":
              "ease|ease-in|ease-out|ease-in-out|cubic-bezier( <number [0,1]> , <number> , <number [0,1]> , <number> )",
            "deprecated-system-color":
              "ActiveBorder|ActiveCaption|AppWorkspace|Background|ButtonFace|ButtonHighlight|ButtonShadow|ButtonText|CaptionText|GrayText|Highlight|HighlightText|InactiveBorder|InactiveCaption|InactiveCaptionText|InfoBackground|InfoText|Menu|MenuText|Scrollbar|ThreeDDarkShadow|ThreeDFace|ThreeDHighlight|ThreeDLightShadow|ThreeDShadow|Window|WindowFrame|WindowText",
            "discretionary-lig-values":
              "[discretionary-ligatures|no-discretionary-ligatures]",
            "display-box": "contents|none",
            "display-inside": "flow|flow-root|table|flex|grid|ruby",
            "display-internal":
              "table-row-group|table-header-group|table-footer-group|table-row|table-cell|table-column-group|table-column|table-caption|ruby-base|ruby-text|ruby-base-container|ruby-text-container",
            "display-legacy":
              "inline-block|inline-list-item|inline-table|inline-flex|inline-grid",
            "display-listitem":
              "<display-outside>?&&[flow|flow-root]?&&list-item",
            "display-outside": "block|inline|run-in",
            "drop-shadow()": "drop-shadow( <length>{2,3} <color>? )",
            "east-asian-variant-values":
              "[jis78|jis83|jis90|jis04|simplified|traditional]",
            "east-asian-width-values": "[full-width|proportional-width]",
            "element()":
              "element( <custom-ident> , [first|start|last|first-except]? )|element( <id-selector> )",
            "ellipse()": "ellipse( [<shape-radius>{2}]? [at <position>]? )",
            "ending-shape": "circle|ellipse",
            "env()": "env( <custom-ident> , <declaration-value>? )",
            "explicit-track-list":
              "[<line-names>? <track-size>]+ <line-names>?",
            "family-name": "<string>|<custom-ident>+",
            "feature-tag-value": "<string> [<integer>|on|off]?",
            "feature-type":
              "@stylistic|@historical-forms|@styleset|@character-variant|@swash|@ornaments|@annotation",
            "feature-value-block":
              "<feature-type> '{' <feature-value-declaration-list> '}'",
            "feature-value-block-list": "<feature-value-block>+",
            "feature-value-declaration": "<custom-ident> : <integer>+ ;",
            "feature-value-declaration-list": "<feature-value-declaration>",
            "feature-value-name": "<custom-ident>",
            "fill-rule": "nonzero|evenodd",
            "filter-function":
              "<blur()>|<brightness()>|<contrast()>|<drop-shadow()>|<grayscale()>|<hue-rotate()>|<invert()>|<opacity()>|<saturate()>|<sepia()>",
            "filter-function-list": "[<filter-function>|<url>]+",
            "final-bg-layer":
              "<'background-color'>||<bg-image>||<bg-position> [/ <bg-size>]?||<repeat-style>||<attachment>||<box>||<box>",
            "fit-content()": "fit-content( [<length>|<percentage>] )",
            "fixed-breadth": "<length-percentage>",
            "fixed-repeat":
              "repeat( [<integer [1,∞]>] , [<line-names>? <fixed-size>]+ <line-names>? )",
            "fixed-size":
              "<fixed-breadth>|minmax( <fixed-breadth> , <track-breadth> )|minmax( <inflexible-breadth> , <fixed-breadth> )",
            "font-stretch-absolute":
              "normal|ultra-condensed|extra-condensed|condensed|semi-condensed|semi-expanded|expanded|extra-expanded|ultra-expanded|<percentage>",
            "font-variant-css21": "[normal|small-caps]",
            "font-weight-absolute": "normal|bold|<number [1,1000]>",
            "frequency-percentage": "<frequency>|<percentage>",
            "general-enclosed":
              "[<function-token> <any-value> )]|( <ident> <any-value> )",
            "generic-family":
              "serif|sans-serif|cursive|fantasy|monospace|-apple-system",
            "generic-name": "serif|sans-serif|cursive|fantasy|monospace",
            "geometry-box": "<shape-box>|fill-box|stroke-box|view-box",
            gradient:
              "<linear-gradient()>|<repeating-linear-gradient()>|<radial-gradient()>|<repeating-radial-gradient()>|<conic-gradient()>|<-legacy-gradient>",
            "grayscale()": "grayscale( <number-percentage> )",
            "grid-line":
              "auto|<custom-ident>|[<integer>&&<custom-ident>?]|[span&&[<integer>||<custom-ident>]]",
            "historical-lig-values":
              "[historical-ligatures|no-historical-ligatures]",
            "hsl()":
              "hsl( <hue> <percentage> <percentage> [/ <alpha-value>]? )|hsl( <hue> , <percentage> , <percentage> , <alpha-value>? )",
            "hsla()":
              "hsla( <hue> <percentage> <percentage> [/ <alpha-value>]? )|hsla( <hue> , <percentage> , <percentage> , <alpha-value>? )",
            hue: "<number>|<angle>",
            "hue-rotate()": "hue-rotate( <angle> )",
            image:
              "<url>|<image()>|<image-set()>|<element()>|<paint()>|<cross-fade()>|<gradient>",
            "image()": "image( <image-tags>? [<image-src>? , <color>?]! )",
            "image-set()": "image-set( <image-set-option># )",
            "image-set-option":
              "[<image>|<string>] [<resolution>||type( <string> )]",
            "image-src": "<url>|<string>",
            "image-tags": "ltr|rtl",
            "inflexible-breadth":
              "<length>|<percentage>|min-content|max-content|auto",
            "inset()":
              "inset( <length-percentage>{1,4} [round <'border-radius'>]? )",
            "invert()": "invert( <number-percentage> )",
            "keyframes-name": "<custom-ident>|<string>",
            "keyframe-block": "<keyframe-selector># { <declaration-list> }",
            "keyframe-block-list": "<keyframe-block>+",
            "keyframe-selector": "from|to|<percentage>",
            "leader()": "leader( <leader-type> )",
            "leader-type": "dotted|solid|space|<string>",
            "length-percentage": "<length>|<percentage>",
            "line-names": "'[' <custom-ident>* ']'",
            "line-name-list": "[<line-names>|<name-repeat>]+",
            "line-style":
              "none|hidden|dotted|dashed|solid|double|groove|ridge|inset|outset",
            "line-width": "<length>|thin|medium|thick",
            "linear-color-hint": "<length-percentage>",
            "linear-color-stop": "<color> <color-stop-length>?",
            "linear-gradient()":
              "linear-gradient( [<angle>|to <side-or-corner>]? , <color-stop-list> )",
            "mask-layer":
              "<mask-reference>||<position> [/ <bg-size>]?||<repeat-style>||<geometry-box>||[<geometry-box>|no-clip]||<compositing-operator>||<masking-mode>",
            "mask-position":
              "[<length-percentage>|left|center|right] [<length-percentage>|top|center|bottom]?",
            "mask-reference": "none|<image>|<mask-source>",
            "mask-source": "<url>",
            "masking-mode": "alpha|luminance|match-source",
            "matrix()": "matrix( <number>#{6} )",
            "matrix3d()": "matrix3d( <number>#{16} )",
            "max()": "max( <calc-sum># )",
            "media-and": "<media-in-parens> [and <media-in-parens>]+",
            "media-condition":
              "<media-not>|<media-and>|<media-or>|<media-in-parens>",
            "media-condition-without-or":
              "<media-not>|<media-and>|<media-in-parens>",
            "media-feature": "( [<mf-plain>|<mf-boolean>|<mf-range>] )",
            "media-in-parens":
              "( <media-condition> )|<media-feature>|<general-enclosed>",
            "media-not": "not <media-in-parens>",
            "media-or": "<media-in-parens> [or <media-in-parens>]+",
            "media-query":
              "<media-condition>|[not|only]? <media-type> [and <media-condition-without-or>]?",
            "media-query-list": "<media-query>#",
            "media-type": "<ident>",
            "mf-boolean": "<mf-name>",
            "mf-name": "<ident>",
            "mf-plain": "<mf-name> : <mf-value>",
            "mf-range":
              "<mf-name> ['<'|'>']? '='? <mf-value>|<mf-value> ['<'|'>']? '='? <mf-name>|<mf-value> '<' '='? <mf-name> '<' '='? <mf-value>|<mf-value> '>' '='? <mf-name> '>' '='? <mf-value>",
            "mf-value": "<number>|<dimension>|<ident>|<ratio>",
            "min()": "min( <calc-sum># )",
            "minmax()":
              "minmax( [<length>|<percentage>|min-content|max-content|auto] , [<length>|<percentage>|<flex>|min-content|max-content|auto] )",
            "named-color":
              "transparent|aliceblue|antiquewhite|aqua|aquamarine|azure|beige|bisque|black|blanchedalmond|blue|blueviolet|brown|burlywood|cadetblue|chartreuse|chocolate|coral|cornflowerblue|cornsilk|crimson|cyan|darkblue|darkcyan|darkgoldenrod|darkgray|darkgreen|darkgrey|darkkhaki|darkmagenta|darkolivegreen|darkorange|darkorchid|darkred|darksalmon|darkseagreen|darkslateblue|darkslategray|darkslategrey|darkturquoise|darkviolet|deeppink|deepskyblue|dimgray|dimgrey|dodgerblue|firebrick|floralwhite|forestgreen|fuchsia|gainsboro|ghostwhite|gold|goldenrod|gray|green|greenyellow|grey|honeydew|hotpink|indianred|indigo|ivory|khaki|lavender|lavenderblush|lawngreen|lemonchiffon|lightblue|lightcoral|lightcyan|lightgoldenrodyellow|lightgray|lightgreen|lightgrey|lightpink|lightsalmon|lightseagreen|lightskyblue|lightslategray|lightslategrey|lightsteelblue|lightyellow|lime|limegreen|linen|magenta|maroon|mediumaquamarine|mediumblue|mediumorchid|mediumpurple|mediumseagreen|mediumslateblue|mediumspringgreen|mediumturquoise|mediumvioletred|midnightblue|mintcream|mistyrose|moccasin|navajowhite|navy|oldlace|olive|olivedrab|orange|orangered|orchid|palegoldenrod|palegreen|paleturquoise|palevioletred|papayawhip|peachpuff|peru|pink|plum|powderblue|purple|rebeccapurple|red|rosybrown|royalblue|saddlebrown|salmon|sandybrown|seagreen|seashell|sienna|silver|skyblue|slateblue|slategray|slategrey|snow|springgreen|steelblue|tan|teal|thistle|tomato|turquoise|violet|wheat|white|whitesmoke|yellow|yellowgreen|<-non-standard-color>",
            "namespace-prefix": "<ident>",
            "ns-prefix": "[<ident-token>|'*']? '|'",
            "number-percentage": "<number>|<percentage>",
            "numeric-figure-values": "[lining-nums|oldstyle-nums]",
            "numeric-fraction-values": "[diagonal-fractions|stacked-fractions]",
            "numeric-spacing-values": "[proportional-nums|tabular-nums]",
            nth: "<an-plus-b>|even|odd",
            "opacity()": "opacity( [<number-percentage>] )",
            "overflow-position": "unsafe|safe",
            "outline-radius": "<length>|<percentage>",
            "page-body":
              "<declaration>? [; <page-body>]?|<page-margin-box> <page-body>",
            "page-margin-box":
              "<page-margin-box-type> '{' <declaration-list> '}'",
            "page-margin-box-type":
              "@top-left-corner|@top-left|@top-center|@top-right|@top-right-corner|@bottom-left-corner|@bottom-left|@bottom-center|@bottom-right|@bottom-right-corner|@left-top|@left-middle|@left-bottom|@right-top|@right-middle|@right-bottom",
            "page-selector-list": "[<page-selector>#]?",
            "page-selector": "<pseudo-page>+|<ident> <pseudo-page>*",
            "page-size": "A5|A4|A3|B5|B4|JIS-B5|JIS-B4|letter|legal|ledger",
            "path()": "path( [<fill-rule> ,]? <string> )",
            "paint()": "paint( <ident> , <declaration-value>? )",
            "perspective()": "perspective( <length> )",
            "polygon()":
              "polygon( <fill-rule>? , [<length-percentage> <length-percentage>]# )",
            position:
              "[[left|center|right]||[top|center|bottom]|[left|center|right|<length-percentage>] [top|center|bottom|<length-percentage>]?|[[left|right] <length-percentage>]&&[[top|bottom] <length-percentage>]]",
            "pseudo-class-selector":
              "':' <ident-token>|':' <function-token> <any-value> ')'",
            "pseudo-element-selector": "':' <pseudo-class-selector>",
            "pseudo-page": ": [left|right|first|blank]",
            quote: "open-quote|close-quote|no-open-quote|no-close-quote",
            "radial-gradient()":
              "radial-gradient( [<ending-shape>||<size>]? [at <position>]? , <color-stop-list> )",
            "relative-selector": "<combinator>? <complex-selector>",
            "relative-selector-list": "<relative-selector>#",
            "relative-size": "larger|smaller",
            "repeat-style":
              "repeat-x|repeat-y|[repeat|space|round|no-repeat]{1,2}",
            "repeating-linear-gradient()":
              "repeating-linear-gradient( [<angle>|to <side-or-corner>]? , <color-stop-list> )",
            "repeating-radial-gradient()":
              "repeating-radial-gradient( [<ending-shape>||<size>]? [at <position>]? , <color-stop-list> )",
            "rgb()":
              "rgb( <percentage>{3} [/ <alpha-value>]? )|rgb( <number>{3} [/ <alpha-value>]? )|rgb( <percentage>#{3} , <alpha-value>? )|rgb( <number>#{3} , <alpha-value>? )",
            "rgba()":
              "rgba( <percentage>{3} [/ <alpha-value>]? )|rgba( <number>{3} [/ <alpha-value>]? )|rgba( <percentage>#{3} , <alpha-value>? )|rgba( <number>#{3} , <alpha-value>? )",
            "rotate()": "rotate( [<angle>|<zero>] )",
            "rotate3d()":
              "rotate3d( <number> , <number> , <number> , [<angle>|<zero>] )",
            "rotateX()": "rotateX( [<angle>|<zero>] )",
            "rotateY()": "rotateY( [<angle>|<zero>] )",
            "rotateZ()": "rotateZ( [<angle>|<zero>] )",
            "saturate()": "saturate( <number-percentage> )",
            "scale()": "scale( <number> , <number>? )",
            "scale3d()": "scale3d( <number> , <number> , <number> )",
            "scaleX()": "scaleX( <number> )",
            "scaleY()": "scaleY( <number> )",
            "scaleZ()": "scaleZ( <number> )",
            "self-position":
              "center|start|end|self-start|self-end|flex-start|flex-end",
            "shape-radius": "<length-percentage>|closest-side|farthest-side",
            "skew()": "skew( [<angle>|<zero>] , [<angle>|<zero>]? )",
            "skewX()": "skewX( [<angle>|<zero>] )",
            "skewY()": "skewY( [<angle>|<zero>] )",
            "sepia()": "sepia( <number-percentage> )",
            shadow: "inset?&&<length>{2,4}&&<color>?",
            "shadow-t": "[<length>{2,3}&&<color>?]",
            shape:
              "rect( <top> , <right> , <bottom> , <left> )|rect( <top> <right> <bottom> <left> )",
            "shape-box": "<box>|margin-box",
            "side-or-corner": "[left|right]||[top|bottom]",
            "single-animation":
              "<time>||<easing-function>||<time>||<single-animation-iteration-count>||<single-animation-direction>||<single-animation-fill-mode>||<single-animation-play-state>||[none|<keyframes-name>]",
            "single-animation-direction":
              "normal|reverse|alternate|alternate-reverse",
            "single-animation-fill-mode": "none|forwards|backwards|both",
            "single-animation-iteration-count": "infinite|<number>",
            "single-animation-play-state": "running|paused",
            "single-transition":
              "[none|<single-transition-property>]||<time>||<easing-function>||<time>",
            "single-transition-property": "all|<custom-ident>",
            size: "closest-side|farthest-side|closest-corner|farthest-corner|<length>|<length-percentage>{2}",
            "step-position":
              "jump-start|jump-end|jump-none|jump-both|start|end",
            "step-timing-function":
              "step-start|step-end|steps( <integer> [, <step-position>]? )",
            "subclass-selector":
              "<id-selector>|<class-selector>|<attribute-selector>|<pseudo-class-selector>",
            "supports-condition":
              "not <supports-in-parens>|<supports-in-parens> [and <supports-in-parens>]*|<supports-in-parens> [or <supports-in-parens>]*",
            "supports-in-parens":
              "( <supports-condition> )|<supports-feature>|<general-enclosed>",
            "supports-feature": "<supports-decl>|<supports-selector-fn>",
            "supports-decl": "( <declaration> )",
            "supports-selector-fn": "selector( <complex-selector> )",
            symbol: "<string>|<image>|<custom-ident>",
            target: "<target-counter()>|<target-counters()>|<target-text()>",
            "target-counter()":
              "target-counter( [<string>|<url>] , <custom-ident> , <counter-style>? )",
            "target-counters()":
              "target-counters( [<string>|<url>] , <custom-ident> , <string> , <counter-style>? )",
            "target-text()":
              "target-text( [<string>|<url>] , [content|before|after|first-letter]? )",
            "time-percentage": "<time>|<percentage>",
            "easing-function":
              "linear|<cubic-bezier-timing-function>|<step-timing-function>",
            "track-breadth":
              "<length-percentage>|<flex>|min-content|max-content|auto",
            "track-list":
              "[<line-names>? [<track-size>|<track-repeat>]]+ <line-names>?",
            "track-repeat":
              "repeat( [<integer [1,∞]>] , [<line-names>? <track-size>]+ <line-names>? )",
            "track-size":
              "<track-breadth>|minmax( <inflexible-breadth> , <track-breadth> )|fit-content( [<length>|<percentage>] )",
            "transform-function":
              "<matrix()>|<translate()>|<translateX()>|<translateY()>|<scale()>|<scaleX()>|<scaleY()>|<rotate()>|<skew()>|<skewX()>|<skewY()>|<matrix3d()>|<translate3d()>|<translateZ()>|<scale3d()>|<scaleZ()>|<rotate3d()>|<rotateX()>|<rotateY()>|<rotateZ()>|<perspective()>",
            "transform-list": "<transform-function>+",
            "translate()":
              "translate( <length-percentage> , <length-percentage>? )",
            "translate3d()":
              "translate3d( <length-percentage> , <length-percentage> , <length> )",
            "translateX()": "translateX( <length-percentage> )",
            "translateY()": "translateY( <length-percentage> )",
            "translateZ()": "translateZ( <length> )",
            "type-or-unit":
              "string|color|url|integer|number|length|angle|time|frequency|cap|ch|em|ex|ic|lh|rlh|rem|vb|vi|vw|vh|vmin|vmax|mm|Q|cm|in|pt|pc|px|deg|grad|rad|turn|ms|s|Hz|kHz|%",
            "type-selector": "<wq-name>|<ns-prefix>? '*'",
            "var()": "var( <custom-property-name> , <declaration-value>? )",
            "viewport-length": "auto|<length-percentage>",
            "visual-box": "content-box|padding-box|border-box",
            "wq-name": "<ns-prefix>? <ident-token>",
            "-legacy-gradient":
              "<-webkit-gradient()>|<-legacy-linear-gradient>|<-legacy-repeating-linear-gradient>|<-legacy-radial-gradient>|<-legacy-repeating-radial-gradient>",
            "-legacy-linear-gradient":
              "-moz-linear-gradient( <-legacy-linear-gradient-arguments> )|-webkit-linear-gradient( <-legacy-linear-gradient-arguments> )|-o-linear-gradient( <-legacy-linear-gradient-arguments> )",
            "-legacy-repeating-linear-gradient":
              "-moz-repeating-linear-gradient( <-legacy-linear-gradient-arguments> )|-webkit-repeating-linear-gradient( <-legacy-linear-gradient-arguments> )|-o-repeating-linear-gradient( <-legacy-linear-gradient-arguments> )",
            "-legacy-linear-gradient-arguments":
              "[<angle>|<side-or-corner>]? , <color-stop-list>",
            "-legacy-radial-gradient":
              "-moz-radial-gradient( <-legacy-radial-gradient-arguments> )|-webkit-radial-gradient( <-legacy-radial-gradient-arguments> )|-o-radial-gradient( <-legacy-radial-gradient-arguments> )",
            "-legacy-repeating-radial-gradient":
              "-moz-repeating-radial-gradient( <-legacy-radial-gradient-arguments> )|-webkit-repeating-radial-gradient( <-legacy-radial-gradient-arguments> )|-o-repeating-radial-gradient( <-legacy-radial-gradient-arguments> )",
            "-legacy-radial-gradient-arguments":
              "[<position> ,]? [[[<-legacy-radial-gradient-shape>||<-legacy-radial-gradient-size>]|[<length>|<percentage>]{2}] ,]? <color-stop-list>",
            "-legacy-radial-gradient-size":
              "closest-side|closest-corner|farthest-side|farthest-corner|contain|cover",
            "-legacy-radial-gradient-shape": "circle|ellipse",
            "-non-standard-font":
              "-apple-system-body|-apple-system-headline|-apple-system-subheadline|-apple-system-caption1|-apple-system-caption2|-apple-system-footnote|-apple-system-short-body|-apple-system-short-headline|-apple-system-short-subheadline|-apple-system-short-caption1|-apple-system-short-footnote|-apple-system-tall-body",
            "-non-standard-color":
              "-moz-ButtonDefault|-moz-ButtonHoverFace|-moz-ButtonHoverText|-moz-CellHighlight|-moz-CellHighlightText|-moz-Combobox|-moz-ComboboxText|-moz-Dialog|-moz-DialogText|-moz-dragtargetzone|-moz-EvenTreeRow|-moz-Field|-moz-FieldText|-moz-html-CellHighlight|-moz-html-CellHighlightText|-moz-mac-accentdarkestshadow|-moz-mac-accentdarkshadow|-moz-mac-accentface|-moz-mac-accentlightesthighlight|-moz-mac-accentlightshadow|-moz-mac-accentregularhighlight|-moz-mac-accentregularshadow|-moz-mac-chrome-active|-moz-mac-chrome-inactive|-moz-mac-focusring|-moz-mac-menuselect|-moz-mac-menushadow|-moz-mac-menutextselect|-moz-MenuHover|-moz-MenuHoverText|-moz-MenuBarText|-moz-MenuBarHoverText|-moz-nativehyperlinktext|-moz-OddTreeRow|-moz-win-communicationstext|-moz-win-mediatext|-moz-activehyperlinktext|-moz-default-background-color|-moz-default-color|-moz-hyperlinktext|-moz-visitedhyperlinktext|-webkit-activelink|-webkit-focus-ring-color|-webkit-link|-webkit-text",
            "-non-standard-image-rendering":
              "optimize-contrast|-moz-crisp-edges|-o-crisp-edges|-webkit-optimize-contrast",
            "-non-standard-overflow":
              "-moz-scrollbars-none|-moz-scrollbars-horizontal|-moz-scrollbars-vertical|-moz-hidden-unscrollable",
            "-non-standard-width":
              "fill-available|min-intrinsic|intrinsic|-moz-available|-moz-fit-content|-moz-min-content|-moz-max-content|-webkit-min-content|-webkit-max-content",
            "-webkit-gradient()":
              "-webkit-gradient( <-webkit-gradient-type> , <-webkit-gradient-point> [, <-webkit-gradient-point>|, <-webkit-gradient-radius> , <-webkit-gradient-point>] [, <-webkit-gradient-radius>]? [, <-webkit-gradient-color-stop>]* )",
            "-webkit-gradient-color-stop":
              "from( <color> )|color-stop( [<number-zero-one>|<percentage>] , <color> )|to( <color> )",
            "-webkit-gradient-point":
              "[left|center|right|<length-percentage>] [top|center|bottom|<length-percentage>]",
            "-webkit-gradient-radius": "<length>|<percentage>",
            "-webkit-gradient-type": "linear|radial",
            "-webkit-mask-box-repeat": "repeat|stretch|round",
            "-webkit-mask-clip-style":
              "border|border-box|padding|padding-box|content|content-box|text",
            "-ms-filter-function-list": "<-ms-filter-function>+",
            "-ms-filter-function":
              "<-ms-filter-function-progid>|<-ms-filter-function-legacy>",
            "-ms-filter-function-progid":
              "'progid:' [<ident-token> '.']* [<ident-token>|<function-token> <any-value>? )]",
            "-ms-filter-function-legacy":
              "<ident-token>|<function-token> <any-value>? )",
            "-ms-filter": "<string>",
            age: "child|young|old",
            "attr-name": "<wq-name>",
            "attr-fallback": "<any-value>",
            "border-radius": "<length-percentage>{1,2}",
            bottom: "<length>|auto",
            counter: "<counter()>|<counters()>",
            "counter-name": "<custom-ident>",
            "generic-voice": "[<age>? <gender> <integer>?]",
            gender: "male|female|neutral",
            left: "<length>|auto",
            "mask-image": "<mask-reference>#",
            "name-repeat":
              "repeat( [<positive-integer>|auto-fill] , <line-names>+ )",
            paint:
              "none|<color>|<url> [none|<color>]?|context-fill|context-stroke",
            ratio: "<integer> / <integer>",
            right: "<length>|auto",
            "svg-length": "<percentage>|<length>|<number>",
            "svg-writing-mode": "lr-tb|rl-tb|tb-rl|lr|rl|tb",
            top: "<length>|auto",
            "track-group":
              "'(' [<string>* <track-minmax> <string>*]+ ')' ['[' <positive-integer> ']']?|<track-minmax>",
            "track-list-v0": "[<string>* <track-group> <string>*]+|none",
            "track-minmax":
              "minmax( <track-breadth> , <track-breadth> )|auto|<track-breadth>|fit-content",
            x: "<number>",
            y: "<number>",
            declaration:
              "<ident-token> : <declaration-value>? ['!' important]?",
            "declaration-list": "[<declaration>? ';']* <declaration>?",
            url: "url( <string> <url-modifier>* )|<url-token>",
            "url-modifier": "<ident>|<function-token> <any-value> )",
            "number-zero-one": "<number [0,1]>",
            "number-one-or-greater": "<number [1,∞]>",
            "positive-integer": "<integer [0,∞]>",
            "-non-standard-display":
              "-ms-inline-flexbox|-ms-grid|-ms-inline-grid|-webkit-flex|-webkit-inline-flex|-webkit-box|-webkit-inline-box|-moz-inline-stack|-moz-box|-moz-inline-box",
          },
          properties: {
            "--*": "<declaration-value>",
            "-ms-accelerator": "false|true",
            "-ms-block-progression": "tb|rl|bt|lr",
            "-ms-content-zoom-chaining": "none|chained",
            "-ms-content-zooming": "none|zoom",
            "-ms-content-zoom-limit":
              "<'-ms-content-zoom-limit-min'> <'-ms-content-zoom-limit-max'>",
            "-ms-content-zoom-limit-max": "<percentage>",
            "-ms-content-zoom-limit-min": "<percentage>",
            "-ms-content-zoom-snap":
              "<'-ms-content-zoom-snap-type'>||<'-ms-content-zoom-snap-points'>",
            "-ms-content-zoom-snap-points":
              "snapInterval( <percentage> , <percentage> )|snapList( <percentage># )",
            "-ms-content-zoom-snap-type": "none|proximity|mandatory",
            "-ms-filter": "<string>",
            "-ms-flow-from": "[none|<custom-ident>]#",
            "-ms-flow-into": "[none|<custom-ident>]#",
            "-ms-grid-columns": "none|<track-list>|<auto-track-list>",
            "-ms-grid-rows": "none|<track-list>|<auto-track-list>",
            "-ms-high-contrast-adjust": "auto|none",
            "-ms-hyphenate-limit-chars": "auto|<integer>{1,3}",
            "-ms-hyphenate-limit-lines": "no-limit|<integer>",
            "-ms-hyphenate-limit-zone": "<percentage>|<length>",
            "-ms-ime-align": "auto|after",
            "-ms-overflow-style":
              "auto|none|scrollbar|-ms-autohiding-scrollbar",
            "-ms-scrollbar-3dlight-color": "<color>",
            "-ms-scrollbar-arrow-color": "<color>",
            "-ms-scrollbar-base-color": "<color>",
            "-ms-scrollbar-darkshadow-color": "<color>",
            "-ms-scrollbar-face-color": "<color>",
            "-ms-scrollbar-highlight-color": "<color>",
            "-ms-scrollbar-shadow-color": "<color>",
            "-ms-scrollbar-track-color": "<color>",
            "-ms-scroll-chaining": "chained|none",
            "-ms-scroll-limit":
              "<'-ms-scroll-limit-x-min'> <'-ms-scroll-limit-y-min'> <'-ms-scroll-limit-x-max'> <'-ms-scroll-limit-y-max'>",
            "-ms-scroll-limit-x-max": "auto|<length>",
            "-ms-scroll-limit-x-min": "<length>",
            "-ms-scroll-limit-y-max": "auto|<length>",
            "-ms-scroll-limit-y-min": "<length>",
            "-ms-scroll-rails": "none|railed",
            "-ms-scroll-snap-points-x":
              "snapInterval( <length-percentage> , <length-percentage> )|snapList( <length-percentage># )",
            "-ms-scroll-snap-points-y":
              "snapInterval( <length-percentage> , <length-percentage> )|snapList( <length-percentage># )",
            "-ms-scroll-snap-type": "none|proximity|mandatory",
            "-ms-scroll-snap-x":
              "<'-ms-scroll-snap-type'> <'-ms-scroll-snap-points-x'>",
            "-ms-scroll-snap-y":
              "<'-ms-scroll-snap-type'> <'-ms-scroll-snap-points-y'>",
            "-ms-scroll-translation": "none|vertical-to-horizontal",
            "-ms-text-autospace":
              "none|ideograph-alpha|ideograph-numeric|ideograph-parenthesis|ideograph-space",
            "-ms-touch-select": "grippers|none",
            "-ms-user-select": "none|element|text",
            "-ms-wrap-flow": "auto|both|start|end|maximum|clear",
            "-ms-wrap-margin": "<length>",
            "-ms-wrap-through": "wrap|none",
            "-moz-appearance":
              "none|button|button-arrow-down|button-arrow-next|button-arrow-previous|button-arrow-up|button-bevel|button-focus|caret|checkbox|checkbox-container|checkbox-label|checkmenuitem|dualbutton|groupbox|listbox|listitem|menuarrow|menubar|menucheckbox|menuimage|menuitem|menuitemtext|menulist|menulist-button|menulist-text|menulist-textfield|menupopup|menuradio|menuseparator|meterbar|meterchunk|progressbar|progressbar-vertical|progresschunk|progresschunk-vertical|radio|radio-container|radio-label|radiomenuitem|range|range-thumb|resizer|resizerpanel|scale-horizontal|scalethumbend|scalethumb-horizontal|scalethumbstart|scalethumbtick|scalethumb-vertical|scale-vertical|scrollbarbutton-down|scrollbarbutton-left|scrollbarbutton-right|scrollbarbutton-up|scrollbarthumb-horizontal|scrollbarthumb-vertical|scrollbartrack-horizontal|scrollbartrack-vertical|searchfield|separator|sheet|spinner|spinner-downbutton|spinner-textfield|spinner-upbutton|splitter|statusbar|statusbarpanel|tab|tabpanel|tabpanels|tab-scroll-arrow-back|tab-scroll-arrow-forward|textfield|textfield-multiline|toolbar|toolbarbutton|toolbarbutton-dropdown|toolbargripper|toolbox|tooltip|treeheader|treeheadercell|treeheadersortarrow|treeitem|treeline|treetwisty|treetwistyopen|treeview|-moz-mac-unified-toolbar|-moz-win-borderless-glass|-moz-win-browsertabbar-toolbox|-moz-win-communicationstext|-moz-win-communications-toolbox|-moz-win-exclude-glass|-moz-win-glass|-moz-win-mediatext|-moz-win-media-toolbox|-moz-window-button-box|-moz-window-button-box-maximized|-moz-window-button-close|-moz-window-button-maximize|-moz-window-button-minimize|-moz-window-button-restore|-moz-window-frame-bottom|-moz-window-frame-left|-moz-window-frame-right|-moz-window-titlebar|-moz-window-titlebar-maximized",
            "-moz-binding": "<url>|none",
            "-moz-border-bottom-colors": "<color>+|none",
            "-moz-border-left-colors": "<color>+|none",
            "-moz-border-right-colors": "<color>+|none",
            "-moz-border-top-colors": "<color>+|none",
            "-moz-context-properties":
              "none|[fill|fill-opacity|stroke|stroke-opacity]#",
            "-moz-float-edge": "border-box|content-box|margin-box|padding-box",
            "-moz-force-broken-image-icon": "0|1",
            "-moz-image-region": "<shape>|auto",
            "-moz-orient": "inline|block|horizontal|vertical",
            "-moz-outline-radius":
              "<outline-radius>{1,4} [/ <outline-radius>{1,4}]?",
            "-moz-outline-radius-bottomleft": "<outline-radius>",
            "-moz-outline-radius-bottomright": "<outline-radius>",
            "-moz-outline-radius-topleft": "<outline-radius>",
            "-moz-outline-radius-topright": "<outline-radius>",
            "-moz-stack-sizing": "ignore|stretch-to-fit",
            "-moz-text-blink": "none|blink",
            "-moz-user-focus":
              "ignore|normal|select-after|select-before|select-menu|select-same|select-all|none",
            "-moz-user-input": "auto|none|enabled|disabled",
            "-moz-user-modify": "read-only|read-write|write-only",
            "-moz-window-dragging": "drag|no-drag",
            "-moz-window-shadow": "default|menu|tooltip|sheet|none",
            "-webkit-appearance":
              "none|button|button-bevel|caps-lock-indicator|caret|checkbox|default-button|inner-spin-button|listbox|listitem|media-controls-background|media-controls-fullscreen-background|media-current-time-display|media-enter-fullscreen-button|media-exit-fullscreen-button|media-fullscreen-button|media-mute-button|media-overlay-play-button|media-play-button|media-seek-back-button|media-seek-forward-button|media-slider|media-sliderthumb|media-time-remaining-display|media-toggle-closed-captions-button|media-volume-slider|media-volume-slider-container|media-volume-sliderthumb|menulist|menulist-button|menulist-text|menulist-textfield|meter|progress-bar|progress-bar-value|push-button|radio|scrollbarbutton-down|scrollbarbutton-left|scrollbarbutton-right|scrollbarbutton-up|scrollbargripper-horizontal|scrollbargripper-vertical|scrollbarthumb-horizontal|scrollbarthumb-vertical|scrollbartrack-horizontal|scrollbartrack-vertical|searchfield|searchfield-cancel-button|searchfield-decoration|searchfield-results-button|searchfield-results-decoration|slider-horizontal|slider-vertical|sliderthumb-horizontal|sliderthumb-vertical|square-button|textarea|textfield|-apple-pay-button",
            "-webkit-border-before":
              "<'border-width'>||<'border-style'>||<color>",
            "-webkit-border-before-color": "<color>",
            "-webkit-border-before-style": "<'border-style'>",
            "-webkit-border-before-width": "<'border-width'>",
            "-webkit-box-reflect":
              "[above|below|right|left]? <length>? <image>?",
            "-webkit-line-clamp": "none|<integer>",
            "-webkit-mask":
              "[<mask-reference>||<position> [/ <bg-size>]?||<repeat-style>||[<box>|border|padding|content|text]||[<box>|border|padding|content]]#",
            "-webkit-mask-attachment": "<attachment>#",
            "-webkit-mask-clip": "[<box>|border|padding|content|text]#",
            "-webkit-mask-composite": "<composite-style>#",
            "-webkit-mask-image": "<mask-reference>#",
            "-webkit-mask-origin": "[<box>|border|padding|content]#",
            "-webkit-mask-position": "<position>#",
            "-webkit-mask-position-x":
              "[<length-percentage>|left|center|right]#",
            "-webkit-mask-position-y":
              "[<length-percentage>|top|center|bottom]#",
            "-webkit-mask-repeat": "<repeat-style>#",
            "-webkit-mask-repeat-x": "repeat|no-repeat|space|round",
            "-webkit-mask-repeat-y": "repeat|no-repeat|space|round",
            "-webkit-mask-size": "<bg-size>#",
            "-webkit-overflow-scrolling": "auto|touch",
            "-webkit-tap-highlight-color": "<color>",
            "-webkit-text-fill-color": "<color>",
            "-webkit-text-stroke": "<length>||<color>",
            "-webkit-text-stroke-color": "<color>",
            "-webkit-text-stroke-width": "<length>",
            "-webkit-touch-callout": "default|none",
            "-webkit-user-modify":
              "read-only|read-write|read-write-plaintext-only",
            "accent-color": "auto|<color>",
            "align-content":
              "normal|<baseline-position>|<content-distribution>|<overflow-position>? <content-position>",
            "align-items":
              "normal|stretch|<baseline-position>|[<overflow-position>? <self-position>]",
            "align-self":
              "auto|normal|stretch|<baseline-position>|<overflow-position>? <self-position>",
            "align-tracks":
              "[normal|<baseline-position>|<content-distribution>|<overflow-position>? <content-position>]#",
            all: "initial|inherit|unset|revert",
            animation: "<single-animation>#",
            "animation-delay": "<time>#",
            "animation-direction": "<single-animation-direction>#",
            "animation-duration": "<time>#",
            "animation-fill-mode": "<single-animation-fill-mode>#",
            "animation-iteration-count": "<single-animation-iteration-count>#",
            "animation-name": "[none|<keyframes-name>]#",
            "animation-play-state": "<single-animation-play-state>#",
            "animation-timing-function": "<easing-function>#",
            appearance: "none|auto|textfield|menulist-button|<compat-auto>",
            "aspect-ratio": "auto|<ratio>",
            azimuth:
              "<angle>|[[left-side|far-left|left|center-left|center|center-right|right|far-right|right-side]||behind]|leftwards|rightwards",
            "backdrop-filter": "none|<filter-function-list>",
            "backface-visibility": "visible|hidden",
            background: "[<bg-layer> ,]* <final-bg-layer>",
            "background-attachment": "<attachment>#",
            "background-blend-mode": "<blend-mode>#",
            "background-clip": "<box>#",
            "background-color": "<color>",
            "background-image": "<bg-image>#",
            "background-origin": "<box>#",
            "background-position": "<bg-position>#",
            "background-position-x":
              "[center|[[left|right|x-start|x-end]? <length-percentage>?]!]#",
            "background-position-y":
              "[center|[[top|bottom|y-start|y-end]? <length-percentage>?]!]#",
            "background-repeat": "<repeat-style>#",
            "background-size": "<bg-size>#",
            "block-overflow": "clip|ellipsis|<string>",
            "block-size": "<'width'>",
            border: "<line-width>||<line-style>||<color>",
            "border-block":
              "<'border-top-width'>||<'border-top-style'>||<color>",
            "border-block-color": "<'border-top-color'>{1,2}",
            "border-block-style": "<'border-top-style'>",
            "border-block-width": "<'border-top-width'>",
            "border-block-end":
              "<'border-top-width'>||<'border-top-style'>||<color>",
            "border-block-end-color": "<'border-top-color'>",
            "border-block-end-style": "<'border-top-style'>",
            "border-block-end-width": "<'border-top-width'>",
            "border-block-start":
              "<'border-top-width'>||<'border-top-style'>||<color>",
            "border-block-start-color": "<'border-top-color'>",
            "border-block-start-style": "<'border-top-style'>",
            "border-block-start-width": "<'border-top-width'>",
            "border-bottom": "<line-width>||<line-style>||<color>",
            "border-bottom-color": "<'border-top-color'>",
            "border-bottom-left-radius": "<length-percentage>{1,2}",
            "border-bottom-right-radius": "<length-percentage>{1,2}",
            "border-bottom-style": "<line-style>",
            "border-bottom-width": "<line-width>",
            "border-collapse": "collapse|separate",
            "border-color": "<color>{1,4}",
            "border-end-end-radius": "<length-percentage>{1,2}",
            "border-end-start-radius": "<length-percentage>{1,2}",
            "border-image":
              "<'border-image-source'>||<'border-image-slice'> [/ <'border-image-width'>|/ <'border-image-width'>? / <'border-image-outset'>]?||<'border-image-repeat'>",
            "border-image-outset": "[<length>|<number>]{1,4}",
            "border-image-repeat": "[stretch|repeat|round|space]{1,2}",
            "border-image-slice": "<number-percentage>{1,4}&&fill?",
            "border-image-source": "none|<image>",
            "border-image-width": "[<length-percentage>|<number>|auto]{1,4}",
            "border-inline":
              "<'border-top-width'>||<'border-top-style'>||<color>",
            "border-inline-end":
              "<'border-top-width'>||<'border-top-style'>||<color>",
            "border-inline-color": "<'border-top-color'>{1,2}",
            "border-inline-style": "<'border-top-style'>",
            "border-inline-width": "<'border-top-width'>",
            "border-inline-end-color": "<'border-top-color'>",
            "border-inline-end-style": "<'border-top-style'>",
            "border-inline-end-width": "<'border-top-width'>",
            "border-inline-start":
              "<'border-top-width'>||<'border-top-style'>||<color>",
            "border-inline-start-color": "<'border-top-color'>",
            "border-inline-start-style": "<'border-top-style'>",
            "border-inline-start-width": "<'border-top-width'>",
            "border-left": "<line-width>||<line-style>||<color>",
            "border-left-color": "<color>",
            "border-left-style": "<line-style>",
            "border-left-width": "<line-width>",
            "border-radius":
              "<length-percentage>{1,4} [/ <length-percentage>{1,4}]?",
            "border-right": "<line-width>||<line-style>||<color>",
            "border-right-color": "<color>",
            "border-right-style": "<line-style>",
            "border-right-width": "<line-width>",
            "border-spacing": "<length> <length>?",
            "border-start-end-radius": "<length-percentage>{1,2}",
            "border-start-start-radius": "<length-percentage>{1,2}",
            "border-style": "<line-style>{1,4}",
            "border-top": "<line-width>||<line-style>||<color>",
            "border-top-color": "<color>",
            "border-top-left-radius": "<length-percentage>{1,2}",
            "border-top-right-radius": "<length-percentage>{1,2}",
            "border-top-style": "<line-style>",
            "border-top-width": "<line-width>",
            "border-width": "<line-width>{1,4}",
            bottom: "<length>|<percentage>|auto",
            "box-align": "start|center|end|baseline|stretch",
            "box-decoration-break": "slice|clone",
            "box-direction": "normal|reverse|inherit",
            "box-flex": "<number>",
            "box-flex-group": "<integer>",
            "box-lines": "single|multiple",
            "box-ordinal-group": "<integer>",
            "box-orient": "horizontal|vertical|inline-axis|block-axis|inherit",
            "box-pack": "start|center|end|justify",
            "box-shadow": "none|<shadow>#",
            "box-sizing": "content-box|border-box",
            "break-after":
              "auto|avoid|always|all|avoid-page|page|left|right|recto|verso|avoid-column|column|avoid-region|region",
            "break-before":
              "auto|avoid|always|all|avoid-page|page|left|right|recto|verso|avoid-column|column|avoid-region|region",
            "break-inside": "auto|avoid|avoid-page|avoid-column|avoid-region",
            "caption-side":
              "top|bottom|block-start|block-end|inline-start|inline-end",
            "caret-color": "auto|<color>",
            clear: "none|left|right|both|inline-start|inline-end",
            clip: "<shape>|auto",
            "clip-path": "<clip-source>|[<basic-shape>||<geometry-box>]|none",
            color: "<color>",
            "color-adjust": "economy|exact",
            "color-scheme": "normal|[light|dark|<custom-ident>]+",
            "column-count": "<integer>|auto",
            "column-fill": "auto|balance|balance-all",
            "column-gap": "normal|<length-percentage>",
            "column-rule":
              "<'column-rule-width'>||<'column-rule-style'>||<'column-rule-color'>",
            "column-rule-color": "<color>",
            "column-rule-style": "<'border-style'>",
            "column-rule-width": "<'border-width'>",
            "column-span": "none|all",
            "column-width": "<length>|auto",
            columns: "<'column-width'>||<'column-count'>",
            contain: "none|strict|content|[size||layout||style||paint]",
            content:
              "normal|none|[<content-replacement>|<content-list>] [/ [<string>|<counter>]+]?",
            "content-visibility": "visible|auto|hidden",
            "counter-increment": "[<counter-name> <integer>?]+|none",
            "counter-reset": "[<counter-name> <integer>?]+|none",
            "counter-set": "[<counter-name> <integer>?]+|none",
            cursor:
              "[[<url> [<x> <y>]? ,]* [auto|default|none|context-menu|help|pointer|progress|wait|cell|crosshair|text|vertical-text|alias|copy|move|no-drop|not-allowed|e-resize|n-resize|ne-resize|nw-resize|s-resize|se-resize|sw-resize|w-resize|ew-resize|ns-resize|nesw-resize|nwse-resize|col-resize|row-resize|all-scroll|zoom-in|zoom-out|grab|grabbing|hand|-webkit-grab|-webkit-grabbing|-webkit-zoom-in|-webkit-zoom-out|-moz-grab|-moz-grabbing|-moz-zoom-in|-moz-zoom-out]]",
            direction: "ltr|rtl",
            display:
              "[<display-outside>||<display-inside>]|<display-listitem>|<display-internal>|<display-box>|<display-legacy>|<-non-standard-display>",
            "empty-cells": "show|hide",
            filter: "none|<filter-function-list>|<-ms-filter-function-list>",
            flex: "none|[<'flex-grow'> <'flex-shrink'>?||<'flex-basis'>]",
            "flex-basis": "content|<'width'>",
            "flex-direction": "row|row-reverse|column|column-reverse",
            "flex-flow": "<'flex-direction'>||<'flex-wrap'>",
            "flex-grow": "<number>",
            "flex-shrink": "<number>",
            "flex-wrap": "nowrap|wrap|wrap-reverse",
            float: "left|right|none|inline-start|inline-end",
            font: "[[<'font-style'>||<font-variant-css21>||<'font-weight'>||<'font-stretch'>]? <'font-size'> [/ <'line-height'>]? <'font-family'>]|caption|icon|menu|message-box|small-caption|status-bar",
            "font-family": "[<family-name>|<generic-family>]#",
            "font-feature-settings": "normal|<feature-tag-value>#",
            "font-kerning": "auto|normal|none",
            "font-language-override": "normal|<string>",
            "font-optical-sizing": "auto|none",
            "font-variation-settings": "normal|[<string> <number>]#",
            "font-size": "<absolute-size>|<relative-size>|<length-percentage>",
            "font-size-adjust":
              "none|[ex-height|cap-height|ch-width|ic-width|ic-height]? [from-font|<number>]",
            "font-smooth": "auto|never|always|<absolute-size>|<length>",
            "font-stretch": "<font-stretch-absolute>",
            "font-style": "normal|italic|oblique <angle>?",
            "font-synthesis": "none|[weight||style||small-caps]",
            "font-variant":
              "normal|none|[<common-lig-values>||<discretionary-lig-values>||<historical-lig-values>||<contextual-alt-values>||stylistic( <feature-value-name> )||historical-forms||styleset( <feature-value-name># )||character-variant( <feature-value-name># )||swash( <feature-value-name> )||ornaments( <feature-value-name> )||annotation( <feature-value-name> )||[small-caps|all-small-caps|petite-caps|all-petite-caps|unicase|titling-caps]||<numeric-figure-values>||<numeric-spacing-values>||<numeric-fraction-values>||ordinal||slashed-zero||<east-asian-variant-values>||<east-asian-width-values>||ruby]",
            "font-variant-alternates":
              "normal|[stylistic( <feature-value-name> )||historical-forms||styleset( <feature-value-name># )||character-variant( <feature-value-name># )||swash( <feature-value-name> )||ornaments( <feature-value-name> )||annotation( <feature-value-name> )]",
            "font-variant-caps":
              "normal|small-caps|all-small-caps|petite-caps|all-petite-caps|unicase|titling-caps",
            "font-variant-east-asian":
              "normal|[<east-asian-variant-values>||<east-asian-width-values>||ruby]",
            "font-variant-ligatures":
              "normal|none|[<common-lig-values>||<discretionary-lig-values>||<historical-lig-values>||<contextual-alt-values>]",
            "font-variant-numeric":
              "normal|[<numeric-figure-values>||<numeric-spacing-values>||<numeric-fraction-values>||ordinal||slashed-zero]",
            "font-variant-position": "normal|sub|super",
            "font-weight": "<font-weight-absolute>|bolder|lighter",
            "forced-color-adjust": "auto|none",
            gap: "<'row-gap'> <'column-gap'>?",
            grid: "<'grid-template'>|<'grid-template-rows'> / [auto-flow&&dense?] <'grid-auto-columns'>?|[auto-flow&&dense?] <'grid-auto-rows'>? / <'grid-template-columns'>",
            "grid-area": "<grid-line> [/ <grid-line>]{0,3}",
            "grid-auto-columns": "<track-size>+",
            "grid-auto-flow": "[row|column]||dense",
            "grid-auto-rows": "<track-size>+",
            "grid-column": "<grid-line> [/ <grid-line>]?",
            "grid-column-end": "<grid-line>",
            "grid-column-gap": "<length-percentage>",
            "grid-column-start": "<grid-line>",
            "grid-gap": "<'grid-row-gap'> <'grid-column-gap'>?",
            "grid-row": "<grid-line> [/ <grid-line>]?",
            "grid-row-end": "<grid-line>",
            "grid-row-gap": "<length-percentage>",
            "grid-row-start": "<grid-line>",
            "grid-template":
              "none|[<'grid-template-rows'> / <'grid-template-columns'>]|[<line-names>? <string> <track-size>? <line-names>?]+ [/ <explicit-track-list>]?",
            "grid-template-areas": "none|<string>+",
            "grid-template-columns":
              "none|<track-list>|<auto-track-list>|subgrid <line-name-list>?",
            "grid-template-rows":
              "none|<track-list>|<auto-track-list>|subgrid <line-name-list>?",
            "hanging-punctuation": "none|[first||[force-end|allow-end]||last]",
            height:
              "auto|<length>|<percentage>|min-content|max-content|fit-content|fit-content( <length-percentage> )",
            hyphens: "none|manual|auto",
            "image-orientation": "from-image|<angle>|[<angle>? flip]",
            "image-rendering":
              "auto|crisp-edges|pixelated|optimizeSpeed|optimizeQuality|<-non-standard-image-rendering>",
            "image-resolution": "[from-image||<resolution>]&&snap?",
            "ime-mode": "auto|normal|active|inactive|disabled",
            "initial-letter": "normal|[<number> <integer>?]",
            "initial-letter-align": "[auto|alphabetic|hanging|ideographic]",
            "inline-size": "<'width'>",
            inset: "<'top'>{1,4}",
            "inset-block": "<'top'>{1,2}",
            "inset-block-end": "<'top'>",
            "inset-block-start": "<'top'>",
            "inset-inline": "<'top'>{1,2}",
            "inset-inline-end": "<'top'>",
            "inset-inline-start": "<'top'>",
            isolation: "auto|isolate",
            "justify-content":
              "normal|<content-distribution>|<overflow-position>? [<content-position>|left|right]",
            "justify-items":
              "normal|stretch|<baseline-position>|<overflow-position>? [<self-position>|left|right]|legacy|legacy&&[left|right|center]",
            "justify-self":
              "auto|normal|stretch|<baseline-position>|<overflow-position>? [<self-position>|left|right]",
            "justify-tracks":
              "[normal|<content-distribution>|<overflow-position>? [<content-position>|left|right]]#",
            left: "<length>|<percentage>|auto",
            "letter-spacing": "normal|<length-percentage>",
            "line-break": "auto|loose|normal|strict|anywhere",
            "line-clamp": "none|<integer>",
            "line-height": "normal|<number>|<length>|<percentage>",
            "line-height-step": "<length>",
            "list-style":
              "<'list-style-type'>||<'list-style-position'>||<'list-style-image'>",
            "list-style-image": "<image>|none",
            "list-style-position": "inside|outside",
            "list-style-type": "<counter-style>|<string>|none",
            margin: "[<length>|<percentage>|auto]{1,4}",
            "margin-block": "<'margin-left'>{1,2}",
            "margin-block-end": "<'margin-left'>",
            "margin-block-start": "<'margin-left'>",
            "margin-bottom": "<length>|<percentage>|auto",
            "margin-inline": "<'margin-left'>{1,2}",
            "margin-inline-end": "<'margin-left'>",
            "margin-inline-start": "<'margin-left'>",
            "margin-left": "<length>|<percentage>|auto",
            "margin-right": "<length>|<percentage>|auto",
            "margin-top": "<length>|<percentage>|auto",
            "margin-trim": "none|in-flow|all",
            mask: "<mask-layer>#",
            "mask-border":
              "<'mask-border-source'>||<'mask-border-slice'> [/ <'mask-border-width'>? [/ <'mask-border-outset'>]?]?||<'mask-border-repeat'>||<'mask-border-mode'>",
            "mask-border-mode": "luminance|alpha",
            "mask-border-outset": "[<length>|<number>]{1,4}",
            "mask-border-repeat": "[stretch|repeat|round|space]{1,2}",
            "mask-border-slice": "<number-percentage>{1,4} fill?",
            "mask-border-source": "none|<image>",
            "mask-border-width": "[<length-percentage>|<number>|auto]{1,4}",
            "mask-clip": "[<geometry-box>|no-clip]#",
            "mask-composite": "<compositing-operator>#",
            "mask-image": "<mask-reference>#",
            "mask-mode": "<masking-mode>#",
            "mask-origin": "<geometry-box>#",
            "mask-position": "<position>#",
            "mask-repeat": "<repeat-style>#",
            "mask-size": "<bg-size>#",
            "mask-type": "luminance|alpha",
            "masonry-auto-flow": "[pack|next]||[definite-first|ordered]",
            "math-style": "normal|compact",
            "max-block-size": "<'max-width'>",
            "max-height":
              "none|<length-percentage>|min-content|max-content|fit-content|fit-content( <length-percentage> )",
            "max-inline-size": "<'max-width'>",
            "max-lines": "none|<integer>",
            "max-width":
              "none|<length-percentage>|min-content|max-content|fit-content|fit-content( <length-percentage> )|<-non-standard-width>",
            "min-block-size": "<'min-width'>",
            "min-height":
              "auto|<length>|<percentage>|min-content|max-content|fit-content|fit-content( <length-percentage> )",
            "min-inline-size": "<'min-width'>",
            "min-width":
              "auto|<length>|<percentage>|min-content|max-content|fit-content|fit-content( <length-percentage> )|<-non-standard-width>",
            "mix-blend-mode": "<blend-mode>",
            "object-fit": "fill|contain|cover|none|scale-down",
            "object-position": "<position>",
            offset:
              "[<'offset-position'>? [<'offset-path'> [<'offset-distance'>||<'offset-rotate'>]?]?]! [/ <'offset-anchor'>]?",
            "offset-anchor": "auto|<position>",
            "offset-distance": "<length-percentage>",
            "offset-path":
              "none|ray( [<angle>&&<size>&&contain?] )|<path()>|<url>|[<basic-shape>||<geometry-box>]",
            "offset-position": "auto|<position>",
            "offset-rotate": "[auto|reverse]||<angle>",
            opacity: "<alpha-value>",
            order: "<integer>",
            orphans: "<integer>",
            outline:
              "[<'outline-color'>||<'outline-style'>||<'outline-width'>]",
            "outline-color": "<color>|invert",
            "outline-offset": "<length>",
            "outline-style": "auto|<'border-style'>",
            "outline-width": "<line-width>",
            overflow:
              "[visible|hidden|clip|scroll|auto]{1,2}|<-non-standard-overflow>",
            "overflow-anchor": "auto|none",
            "overflow-block": "visible|hidden|clip|scroll|auto",
            "overflow-clip-box": "padding-box|content-box",
            "overflow-clip-margin": "<visual-box>||<length [0,∞]>",
            "overflow-inline": "visible|hidden|clip|scroll|auto",
            "overflow-wrap": "normal|break-word|anywhere",
            "overflow-x": "visible|hidden|clip|scroll|auto",
            "overflow-y": "visible|hidden|clip|scroll|auto",
            "overscroll-behavior": "[contain|none|auto]{1,2}",
            "overscroll-behavior-block": "contain|none|auto",
            "overscroll-behavior-inline": "contain|none|auto",
            "overscroll-behavior-x": "contain|none|auto",
            "overscroll-behavior-y": "contain|none|auto",
            padding: "[<length>|<percentage>]{1,4}",
            "padding-block": "<'padding-left'>{1,2}",
            "padding-block-end": "<'padding-left'>",
            "padding-block-start": "<'padding-left'>",
            "padding-bottom": "<length>|<percentage>",
            "padding-inline": "<'padding-left'>{1,2}",
            "padding-inline-end": "<'padding-left'>",
            "padding-inline-start": "<'padding-left'>",
            "padding-left": "<length>|<percentage>",
            "padding-right": "<length>|<percentage>",
            "padding-top": "<length>|<percentage>",
            "page-break-after": "auto|always|avoid|left|right|recto|verso",
            "page-break-before": "auto|always|avoid|left|right|recto|verso",
            "page-break-inside": "auto|avoid",
            "paint-order": "normal|[fill||stroke||markers]",
            perspective: "none|<length>",
            "perspective-origin": "<position>",
            "place-content": "<'align-content'> <'justify-content'>?",
            "place-items": "<'align-items'> <'justify-items'>?",
            "place-self": "<'align-self'> <'justify-self'>?",
            "pointer-events":
              "auto|none|visiblePainted|visibleFill|visibleStroke|visible|painted|fill|stroke|all|inherit",
            position: "static|relative|absolute|sticky|fixed|-webkit-sticky",
            quotes: "none|auto|[<string> <string>]+",
            resize: "none|both|horizontal|vertical|block|inline",
            right: "<length>|<percentage>|auto",
            rotate: "none|<angle>|[x|y|z|<number>{3}]&&<angle>",
            "row-gap": "normal|<length-percentage>",
            "ruby-align": "start|center|space-between|space-around",
            "ruby-merge": "separate|collapse|auto",
            "ruby-position": "[alternate||[over|under]]|inter-character",
            scale: "none|<number>{1,3}",
            "scrollbar-color": "auto|<color>{2}",
            "scrollbar-gutter": "auto|stable&&both-edges?",
            "scrollbar-width": "auto|thin|none",
            "scroll-behavior": "auto|smooth",
            "scroll-margin": "<length>{1,4}",
            "scroll-margin-block": "<length>{1,2}",
            "scroll-margin-block-start": "<length>",
            "scroll-margin-block-end": "<length>",
            "scroll-margin-bottom": "<length>",
            "scroll-margin-inline": "<length>{1,2}",
            "scroll-margin-inline-start": "<length>",
            "scroll-margin-inline-end": "<length>",
            "scroll-margin-left": "<length>",
            "scroll-margin-right": "<length>",
            "scroll-margin-top": "<length>",
            "scroll-padding": "[auto|<length-percentage>]{1,4}",
            "scroll-padding-block": "[auto|<length-percentage>]{1,2}",
            "scroll-padding-block-start": "auto|<length-percentage>",
            "scroll-padding-block-end": "auto|<length-percentage>",
            "scroll-padding-bottom": "auto|<length-percentage>",
            "scroll-padding-inline": "[auto|<length-percentage>]{1,2}",
            "scroll-padding-inline-start": "auto|<length-percentage>",
            "scroll-padding-inline-end": "auto|<length-percentage>",
            "scroll-padding-left": "auto|<length-percentage>",
            "scroll-padding-right": "auto|<length-percentage>",
            "scroll-padding-top": "auto|<length-percentage>",
            "scroll-snap-align": "[none|start|end|center]{1,2}",
            "scroll-snap-coordinate": "none|<position>#",
            "scroll-snap-destination": "<position>",
            "scroll-snap-points-x": "none|repeat( <length-percentage> )",
            "scroll-snap-points-y": "none|repeat( <length-percentage> )",
            "scroll-snap-stop": "normal|always",
            "scroll-snap-type":
              "none|[x|y|block|inline|both] [mandatory|proximity]?",
            "scroll-snap-type-x": "none|mandatory|proximity",
            "scroll-snap-type-y": "none|mandatory|proximity",
            "shape-image-threshold": "<alpha-value>",
            "shape-margin": "<length-percentage>",
            "shape-outside": "none|[<shape-box>||<basic-shape>]|<image>",
            "tab-size": "<integer>|<length>",
            "table-layout": "auto|fixed",
            "text-align": "start|end|left|right|center|justify|match-parent",
            "text-align-last": "auto|start|end|left|right|center|justify",
            "text-combine-upright": "none|all|[digits <integer>?]",
            "text-decoration":
              "<'text-decoration-line'>||<'text-decoration-style'>||<'text-decoration-color'>||<'text-decoration-thickness'>",
            "text-decoration-color": "<color>",
            "text-decoration-line":
              "none|[underline||overline||line-through||blink]|spelling-error|grammar-error",
            "text-decoration-skip":
              "none|[objects||[spaces|[leading-spaces||trailing-spaces]]||edges||box-decoration]",
            "text-decoration-skip-ink": "auto|all|none",
            "text-decoration-style": "solid|double|dotted|dashed|wavy",
            "text-decoration-thickness": "auto|from-font|<length>|<percentage>",
            "text-emphasis": "<'text-emphasis-style'>||<'text-emphasis-color'>",
            "text-emphasis-color": "<color>",
            "text-emphasis-position": "[over|under]&&[right|left]",
            "text-emphasis-style":
              "none|[[filled|open]||[dot|circle|double-circle|triangle|sesame]]|<string>",
            "text-indent": "<length-percentage>&&hanging?&&each-line?",
            "text-justify": "auto|inter-character|inter-word|none",
            "text-orientation": "mixed|upright|sideways",
            "text-overflow": "[clip|ellipsis|<string>]{1,2}",
            "text-rendering":
              "auto|optimizeSpeed|optimizeLegibility|geometricPrecision",
            "text-shadow": "none|<shadow-t>#",
            "text-size-adjust": "none|auto|<percentage>",
            "text-transform":
              "none|capitalize|uppercase|lowercase|full-width|full-size-kana",
            "text-underline-offset": "auto|<length>|<percentage>",
            "text-underline-position": "auto|from-font|[under||[left|right]]",
            top: "<length>|<percentage>|auto",
            "touch-action":
              "auto|none|[[pan-x|pan-left|pan-right]||[pan-y|pan-up|pan-down]||pinch-zoom]|manipulation",
            transform: "none|<transform-list>",
            "transform-box":
              "content-box|border-box|fill-box|stroke-box|view-box",
            "transform-origin":
              "[<length-percentage>|left|center|right|top|bottom]|[[<length-percentage>|left|center|right]&&[<length-percentage>|top|center|bottom]] <length>?",
            "transform-style": "flat|preserve-3d",
            transition: "<single-transition>#",
            "transition-delay": "<time>#",
            "transition-duration": "<time>#",
            "transition-property": "none|<single-transition-property>#",
            "transition-timing-function": "<easing-function>#",
            translate:
              "none|<length-percentage> [<length-percentage> <length>?]?",
            "unicode-bidi":
              "normal|embed|isolate|bidi-override|isolate-override|plaintext|-moz-isolate|-moz-isolate-override|-moz-plaintext|-webkit-isolate|-webkit-isolate-override|-webkit-plaintext",
            "user-select": "auto|text|none|contain|all",
            "vertical-align":
              "baseline|sub|super|text-top|text-bottom|middle|top|bottom|<percentage>|<length>",
            visibility: "visible|hidden|collapse",
            "white-space": "normal|pre|nowrap|pre-wrap|pre-line|break-spaces",
            widows: "<integer>",
            width:
              "auto|<length>|<percentage>|min-content|max-content|fit-content|fit-content( <length-percentage> )|fill|stretch|intrinsic|-moz-max-content|-webkit-max-content|-moz-fit-content|-webkit-fit-content",
            "will-change": "auto|<animateable-feature>#",
            "word-break": "normal|break-all|keep-all|break-word",
            "word-spacing": "normal|<length>",
            "word-wrap": "normal|break-word",
            "writing-mode":
              "horizontal-tb|vertical-rl|vertical-lr|sideways-rl|sideways-lr|<svg-writing-mode>",
            "z-index": "auto|<integer>",
            zoom: "normal|reset|<number>|<percentage>",
            "-moz-background-clip": "padding|border",
            "-moz-border-radius-bottomleft": "<'border-bottom-left-radius'>",
            "-moz-border-radius-bottomright": "<'border-bottom-right-radius'>",
            "-moz-border-radius-topleft": "<'border-top-left-radius'>",
            "-moz-border-radius-topright": "<'border-bottom-right-radius'>",
            "-moz-control-character-visibility": "visible|hidden",
            "-moz-osx-font-smoothing": "auto|grayscale",
            "-moz-user-select": "none|text|all|-moz-none",
            "-ms-flex-align": "start|end|center|baseline|stretch",
            "-ms-flex-item-align": "auto|start|end|center|baseline|stretch",
            "-ms-flex-line-pack": "start|end|center|justify|distribute|stretch",
            "-ms-flex-negative": "<'flex-shrink'>",
            "-ms-flex-pack": "start|end|center|justify|distribute",
            "-ms-flex-order": "<integer>",
            "-ms-flex-positive": "<'flex-grow'>",
            "-ms-flex-preferred-size": "<'flex-basis'>",
            "-ms-interpolation-mode": "nearest-neighbor|bicubic",
            "-ms-grid-column-align": "start|end|center|stretch",
            "-ms-grid-row-align": "start|end|center|stretch",
            "-ms-hyphenate-limit-last": "none|always|column|page|spread",
            "-webkit-background-clip": "[<box>|border|padding|content|text]#",
            "-webkit-column-break-after": "always|auto|avoid",
            "-webkit-column-break-before": "always|auto|avoid",
            "-webkit-column-break-inside": "always|auto|avoid",
            "-webkit-font-smoothing":
              "auto|none|antialiased|subpixel-antialiased",
            "-webkit-mask-box-image":
              "[<url>|<gradient>|none] [<length-percentage>{4} <-webkit-mask-box-repeat>{2}]?",
            "-webkit-print-color-adjust": "economy|exact",
            "-webkit-text-security": "none|circle|disc|square",
            "-webkit-user-drag": "none|element|auto",
            "-webkit-user-select": "auto|none|text|all",
            "alignment-baseline":
              "auto|baseline|before-edge|text-before-edge|middle|central|after-edge|text-after-edge|ideographic|alphabetic|hanging|mathematical",
            "baseline-shift": "baseline|sub|super|<svg-length>",
            behavior: "<url>+",
            "clip-rule": "nonzero|evenodd",
            cue: "<'cue-before'> <'cue-after'>?",
            "cue-after": "<url> <decibel>?|none",
            "cue-before": "<url> <decibel>?|none",
            "dominant-baseline":
              "auto|use-script|no-change|reset-size|ideographic|alphabetic|hanging|mathematical|central|middle|text-after-edge|text-before-edge",
            fill: "<paint>",
            "fill-opacity": "<number-zero-one>",
            "fill-rule": "nonzero|evenodd",
            "glyph-orientation-horizontal": "<angle>",
            "glyph-orientation-vertical": "<angle>",
            kerning: "auto|<svg-length>",
            marker: "none|<url>",
            "marker-end": "none|<url>",
            "marker-mid": "none|<url>",
            "marker-start": "none|<url>",
            pause: "<'pause-before'> <'pause-after'>?",
            "pause-after": "<time>|none|x-weak|weak|medium|strong|x-strong",
            "pause-before": "<time>|none|x-weak|weak|medium|strong|x-strong",
            rest: "<'rest-before'> <'rest-after'>?",
            "rest-after": "<time>|none|x-weak|weak|medium|strong|x-strong",
            "rest-before": "<time>|none|x-weak|weak|medium|strong|x-strong",
            "shape-rendering":
              "auto|optimizeSpeed|crispEdges|geometricPrecision",
            src: "[<url> [format( <string># )]?|local( <family-name> )]#",
            speak: "auto|none|normal",
            "speak-as":
              "normal|spell-out||digits||[literal-punctuation|no-punctuation]",
            stroke: "<paint>",
            "stroke-dasharray": "none|[<svg-length>+]#",
            "stroke-dashoffset": "<svg-length>",
            "stroke-linecap": "butt|round|square",
            "stroke-linejoin": "miter|round|bevel",
            "stroke-miterlimit": "<number-one-or-greater>",
            "stroke-opacity": "<number-zero-one>",
            "stroke-width": "<svg-length>",
            "text-anchor": "start|middle|end",
            "unicode-range": "<urange>#",
            "voice-balance": "<number>|left|center|right|leftwards|rightwards",
            "voice-duration": "auto|<time>",
            "voice-family":
              "[[<family-name>|<generic-voice>] ,]* [<family-name>|<generic-voice>]|preserve",
            "voice-pitch":
              "<frequency>&&absolute|[[x-low|low|medium|high|x-high]||[<frequency>|<semitones>|<percentage>]]",
            "voice-range":
              "<frequency>&&absolute|[[x-low|low|medium|high|x-high]||[<frequency>|<semitones>|<percentage>]]",
            "voice-rate":
              "[normal|x-slow|slow|medium|fast|x-fast]||<percentage>",
            "voice-stress": "normal|strong|moderate|none|reduced",
            "voice-volume":
              "silent|[[x-soft|soft|medium|loud|x-loud]||<decibel>]",
          },
          atrules: {
            charset: { prelude: "<string>", descriptors: null },
            "counter-style": {
              prelude: "<counter-style-name>",
              descriptors: {
                "additive-symbols": "[<integer>&&<symbol>]#",
                fallback: "<counter-style-name>",
                negative: "<symbol> <symbol>?",
                pad: "<integer>&&<symbol>",
                prefix: "<symbol>",
                range: "[[<integer>|infinite]{2}]#|auto",
                "speak-as":
                  "auto|bullets|numbers|words|spell-out|<counter-style-name>",
                suffix: "<symbol>",
                symbols: "<symbol>+",
                system:
                  "cyclic|numeric|alphabetic|symbolic|additive|[fixed <integer>?]|[extends <counter-style-name>]",
              },
            },
            document: {
              prelude:
                "[<url>|url-prefix( <string> )|domain( <string> )|media-document( <string> )|regexp( <string> )]#",
              descriptors: null,
            },
            "font-face": {
              prelude: null,
              descriptors: {
                "ascent-override": "normal|<percentage>",
                "descent-override": "normal|<percentage>",
                "font-display": "[auto|block|swap|fallback|optional]",
                "font-family": "<family-name>",
                "font-feature-settings": "normal|<feature-tag-value>#",
                "font-variation-settings": "normal|[<string> <number>]#",
                "font-stretch": "<font-stretch-absolute>{1,2}",
                "font-style": "normal|italic|oblique <angle>{0,2}",
                "font-weight": "<font-weight-absolute>{1,2}",
                "font-variant":
                  "normal|none|[<common-lig-values>||<discretionary-lig-values>||<historical-lig-values>||<contextual-alt-values>||stylistic( <feature-value-name> )||historical-forms||styleset( <feature-value-name># )||character-variant( <feature-value-name># )||swash( <feature-value-name> )||ornaments( <feature-value-name> )||annotation( <feature-value-name> )||[small-caps|all-small-caps|petite-caps|all-petite-caps|unicase|titling-caps]||<numeric-figure-values>||<numeric-spacing-values>||<numeric-fraction-values>||ordinal||slashed-zero||<east-asian-variant-values>||<east-asian-width-values>||ruby]",
                "line-gap-override": "normal|<percentage>",
                "size-adjust": "<percentage>",
                src: "[<url> [format( <string># )]?|local( <family-name> )]#",
                "unicode-range": "<urange>#",
              },
            },
            "font-feature-values": {
              prelude: "<family-name>#",
              descriptors: null,
            },
            import: {
              prelude: "[<string>|<url>] [<media-query-list>]?",
              descriptors: null,
            },
            keyframes: { prelude: "<keyframes-name>", descriptors: null },
            media: { prelude: "<media-query-list>", descriptors: null },
            namespace: {
              prelude: "<namespace-prefix>? [<string>|<url>]",
              descriptors: null,
            },
            page: {
              prelude: "<page-selector-list>",
              descriptors: {
                bleed: "auto|<length>",
                marks: "none|[crop||cross]",
                size: "<length>{1,2}|auto|[<page-size>||[portrait|landscape]]",
              },
            },
            property: {
              prelude: "<custom-property-name>",
              descriptors: {
                syntax: "<string>",
                inherits: "true|false",
                "initial-value": "<string>",
              },
            },
            supports: { prelude: "<supports-condition>", descriptors: null },
            viewport: {
              prelude: null,
              descriptors: {
                height: "<viewport-length>{1,2}",
                "max-height": "<viewport-length>",
                "max-width": "<viewport-length>",
                "max-zoom": "auto|<number>|<percentage>",
                "min-height": "<viewport-length>",
                "min-width": "<viewport-length>",
                "min-zoom": "auto|<number>|<percentage>",
                orientation: "auto|portrait|landscape",
                "user-zoom": "zoom|fixed",
                "viewport-fit": "auto|contain|cover",
                width: "<viewport-length>{1,2}",
                zoom: "auto|<number>|<percentage>",
              },
            },
          },
        };
      },
      (e, t, n) => {
        "use strict";
        n.r(t),
          n.d(t, {
            AnPlusB: () => i,
            Atrule: () => r,
            AtrulePrelude: () => a,
            AttributeSelector: () => o,
            Block: () => s,
            Brackets: () => c,
            CDC: () => l,
            CDO: () => u,
            ClassSelector: () => p,
            Combinator: () => d,
            Comment: () => m,
            Declaration: () => h,
            DeclarationList: () => f,
            Dimension: () => g,
            Function: () => x,
            Hash: () => b,
            Identifier: () => v,
            IdSelector: () => k,
            MediaFeature: () => T,
            MediaQuery: () => y,
            MediaQueryList: () => E,
            Nth: () => w,
            Number: () => C,
            Operator: () => A,
            Parentheses: () => S,
            Percentage: () => _,
            PseudoClassSelector: () => N,
            PseudoElementSelector: () => P,
            Ratio: () => O,
            Raw: () => L,
            Rule: () => I,
            Selector: () => R,
            SelectorList: () => M,
            String: () => D,
            StyleSheet: () => j,
            TypeSelector: () => H,
            UnicodeRange: () => F,
            Url: () => B,
            Value: () => U,
            WhiteSpace: () => z,
          });
        var i = n(77),
          r = n(78),
          a = n(79),
          o = n(80),
          s = n(81),
          c = n(82),
          l = n(83),
          u = n(84),
          p = n(85),
          d = n(86),
          m = n(87),
          h = n(88),
          f = n(89),
          g = n(90),
          x = n(91),
          b = n(92),
          v = n(93),
          k = n(94),
          T = n(95),
          y = n(96),
          E = n(97),
          w = n(98),
          C = n(99),
          A = n(100),
          S = n(101),
          _ = n(102),
          N = n(103),
          P = n(104),
          O = n(105),
          L = n(106),
          I = n(107),
          R = n(108),
          M = n(109),
          D = n(110),
          j = n(112),
          H = n(113),
          F = n(114),
          B = n(115),
          U = n(117),
          z = n(118);
      },
      (e, t, n) => {
        "use strict";
        n.r(t),
          n.d(t, {
            name: () => m,
            structure: () => h,
            parse: () => f,
            generate: () => g,
          });
        var i = n(31);
        const r = 43,
          a = 45,
          o = 110,
          s = !0,
          c = !1;
        function l(e, t) {
          let n = this.tokenStart + e;
          const o = this.charCodeAt(n);
          for (
            (o !== r && o !== a) ||
            (t && this.error("Number sign is not allowed"), n++);
            n < this.tokenEnd;
            n++
          )
            (0, i.isDigit)(this.charCodeAt(n)) ||
              this.error("Integer is expected", n);
        }
        function u(e) {
          return l.call(this, 0, e);
        }
        function p(e, t) {
          if (!this.cmpChar(this.tokenStart + e, t)) {
            let n = "";
            switch (t) {
              case o:
                n = "N is expected";
                break;
              case a:
                n = "HyphenMinus is expected";
            }
            this.error(n, this.tokenStart + e);
          }
        }
        function d() {
          let e = 0,
            t = 0,
            n = this.tokenType;
          for (; n === i.WhiteSpace || n === i.Comment; )
            n = this.lookupType(++e);
          if (n !== i.Number) {
            if (!this.isDelim(r, e) && !this.isDelim(a, e)) return null;
            t = this.isDelim(r, e) ? r : a;
            do {
              n = this.lookupType(++e);
            } while (n === i.WhiteSpace || n === i.Comment);
            n !== i.Number && (this.skip(e), u.call(this, s));
          }
          return (
            e > 0 && this.skip(e),
            0 === t &&
              ((n = this.charCodeAt(this.tokenStart)),
              n !== r && n !== a && this.error("Number sign is expected")),
            u.call(this, 0 !== t),
            t === a ? "-" + this.consume(i.Number) : this.consume(i.Number)
          );
        }
        const m = "AnPlusB",
          h = { a: [String, null], b: [String, null] };
        function f() {
          const e = this.tokenStart;
          let t = null,
            n = null;
          if (this.tokenType === i.Number)
            u.call(this, c), (n = this.consume(i.Number));
          else if (
            this.tokenType === i.Ident &&
            this.cmpChar(this.tokenStart, a)
          )
            switch (
              ((t = "-1"), p.call(this, 1, o), this.tokenEnd - this.tokenStart)
            ) {
              case 2:
                this.next(), (n = d.call(this));
                break;
              case 3:
                p.call(this, 2, a),
                  this.next(),
                  this.skipSC(),
                  u.call(this, s),
                  (n = "-" + this.consume(i.Number));
                break;
              default:
                p.call(this, 2, a),
                  l.call(this, 3, s),
                  this.next(),
                  (n = this.substrToCursor(e + 2));
            }
          else if (
            this.tokenType === i.Ident ||
            (this.isDelim(r) && this.lookupType(1) === i.Ident)
          ) {
            let c = 0;
            switch (
              ((t = "1"),
              this.isDelim(r) && ((c = 1), this.next()),
              p.call(this, 0, o),
              this.tokenEnd - this.tokenStart)
            ) {
              case 1:
                this.next(), (n = d.call(this));
                break;
              case 2:
                p.call(this, 1, a),
                  this.next(),
                  this.skipSC(),
                  u.call(this, s),
                  (n = "-" + this.consume(i.Number));
                break;
              default:
                p.call(this, 1, a),
                  l.call(this, 2, s),
                  this.next(),
                  (n = this.substrToCursor(e + c + 1));
            }
          } else if (this.tokenType === i.Dimension) {
            const c = this.charCodeAt(this.tokenStart),
              m = c === r || c === a;
            let h = this.tokenStart + m;
            for (
              ;
              h < this.tokenEnd && (0, i.isDigit)(this.charCodeAt(h));
              h++
            );
            h === this.tokenStart + m &&
              this.error("Integer is expected", this.tokenStart + m),
              p.call(this, h - this.tokenStart, o),
              (t = this.substring(e, h)),
              h + 1 === this.tokenEnd
                ? (this.next(), (n = d.call(this)))
                : (p.call(this, h - this.tokenStart + 1, a),
                  h + 2 === this.tokenEnd
                    ? (this.next(),
                      this.skipSC(),
                      u.call(this, s),
                      (n = "-" + this.consume(i.Number)))
                    : (l.call(this, h - this.tokenStart + 2, s),
                      this.next(),
                      (n = this.substrToCursor(h + 1))));
          } else this.error();
          return (
            null !== t && t.charCodeAt(0) === r && (t = t.substr(1)),
            null !== n && n.charCodeAt(0) === r && (n = n.substr(1)),
            {
              type: "AnPlusB",
              loc: this.getLocation(e, this.tokenStart),
              a: t,
              b: n,
            }
          );
        }
        function g(e) {
          if (e.a) {
            const t =
              ("+1" === e.a || "1" === e.a ? "n" : "-1" === e.a && "-n") ||
              e.a + "n";
            if (e.b) {
              const n = "-" === e.b[0] || "+" === e.b[0] ? e.b : "+" + e.b;
              this.tokenize(t + n);
            } else this.tokenize(t);
          } else this.tokenize(e.b);
        }
      },
      (e, t, n) => {
        "use strict";
        n.r(t),
          n.d(t, {
            name: () => o,
            walkContext: () => s,
            structure: () => c,
            parse: () => l,
            generate: () => u,
          });
        var i = n(31);
        function r(e) {
          return this.Raw(e, this.consumeUntilLeftCurlyBracketOrSemicolon, !0);
        }
        function a() {
          for (let e, t = 1; (e = this.lookupType(t)); t++) {
            if (e === i.RightCurlyBracket) return !0;
            if (e === i.LeftCurlyBracket || e === i.AtKeyword) return !1;
          }
          return !1;
        }
        const o = "Atrule",
          s = "atrule",
          c = {
            name: String,
            prelude: ["AtrulePrelude", "Raw", null],
            block: ["Block", null],
          };
        function l() {
          const e = this.tokenStart;
          let t,
            n,
            o = null,
            s = null;
          switch (
            (this.eat(i.AtKeyword),
            (t = this.substrToCursor(e + 1)),
            (n = t.toLowerCase()),
            this.skipSC(),
            !1 === this.eof &&
              this.tokenType !== i.LeftCurlyBracket &&
              this.tokenType !== i.Semicolon &&
              ((o = this.parseAtrulePrelude
                ? this.parseWithFallback(this.AtrulePrelude.bind(this, t), r)
                : r.call(this, this.tokenIndex)),
              this.skipSC()),
            this.tokenType)
          ) {
            case i.Semicolon:
              this.next();
              break;
            case i.LeftCurlyBracket:
              s =
                hasOwnProperty.call(this.atrule, n) &&
                "function" == typeof this.atrule[n].block
                  ? this.atrule[n].block.call(this)
                  : this.Block(a.call(this));
          }
          return {
            type: "Atrule",
            loc: this.getLocation(e, this.tokenStart),
            name: t,
            prelude: o,
            block: s,
          };
        }
        function u(e) {
          this.token(i.AtKeyword, "@" + e.name),
            null !== e.prelude && this.node(e.prelude),
            e.block ? this.node(e.block) : this.token(i.Semicolon, ";");
        }
      },
      (e, t, n) => {
        "use strict";
        n.r(t),
          n.d(t, {
            name: () => r,
            walkContext: () => a,
            structure: () => o,
            parse: () => s,
            generate: () => c,
          });
        var i = n(31);
        const r = "AtrulePrelude",
          a = "atrulePrelude",
          o = { children: [[]] };
        function s(e) {
          let t = null;
          return (
            null !== e && (e = e.toLowerCase()),
            this.skipSC(),
            (t =
              hasOwnProperty.call(this.atrule, e) &&
              "function" == typeof this.atrule[e].prelude
                ? this.atrule[e].prelude.call(this)
                : this.readSequence(this.scope.AtrulePrelude)),
            this.skipSC(),
            !0 !== this.eof &&
              this.tokenType !== i.LeftCurlyBracket &&
              this.tokenType !== i.Semicolon &&
              this.error("Semicolon or block is expected"),
            {
              type: "AtrulePrelude",
              loc: this.getLocationFromList(t),
              children: t,
            }
          );
        }
        function c(e) {
          this.children(e);
        }
      },
      (e, t, n) => {
        "use strict";
        n.r(t),
          n.d(t, {
            name: () => d,
            structure: () => m,
            parse: () => h,
            generate: () => f,
          });
        var i = n(31);
        const r = 36,
          a = 42,
          o = 61,
          s = 94,
          c = 124,
          l = 126;
        function u() {
          this.eof && this.error("Unexpected end of input");
          const e = this.tokenStart;
          let t = !1;
          return (
            this.isDelim(a)
              ? ((t = !0), this.next())
              : this.isDelim(c) || this.eat(i.Ident),
            this.isDelim(c)
              ? this.charCodeAt(this.tokenStart + 1) !== o
                ? (this.next(), this.eat(i.Ident))
                : t && this.error("Identifier is expected", this.tokenEnd)
              : t && this.error("Vertical line is expected"),
            {
              type: "Identifier",
              loc: this.getLocation(e, this.tokenStart),
              name: this.substrToCursor(e),
            }
          );
        }
        function p() {
          const e = this.tokenStart,
            t = this.charCodeAt(e);
          return (
            t !== o &&
              t !== l &&
              t !== s &&
              t !== r &&
              t !== a &&
              t !== c &&
              this.error(
                "Attribute selector (=, ~=, ^=, $=, *=, |=) is expected",
              ),
            this.next(),
            t !== o &&
              (this.isDelim(o) || this.error("Equal sign is expected"),
              this.next()),
            this.substrToCursor(e)
          );
        }
        const d = "AttributeSelector",
          m = {
            name: "Identifier",
            matcher: [String, null],
            value: ["String", "Identifier", null],
            flags: [String, null],
          };
        function h() {
          const e = this.tokenStart;
          let t,
            n = null,
            r = null,
            a = null;
          return (
            this.eat(i.LeftSquareBracket),
            this.skipSC(),
            (t = u.call(this)),
            this.skipSC(),
            this.tokenType !== i.RightSquareBracket &&
              (this.tokenType !== i.Ident &&
                ((n = p.call(this)),
                this.skipSC(),
                (r =
                  this.tokenType === i.String
                    ? this.String()
                    : this.Identifier()),
                this.skipSC()),
              this.tokenType === i.Ident &&
                ((a = this.consume(i.Ident)), this.skipSC())),
            this.eat(i.RightSquareBracket),
            {
              type: "AttributeSelector",
              loc: this.getLocation(e, this.tokenStart),
              name: t,
              matcher: n,
              value: r,
              flags: a,
            }
          );
        }
        function f(e) {
          this.token(i.Delim, "["),
            this.node(e.name),
            null !== e.matcher &&
              (this.tokenize(e.matcher), this.node(e.value)),
            null !== e.flags && this.token(i.Ident, e.flags),
            this.token(i.Delim, "]");
        }
      },
      (e, t, n) => {
        "use strict";
        n.r(t),
          n.d(t, {
            name: () => c,
            walkContext: () => l,
            structure: () => u,
            parse: () => p,
            generate: () => d,
          });
        var i = n(31);
        function r(e) {
          return this.Raw(e, null, !0);
        }
        function a() {
          return this.parseWithFallback(this.Rule, r);
        }
        function o(e) {
          return this.Raw(e, this.consumeUntilSemicolonIncluded, !0);
        }
        function s() {
          if (this.tokenType === i.Semicolon)
            return o.call(this, this.tokenIndex);
          const e = this.parseWithFallback(this.Declaration, o);
          return this.tokenType === i.Semicolon && this.next(), e;
        }
        const c = "Block",
          l = "block",
          u = { children: [["Atrule", "Rule", "Declaration"]] };
        function p(e) {
          const t = e ? s : a,
            n = this.tokenStart;
          let o = this.createList();
          this.eat(i.LeftCurlyBracket);
          e: for (; !this.eof; )
            switch (this.tokenType) {
              case i.RightCurlyBracket:
                break e;
              case i.WhiteSpace:
              case i.Comment:
                this.next();
                break;
              case i.AtKeyword:
                o.push(this.parseWithFallback(this.Atrule, r));
                break;
              default:
                o.push(t.call(this));
            }
          return (
            this.eof || this.eat(i.RightCurlyBracket),
            {
              type: "Block",
              loc: this.getLocation(n, this.tokenStart),
              children: o,
            }
          );
        }
        function d(e) {
          this.token(i.LeftCurlyBracket, "{"),
            this.children(e, (e) => {
              "Declaration" === e.type && this.token(i.Semicolon, ";");
            }),
            this.token(i.RightCurlyBracket, "}");
        }
      },
      (e, t, n) => {
        "use strict";
        n.r(t),
          n.d(t, {
            name: () => r,
            structure: () => a,
            parse: () => o,
            generate: () => s,
          });
        var i = n(31);
        const r = "Brackets",
          a = { children: [[]] };
        function o(e, t) {
          const n = this.tokenStart;
          let r = null;
          return (
            this.eat(i.LeftSquareBracket),
            (r = e.call(this, t)),
            this.eof || this.eat(i.RightSquareBracket),
            {
              type: "Brackets",
              loc: this.getLocation(n, this.tokenStart),
              children: r,
            }
          );
        }
        function s(e) {
          this.token(i.Delim, "["), this.children(e), this.token(i.Delim, "]");
        }
      },
      (e, t, n) => {
        "use strict";
        n.r(t),
          n.d(t, {
            name: () => r,
            structure: () => a,
            parse: () => o,
            generate: () => s,
          });
        var i = n(31);
        const r = "CDC",
          a = [];
        function o() {
          const e = this.tokenStart;
          return (
            this.eat(i.CDC),
            { type: "CDC", loc: this.getLocation(e, this.tokenStart) }
          );
        }
        function s() {
          this.token(i.CDC, "--\x3e");
        }
      },
      (e, t, n) => {
        "use strict";
        n.r(t),
          n.d(t, {
            name: () => r,
            structure: () => a,
            parse: () => o,
            generate: () => s,
          });
        var i = n(31);
        const r = "CDO",
          a = [];
        function o() {
          const e = this.tokenStart;
          return (
            this.eat(i.CDO),
            { type: "CDO", loc: this.getLocation(e, this.tokenStart) }
          );
        }
        function s() {
          this.token(i.CDO, "\x3c!--");
        }
      },
      (e, t, n) => {
        "use strict";
        n.r(t),
          n.d(t, {
            name: () => a,
            structure: () => o,
            parse: () => s,
            generate: () => c,
          });
        var i = n(31);
        const r = 46,
          a = "ClassSelector",
          o = { name: String };
        function s() {
          return (
            this.eatDelim(r),
            {
              type: "ClassSelector",
              loc: this.getLocation(this.tokenStart - 1, this.tokenEnd),
              name: this.consume(i.Ident),
            }
          );
        }
        function c(e) {
          this.token(i.Delim, "."), this.token(i.Ident, e.name);
        }
      },
      (e, t, n) => {
        "use strict";
        n.r(t),
          n.d(t, {
            name: () => c,
            structure: () => l,
            parse: () => u,
            generate: () => p,
          });
        var i = n(31);
        const r = 43,
          a = 47,
          o = 62,
          s = 126,
          c = "Combinator",
          l = { name: String };
        function u() {
          const e = this.tokenStart;
          let t;
          switch (this.tokenType) {
            case i.WhiteSpace:
              t = " ";
              break;
            case i.Delim:
              switch (this.charCodeAt(this.tokenStart)) {
                case o:
                case r:
                case s:
                  this.next();
                  break;
                case a:
                  this.next(), this.eatIdent("deep"), this.eatDelim(a);
                  break;
                default:
                  this.error("Combinator is expected");
              }
              t = this.substrToCursor(e);
          }
          return {
            type: "Combinator",
            loc: this.getLocation(e, this.tokenStart),
            name: t,
          };
        }
        function p(e) {
          this.tokenize(e.name);
        }
      },
      (e, t, n) => {
        "use strict";
        n.r(t),
          n.d(t, {
            name: () => o,
            structure: () => s,
            parse: () => c,
            generate: () => l,
          });
        var i = n(31);
        const r = 42,
          a = 47,
          o = "Comment",
          s = { value: String };
        function c() {
          const e = this.tokenStart;
          let t = this.tokenEnd;
          return (
            this.eat(i.Comment),
            t - e + 2 >= 2 &&
              this.charCodeAt(t - 2) === r &&
              this.charCodeAt(t - 1) === a &&
              (t -= 2),
            {
              type: "Comment",
              loc: this.getLocation(e, this.tokenStart),
              value: this.substring(e + 2, t),
            }
          );
        }
        function l(e) {
          this.token(i.Comment, "/*" + e.value + "*/");
        }
      },
      (e, t, n) => {
        "use strict";
        n.r(t),
          n.d(t, {
            name: () => f,
            walkContext: () => g,
            structure: () => x,
            parse: () => b,
            generate: () => v,
          });
        var i = n(58),
          r = n(31);
        const a = 33,
          o = 35,
          s = 36,
          c = 38,
          l = 42,
          u = 43,
          p = 47;
        function d(e) {
          return this.Raw(e, this.consumeUntilExclamationMarkOrSemicolon, !0);
        }
        function m(e) {
          return this.Raw(e, this.consumeUntilExclamationMarkOrSemicolon, !1);
        }
        function h() {
          const e = this.tokenIndex,
            t = this.Value();
          return (
            "Raw" !== t.type &&
              !1 === this.eof &&
              this.tokenType !== r.Semicolon &&
              !1 === this.isDelim(a) &&
              !1 === this.isBalanceEdge(e) &&
              this.error(),
            t
          );
        }
        const f = "Declaration",
          g = "declaration",
          x = {
            important: [Boolean, String],
            property: String,
            value: ["Value", "Raw"],
          };
        function b() {
          const e = this.tokenStart,
            t = this.tokenIndex,
            n = k.call(this),
            o = (0, i.isCustomProperty)(n),
            s = o ? this.parseCustomProperty : this.parseValue,
            c = o ? m : d;
          let l,
            u = !1;
          this.skipSC(), this.eat(r.Colon);
          const p = this.tokenIndex;
          if (
            (o || this.skipSC(),
            (l = s
              ? this.parseWithFallback(h, c)
              : c.call(this, this.tokenIndex)),
            o && "Value" === l.type && l.children.isEmpty)
          )
            for (let e = p - this.tokenIndex; e <= 0; e++)
              if (this.lookupType(e) === r.WhiteSpace) {
                l.children.appendData({
                  type: "WhiteSpace",
                  loc: null,
                  value: " ",
                });
                break;
              }
          return (
            this.isDelim(a) && ((u = T.call(this)), this.skipSC()),
            !1 === this.eof &&
              this.tokenType !== r.Semicolon &&
              !1 === this.isBalanceEdge(t) &&
              this.error(),
            {
              type: "Declaration",
              loc: this.getLocation(e, this.tokenStart),
              important: u,
              property: n,
              value: l,
            }
          );
        }
        function v(e) {
          this.token(r.Ident, e.property),
            this.token(r.Colon, ":"),
            this.node(e.value),
            e.important &&
              (this.token(r.Delim, "!"),
              this.token(
                r.Ident,
                !0 === e.important ? "important" : e.important,
              ));
        }
        function k() {
          const e = this.tokenStart;
          if (this.tokenType === r.Delim)
            switch (this.charCodeAt(this.tokenStart)) {
              case l:
              case s:
              case u:
              case o:
              case c:
                this.next();
                break;
              case p:
                this.next(), this.isDelim(p) && this.next();
            }
          return (
            this.tokenType === r.Hash ? this.eat(r.Hash) : this.eat(r.Ident),
            this.substrToCursor(e)
          );
        }
        function T() {
          this.eat(r.Delim), this.skipSC();
          const e = this.consume(r.Ident);
          return "important" === e || e;
        }
      },
      (e, t, n) => {
        "use strict";
        n.r(t),
          n.d(t, {
            name: () => a,
            structure: () => o,
            parse: () => s,
            generate: () => c,
          });
        var i = n(31);
        function r(e) {
          return this.Raw(e, this.consumeUntilSemicolonIncluded, !0);
        }
        const a = "DeclarationList",
          o = { children: [["Declaration"]] };
        function s() {
          const e = this.createList();
          for (; !this.eof; )
            switch (this.tokenType) {
              case i.WhiteSpace:
              case i.Comment:
              case i.Semicolon:
                this.next();
                break;
              default:
                e.push(this.parseWithFallback(this.Declaration, r));
            }
          return {
            type: "DeclarationList",
            loc: this.getLocationFromList(e),
            children: e,
          };
        }
        function c(e) {
          this.children(e, (e) => {
            "Declaration" === e.type && this.token(i.Semicolon, ";");
          });
        }
      },
      (e, t, n) => {
        "use strict";
        n.r(t),
          n.d(t, {
            name: () => r,
            structure: () => a,
            parse: () => o,
            generate: () => s,
          });
        var i = n(31);
        const r = "Dimension",
          a = { value: String, unit: String };
        function o() {
          const e = this.tokenStart,
            t = this.consumeNumber(i.Dimension);
          return {
            type: "Dimension",
            loc: this.getLocation(e, this.tokenStart),
            value: t,
            unit: this.substring(e + t.length, this.tokenStart),
          };
        }
        function s(e) {
          this.token(i.Dimension, e.value + e.unit);
        }
      },
      (e, t, n) => {
        "use strict";
        n.r(t),
          n.d(t, {
            name: () => r,
            walkContext: () => a,
            structure: () => o,
            parse: () => s,
            generate: () => c,
          });
        var i = n(31);
        const r = "Function",
          a = "function",
          o = { name: String, children: [[]] };
        function s(e, t) {
          const n = this.tokenStart,
            r = this.consumeFunctionName(),
            a = r.toLowerCase();
          let o;
          return (
            (o = t.hasOwnProperty(a) ? t[a].call(this, t) : e.call(this, t)),
            this.eof || this.eat(i.RightParenthesis),
            {
              type: "Function",
              loc: this.getLocation(n, this.tokenStart),
              name: r,
              children: o,
            }
          );
        }
        function c(e) {
          this.token(i.Function, e.name + "("),
            this.children(e),
            this.token(i.RightParenthesis, ")");
        }
      },
      (e, t, n) => {
        "use strict";
        n.r(t),
          n.d(t, {
            xxx: () => r,
            name: () => a,
            structure: () => o,
            parse: () => s,
            generate: () => c,
          });
        var i = n(31);
        const r = "XXX",
          a = "Hash",
          o = { value: String };
        function s() {
          const e = this.tokenStart;
          return (
            this.eat(i.Hash),
            {
              type: "Hash",
              loc: this.getLocation(e, this.tokenStart),
              value: this.substrToCursor(e + 1),
            }
          );
        }
        function c(e) {
          this.token(i.Hash, "#" + e.value);
        }
      },
      (e, t, n) => {
        "use strict";
        n.r(t),
          n.d(t, {
            name: () => r,
            structure: () => a,
            parse: () => o,
            generate: () => s,
          });
        var i = n(31);
        const r = "Identifier",
          a = { name: String };
        function o() {
          return {
            type: "Identifier",
            loc: this.getLocation(this.tokenStart, this.tokenEnd),
            name: this.consume(i.Ident),
          };
        }
        function s(e) {
          this.token(i.Ident, e.name);
        }
      },
      (e, t, n) => {
        "use strict";
        n.r(t),
          n.d(t, {
            name: () => r,
            structure: () => a,
            parse: () => o,
            generate: () => s,
          });
        var i = n(31);
        const r = "IdSelector",
          a = { name: String };
        function o() {
          const e = this.tokenStart;
          return (
            this.eat(i.Hash),
            {
              type: "IdSelector",
              loc: this.getLocation(e, this.tokenStart),
              name: this.substrToCursor(e + 1),
            }
          );
        }
        function s(e) {
          this.token(i.Delim, "#" + e.name);
        }
      },
      (e, t, n) => {
        "use strict";
        n.r(t),
          n.d(t, {
            name: () => r,
            structure: () => a,
            parse: () => o,
            generate: () => s,
          });
        var i = n(31);
        const r = "MediaFeature",
          a = {
            name: String,
            value: ["Identifier", "Number", "Dimension", "Ratio", null],
          };
        function o() {
          const e = this.tokenStart;
          let t,
            n = null;
          if (
            (this.eat(i.LeftParenthesis),
            this.skipSC(),
            (t = this.consume(i.Ident)),
            this.skipSC(),
            this.tokenType !== i.RightParenthesis)
          ) {
            switch ((this.eat(i.Colon), this.skipSC(), this.tokenType)) {
              case i.Number:
                n =
                  this.lookupNonWSType(1) === i.Delim
                    ? this.Ratio()
                    : this.Number();
                break;
              case i.Dimension:
                n = this.Dimension();
                break;
              case i.Ident:
                n = this.Identifier();
                break;
              default:
                this.error(
                  "Number, dimension, ratio or identifier is expected",
                );
            }
            this.skipSC();
          }
          return (
            this.eat(i.RightParenthesis),
            {
              type: "MediaFeature",
              loc: this.getLocation(e, this.tokenStart),
              name: t,
              value: n,
            }
          );
        }
        function s(e) {
          this.token(i.LeftParenthesis, "("),
            this.token(i.Ident, e.name),
            null !== e.value && (this.token(i.Colon, ":"), this.node(e.value)),
            this.token(i.RightParenthesis, ")");
        }
      },
      (e, t, n) => {
        "use strict";
        n.r(t),
          n.d(t, {
            name: () => r,
            structure: () => a,
            parse: () => o,
            generate: () => s,
          });
        var i = n(31);
        const r = "MediaQuery",
          a = { children: [["Identifier", "MediaFeature", "WhiteSpace"]] };
        function o() {
          const e = this.createList();
          let t = null;
          this.skipSC();
          e: for (; !this.eof; ) {
            switch (this.tokenType) {
              case i.Comment:
              case i.WhiteSpace:
                this.next();
                continue;
              case i.Ident:
                t = this.Identifier();
                break;
              case i.LeftParenthesis:
                t = this.MediaFeature();
                break;
              default:
                break e;
            }
            e.push(t);
          }
          return (
            null === t && this.error("Identifier or parenthesis is expected"),
            {
              type: "MediaQuery",
              loc: this.getLocationFromList(e),
              children: e,
            }
          );
        }
        function s(e) {
          this.children(e);
        }
      },
      (e, t, n) => {
        "use strict";
        n.r(t),
          n.d(t, {
            name: () => r,
            structure: () => a,
            parse: () => o,
            generate: () => s,
          });
        var i = n(31);
        const r = "MediaQueryList",
          a = { children: [["MediaQuery"]] };
        function o() {
          const e = this.createList();
          for (
            this.skipSC();
            !this.eof &&
            (e.push(this.MediaQuery()), this.tokenType === i.Comma);

          )
            this.next();
          return {
            type: "MediaQueryList",
            loc: this.getLocationFromList(e),
            children: e,
          };
        }
        function s(e) {
          this.children(e, () => this.token(i.Comma, ","));
        }
      },
      (e, t, n) => {
        "use strict";
        n.r(t),
          n.d(t, {
            name: () => r,
            structure: () => a,
            parse: () => o,
            generate: () => s,
          });
        var i = n(31);
        const r = "Nth",
          a = {
            nth: ["AnPlusB", "Identifier"],
            selector: ["SelectorList", null],
          };
        function o() {
          this.skipSC();
          const e = this.tokenStart;
          let t,
            n = e,
            i = null;
          return (
            (t =
              this.lookupValue(0, "odd") || this.lookupValue(0, "even")
                ? this.Identifier()
                : this.AnPlusB()),
            (n = this.tokenStart),
            this.skipSC(),
            this.lookupValue(0, "of") &&
              (this.next(), (i = this.SelectorList()), (n = this.tokenStart)),
            { type: "Nth", loc: this.getLocation(e, n), nth: t, selector: i }
          );
        }
        function s(e) {
          this.node(e.nth),
            null !== e.selector &&
              (this.token(i.Ident, "of"), this.node(e.selector));
        }
      },
      (e, t, n) => {
        "use strict";
        n.r(t),
          n.d(t, {
            name: () => r,
            structure: () => a,
            parse: () => o,
            generate: () => s,
          });
        var i = n(31);
        const r = "Number",
          a = { value: String };
        function o() {
          return {
            type: "Number",
            loc: this.getLocation(this.tokenStart, this.tokenEnd),
            value: this.consume(i.Number),
          };
        }
        function s(e) {
          this.token(i.Number, e.value);
        }
      },
      (e, t, n) => {
        "use strict";
        n.r(t),
          n.d(t, {
            name: () => i,
            structure: () => r,
            parse: () => a,
            generate: () => o,
          });
        const i = "Operator",
          r = { value: String };
        function a() {
          const e = this.tokenStart;
          return (
            this.next(),
            {
              type: "Operator",
              loc: this.getLocation(e, this.tokenStart),
              value: this.substrToCursor(e),
            }
          );
        }
        function o(e) {
          this.tokenize(e.value);
        }
      },
      (e, t, n) => {
        "use strict";
        n.r(t),
          n.d(t, {
            name: () => r,
            structure: () => a,
            parse: () => o,
            generate: () => s,
          });
        var i = n(31);
        const r = "Parentheses",
          a = { children: [[]] };
        function o(e, t) {
          const n = this.tokenStart;
          let r = null;
          return (
            this.eat(i.LeftParenthesis),
            (r = e.call(this, t)),
            this.eof || this.eat(i.RightParenthesis),
            {
              type: "Parentheses",
              loc: this.getLocation(n, this.tokenStart),
              children: r,
            }
          );
        }
        function s(e) {
          this.token(i.LeftParenthesis, "("),
            this.children(e),
            this.token(i.RightParenthesis, ")");
        }
      },
      (e, t, n) => {
        "use strict";
        n.r(t),
          n.d(t, {
            name: () => r,
            structure: () => a,
            parse: () => o,
            generate: () => s,
          });
        var i = n(31);
        const r = "Percentage",
          a = { value: String };
        function o() {
          return {
            type: "Percentage",
            loc: this.getLocation(this.tokenStart, this.tokenEnd),
            value: this.consumeNumber(i.Percentage),
          };
        }
        function s(e) {
          this.token(i.Percentage, e.value + "%");
        }
      },
      (e, t, n) => {
        "use strict";
        n.r(t),
          n.d(t, {
            name: () => r,
            walkContext: () => a,
            structure: () => o,
            parse: () => s,
            generate: () => c,
          });
        var i = n(31);
        const r = "PseudoClassSelector",
          a = "function",
          o = { name: String, children: [["Raw"], null] };
        function s() {
          const e = this.tokenStart;
          let t,
            n,
            r = null;
          return (
            this.eat(i.Colon),
            this.tokenType === i.Function
              ? ((t = this.consumeFunctionName()),
                (n = t.toLowerCase()),
                hasOwnProperty.call(this.pseudo, n)
                  ? (this.skipSC(),
                    (r = this.pseudo[n].call(this)),
                    this.skipSC())
                  : ((r = this.createList()),
                    r.push(this.Raw(this.tokenIndex, null, !1))),
                this.eat(i.RightParenthesis))
              : (t = this.consume(i.Ident)),
            {
              type: "PseudoClassSelector",
              loc: this.getLocation(e, this.tokenStart),
              name: t,
              children: r,
            }
          );
        }
        function c(e) {
          this.token(i.Colon, ":"),
            null === e.children
              ? this.token(i.Ident, e.name)
              : (this.token(i.Function, e.name + "("),
                this.children(e),
                this.token(i.RightParenthesis, ")"));
        }
      },
      (e, t, n) => {
        "use strict";
        n.r(t),
          n.d(t, {
            name: () => r,
            walkContext: () => a,
            structure: () => o,
            parse: () => s,
            generate: () => c,
          });
        var i = n(31);
        const r = "PseudoElementSelector",
          a = "function",
          o = { name: String, children: [["Raw"], null] };
        function s() {
          const e = this.tokenStart;
          let t,
            n,
            r = null;
          return (
            this.eat(i.Colon),
            this.eat(i.Colon),
            this.tokenType === i.Function
              ? ((t = this.consumeFunctionName()),
                (n = t.toLowerCase()),
                hasOwnProperty.call(this.pseudo, n)
                  ? (this.skipSC(),
                    (r = this.pseudo[n].call(this)),
                    this.skipSC())
                  : ((r = this.createList()),
                    r.push(this.Raw(this.tokenIndex, null, !1))),
                this.eat(i.RightParenthesis))
              : (t = this.consume(i.Ident)),
            {
              type: "PseudoElementSelector",
              loc: this.getLocation(e, this.tokenStart),
              name: t,
              children: r,
            }
          );
        }
        function c(e) {
          this.token(i.Colon, ":"),
            this.token(i.Colon, ":"),
            null === e.children
              ? this.token(i.Ident, e.name)
              : (this.token(i.Function, e.name + "("),
                this.children(e),
                this.token(i.RightParenthesis, ")"));
        }
      },
      (e, t, n) => {
        "use strict";
        n.r(t),
          n.d(t, {
            name: () => s,
            structure: () => c,
            parse: () => l,
            generate: () => u,
          });
        var i = n(31);
        const r = 47,
          a = 46;
        function o() {
          this.skipSC();
          const e = this.consume(i.Number);
          for (let t = 0; t < e.length; t++) {
            const n = e.charCodeAt(t);
            (0, i.isDigit)(n) ||
              n === a ||
              this.error(
                "Unsigned number is expected",
                this.tokenStart - e.length + t,
              );
          }
          return (
            0 === Number(e) &&
              this.error(
                "Zero number is not allowed",
                this.tokenStart - e.length,
              ),
            e
          );
        }
        const s = "Ratio",
          c = { left: String, right: String };
        function l() {
          const e = this.tokenStart,
            t = o.call(this);
          let n;
          return (
            this.skipSC(),
            this.eatDelim(r),
            (n = o.call(this)),
            {
              type: "Ratio",
              loc: this.getLocation(e, this.tokenStart),
              left: t,
              right: n,
            }
          );
        }
        function u(e) {
          this.token(i.Number, e.left),
            this.token(i.Delim, "/"),
            this.token(i.Number, e.right);
        }
      },
      (e, t, n) => {
        "use strict";
        n.r(t),
          n.d(t, {
            name: () => a,
            structure: () => o,
            parse: () => s,
            generate: () => c,
          });
        var i = n(31);
        function r() {
          return this.tokenIndex > 0 && this.lookupType(-1) === i.WhiteSpace
            ? this.tokenIndex > 1
              ? this.getTokenStart(this.tokenIndex - 1)
              : this.firstCharOffset
            : this.tokenStart;
        }
        const a = "Raw",
          o = { value: String };
        function s(e, t, n) {
          const i = this.getTokenStart(e);
          let a;
          return (
            this.skipUntilBalanced(e, t || this.consumeUntilBalanceEnd),
            (a = n && this.tokenStart > i ? r.call(this) : this.tokenStart),
            {
              type: "Raw",
              loc: this.getLocation(i, a),
              value: this.substring(i, a),
            }
          );
        }
        function c(e) {
          this.tokenize(e.value);
        }
      },
      (e, t, n) => {
        "use strict";
        n.r(t),
          n.d(t, {
            name: () => o,
            walkContext: () => s,
            structure: () => c,
            parse: () => l,
            generate: () => u,
          });
        var i = n(31);
        function r(e) {
          return this.Raw(e, this.consumeUntilLeftCurlyBracket, !0);
        }
        function a() {
          const e = this.SelectorList();
          return (
            "Raw" !== e.type &&
              !1 === this.eof &&
              this.tokenType !== i.LeftCurlyBracket &&
              this.error(),
            e
          );
        }
        const o = "Rule",
          s = "rule",
          c = { prelude: ["SelectorList", "Raw"], block: ["Block"] };
        function l() {
          const e = this.tokenIndex,
            t = this.tokenStart;
          let n, i;
          return (
            (n = this.parseRulePrelude
              ? this.parseWithFallback(a, r)
              : r.call(this, e)),
            (i = this.Block(!0)),
            {
              type: "Rule",
              loc: this.getLocation(t, this.tokenStart),
              prelude: n,
              block: i,
            }
          );
        }
        function u(e) {
          this.node(e.prelude), this.node(e.block);
        }
      },
      (e, t, n) => {
        "use strict";
        n.r(t),
          n.d(t, {
            name: () => i,
            structure: () => r,
            parse: () => a,
            generate: () => o,
          });
        const i = "Selector",
          r = {
            children: [
              [
                "TypeSelector",
                "IdSelector",
                "ClassSelector",
                "AttributeSelector",
                "PseudoClassSelector",
                "PseudoElementSelector",
                "Combinator",
                "WhiteSpace",
              ],
            ],
          };
        function a() {
          const e = this.readSequence(this.scope.Selector);
          return (
            null === this.getFirstListNode(e) &&
              this.error("Selector is expected"),
            { type: "Selector", loc: this.getLocationFromList(e), children: e }
          );
        }
        function o(e) {
          this.children(e);
        }
      },
      (e, t, n) => {
        "use strict";
        n.r(t),
          n.d(t, {
            name: () => r,
            walkContext: () => a,
            structure: () => o,
            parse: () => s,
            generate: () => c,
          });
        var i = n(31);
        const r = "SelectorList",
          a = "selector",
          o = { children: [["Selector", "Raw"]] };
        function s() {
          const e = this.createList();
          for (
            ;
            !this.eof && (e.push(this.Selector()), this.tokenType === i.Comma);

          )
            this.next();
          return {
            type: "SelectorList",
            loc: this.getLocationFromList(e),
            children: e,
          };
        }
        function c(e) {
          this.children(e, () => this.token(i.Comma, ","));
        }
      },
      (e, t, n) => {
        "use strict";
        n.r(t),
          n.d(t, {
            name: () => a,
            structure: () => o,
            parse: () => s,
            generate: () => c,
          });
        var i = n(31),
          r = n(111);
        const a = "String",
          o = { value: String };
        function s() {
          return {
            type: "String",
            loc: this.getLocation(this.tokenStart, this.tokenEnd),
            value: (0, r.decode)(this.consume(i.String)),
          };
        }
        function c(e) {
          this.token(i.String, (0, r.encode)(e.value));
        }
      },
      (e, t, n) => {
        "use strict";
        n.r(t), n.d(t, { decode: () => s, encode: () => c });
        var i = n(31);
        const r = 92,
          a = 34,
          o = 39;
        function s(e) {
          const t = e.length,
            n = e.charCodeAt(0),
            s = n === a || n === o ? 1 : 0,
            c = 1 === s && t > 1 && e.charCodeAt(t - 1) === n ? t - 2 : t - 1;
          let l = "";
          for (let n = s; n <= c; n++) {
            let a = e.charCodeAt(n);
            if (a === r) {
              if (n === c) {
                n !== t - 1 && (l = e.substr(n + 1));
                break;
              }
              if (((a = e.charCodeAt(++n)), (0, i.isValidEscape)(r, a))) {
                const t = n - 1,
                  r = (0, i.consumeEscaped)(e, t);
                (n = r - 1), (l += (0, i.decodeEscaped)(e.substring(t + 1, r)));
              } else 13 === a && 10 === e.charCodeAt(n + 1) && n++;
            } else l += e[n];
          }
          return l;
        }
        function c(e, t) {
          const n = t ? "'" : '"',
            s = t ? o : a;
          let c = "",
            l = !1;
          for (let t = 0; t < e.length; t++) {
            const n = e.charCodeAt(t);
            0 !== n
              ? n <= 31 || 127 === n
                ? ((c += "\\" + n.toString(16)), (l = !0))
                : n === s || n === r
                  ? ((c += "\\" + e.charAt(t)), (l = !1))
                  : (l &&
                      ((0, i.isHexDigit)(n) || (0, i.isWhiteSpace)(n)) &&
                      (c += " "),
                    (c += e.charAt(t)),
                    (l = !1))
              : (c += "�");
          }
          return n + c + n;
        }
      },
      (e, t, n) => {
        "use strict";
        n.r(t),
          n.d(t, {
            name: () => o,
            walkContext: () => s,
            structure: () => c,
            parse: () => l,
            generate: () => u,
          });
        var i = n(31);
        const r = 33;
        function a(e) {
          return this.Raw(e, null, !1);
        }
        const o = "StyleSheet",
          s = "stylesheet",
          c = {
            children: [["Comment", "CDO", "CDC", "Atrule", "Rule", "Raw"]],
          };
        function l() {
          const e = this.tokenStart,
            t = this.createList();
          let n;
          for (; !this.eof; ) {
            switch (this.tokenType) {
              case i.WhiteSpace:
                this.next();
                continue;
              case i.Comment:
                if (this.charCodeAt(this.tokenStart + 2) !== r) {
                  this.next();
                  continue;
                }
                n = this.Comment();
                break;
              case i.CDO:
                n = this.CDO();
                break;
              case i.CDC:
                n = this.CDC();
                break;
              case i.AtKeyword:
                n = this.parseWithFallback(this.Atrule, a);
                break;
              default:
                n = this.parseWithFallback(this.Rule, a);
            }
            t.push(n);
          }
          return {
            type: "StyleSheet",
            loc: this.getLocation(e, this.tokenStart),
            children: t,
          };
        }
        function u(e) {
          this.children(e);
        }
      },
      (e, t, n) => {
        "use strict";
        n.r(t),
          n.d(t, {
            name: () => s,
            structure: () => c,
            parse: () => l,
            generate: () => u,
          });
        var i = n(31);
        const r = 42,
          a = 124;
        function o() {
          this.tokenType !== i.Ident &&
            !1 === this.isDelim(r) &&
            this.error("Identifier or asterisk is expected"),
            this.next();
        }
        const s = "TypeSelector",
          c = { name: String };
        function l() {
          const e = this.tokenStart;
          return (
            this.isDelim(a)
              ? (this.next(), o.call(this))
              : (o.call(this), this.isDelim(a) && (this.next(), o.call(this))),
            {
              type: "TypeSelector",
              loc: this.getLocation(e, this.tokenStart),
              name: this.substrToCursor(e),
            }
          );
        }
        function u(e) {
          this.tokenize(e.name);
        }
      },
      (e, t, n) => {
        "use strict";
        n.r(t),
          n.d(t, {
            name: () => p,
            structure: () => d,
            parse: () => m,
            generate: () => h,
          });
        var i = n(31);
        const r = 43,
          a = 45,
          o = 63;
        function s(e, t) {
          let n = 0;
          for (let r = this.tokenStart + e; r < this.tokenEnd; r++) {
            const o = this.charCodeAt(r);
            if (o === a && t && 0 !== n) return s.call(this, e + n + 1, !1), -1;
            (0, i.isHexDigit)(o) ||
              this.error(
                t && 0 !== n
                  ? "Hyphen minus" +
                      (n < 6 ? " or hex digit" : "") +
                      " is expected"
                  : n < 6
                    ? "Hex digit is expected"
                    : "Unexpected input",
                r,
              ),
              ++n > 6 && this.error("Too many hex digits", r);
          }
          return this.next(), n;
        }
        function c(e) {
          let t = 0;
          for (; this.isDelim(o); )
            ++t > e && this.error("Too many question marks"), this.next();
        }
        function l(e) {
          this.charCodeAt(this.tokenStart) !== e &&
            this.error(
              (e === r ? "Plus sign" : "Hyphen minus") + " is expected",
            );
        }
        function u() {
          let e = 0;
          switch (this.tokenType) {
            case i.Number:
              if (((e = s.call(this, 1, !0)), this.isDelim(o))) {
                c.call(this, 6 - e);
                break;
              }
              if (
                this.tokenType === i.Dimension ||
                this.tokenType === i.Number
              ) {
                l.call(this, a), s.call(this, 1, !1);
                break;
              }
              break;
            case i.Dimension:
              (e = s.call(this, 1, !0)), e > 0 && c.call(this, 6 - e);
              break;
            default:
              if ((this.eatDelim(r), this.tokenType === i.Ident)) {
                (e = s.call(this, 0, !0)), e > 0 && c.call(this, 6 - e);
                break;
              }
              if (this.isDelim(o)) {
                this.next(), c.call(this, 5);
                break;
              }
              this.error("Hex digit or question mark is expected");
          }
        }
        const p = "UnicodeRange",
          d = { value: String };
        function m() {
          const e = this.tokenStart;
          return (
            this.eatIdent("u"),
            u.call(this),
            {
              type: "UnicodeRange",
              loc: this.getLocation(e, this.tokenStart),
              value: this.substrToCursor(e),
            }
          );
        }
        function h(e) {
          this.tokenize(e.value);
        }
      },
      (e, t, n) => {
        "use strict";
        n.r(t),
          n.d(t, {
            name: () => o,
            structure: () => s,
            parse: () => c,
            generate: () => l,
          });
        var i = n(116),
          r = n(111),
          a = n(31);
        const o = "Url",
          s = { value: String };
        function c() {
          const e = this.tokenStart;
          let t;
          switch (this.tokenType) {
            case a.Url:
              t = i.decode(this.consume(a.Url));
              break;
            case a.Function:
              this.cmpStr(this.tokenStart, this.tokenEnd, "url(") ||
                this.error("Function name must be `url`"),
                this.eat(a.Function),
                this.skipSC(),
                (t = r.decode(this.consume(a.String))),
                this.skipSC(),
                this.eof || this.eat(a.RightParenthesis);
              break;
            default:
              this.error("Url or Function is expected");
          }
          return {
            type: "Url",
            loc: this.getLocation(e, this.tokenStart),
            value: t,
          };
        }
        function l(e) {
          this.token(a.Url, i.encode(e.value));
        }
      },
      (e, t, n) => {
        "use strict";
        n.r(t), n.d(t, { decode: () => u, encode: () => p });
        var i = n(31);
        const r = 32,
          a = 92,
          o = 34,
          s = 39,
          c = 40,
          l = 41;
        function u(e) {
          const t = e.length;
          let n = 4,
            r = e.charCodeAt(t - 1) === l ? t - 2 : t - 1,
            o = "";
          for (; n < r && (0, i.isWhiteSpace)(e.charCodeAt(n)); ) n++;
          for (; n < r && (0, i.isWhiteSpace)(e.charCodeAt(r)); ) r--;
          for (let s = n; s <= r; s++) {
            let n = e.charCodeAt(s);
            if (n === a) {
              if (s === r) {
                s !== t - 1 && (o = e.substr(s + 1));
                break;
              }
              if (((n = e.charCodeAt(++s)), (0, i.isValidEscape)(a, n))) {
                const t = s - 1,
                  n = (0, i.consumeEscaped)(e, t);
                (s = n - 1), (o += (0, i.decodeEscaped)(e.substring(t + 1, n)));
              } else 13 === n && 10 === e.charCodeAt(s + 1) && s++;
            } else o += e[s];
          }
          return o;
        }
        function p(e) {
          let t = "",
            n = !1;
          for (let u = 0; u < e.length; u++) {
            const p = e.charCodeAt(u);
            0 !== p
              ? p <= 31 || 127 === p
                ? ((t += "\\" + p.toString(16)), (n = !0))
                : p === r || p === a || p === o || p === s || p === c || p === l
                  ? ((t += "\\" + e.charAt(u)), (n = !1))
                  : (n && (0, i.isHexDigit)(p) && (t += " "),
                    (t += e.charAt(u)),
                    (n = !1))
              : (t += "�");
          }
          return "url(" + t + ")";
        }
      },
      (e, t, n) => {
        "use strict";
        n.r(t),
          n.d(t, {
            name: () => i,
            structure: () => r,
            parse: () => a,
            generate: () => o,
          });
        const i = "Value",
          r = { children: [[]] };
        function a() {
          const e = this.tokenStart,
            t = this.readSequence(this.scope.Value);
          return {
            type: "Value",
            loc: this.getLocation(e, this.tokenStart),
            children: t,
          };
        }
        function o(e) {
          this.children(e);
        }
      },
      (e, t, n) => {
        "use strict";
        n.r(t),
          n.d(t, {
            name: () => a,
            structure: () => o,
            parse: () => s,
            generate: () => c,
          });
        var i = n(31);
        const r = Object.freeze({ type: "WhiteSpace", loc: null, value: " " }),
          a = "WhiteSpace",
          o = { value: String };
        function s() {
          return this.eat(i.WhiteSpace), r;
        }
        function c(e) {
          this.token(i.WhiteSpace, e.value);
        }
      },
      (e, t, n) => {
        "use strict";
        n.r(t), n.d(t, { default: () => s });
        var i = n(120),
          r = n(127),
          a = n(133),
          o = n(76);
        const s = {
          parseContext: {
            default: "StyleSheet",
            stylesheet: "StyleSheet",
            atrule: "Atrule",
            atrulePrelude: function (e) {
              return this.AtrulePrelude(e.atrule ? String(e.atrule) : null);
            },
            mediaQueryList: "MediaQueryList",
            mediaQuery: "MediaQuery",
            rule: "Rule",
            selectorList: "SelectorList",
            selector: "Selector",
            block: function () {
              return this.Block(!0);
            },
            declarationList: "DeclarationList",
            declaration: "Declaration",
            value: "Value",
          },
          scope: i,
          atrule: r.default,
          pseudo: a.default,
          node: o,
        };
      },
      (e, t, n) => {
        "use strict";
        n.r(t),
          n.d(t, {
            AtrulePrelude: () => i.default,
            Selector: () => r.default,
            Value: () => a.default,
          });
        var i = n(121),
          r = n(123),
          a = n(124);
      },
      (e, t, n) => {
        "use strict";
        n.r(t), n.d(t, { default: () => i });
        const i = { getNode: n(122).default };
      },
      (e, t, n) => {
        "use strict";
        n.r(t), n.d(t, { default: () => u });
        var i = n(31);
        const r = 35,
          a = 42,
          o = 43,
          s = 45,
          c = 47,
          l = 117;
        function u(e) {
          switch (this.tokenType) {
            case i.Hash:
              return this.Hash();
            case i.Comma:
              return this.Operator();
            case i.LeftParenthesis:
              return this.Parentheses(this.readSequence, e.recognizer);
            case i.LeftSquareBracket:
              return this.Brackets(this.readSequence, e.recognizer);
            case i.String:
              return this.String();
            case i.Dimension:
              return this.Dimension();
            case i.Percentage:
              return this.Percentage();
            case i.Number:
              return this.Number();
            case i.Function:
              return this.cmpStr(this.tokenStart, this.tokenEnd, "url(")
                ? this.Url()
                : this.Function(this.readSequence, e.recognizer);
            case i.Url:
              return this.Url();
            case i.Ident:
              return this.cmpChar(this.tokenStart, l) &&
                this.cmpChar(this.tokenStart + 1, o)
                ? this.UnicodeRange()
                : this.Identifier();
            case i.Delim: {
              const e = this.charCodeAt(this.tokenStart);
              if (e === c || e === a || e === o || e === s)
                return this.Operator();
              e === r &&
                this.error(
                  "Hex or identifier is expected",
                  this.tokenStart + 1,
                );
              break;
            }
          }
        }
      },
      (e, t, n) => {
        "use strict";
        n.r(t), n.d(t, { default: () => r });
        var i = n(31);
        const r = {
          onWhiteSpace: function (e, t) {
            null !== t.last &&
              "Combinator" !== t.last.type &&
              null !== e &&
              "Combinator" !== e.type &&
              t.push({ type: "Combinator", loc: null, name: " " });
          },
          getNode: function () {
            switch (this.tokenType) {
              case i.LeftSquareBracket:
                return this.AttributeSelector();
              case i.Hash:
                return this.IdSelector();
              case i.Colon:
                return this.lookupType(1) === i.Colon
                  ? this.PseudoElementSelector()
                  : this.PseudoClassSelector();
              case i.Ident:
                return this.TypeSelector();
              case i.Number:
              case i.Percentage:
                return this.Percentage();
              case i.Dimension:
                46 === this.charCodeAt(this.tokenStart) &&
                  this.error("Identifier is expected", this.tokenStart + 1);
                break;
              case i.Delim:
                switch (this.charCodeAt(this.tokenStart)) {
                  case 43:
                  case 62:
                  case 126:
                  case 47:
                    return this.Combinator();
                  case 46:
                    return this.ClassSelector();
                  case 42:
                  case 124:
                    return this.TypeSelector();
                  case 35:
                    return this.IdSelector();
                }
                break;
            }
          },
        };
      },
      (e, t, n) => {
        "use strict";
        n.r(t), n.d(t, { default: () => s });
        var i = n(122),
          r = n(125),
          a = n(126);
        function o(e) {
          return (
            null !== e &&
            "Operator" === e.type &&
            ("-" === e.value[e.value.length - 1] ||
              "+" === e.value[e.value.length - 1])
          );
        }
        const s = {
          getNode: i.default,
          onWhiteSpace: function (e, t) {
            o(e) && (e.value = " " + e.value),
              o(t.last) && (t.last.value += " ");
          },
          expression: r.default,
          var: a.default,
        };
      },
      (e, t, n) => {
        "use strict";
        function i() {
          return this.createSingleNodeList(this.Raw(this.tokenIndex, null, !1));
        }
        n.r(t), n.d(t, { default: () => i });
      },
      (e, t, n) => {
        "use strict";
        n.r(t), n.d(t, { default: () => r });
        var i = n(31);
        function r() {
          const e = this.createList();
          if (
            (this.skipSC(),
            e.push(this.Identifier()),
            this.skipSC(),
            this.tokenType === i.Comma)
          ) {
            e.push(this.Operator());
            const t = this.tokenIndex,
              n = this.parseCustomProperty
                ? this.Value(null)
                : this.Raw(
                    this.tokenIndex,
                    this.consumeUntilExclamationMarkOrSemicolon,
                    !1,
                  );
            if ("Value" === n.type && n.children.isEmpty)
              for (let e = t - this.tokenIndex; e <= 0; e++)
                if (this.lookupType(e) === i.WhiteSpace) {
                  n.children.appendData({
                    type: "WhiteSpace",
                    loc: null,
                    value: " ",
                  });
                  break;
                }
            e.push(n);
          }
          return e;
        }
      },
      (e, t, n) => {
        "use strict";
        n.r(t), n.d(t, { default: () => c });
        var i = n(128),
          r = n(129),
          a = n(130),
          o = n(131),
          s = n(132);
        const c = {
          "font-face": i.default,
          import: r.default,
          media: a.default,
          page: o.default,
          supports: s.default,
        };
      },
      (e, t, n) => {
        "use strict";
        n.r(t), n.d(t, { default: () => i });
        const i = {
          parse: {
            prelude: null,
            block() {
              return this.Block(!0);
            },
          },
        };
      },
      (e, t, n) => {
        "use strict";
        n.r(t), n.d(t, { default: () => r });
        var i = n(31);
        const r = {
          parse: {
            prelude() {
              const e = this.createList();
              switch ((this.skipSC(), this.tokenType)) {
                case i.String:
                  e.push(this.String());
                  break;
                case i.Url:
                case i.Function:
                  e.push(this.Url());
                  break;
                default:
                  this.error("String or url() is expected");
              }
              return (
                (this.lookupNonWSType(0) !== i.Ident &&
                  this.lookupNonWSType(0) !== i.LeftParenthesis) ||
                  e.push(this.MediaQueryList()),
                e
              );
            },
            block: null,
          },
        };
      },
      (e, t, n) => {
        "use strict";
        n.r(t), n.d(t, { default: () => i });
        const i = {
          parse: {
            prelude() {
              return this.createSingleNodeList(this.MediaQueryList());
            },
            block() {
              return this.Block(!1);
            },
          },
        };
      },
      (e, t, n) => {
        "use strict";
        n.r(t), n.d(t, { default: () => i });
        const i = {
          parse: {
            prelude() {
              return this.createSingleNodeList(this.SelectorList());
            },
            block() {
              return this.Block(!0);
            },
          },
        };
      },
      (e, t, n) => {
        "use strict";
        n.r(t), n.d(t, { default: () => s });
        var i = n(31);
        function r() {
          return this.createSingleNodeList(this.Raw(this.tokenIndex, null, !1));
        }
        function a() {
          return (
            this.skipSC(),
            this.tokenType === i.Ident && this.lookupNonWSType(1) === i.Colon
              ? this.createSingleNodeList(this.Declaration())
              : o.call(this)
          );
        }
        function o() {
          const e = this.createList();
          let t;
          this.skipSC();
          e: for (; !this.eof; ) {
            switch (this.tokenType) {
              case i.Comment:
              case i.WhiteSpace:
                this.next();
                continue;
              case i.Function:
                t = this.Function(r, this.scope.AtrulePrelude);
                break;
              case i.Ident:
                t = this.Identifier();
                break;
              case i.LeftParenthesis:
                t = this.Parentheses(a, this.scope.AtrulePrelude);
                break;
              default:
                break e;
            }
            e.push(t);
          }
          return e;
        }
        const s = {
          parse: {
            prelude() {
              const e = o.call(this);
              return (
                null === this.getFirstListNode(e) &&
                  this.error("Condition is expected"),
                e
              );
            },
            block() {
              return this.Block(!1);
            },
          },
        };
      },
      (e, t, n) => {
        "use strict";
        n.r(t), n.d(t, { default: () => o });
        const i = {
            parse() {
              return this.createSingleNodeList(this.SelectorList());
            },
          },
          r = {
            parse() {
              return this.createSingleNodeList(this.Identifier());
            },
          },
          a = {
            parse() {
              return this.createSingleNodeList(this.Nth());
            },
          },
          o = {
            dir: r,
            has: i,
            lang: r,
            matches: i,
            not: i,
            "nth-child": a,
            "nth-last-child": a,
            "nth-last-of-type": a,
            "nth-of-type": a,
            slotted: {
              parse() {
                return this.createSingleNodeList(this.Selector());
              },
            },
          };
      },
      (e, t, n) => {
        "use strict";
        n.r(t), n.d(t, { default: () => i });
        const i = { node: n(76) };
      },
      (e, t, n) => {
        "use strict";
        n.r(t), n.d(t, { version: () => i });
        const i = "2.0.4";
      },
      (e, t, n) => {
        "use strict";
        n.r(t), n.d(t, { clone: () => r });
        var i = n(40);
        function r(e) {
          const t = {};
          for (const n in e) {
            let a = e[n];
            a &&
              (Array.isArray(a) || a instanceof i.List
                ? (a = a.map(r))
                : a.constructor === Object && (a = r(a))),
              (t[n] = a);
          }
          return t;
        }
      },
      (e, t, n) => {
        "use strict";
        n.r(t), n.d(t, { decode: () => a, encode: () => o });
        var i = n(31);
        const r = 92;
        function a(e) {
          const t = e.length - 1;
          let n = "";
          for (let a = 0; a < e.length; a++) {
            let o = e.charCodeAt(a);
            if (o === r) {
              if (a === t) break;
              if (((o = e.charCodeAt(++a)), (0, i.isValidEscape)(r, o))) {
                const t = a - 1,
                  r = (0, i.consumeEscaped)(e, t);
                (a = r - 1), (n += (0, i.decodeEscaped)(e.substring(t + 1, r)));
              } else 13 === o && 10 === e.charCodeAt(a + 1) && a++;
            } else n += e[a];
          }
          return n;
        }
        function o(e) {
          let t = "";
          if (1 === e.length && 45 === e.charCodeAt(0)) return "\\-";
          for (let n = 0; n < e.length; n++) {
            const r = e.charCodeAt(n);
            0 !== r
              ? r <= 31 ||
                127 === r ||
                (r >= 48 &&
                  r <= 57 &&
                  (0 === n || (1 === n && 45 === e.charCodeAt(0))))
                ? (t += "\\" + r.toString(16) + " ")
                : (0, i.isName)(r)
                  ? (t += e.charAt(n))
                  : (t += "\\" + e.charAt(n))
              : (t += "�");
          }
          return t;
        }
      },
      (e, t, n) => {
        "use strict";
        n.r(t), n.d(t, { default: () => i });
        const i = (function (e) {
          const t = {
              attribute:
                /\[\s*(?:(?<namespace>\*|[-\w]*)\|)?(?<name>[-\w\u{0080}-\u{FFFF}]+)\s*(?:(?<operator>\W?=)\s*(?<value>.+?)\s*(?<caseSensitive>[iIsS])?\s*)?\]/gu,
              id: /#(?<name>(?:[-\w\u{0080}-\u{FFFF}]|\\.)+)/gu,
              class: /\.(?<name>(?:[-\w\u{0080}-\u{FFFF}]|\\.)+)/gu,
              comma: /\s*,\s*/g,
              combinator: /\s*[\s>+~]\s*/g,
              "pseudo-element":
                /::(?<name>[-\w\u{0080}-\u{FFFF}]+)(?:\((?<argument>¶+)\))?/gu,
              "pseudo-class":
                /:(?<name>[-\w\u{0080}-\u{FFFF}]+)(?:\((?<argument>¶+)\))?/gu,
              type: /(?:(?<namespace>\*|[-\w]*)\|)?(?<name>[-\w\u{0080}-\u{FFFF}]+)|\*/gu,
            },
            n = new Set(["pseudo-class", "pseudo-element"]),
            i = new Set([...n, "attribute"]),
            r = new Set(["combinator", "comma"]),
            a = new Set([
              "not",
              "is",
              "where",
              "has",
              "matches",
              "-moz-any",
              "-webkit-any",
              "nth-child",
              "nth-last-child",
            ]),
            o = { "nth-child": /(?<index>[\dn+-]+)\s+of\s+(?<subtree>.+)/ };
          a["nth-last-child"] = o["nth-child"];
          const s = Object.assign({}, t);
          function c(e, t) {
            let n = "",
              i = [];
            for (; t < e.length; t++) {
              let r = e[t];
              if ("(" === r) i.push(r);
              else if (")" === r) {
                if (!(i.length > 0))
                  throw new Error(
                    "Closing paren without opening paren at " + t,
                  );
                i.pop();
              }
              if (((n += r), 0 === i.length)) return n;
            }
            throw new Error("Opening paren without closing paren");
          }
          function l(e, t) {
            if (!e) return [];
            var n = [e];
            for (var i in t) {
              let e = t[i];
              for (var a = 0; a < n.length; a++) {
                var o = n[a];
                if ("string" == typeof o) {
                  e.lastIndex = 0;
                  var s = e.exec(o);
                  if (s) {
                    let e = s.index - 1,
                      t = [],
                      r = s[0],
                      c = o.slice(0, e + 1);
                    c && t.push(c),
                      t.push({ type: i, content: r, ...s.groups });
                    let l = o.slice(e + r.length + 1);
                    l && t.push(l), n.splice(a, 1, ...t);
                  }
                }
              }
            }
            let c = 0;
            for (let e = 0; e < n.length; e++) {
              let t = n[e],
                i = t.length || t.content.length;
              "object" == typeof t &&
                ((t.pos = [c, c + i]),
                r.has(t.type) && (t.content = t.content.trim() || " ")),
                (c += i);
            }
            return n;
          }
          function u(e) {
            if (!e) return null;
            e = e.trim();
            let r = [];
            e = e.replace(
              /(['"])(\\\1|.)+?\1/g,
              (e, t, n, i) => (
                r.push({ str: e, start: i }), t + "§".repeat(n.length) + t
              ),
            );
            let a,
              o = [],
              u = 0;
            for (; (a = e.indexOf("(", u)) > -1; ) {
              let t = c(e, a);
              o.push({ str: t, start: a }),
                (e =
                  e.substring(0, a) +
                  "(" +
                  "¶".repeat(t.length - 2) +
                  ")" +
                  e.substring(a + t.length)),
                (u = a + t.length);
            }
            let p = l(e, t);
            function d(e, t, n) {
              for (let i of e)
                for (let e of p)
                  if (
                    n.has(e.type) &&
                    e.pos[0] < i.start &&
                    i.start < e.pos[1]
                  ) {
                    let n = e.content;
                    if (
                      ((e.content = e.content.replace(t, i.str)),
                      e.content !== n)
                    ) {
                      s[e.type].lastIndex = 0;
                      let t = s[e.type].exec(e.content).groups;
                      Object.assign(e, t);
                    }
                  }
            }
            return d(o, /\(¶+\)/, n), d(r, /(['"])§+?\1/, i), p;
          }
          function p(e, { list: t = !0 } = {}) {
            if (t && e.find((e) => "comma" === e.type)) {
              let t = [],
                n = [];
              for (let i = 0; i < e.length; i++)
                if ("comma" === e[i].type) {
                  if (0 === n.length)
                    throw new Error("Incorrect comma at " + i);
                  t.push(p(n, { list: !1 })), (n.length = 0);
                } else n.push(e[i]);
              if (0 === n.length) throw new Error("Trailing comma");
              return t.push(p(n, { list: !1 })), { type: "list", list: t };
            }
            for (let t = e.length - 1; t >= 0; t--) {
              let n = e[t];
              if ("combinator" === n.type) {
                let i = e.slice(0, t),
                  r = e.slice(t + 1);
                return {
                  type: "complex",
                  combinator: n.content,
                  left: p(i),
                  right: p(r),
                };
              }
            }
            return 0 === e.length
              ? null
              : 1 === e.length
                ? e[0]
                : { type: "compound", list: [...e] };
          }
          function d(e, t, n, i) {
            if (e) {
              if ("complex" === e.type) d(e.left, t, n, e), d(e.right, t, n, e);
              else if ("compound" === e.type)
                for (let i of e.list) d(i, t, n, e);
              else e.subtree && n && n.subtree && d(e.subtree, t, n, e);
              t(e, i);
            }
          }
          function m(e, { recursive: t = !0, list: n = !0 } = {}) {
            let i = u(e);
            if (!i) return null;
            let r = p(i, { list: n });
            return (
              t &&
                d(r, (e) => {
                  if (
                    "pseudo-class" === e.type &&
                    e.argument &&
                    a.has(e.name)
                  ) {
                    let t = e.argument;
                    const n = o[e.name];
                    if (n) {
                      const i = n.exec(t);
                      if (!i) return;
                      Object.assign(e, i.groups), (t = i.groups.subtree);
                    }
                    t && (e.subtree = m(t, { recursive: !0, list: !0 }));
                  }
                }),
              r
            );
          }
          function h(e, t) {
            return (
              (t = t || Math.max(...e) + 1), e[0] * t ** 2 + e[1] * t + e[2]
            );
          }
          return (
            (s["pseudo-element"] = RegExp(
              t["pseudo-element"].source.replace(
                "(?<argument>¶+)",
                "(?<argument>.+?)",
              ),
              "gu",
            )),
            (s["pseudo-class"] = RegExp(
              t["pseudo-class"].source.replace(
                "(?<argument>¶+)",
                "(?<argument>.+)",
              ),
              "gu",
            )),
            (e.RECURSIVE_PSEUDO_CLASSES = a),
            (e.RECURSIVE_PSEUDO_CLASSES_ARGS = o),
            (e.TOKENS = t),
            (e.TRIM_TOKENS = r),
            (e.gobbleParens = c),
            (e.nestTokens = p),
            (e.parse = m),
            (e.specificity = function e(t, { format: n = "array" } = {}) {
              let i = "object" == typeof t ? t : m(t, { recursive: !0 });
              if (!i) return null;
              if ("list" === i.type) {
                let t = 10,
                  n = i.list.map((n) => {
                    let i = e(n);
                    return (t = Math.max(t, ...i)), i;
                  }),
                  r = (function (e) {
                    let t = e[0],
                      n = 0;
                    for (let i = 0; i < e.length; i++)
                      e[i] > t && ((n = i), (t = e[i]));
                    return 0 === e.length ? -1 : n;
                  })(n.map((e) => h(e, t)));
                return n[r];
              }
              let r = [0, 0, 0];
              return (
                d(i, (t) => {
                  if ("id" === t.type) r[0]++;
                  else if ("class" === t.type || "attribute" === t.type) r[1]++;
                  else if (
                    ("type" === t.type && "*" !== t.content) ||
                    "pseudo-element" === t.type
                  )
                    r[2]++;
                  else if ("pseudo-class" === t.type && "where" !== t.name)
                    if (a.has(t.name) && t.subtree) {
                      e(t.subtree).forEach((e, t) => (r[t] += e));
                    } else r[1]++;
                }),
                r
              );
            }),
            (e.specificityToNumber = h),
            (e.tokenize = u),
            (e.tokenizeBy = l),
            (e.walk = d),
            Object.defineProperty(e, "__esModule", { value: !0 }),
            e
          );
        })({});
      },
      (e, t, n) => {
        "use strict";
        n.r(t), n.d(t, { default: () => s });
        var i = n(140),
          r = n(141),
          a = n(2);
        class o extends a.default {
          constructor() {
            super(),
              (this.parseOptions = {
                ranges: !0,
                module: !0,
                globalReturn: !0,
              }),
              (this.generationOptions = {
                format: { quotes: "double", escapeless: !0, compact: !0 },
              }),
              (this.parse = i.parseScript),
              (this.generate = r.generate);
          }
          rewrite(e, t = {}) {
            return this.recast(e, t, "rewrite");
          }
          source(e, t = {}) {
            return this.recast(e, t, "source");
          }
          recast(e, t = {}, n = "") {
            try {
              const i = [],
                a = this.parse(e, this.parseOptions),
                o = {
                  data: t,
                  changes: [],
                  input: e,
                  ast: a,
                  get slice() {
                    return s;
                  },
                };
              let s = 0;
              this.iterate(a, (e, t = null) => {
                t && t.inTransformer && (e.isTransformer = !0),
                  (e.parent = t),
                  this.emit(e.type, e, o, n);
              }),
                o.changes.sort((e, t) => e.start - t.start || e.end - t.end);
              for (const t of o.changes)
                "start" in t &&
                  "number" == typeof t.start &&
                  i.push(e.slice(s, t.start)),
                  t.node &&
                    i.push(
                      "string" == typeof t.node
                        ? t.node
                        : (0, r.generate)(t.node, this.generationOptions),
                    ),
                  "end" in t && "number" == typeof t.end && (s = t.end);
              return i.push(e.slice(s)), i.join("");
            } catch (t) {
              return e;
            }
          }
          iterate(e, t) {
            "object" == typeof e &&
              t &&
              (function e(t, n, i) {
                if ("object" != typeof t || !i) return;
                i(t, n, i);
                for (const n in t)
                  "parent" !== n &&
                    (Array.isArray(t[n])
                      ? t[n].forEach((n) => {
                          n && e(n, t, i);
                        })
                      : t[n] && e(t[n], t, i));
                "function" == typeof t.iterateEnd && t.iterateEnd();
              })(e, null, t);
          }
        }
        const s = o;
      },
      (e, t, n) => {
        "use strict";
        n.r(t),
          n.d(t, {
            ESTree: () => zt,
            parse: () => Vt,
            parseModule: () => Kt,
            parseScript: () => Gt,
            version: () => qt,
          });
        const i = {
          0: "Unexpected token",
          28: "Unexpected token: '%0'",
          1: "Octal escape sequences are not allowed in strict mode",
          2: "Octal escape sequences are not allowed in template strings",
          3: "Unexpected token `#`",
          4: "Illegal Unicode escape sequence",
          5: "Invalid code point %0",
          6: "Invalid hexadecimal escape sequence",
          8: "Octal literals are not allowed in strict mode",
          7: "Decimal integer literals with a leading zero are forbidden in strict mode",
          9: "Expected number in radix %0",
          145: "Invalid left-hand side assignment to a destructible right-hand side",
          10: "Non-number found after exponent indicator",
          11: "Invalid BigIntLiteral",
          12: "No identifiers allowed directly after numeric literal",
          13: "Escapes \\8 or \\9 are not syntactically valid escapes",
          14: "Unterminated string literal",
          15: "Unterminated template literal",
          16: "Multiline comment was not closed properly",
          17: "The identifier contained dynamic unicode escape that was not closed",
          18: "Illegal character '%0'",
          19: "Missing hexadecimal digits",
          20: "Invalid implicit octal",
          21: "Invalid line break in string literal",
          22: "Only unicode escapes are legal in identifier names",
          23: "Expected '%0'",
          24: "Invalid left-hand side in assignment",
          25: "Invalid left-hand side in async arrow",
          26: 'Calls to super must be in the "constructor" method of a class expression or class declaration that has a superclass',
          27: "Member access on super must be in a method",
          29: "Await expression not allowed in formal parameter",
          30: "Yield expression not allowed in formal parameter",
          92: "Unexpected token: 'escaped keyword'",
          31: "Unary expressions as the left operand of an exponentiation expression must be disambiguated with parentheses",
          119: "Async functions can only be declared at the top level or inside a block",
          32: "Unterminated regular expression",
          33: "Unexpected regular expression flag",
          34: "Duplicate regular expression flag '%0'",
          35: "%0 functions must have exactly %1 argument%2",
          36: "Setter function argument must not be a rest parameter",
          37: "%0 declaration must have a name in this context",
          38: "Function name may not contain any reserved words or be eval or arguments in strict mode",
          39: "The rest operator is missing an argument",
          40: "A getter cannot be a generator",
          41: "A computed property name must be followed by a colon or paren",
          130: "Object literal keys that are strings or numbers must be a method or have a colon",
          43: "Found `* async x(){}` but this should be `async * x(){}`",
          42: "Getters and setters can not be generators",
          44: "'%0' can not be generator method",
          45: "No line break is allowed after '=>'",
          46: "The left-hand side of the arrow can only be destructed through assignment",
          47: "The binding declaration is not destructible",
          48: "Async arrow can not be followed by new expression",
          49: "Classes may not have a static property named 'prototype'",
          50: "Class constructor may not be a %0",
          51: "Duplicate constructor method in class",
          52: "Invalid increment/decrement operand",
          53: "Invalid use of `new` keyword on an increment/decrement expression",
          54: "`=>` is an invalid assignment target",
          55: "Rest element may not have a trailing comma",
          56: "Missing initializer in %0 declaration",
          57: "'for-%0' loop head declarations can not have an initializer",
          58: "Invalid left-hand side in for-%0 loop: Must have a single binding",
          59: "Invalid shorthand property initializer",
          60: "Property name __proto__ appears more than once in object literal",
          61: "Let is disallowed as a lexically bound name",
          62: "Invalid use of '%0' inside new expression",
          63: "Illegal 'use strict' directive in function with non-simple parameter list",
          64: 'Identifier "let" disallowed as left-hand side expression in strict mode',
          65: "Illegal continue statement",
          66: "Illegal break statement",
          67: "Cannot have `let[...]` as a var name in strict mode",
          68: "Invalid destructuring assignment target",
          69: "Rest parameter may not have a default initializer",
          70: "The rest argument must the be last parameter",
          71: "Invalid rest argument",
          73: "In strict mode code, functions can only be declared at top level or inside a block",
          74: "In non-strict mode code, functions can only be declared at top level, inside a block, or as the body of an if statement",
          75: "Without web compatibility enabled functions can not be declared at top level, inside a block, or as the body of an if statement",
          76: "Class declaration can't appear in single-statement context",
          77: "Invalid left-hand side in for-%0",
          78: "Invalid assignment in for-%0",
          79: "for await (... of ...) is only valid in async functions and async generators",
          80: "The first token after the template expression should be a continuation of the template",
          82: "`let` declaration not allowed here and `let` cannot be a regular var name in strict mode",
          81: "`let \n [` is a restricted production at the start of a statement",
          83: "Catch clause requires exactly one parameter, not more (and no trailing comma)",
          84: "Catch clause parameter does not support default values",
          85: "Missing catch or finally after try",
          86: "More than one default clause in switch statement",
          87: "Illegal newline after throw",
          88: "Strict mode code may not include a with statement",
          89: "Illegal return statement",
          90: "The left hand side of the for-header binding declaration is not destructible",
          91: "new.target only allowed within functions",
          93: "'#' not followed by identifier",
          99: "Invalid keyword",
          98: "Can not use 'let' as a class name",
          97: "'A lexical declaration can't define a 'let' binding",
          96: "Can not use `let` as variable name in strict mode",
          94: "'%0' may not be used as an identifier in this context",
          95: "Await is only valid in async functions",
          100: "The %0 keyword can only be used with the module goal",
          101: "Unicode codepoint must not be greater than 0x10FFFF",
          102: "%0 source must be string",
          103: "Only a identifier can be used to indicate alias",
          104: "Only '*' or '{...}' can be imported after default",
          105: "Trailing decorator may be followed by method",
          106: "Decorators can't be used with a constructor",
          108: "HTML comments are only allowed with web compatibility (Annex B)",
          109: "The identifier 'let' must not be in expression position in strict mode",
          110: "Cannot assign to `eval` and `arguments` in strict mode",
          111: "The left-hand side of a for-of loop may not start with 'let'",
          112: "Block body arrows can not be immediately invoked without a group",
          113: "Block body arrows can not be immediately accessed without a group",
          114: "Unexpected strict mode reserved word",
          115: "Unexpected eval or arguments in strict mode",
          116: "Decorators must not be followed by a semicolon",
          117: "Calling delete on expression not allowed in strict mode",
          118: "Pattern can not have a tail",
          120: "Can not have a `yield` expression on the left side of a ternary",
          121: "An arrow function can not have a postfix update operator",
          122: "Invalid object literal key character after generator star",
          123: "Private fields can not be deleted",
          125: "Classes may not have a field called constructor",
          124: "Classes may not have a private element named constructor",
          126: "A class field initializer may not contain arguments",
          127: "Generators can only be declared at the top level or inside a block",
          128: "Async methods are a restricted production and cannot have a newline following it",
          129: "Unexpected character after object literal property name",
          131: "Invalid key token",
          132: "Label '%0' has already been declared",
          133: "continue statement must be nested within an iteration statement",
          134: "Undefined label '%0'",
          135: "Trailing comma is disallowed inside import(...) arguments",
          136: "import() requires exactly one argument",
          137: "Cannot use new with import(...)",
          138: "... is not allowed in import()",
          139: "Expected '=>'",
          140: "Duplicate binding '%0'",
          141: "Cannot export a duplicate name '%0'",
          144: "Duplicate %0 for-binding",
          142: "Exported binding '%0' needs to refer to a top-level declared variable",
          143: "Unexpected private field",
          147: "Numeric separators are not allowed at the end of numeric literals",
          146: "Only one underscore is allowed as numeric separator",
          148: "JSX value should be either an expression or a quoted JSX text",
          149: "Expected corresponding JSX closing tag for %0",
          150: "Adjacent JSX elements must be wrapped in an enclosing tag",
          151: "JSX attributes must only be assigned a non-empty 'expression'",
          152: "'%0' has already been declared",
          153: "'%0' shadowed a catch clause binding",
          154: "Dot property must be an identifier",
          155: "Encountered invalid input after spread/rest argument",
          156: "Catch without try",
          157: "Finally without try",
          158: "Expected corresponding closing tag for JSX fragment",
          159: "Coalescing and logical operators used together in the same expression must be disambiguated with parentheses",
          160: "Invalid tagged template on optional chain",
          161: "Invalid optional chain from super property",
          162: "Invalid optional chain from new expression",
          163: 'Cannot use "import.meta" outside a module',
          164: "Leading decorators must be attached to a class declaration",
        };
        class r extends SyntaxError {
          constructor(e, t, n, r, ...a) {
            const o =
              "[" +
              t +
              ":" +
              n +
              "]: " +
              i[r].replace(/%(\d+)/g, (e, t) => a[t]);
            super(`${o}`),
              (this.index = e),
              (this.line = t),
              (this.column = n),
              (this.description = o),
              (this.loc = { line: t, column: n });
          }
        }
        function a(e, t, ...n) {
          throw new r(e.index, e.line, e.column, t, ...n);
        }
        function o(e) {
          throw new r(e.index, e.line, e.column, e.type, e.params);
        }
        function s(e, t, n, i, ...a) {
          throw new r(e, t, n, i, ...a);
        }
        function c(e, t, n, i) {
          throw new r(e, t, n, i);
        }
        const l = ((e, t) => {
          const n = new Uint32Array(104448);
          let i = 0,
            r = 0;
          for (; i < 3540; ) {
            const a = e[i++];
            if (a < 0) r -= a;
            else {
              let o = e[i++];
              2 & a && (o = t[o]),
                1 & a ? n.fill(o, r, (r += e[i++])) : (n[r++] = o);
            }
          }
          return n;
        })(
          [
            -1, 2, 24, 2, 25, 2, 5, -1, 0, 77595648, 3, 44, 2, 3, 0, 14, 2, 57,
            2, 58, 3, 0, 3, 0, 3168796671, 0, 4294956992, 2, 1, 2, 0, 2, 59, 3,
            0, 4, 0, 4294966523, 3, 0, 4, 2, 16, 2, 60, 2, 0, 0, 4294836735, 0,
            3221225471, 0, 4294901942, 2, 61, 0, 134152192, 3, 0, 2, 0,
            4294951935, 3, 0, 2, 0, 2683305983, 0, 2684354047, 2, 17, 2, 0, 0,
            4294961151, 3, 0, 2, 2, 19, 2, 0, 0, 608174079, 2, 0, 2, 131, 2, 6,
            2, 56, -1, 2, 37, 0, 4294443263, 2, 1, 3, 0, 3, 0, 4294901711, 2,
            39, 0, 4089839103, 0, 2961209759, 0, 1342439375, 0, 4294543342, 0,
            3547201023, 0, 1577204103, 0, 4194240, 0, 4294688750, 2, 2, 0,
            80831, 0, 4261478351, 0, 4294549486, 2, 2, 0, 2967484831, 0, 196559,
            0, 3594373100, 0, 3288319768, 0, 8469959, 2, 194, 2, 3, 0,
            3825204735, 0, 123747807, 0, 65487, 0, 4294828015, 0, 4092591615, 0,
            1080049119, 0, 458703, 2, 3, 2, 0, 0, 2163244511, 0, 4227923919, 0,
            4236247022, 2, 66, 0, 4284449919, 0, 851904, 2, 4, 2, 11, 0,
            67076095, -1, 2, 67, 0, 1073741743, 0, 4093591391, -1, 0, 50331649,
            0, 3265266687, 2, 32, 0, 4294844415, 0, 4278190047, 2, 18, 2, 129,
            -1, 3, 0, 2, 2, 21, 2, 0, 2, 9, 2, 0, 2, 14, 2, 15, 3, 0, 10, 2, 69,
            2, 0, 2, 70, 2, 71, 2, 72, 2, 0, 2, 73, 2, 0, 2, 10, 0, 261632, 2,
            23, 3, 0, 2, 2, 12, 2, 4, 3, 0, 18, 2, 74, 2, 5, 3, 0, 2, 2, 75, 0,
            2088959, 2, 27, 2, 8, 0, 909311, 3, 0, 2, 0, 814743551, 2, 41, 0,
            67057664, 3, 0, 2, 2, 40, 2, 0, 2, 28, 2, 0, 2, 29, 2, 7, 0,
            268374015, 2, 26, 2, 49, 2, 0, 2, 76, 0, 134153215, -1, 2, 6, 2, 0,
            2, 7, 0, 2684354559, 0, 67044351, 0, 3221160064, 0, 1, -1, 3, 0, 2,
            2, 42, 0, 1046528, 3, 0, 3, 2, 8, 2, 0, 2, 51, 0, 4294960127, 2, 9,
            2, 38, 2, 10, 0, 4294377472, 2, 11, 3, 0, 7, 0, 4227858431, 3, 0, 8,
            2, 12, 2, 0, 2, 78, 2, 9, 2, 0, 2, 79, 2, 80, 2, 81, -1, 2, 124, 0,
            1048577, 2, 82, 2, 13, -1, 2, 13, 0, 131042, 2, 83, 2, 84, 2, 85, 2,
            0, 2, 33, -83, 2, 0, 2, 53, 2, 7, 3, 0, 4, 0, 1046559, 2, 0, 2, 14,
            2, 0, 0, 2147516671, 2, 20, 3, 86, 2, 2, 0, -16, 2, 87, 0,
            524222462, 2, 4, 2, 0, 0, 4269801471, 2, 4, 2, 0, 2, 15, 2, 77, 2,
            16, 3, 0, 2, 2, 47, 2, 0, -1, 2, 17, -16, 3, 0, 206, -2, 3, 0, 655,
            2, 18, 3, 0, 36, 2, 68, -1, 2, 17, 2, 9, 3, 0, 8, 2, 89, 2, 121, 2,
            0, 0, 3220242431, 3, 0, 3, 2, 19, 2, 90, 2, 91, 3, 0, 2, 2, 92, 2,
            0, 2, 93, 2, 94, 2, 0, 0, 4351, 2, 0, 2, 8, 3, 0, 2, 0, 67043391, 0,
            3909091327, 2, 0, 2, 22, 2, 8, 2, 18, 3, 0, 2, 0, 67076097, 2, 7, 2,
            0, 2, 20, 0, 67059711, 0, 4236247039, 3, 0, 2, 0, 939524103, 0,
            8191999, 2, 97, 2, 98, 2, 15, 2, 21, 3, 0, 3, 0, 67057663, 3, 0,
            349, 2, 99, 2, 100, 2, 6, -264, 3, 0, 11, 2, 22, 3, 0, 2, 2, 31, -1,
            0, 3774349439, 2, 101, 2, 102, 3, 0, 2, 2, 19, 2, 103, 3, 0, 10, 2,
            9, 2, 17, 2, 0, 2, 45, 2, 0, 2, 30, 2, 104, 2, 23, 0, 1638399, 2,
            172, 2, 105, 3, 0, 3, 2, 18, 2, 24, 2, 25, 2, 5, 2, 26, 2, 0, 2, 7,
            2, 106, -1, 2, 107, 2, 108, 2, 109, -1, 3, 0, 3, 2, 11, -2, 2, 0, 2,
            27, -3, 2, 150, -4, 2, 18, 2, 0, 2, 35, 0, 1, 2, 0, 2, 62, 2, 28, 2,
            11, 2, 9, 2, 0, 2, 110, -1, 3, 0, 4, 2, 9, 2, 21, 2, 111, 2, 6, 2,
            0, 2, 112, 2, 0, 2, 48, -4, 3, 0, 9, 2, 20, 2, 29, 2, 30, -4, 2,
            113, 2, 114, 2, 29, 2, 20, 2, 7, -2, 2, 115, 2, 29, 2, 31, -2, 2, 0,
            2, 116, -2, 0, 4277137519, 0, 2269118463, -1, 3, 18, 2, -1, 2, 32,
            2, 36, 2, 0, 3, 29, 2, 2, 34, 2, 19, -3, 3, 0, 2, 2, 33, -1, 2, 0,
            2, 34, 2, 0, 2, 34, 2, 0, 2, 46, -10, 2, 0, 0, 203775, -2, 2, 18, 2,
            43, 2, 35, -2, 2, 17, 2, 117, 2, 20, 3, 0, 2, 2, 36, 0, 2147549120,
            2, 0, 2, 11, 2, 17, 2, 135, 2, 0, 2, 37, 2, 52, 0, 5242879, 3, 0, 2,
            0, 402644511, -1, 2, 120, 0, 1090519039, -2, 2, 122, 2, 38, 2, 0, 0,
            67045375, 2, 39, 0, 4226678271, 0, 3766565279, 0, 2039759, -4, 3, 0,
            2, 0, 3288270847, 0, 3, 3, 0, 2, 0, 67043519, -5, 2, 0, 0,
            4282384383, 0, 1056964609, -1, 3, 0, 2, 0, 67043345, -1, 2, 0, 2,
            40, 2, 41, -1, 2, 10, 2, 42, -6, 2, 0, 2, 11, -3, 3, 0, 2, 0,
            2147484671, 2, 125, 0, 4190109695, 2, 50, -2, 2, 126, 0, 4244635647,
            0, 27, 2, 0, 2, 7, 2, 43, 2, 0, 2, 63, -1, 2, 0, 2, 40, -8, 2, 54,
            2, 44, 0, 67043329, 2, 127, 2, 45, 0, 8388351, -2, 2, 128, 0,
            3028287487, 2, 46, 2, 130, 0, 33259519, 2, 41, -9, 2, 20, -5, 2, 64,
            -2, 3, 0, 28, 2, 31, -3, 3, 0, 3, 2, 47, 3, 0, 6, 2, 48, -85, 3, 0,
            33, 2, 47, -126, 3, 0, 18, 2, 36, -269, 3, 0, 17, 2, 40, 2, 7, 2,
            41, -2, 2, 17, 2, 49, 2, 0, 2, 20, 2, 50, 2, 132, 2, 23, -21, 3, 0,
            2, -4, 3, 0, 2, 0, 4294936575, 2, 0, 0, 4294934783, -2, 0, 196635,
            3, 0, 191, 2, 51, 3, 0, 38, 2, 29, -1, 2, 33, -279, 3, 0, 8, 2, 7,
            -1, 2, 133, 2, 52, 3, 0, 11, 2, 6, -72, 3, 0, 3, 2, 134, 0,
            1677656575, -166, 0, 4161266656, 0, 4071, 0, 15360, -4, 0, 28, -13,
            3, 0, 2, 2, 37, 2, 0, 2, 136, 2, 137, 2, 55, 2, 0, 2, 138, 2, 139,
            2, 140, 3, 0, 10, 2, 141, 2, 142, 2, 15, 3, 37, 2, 3, 53, 2, 3, 54,
            2, 0, 4294954999, 2, 0, -16, 2, 0, 2, 88, 2, 0, 0, 2105343, 0,
            4160749584, 0, 65534, -42, 0, 4194303871, 0, 2011, -6, 2, 0, 0,
            1073684479, 0, 17407, -11, 2, 0, 2, 31, -40, 3, 0, 6, 0, 8323103,
            -1, 3, 0, 2, 2, 42, -37, 2, 55, 2, 144, 2, 145, 2, 146, 2, 147, 2,
            148, -105, 2, 24, -32, 3, 0, 1334, 2, 9, -1, 3, 0, 129, 2, 27, 3, 0,
            6, 2, 9, 3, 0, 180, 2, 149, 3, 0, 233, 0, 1, -96, 3, 0, 16, 2, 9,
            -47, 3, 0, 154, 2, 56, -22381, 3, 0, 7, 2, 23, -6130, 3, 5, 2, -1,
            0, 69207040, 3, 44, 2, 3, 0, 14, 2, 57, 2, 58, -3, 0, 3168731136, 0,
            4294956864, 2, 1, 2, 0, 2, 59, 3, 0, 4, 0, 4294966275, 3, 0, 4, 2,
            16, 2, 60, 2, 0, 2, 33, -1, 2, 17, 2, 61, -1, 2, 0, 2, 56, 0,
            4294885376, 3, 0, 2, 0, 3145727, 0, 2617294944, 0, 4294770688, 2,
            23, 2, 62, 3, 0, 2, 0, 131135, 2, 95, 0, 70256639, 0, 71303167, 0,
            272, 2, 40, 2, 56, -1, 2, 37, 2, 30, -1, 2, 96, 2, 63, 0,
            4278255616, 0, 4294836227, 0, 4294549473, 0, 600178175, 0,
            2952806400, 0, 268632067, 0, 4294543328, 0, 57540095, 0, 1577058304,
            0, 1835008, 0, 4294688736, 2, 65, 2, 64, 0, 33554435, 2, 123, 2, 65,
            2, 151, 0, 131075, 0, 3594373096, 0, 67094296, 2, 64, -1, 0,
            4294828e3, 0, 603979263, 2, 160, 0, 3, 0, 4294828001, 0, 602930687,
            2, 183, 0, 393219, 0, 4294828016, 0, 671088639, 0, 2154840064, 0,
            4227858435, 0, 4236247008, 2, 66, 2, 36, -1, 2, 4, 0, 917503, 2, 36,
            -1, 2, 67, 0, 537788335, 0, 4026531935, -1, 0, 1, -1, 2, 32, 2, 68,
            0, 7936, -3, 2, 0, 0, 2147485695, 0, 1010761728, 0, 4292984930, 0,
            16387, 2, 0, 2, 14, 2, 15, 3, 0, 10, 2, 69, 2, 0, 2, 70, 2, 71, 2,
            72, 2, 0, 2, 73, 2, 0, 2, 11, -1, 2, 23, 3, 0, 2, 2, 12, 2, 4, 3, 0,
            18, 2, 74, 2, 5, 3, 0, 2, 2, 75, 0, 253951, 3, 19, 2, 0, 122879, 2,
            0, 2, 8, 0, 276824064, -2, 3, 0, 2, 2, 40, 2, 0, 0, 4294903295, 2,
            0, 2, 29, 2, 7, -1, 2, 17, 2, 49, 2, 0, 2, 76, 2, 41, -1, 2, 20, 2,
            0, 2, 27, -2, 0, 128, -2, 2, 77, 2, 8, 0, 4064, -1, 2, 119, 0,
            4227907585, 2, 0, 2, 118, 2, 0, 2, 48, 2, 173, 2, 9, 2, 38, 2, 10,
            -1, 0, 74440192, 3, 0, 6, -2, 3, 0, 8, 2, 12, 2, 0, 2, 78, 2, 9, 2,
            0, 2, 79, 2, 80, 2, 81, -3, 2, 82, 2, 13, -3, 2, 83, 2, 84, 2, 85,
            2, 0, 2, 33, -83, 2, 0, 2, 53, 2, 7, 3, 0, 4, 0, 817183, 2, 0, 2,
            14, 2, 0, 0, 33023, 2, 20, 3, 86, 2, -17, 2, 87, 0, 524157950, 2, 4,
            2, 0, 2, 88, 2, 4, 2, 0, 2, 15, 2, 77, 2, 16, 3, 0, 2, 2, 47, 2, 0,
            -1, 2, 17, -16, 3, 0, 206, -2, 3, 0, 655, 2, 18, 3, 0, 36, 2, 68,
            -1, 2, 17, 2, 9, 3, 0, 8, 2, 89, 0, 3072, 2, 0, 0, 2147516415, 2, 9,
            3, 0, 2, 2, 23, 2, 90, 2, 91, 3, 0, 2, 2, 92, 2, 0, 2, 93, 2, 94, 0,
            4294965179, 0, 7, 2, 0, 2, 8, 2, 91, 2, 8, -1, 0, 1761345536, 2, 95,
            0, 4294901823, 2, 36, 2, 18, 2, 96, 2, 34, 2, 166, 0, 2080440287, 2,
            0, 2, 33, 2, 143, 0, 3296722943, 2, 0, 0, 1046675455, 0, 939524101,
            0, 1837055, 2, 97, 2, 98, 2, 15, 2, 21, 3, 0, 3, 0, 7, 3, 0, 349, 2,
            99, 2, 100, 2, 6, -264, 3, 0, 11, 2, 22, 3, 0, 2, 2, 31, -1, 0,
            2700607615, 2, 101, 2, 102, 3, 0, 2, 2, 19, 2, 103, 3, 0, 10, 2, 9,
            2, 17, 2, 0, 2, 45, 2, 0, 2, 30, 2, 104, -3, 2, 105, 3, 0, 3, 2, 18,
            -1, 3, 5, 2, 2, 26, 2, 0, 2, 7, 2, 106, -1, 2, 107, 2, 108, 2, 109,
            -1, 3, 0, 3, 2, 11, -2, 2, 0, 2, 27, -8, 2, 18, 2, 0, 2, 35, -1, 2,
            0, 2, 62, 2, 28, 2, 29, 2, 9, 2, 0, 2, 110, -1, 3, 0, 4, 2, 9, 2,
            17, 2, 111, 2, 6, 2, 0, 2, 112, 2, 0, 2, 48, -4, 3, 0, 9, 2, 20, 2,
            29, 2, 30, -4, 2, 113, 2, 114, 2, 29, 2, 20, 2, 7, -2, 2, 115, 2,
            29, 2, 31, -2, 2, 0, 2, 116, -2, 0, 4277075969, 2, 29, -1, 3, 18, 2,
            -1, 2, 32, 2, 117, 2, 0, 3, 29, 2, 2, 34, 2, 19, -3, 3, 0, 2, 2, 33,
            -1, 2, 0, 2, 34, 2, 0, 2, 34, 2, 0, 2, 48, -10, 2, 0, 0, 197631, -2,
            2, 18, 2, 43, 2, 118, -2, 2, 17, 2, 117, 2, 20, 2, 119, 2, 51, -2,
            2, 119, 2, 23, 2, 17, 2, 33, 2, 119, 2, 36, 0, 4294901904, 0,
            4718591, 2, 119, 2, 34, 0, 335544350, -1, 2, 120, 2, 121, -2, 2,
            122, 2, 38, 2, 7, -1, 2, 123, 2, 65, 0, 3758161920, 0, 3, -4, 2, 0,
            2, 27, 0, 2147485568, 0, 3, 2, 0, 2, 23, 0, 176, -5, 2, 0, 2, 47, 2,
            186, -1, 2, 0, 2, 23, 2, 197, -1, 2, 0, 0, 16779263, -2, 2, 11, -7,
            2, 0, 2, 121, -3, 3, 0, 2, 2, 124, 2, 125, 0, 2147549183, 0, 2, -2,
            2, 126, 2, 35, 0, 10, 0, 4294965249, 0, 67633151, 0, 4026597376, 2,
            0, 0, 536871935, -1, 2, 0, 2, 40, -8, 2, 54, 2, 47, 0, 1, 2, 127, 2,
            23, -3, 2, 128, 2, 35, 2, 129, 2, 130, 0, 16778239, -10, 2, 34, -5,
            2, 64, -2, 3, 0, 28, 2, 31, -3, 3, 0, 3, 2, 47, 3, 0, 6, 2, 48, -85,
            3, 0, 33, 2, 47, -126, 3, 0, 18, 2, 36, -269, 3, 0, 17, 2, 40, 2, 7,
            -3, 2, 17, 2, 131, 2, 0, 2, 23, 2, 48, 2, 132, 2, 23, -21, 3, 0, 2,
            -4, 3, 0, 2, 0, 67583, -1, 2, 103, -2, 0, 11, 3, 0, 191, 2, 51, 3,
            0, 38, 2, 29, -1, 2, 33, -279, 3, 0, 8, 2, 7, -1, 2, 133, 2, 52, 3,
            0, 11, 2, 6, -72, 3, 0, 3, 2, 134, 2, 135, -187, 3, 0, 2, 2, 37, 2,
            0, 2, 136, 2, 137, 2, 55, 2, 0, 2, 138, 2, 139, 2, 140, 3, 0, 10, 2,
            141, 2, 142, 2, 15, 3, 37, 2, 3, 53, 2, 3, 54, 2, 2, 143, -73, 2, 0,
            0, 1065361407, 0, 16384, -11, 2, 0, 2, 121, -40, 3, 0, 6, 2, 117,
            -1, 3, 0, 2, 0, 2063, -37, 2, 55, 2, 144, 2, 145, 2, 146, 2, 147, 2,
            148, -138, 3, 0, 1334, 2, 9, -1, 3, 0, 129, 2, 27, 3, 0, 6, 2, 9, 3,
            0, 180, 2, 149, 3, 0, 233, 0, 1, -96, 3, 0, 16, 2, 9, -47, 3, 0,
            154, 2, 56, -28517, 2, 0, 0, 1, -1, 2, 124, 2, 0, 0, 8193, -21, 2,
            193, 0, 10255, 0, 4, -11, 2, 64, 2, 171, -1, 0, 71680, -1, 2, 161,
            0, 4292900864, 0, 805306431, -5, 2, 150, -1, 2, 157, -1, 0, 6144,
            -2, 2, 127, -1, 2, 154, -1, 0, 2147532800, 2, 151, 2, 165, 2, 0, 2,
            164, 0, 524032, 0, 4, -4, 2, 190, 0, 205128192, 0, 1333757536, 0,
            2147483696, 0, 423953, 0, 747766272, 0, 2717763192, 0, 4286578751,
            0, 278545, 2, 152, 0, 4294886464, 0, 33292336, 0, 417809, 2, 152, 0,
            1327482464, 0, 4278190128, 0, 700594195, 0, 1006647527, 0,
            4286497336, 0, 4160749631, 2, 153, 0, 469762560, 0, 4171219488, 0,
            8323120, 2, 153, 0, 202375680, 0, 3214918176, 0, 4294508592, 2, 153,
            -1, 0, 983584, 0, 48, 0, 58720273, 0, 3489923072, 0, 10517376, 0,
            4293066815, 0, 1, 0, 2013265920, 2, 177, 2, 0, 0, 2089, 0,
            3221225552, 0, 201375904, 2, 0, -2, 0, 256, 0, 122880, 0, 16777216,
            2, 150, 0, 4160757760, 2, 0, -6, 2, 167, -11, 0, 3263218176, -1, 0,
            49664, 0, 2160197632, 0, 8388802, -1, 0, 12713984, -1, 2, 154, 2,
            159, 2, 178, -2, 2, 162, -20, 0, 3758096385, -2, 2, 155, 0,
            4292878336, 2, 90, 2, 169, 0, 4294057984, -2, 2, 163, 2, 156, 2,
            175, -2, 2, 155, -1, 2, 182, -1, 2, 170, 2, 124, 0, 4026593280, 0,
            14, 0, 4292919296, -1, 2, 158, 0, 939588608, -1, 0, 805306368, -1,
            2, 124, 0, 1610612736, 2, 156, 2, 157, 2, 4, 2, 0, -2, 2, 158, 2,
            159, -3, 0, 267386880, -1, 2, 160, 0, 7168, -1, 0, 65024, 2, 154, 2,
            161, 2, 179, -7, 2, 168, -8, 2, 162, -1, 0, 1426112704, 2, 163, -1,
            2, 164, 0, 271581216, 0, 2149777408, 2, 23, 2, 161, 2, 124, 0,
            851967, 2, 180, -1, 2, 23, 2, 181, -4, 2, 158, -20, 2, 195, 2, 165,
            -56, 0, 3145728, 2, 185, -4, 2, 166, 2, 124, -4, 0, 32505856, -1, 2,
            167, -1, 0, 2147385088, 2, 90, 1, 2155905152, 2, -3, 2, 103, 2, 0,
            2, 168, -2, 2, 169, -6, 2, 170, 0, 4026597375, 0, 1, -1, 0, 1, -1,
            2, 171, -3, 2, 117, 2, 64, -2, 2, 166, -2, 2, 176, 2, 124, -878, 2,
            159, -36, 2, 172, -1, 2, 201, -10, 2, 188, -5, 2, 174, -6, 0,
            4294965251, 2, 27, -1, 2, 173, -1, 2, 174, -2, 0, 4227874752, -3, 0,
            2146435072, 2, 159, -2, 0, 1006649344, 2, 124, -1, 2, 90, 0,
            201375744, -3, 0, 134217720, 2, 90, 0, 4286677377, 0, 32896, -1, 2,
            158, -3, 2, 175, -349, 2, 176, 0, 1920, 2, 177, 3, 0, 264, -11, 2,
            157, -2, 2, 178, 2, 0, 0, 520617856, 0, 2692743168, 0, 36, -3, 0,
            524284, -11, 2, 23, -1, 2, 187, -1, 2, 184, 0, 3221291007, 2, 178,
            -1, 2, 202, 0, 2158720, -3, 2, 159, 0, 1, -4, 2, 124, 0, 3808625411,
            0, 3489628288, 2, 200, 0, 1207959680, 0, 3221274624, 2, 0, -3, 2,
            179, 0, 120, 0, 7340032, -2, 2, 180, 2, 4, 2, 23, 2, 163, 3, 0, 4,
            2, 159, -1, 2, 181, 2, 177, -1, 0, 8176, 2, 182, 2, 179, 2, 183, -1,
            0, 4290773232, 2, 0, -4, 2, 163, 2, 189, 0, 15728640, 2, 177, -1, 2,
            161, -1, 0, 4294934512, 3, 0, 4, -9, 2, 90, 2, 170, 2, 184, 3, 0, 4,
            0, 704, 0, 1849688064, 2, 185, -1, 2, 124, 0, 4294901887, 2, 0, 0,
            130547712, 0, 1879048192, 2, 199, 3, 0, 2, -1, 2, 186, 2, 187, -1,
            0, 17829776, 0, 2025848832, 0, 4261477888, -2, 2, 0, -1, 0,
            4286580608, -1, 0, 29360128, 2, 192, 0, 16252928, 0, 3791388672, 2,
            38, 3, 0, 2, -2, 2, 196, 2, 0, -1, 2, 103, -1, 0, 66584576, -1, 2,
            191, 3, 0, 9, 2, 124, -1, 0, 4294755328, 3, 0, 2, -1, 2, 161, 2,
            178, 3, 0, 2, 2, 23, 2, 188, 2, 90, -2, 0, 245760, 0, 2147418112,
            -1, 2, 150, 2, 203, 0, 4227923456, -1, 2, 164, 2, 161, 2, 90, -3, 0,
            4292870145, 0, 262144, 2, 124, 3, 0, 2, 0, 1073758848, 2, 189, -1,
            0, 4227921920, 2, 190, 0, 68289024, 0, 528402016, 0, 4292927536, 3,
            0, 4, -2, 0, 268435456, 2, 91, -2, 2, 191, 3, 0, 5, -1, 2, 192, 2,
            163, 2, 0, -2, 0, 4227923936, 2, 62, -1, 2, 155, 2, 95, 2, 0, 2,
            154, 2, 158, 3, 0, 6, -1, 2, 177, 3, 0, 3, -2, 0, 2146959360, 0,
            9440640, 0, 104857600, 0, 4227923840, 3, 0, 2, 0, 768, 2, 193, 2,
            77, -2, 2, 161, -2, 2, 119, -1, 2, 155, 3, 0, 8, 0, 512, 0, 8388608,
            2, 194, 2, 172, 2, 187, 0, 4286578944, 3, 0, 2, 0, 1152, 0,
            1266679808, 2, 191, 0, 576, 0, 4261707776, 2, 95, 3, 0, 9, 2, 155,
            3, 0, 5, 2, 16, -1, 0, 2147221504, -28, 2, 178, 3, 0, 3, -3, 0,
            4292902912, -6, 2, 96, 3, 0, 85, -33, 0, 4294934528, 3, 0, 126, -18,
            2, 195, 3, 0, 269, -17, 2, 155, 2, 124, 2, 198, 3, 0, 2, 2, 23, 0,
            4290822144, -2, 0, 67174336, 0, 520093700, 2, 17, 3, 0, 21, -2, 2,
            179, 3, 0, 3, -2, 0, 30720, -1, 0, 32512, 3, 0, 2, 0, 4294770656,
            -191, 2, 174, -38, 2, 170, 2, 0, 2, 196, 3, 0, 279, -8, 2, 124, 2,
            0, 0, 4294508543, 0, 65295, -11, 2, 177, 3, 0, 72, -3, 0,
            3758159872, 0, 201391616, 3, 0, 155, -7, 2, 170, -1, 0, 384, -1, 0,
            133693440, -3, 2, 196, -2, 2, 26, 3, 0, 4, 2, 169, -2, 2, 90, 2,
            155, 3, 0, 4, -2, 2, 164, -1, 2, 150, 0, 335552923, 2, 197, -1, 0,
            538974272, 0, 2214592512, 0, 132e3, -10, 0, 192, -8, 0, 12288, -21,
            0, 134213632, 0, 4294901761, 3, 0, 42, 0, 100663424, 0, 4294965284,
            3, 0, 6, -1, 0, 3221282816, 2, 198, 3, 0, 11, -1, 2, 199, 3, 0, 40,
            -6, 0, 4286578784, 2, 0, -2, 0, 1006694400, 3, 0, 24, 2, 35, -1, 2,
            94, 3, 0, 2, 0, 1, 2, 163, 3, 0, 6, 2, 197, 0, 4110942569, 0,
            1432950139, 0, 2701658217, 0, 4026532864, 0, 4026532881, 2, 0, 2,
            45, 3, 0, 8, -1, 2, 158, -2, 2, 169, 0, 98304, 0, 65537, 2, 170, -5,
            0, 4294950912, 2, 0, 2, 118, 0, 65528, 2, 177, 0, 4294770176, 2, 26,
            3, 0, 4, -30, 2, 174, 0, 3758153728, -3, 2, 169, -2, 2, 155, 2, 188,
            2, 158, -1, 2, 191, -1, 2, 161, 0, 4294754304, 3, 0, 2, -3, 0,
            33554432, -2, 2, 200, -3, 2, 169, 0, 4175478784, 2, 201, 0,
            4286643712, 0, 4286644216, 2, 0, -4, 2, 202, -1, 2, 165, 0,
            4227923967, 3, 0, 32, -1334, 2, 163, 2, 0, -129, 2, 94, -6, 2, 163,
            -180, 2, 203, -233, 2, 4, 3, 0, 96, -16, 2, 163, 3, 0, 47, -154, 2,
            165, 3, 0, 22381, -7, 2, 17, 3, 0, 6128,
          ],
          [
            4294967295, 4294967291, 4092460543, 4294828031, 4294967294,
            134217726, 268435455, 2147483647, 1048575, 1073741823, 3892314111,
            134217727, 1061158911, 536805376, 4294910143, 4160749567,
            4294901759, 4294901760, 536870911, 262143, 8388607, 4294902783,
            4294918143, 65535, 67043328, 2281701374, 4294967232, 2097151,
            4294903807, 4194303, 255, 67108863, 4294967039, 511, 524287, 131071,
            127, 4292870143, 4294902271, 4294549487, 33554431, 1023, 67047423,
            4294901888, 4286578687, 4294770687, 67043583, 32767, 15, 2047999,
            67043343, 16777215, 4294902e3, 4294934527, 4294966783, 4294967279,
            2047, 262083, 20511, 4290772991, 41943039, 493567, 4294959104,
            603979775, 65536, 602799615, 805044223, 4294965206, 8191,
            1031749119, 4294917631, 2134769663, 4286578493, 4282253311,
            4294942719, 33540095, 4294905855, 4294967264, 2868854591,
            1608515583, 265232348, 534519807, 2147614720, 1060109444,
            4093640016, 17376, 2139062143, 224, 4169138175, 4294909951,
            4286578688, 4294967292, 4294965759, 2044, 4292870144, 4294966272,
            4294967280, 8289918, 4294934399, 4294901775, 4294965375, 1602223615,
            4294967259, 4294443008, 268369920, 4292804608, 486341884,
            4294963199, 3087007615, 1073692671, 4128527, 4279238655, 4294902015,
            4294966591, 2445279231, 3670015, 3238002687, 31, 63, 4294967288,
            4294705151, 4095, 3221208447, 4294549472, 2147483648, 4285526655,
            4294966527, 4294705152, 4294966143, 64, 4294966719, 16383,
            3774873592, 458752, 536807423, 67043839, 3758096383, 3959414372,
            3755993023, 2080374783, 4294835295, 4294967103, 4160749565, 4087,
            184024726, 2862017156, 1593309078, 268434431, 268434414, 4294901763,
            536870912, 2952790016, 202506752, 139264, 402653184, 4261412864,
            4227922944, 49152, 61440, 3758096384, 117440512, 65280, 3233808384,
            3221225472, 2097152, 4294965248, 32768, 57152, 67108864, 4293918720,
            4290772992, 25165824, 57344, 4227915776, 4278190080, 4227907584,
            65520, 4026531840, 4227858432, 4160749568, 3758129152, 4294836224,
            63488, 1073741824, 4294967040, 4194304, 251658240, 196608,
            4294963200, 64512, 417808, 4227923712, 12582912, 50331648, 65472,
            4294967168, 4294966784, 16, 4294917120, 2080374784, 4096, 65408,
            524288, 65532,
          ],
        );
        function u(e) {
          return e.column++, (e.currentChar = e.source.charCodeAt(++e.index));
        }
        function p(e, t) {
          if (55296 != (64512 & t)) return 0;
          const n = e.source.charCodeAt(e.index + 1);
          return 56320 != (64512 & n)
            ? 0
            : ((t = e.currentChar = 65536 + ((1023 & t) << 10) + (1023 & n)),
              0 == (1 & (l[0 + (t >>> 5)] >>> t)) && a(e, 18, h(t)),
              e.index++,
              e.column++,
              1);
        }
        function d(e, t) {
          (e.currentChar = e.source.charCodeAt(++e.index)),
            (e.flags |= 1),
            0 == (4 & t) && ((e.column = 0), e.line++);
        }
        function m(e) {
          (e.flags |= 1),
            (e.currentChar = e.source.charCodeAt(++e.index)),
            (e.column = 0),
            e.line++;
        }
        function h(e) {
          return e <= 65535
            ? String.fromCharCode(e)
            : String.fromCharCode(e >>> 10) + String.fromCharCode(1023 & e);
        }
        function f(e) {
          return e < 65 ? e - 48 : (e - 65 + 10) & 15;
        }
        const g = [
            0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1032, 0, 0, 2056, 0, 0, 0, 0, 0, 0, 0,
            0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 8192, 0, 3, 0, 0, 8192, 0, 0,
            0, 256, 0, 33024, 0, 0, 242, 242, 114, 114, 114, 114, 114, 114, 594,
            594, 0, 0, 16384, 0, 0, 0, 0, 67, 67, 67, 67, 67, 67, 3, 3, 3, 3, 3,
            3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 0, 1, 0, 0, 4099, 0,
            71, 71, 71, 71, 71, 71, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
            7, 7, 7, 7, 7, 16384, 0, 0, 0, 0,
          ],
          x = [
            0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
            0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0,
            0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1,
            1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0,
            0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
            1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0,
          ],
          b = [
            0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
            0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0,
            0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1,
            1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0,
            0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
            1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0,
          ];
        function v(e) {
          return e <= 127 ? x[e] : 1 & (l[34816 + (e >>> 5)] >>> e);
        }
        function k(e) {
          return e <= 127
            ? b[e]
            : 1 & (l[0 + (e >>> 5)] >>> e) || 8204 === e || 8205 === e;
        }
        const T = [
          "SingleLine",
          "MultiLine",
          "HTMLOpen",
          "HTMLClose",
          "HashbangComment",
        ];
        function y(e, t, n, i, r, o, s, c) {
          return 2048 & i && a(e, 0), E(e, t, n, r, o, s, c);
        }
        function E(e, t, n, i, r, a, o) {
          const { index: s } = e;
          for (
            e.tokenPos = e.index, e.linePos = e.line, e.colPos = e.column;
            e.index < e.end;

          ) {
            if (8 & g[e.currentChar]) {
              const n = 13 === e.currentChar;
              m(e),
                n &&
                  e.index < e.end &&
                  10 === e.currentChar &&
                  (e.currentChar = t.charCodeAt(++e.index));
              break;
            }
            if ((8232 ^ e.currentChar) <= 1) {
              m(e);
              break;
            }
            u(e),
              (e.tokenPos = e.index),
              (e.linePos = e.line),
              (e.colPos = e.column);
          }
          if (e.onComment) {
            const n = {
              start: { line: a, column: o },
              end: { line: e.linePos, column: e.colPos },
            };
            e.onComment(T[255 & i], t.slice(s, e.tokenPos), r, e.tokenPos, n);
          }
          return 1 | n;
        }
        function w(e, t, n) {
          const { index: i } = e;
          for (; e.index < e.end; )
            if (e.currentChar < 43) {
              let r = !1;
              for (; 42 === e.currentChar; )
                if ((r || ((n &= -5), (r = !0)), 47 === u(e))) {
                  if ((u(e), e.onComment)) {
                    const n = {
                      start: { line: e.linePos, column: e.colPos },
                      end: { line: e.line, column: e.column },
                    };
                    e.onComment(
                      T[1],
                      t.slice(i, e.index - 2),
                      i - 2,
                      e.index,
                      n,
                    );
                  }
                  return (
                    (e.tokenPos = e.index),
                    (e.linePos = e.line),
                    (e.colPos = e.column),
                    n
                  );
                }
              if (r) continue;
              8 & g[e.currentChar]
                ? 13 === e.currentChar
                  ? ((n |= 5), m(e))
                  : (d(e, n), (n = (-5 & n) | 1))
                : u(e);
            } else
              (8232 ^ e.currentChar) <= 1
                ? ((n = (-5 & n) | 1), m(e))
                : ((n &= -5), u(e));
          a(e, 16);
        }
        function C(e, t) {
          const n = e.index;
          let i = 0;
          e: for (;;) {
            const t = e.currentChar;
            if ((u(e), 1 & i)) i &= -2;
            else
              switch (t) {
                case 47:
                  if (i) break;
                  break e;
                case 92:
                  i |= 1;
                  break;
                case 91:
                  i |= 2;
                  break;
                case 93:
                  i &= 1;
                  break;
                case 13:
                case 10:
                case 8232:
                case 8233:
                  a(e, 32);
              }
            if (e.index >= e.source.length) return a(e, 32);
          }
          const r = e.index - 1;
          let o = 0,
            s = e.currentChar;
          const { index: c } = e;
          for (; k(s); ) {
            switch (s) {
              case 103:
                2 & o && a(e, 34, "g"), (o |= 2);
                break;
              case 105:
                1 & o && a(e, 34, "i"), (o |= 1);
                break;
              case 109:
                4 & o && a(e, 34, "m"), (o |= 4);
                break;
              case 117:
                16 & o && a(e, 34, "g"), (o |= 16);
                break;
              case 121:
                8 & o && a(e, 34, "y"), (o |= 8);
                break;
              case 115:
                12 & o && a(e, 34, "s"), (o |= 12);
                break;
              default:
                a(e, 33);
            }
            s = u(e);
          }
          const l = e.source.slice(c, e.index),
            p = e.source.slice(n, r);
          return (
            (e.tokenRegExp = { pattern: p, flags: l }),
            512 & t && (e.tokenRaw = e.source.slice(e.tokenPos, e.index)),
            (e.tokenValue = (function (e, t, n) {
              try {
                return new RegExp(t, n);
              } catch (t) {
                a(e, 32);
              }
            })(e, p, l)),
            65540
          );
        }
        function A(e, t, n) {
          const { index: i } = e;
          let r = "",
            o = u(e),
            s = e.index;
          for (; 0 == (8 & g[o]); ) {
            if (o === n)
              return (
                (r += e.source.slice(s, e.index)),
                u(e),
                512 & t && (e.tokenRaw = e.source.slice(i, e.index)),
                (e.tokenValue = r),
                134283267
              );
            if (8 == (8 & o) && 92 === o) {
              if (
                ((r += e.source.slice(s, e.index)),
                (o = u(e)),
                o < 127 || 8232 === o || 8233 === o)
              ) {
                const n = S(e, t, o);
                n >= 0 ? (r += h(n)) : _(e, n, 0);
              } else r += h(o);
              s = e.index + 1;
            }
            e.index >= e.end && a(e, 14), (o = u(e));
          }
          a(e, 14);
        }
        function S(e, t, n) {
          switch (n) {
            case 98:
              return 8;
            case 102:
              return 12;
            case 114:
              return 13;
            case 110:
              return 10;
            case 116:
              return 9;
            case 118:
              return 11;
            case 13:
              if (e.index < e.end) {
                const t = e.source.charCodeAt(e.index + 1);
                10 === t && ((e.index = e.index + 1), (e.currentChar = t));
              }
            case 10:
            case 8232:
            case 8233:
              return (e.column = -1), e.line++, -1;
            case 48:
            case 49:
            case 50:
            case 51: {
              let i = n - 48,
                r = e.index + 1,
                a = e.column + 1;
              if (r < e.end) {
                const n = e.source.charCodeAt(r);
                if (0 == (32 & g[n])) {
                  if ((0 !== i || 512 & g[n]) && 1024 & t) return -2;
                } else {
                  if (1024 & t) return -2;
                  if (
                    ((e.currentChar = n),
                    (i = (i << 3) | (n - 48)),
                    r++,
                    a++,
                    r < e.end)
                  ) {
                    const t = e.source.charCodeAt(r);
                    32 & g[t] &&
                      ((e.currentChar = t),
                      (i = (i << 3) | (t - 48)),
                      r++,
                      a++);
                  }
                  (e.flags |= 64), (e.index = r - 1), (e.column = a - 1);
                }
              }
              return i;
            }
            case 52:
            case 53:
            case 54:
            case 55: {
              if (1024 & t) return -2;
              let i = n - 48;
              const r = e.index + 1,
                a = e.column + 1;
              if (r < e.end) {
                const t = e.source.charCodeAt(r);
                32 & g[t] &&
                  ((i = (i << 3) | (t - 48)),
                  (e.currentChar = t),
                  (e.index = r),
                  (e.column = a));
              }
              return (e.flags |= 64), i;
            }
            case 120: {
              const t = u(e);
              if (0 == (64 & g[t])) return -4;
              const n = f(t),
                i = u(e);
              if (0 == (64 & g[i])) return -4;
              return (n << 4) | f(i);
            }
            case 117: {
              const t = u(e);
              if (123 === e.currentChar) {
                let t = 0;
                for (; 0 != (64 & g[u(e)]); )
                  if (((t = (t << 4) | f(e.currentChar)), t > 1114111))
                    return -5;
                return e.currentChar < 1 || 125 !== e.currentChar ? -4 : t;
              }
              {
                if (0 == (64 & g[t])) return -4;
                const n = e.source.charCodeAt(e.index + 1);
                if (0 == (64 & g[n])) return -4;
                const i = e.source.charCodeAt(e.index + 2);
                if (0 == (64 & g[i])) return -4;
                const r = e.source.charCodeAt(e.index + 3);
                return 0 == (64 & g[r])
                  ? -4
                  : ((e.index += 3),
                    (e.column += 3),
                    (e.currentChar = e.source.charCodeAt(e.index)),
                    (f(t) << 12) | (f(n) << 8) | (f(i) << 4) | f(r));
              }
            }
            case 56:
            case 57:
              if (0 == (256 & t)) return -3;
            default:
              return n;
          }
        }
        function _(e, t, n) {
          switch (t) {
            case -1:
              return;
            case -2:
              a(e, n ? 2 : 1);
            case -3:
              a(e, 13);
            case -4:
              a(e, 6);
            case -5:
              a(e, 101);
          }
        }
        function N(e, t) {
          const { index: n } = e;
          let i = 67174409,
            r = "",
            o = u(e);
          for (; 96 !== o; ) {
            if (36 === o && 123 === e.source.charCodeAt(e.index + 1)) {
              u(e), (i = 67174408);
              break;
            }
            if (8 == (8 & o) && 92 === o)
              if (((o = u(e)), o > 126)) r += h(o);
              else {
                const n = S(e, 1024 | t, o);
                if (n >= 0) r += h(n);
                else {
                  if (-1 !== n && 65536 & t) {
                    (r = void 0), (o = P(e, o)), o < 0 && (i = 67174408);
                    break;
                  }
                  _(e, n, 1);
                }
              }
            else
              e.index < e.end &&
                13 === o &&
                10 === e.source.charCodeAt(e.index) &&
                ((r += h(o)), (e.currentChar = e.source.charCodeAt(++e.index))),
                (((83 & o) < 3 && 10 === o) || (8232 ^ o) <= 1) &&
                  ((e.column = -1), e.line++),
                (r += h(o));
            e.index >= e.end && a(e, 15), (o = u(e));
          }
          return (
            u(e),
            (e.tokenValue = r),
            (e.tokenRaw = e.source.slice(
              n + 1,
              e.index - (67174409 === i ? 1 : 2),
            )),
            i
          );
        }
        function P(e, t) {
          for (; 96 !== t; ) {
            switch (t) {
              case 36: {
                const n = e.index + 1;
                if (n < e.end && 123 === e.source.charCodeAt(n))
                  return (e.index = n), e.column++, -t;
                break;
              }
              case 10:
              case 8232:
              case 8233:
                (e.column = -1), e.line++;
            }
            e.index >= e.end && a(e, 15), (t = u(e));
          }
          return t;
        }
        function O(e, t) {
          return e.index >= e.end && a(e, 0), e.index--, e.column--, N(e, t);
        }
        function L(e, t, n) {
          let i = e.currentChar,
            r = 0,
            o = 9,
            s = 64 & n ? 0 : 1,
            l = 0,
            p = 0;
          if (64 & n)
            (r = "." + I(e, i)), (i = e.currentChar), 110 === i && a(e, 11);
          else {
            if (48 === i)
              if (((i = u(e)), 120 == (32 | i))) {
                for (n = 136, i = u(e); 4160 & g[i]; )
                  95 !== i
                    ? ((p = 1), (r = 16 * r + f(i)), l++, (i = u(e)))
                    : (p || a(e, 146), (p = 0), (i = u(e)));
                (l < 1 || !p) && a(e, l < 1 ? 19 : 147);
              } else if (111 == (32 | i)) {
                for (n = 132, i = u(e); 4128 & g[i]; )
                  95 !== i
                    ? ((p = 1), (r = 8 * r + (i - 48)), l++, (i = u(e)))
                    : (p || a(e, 146), (p = 0), (i = u(e)));
                (l < 1 || !p) && a(e, l < 1 ? 0 : 147);
              } else if (98 == (32 | i)) {
                for (n = 130, i = u(e); 4224 & g[i]; )
                  95 !== i
                    ? ((p = 1), (r = 2 * r + (i - 48)), l++, (i = u(e)))
                    : (p || a(e, 146), (p = 0), (i = u(e)));
                (l < 1 || !p) && a(e, l < 1 ? 0 : 147);
              } else if (32 & g[i])
                for (1024 & t && a(e, 1), n = 1; 16 & g[i]; ) {
                  if (512 & g[i]) {
                    (n = 32), (s = 0);
                    break;
                  }
                  (r = 8 * r + (i - 48)), (i = u(e));
                }
              else
                512 & g[i]
                  ? (1024 & t && a(e, 1), (e.flags |= 64), (n = 32))
                  : 95 === i && a(e, 0);
            if (48 & n) {
              if (s) {
                for (; o >= 0 && 4112 & g[i]; )
                  95 !== i
                    ? ((p = 0), (r = 10 * r + (i - 48)), (i = u(e)), --o)
                    : ((i = u(e)),
                      (95 === i || 32 & n) &&
                        c(e.index, e.line, e.index + 1, 146),
                      (p = 1));
                if (
                  (p && c(e.index, e.line, e.index + 1, 147),
                  o >= 0 && !v(i) && 46 !== i)
                )
                  return (
                    (e.tokenValue = r),
                    512 & t &&
                      (e.tokenRaw = e.source.slice(e.tokenPos, e.index)),
                    134283266
                  );
              }
              (r += I(e, i)),
                (i = e.currentChar),
                46 === i &&
                  (95 === u(e) && a(e, 0),
                  (n = 64),
                  (r += "." + I(e, e.currentChar)),
                  (i = e.currentChar));
            }
          }
          const d = e.index;
          let m = 0;
          if (110 === i && 128 & n) (m = 1), (i = u(e));
          else if (101 == (32 | i)) {
            (i = u(e)), 256 & g[i] && (i = u(e));
            const { index: t } = e;
            (16 & g[i]) < 1 && a(e, 10),
              (r += e.source.substring(d, t) + I(e, i)),
              (i = e.currentChar);
          }
          return (
            ((e.index < e.end && 16 & g[i]) || v(i)) && a(e, 12),
            m
              ? ((e.tokenRaw = e.source.slice(e.tokenPos, e.index)),
                (e.tokenValue = BigInt(r)),
                134283389)
              : ((e.tokenValue =
                  15 & n
                    ? r
                    : 32 & n
                      ? parseFloat(e.source.substring(e.tokenPos, e.index))
                      : +r),
                512 & t && (e.tokenRaw = e.source.slice(e.tokenPos, e.index)),
                134283266)
          );
        }
        function I(e, t) {
          let n = 0,
            i = e.index,
            r = "";
          for (; 4112 & g[t]; )
            if (95 !== t) (n = 0), (t = u(e));
            else {
              const { index: a } = e;
              95 === (t = u(e)) && c(e.index, e.line, e.index + 1, 146),
                (n = 1),
                (r += e.source.substring(i, a)),
                (i = e.index);
            }
          return (
            n && c(e.index, e.line, e.index + 1, 147),
            r + e.source.substring(i, e.index)
          );
        }
        const R = [
            "end of source",
            "identifier",
            "number",
            "string",
            "regular expression",
            "false",
            "true",
            "null",
            "template continuation",
            "template tail",
            "=>",
            "(",
            "{",
            ".",
            "...",
            "}",
            ")",
            ";",
            ",",
            "[",
            "]",
            ":",
            "?",
            "'",
            '"',
            "</",
            "/>",
            "++",
            "--",
            "=",
            "<<=",
            ">>=",
            ">>>=",
            "**=",
            "+=",
            "-=",
            "*=",
            "/=",
            "%=",
            "^=",
            "|=",
            "&=",
            "||=",
            "&&=",
            "??=",
            "typeof",
            "delete",
            "void",
            "!",
            "~",
            "+",
            "-",
            "in",
            "instanceof",
            "*",
            "%",
            "/",
            "**",
            "&&",
            "||",
            "===",
            "!==",
            "==",
            "!=",
            "<=",
            ">=",
            "<",
            ">",
            "<<",
            ">>",
            ">>>",
            "&",
            "|",
            "^",
            "var",
            "let",
            "const",
            "break",
            "case",
            "catch",
            "class",
            "continue",
            "debugger",
            "default",
            "do",
            "else",
            "export",
            "extends",
            "finally",
            "for",
            "function",
            "if",
            "import",
            "new",
            "return",
            "super",
            "switch",
            "this",
            "throw",
            "try",
            "while",
            "with",
            "implements",
            "interface",
            "package",
            "private",
            "protected",
            "public",
            "static",
            "yield",
            "as",
            "async",
            "await",
            "constructor",
            "get",
            "set",
            "from",
            "of",
            "enum",
            "eval",
            "arguments",
            "escaped keyword",
            "escaped future reserved keyword",
            "reserved if strict",
            "#",
            "BigIntLiteral",
            "??",
            "?.",
            "WhiteSpace",
            "Illegal",
            "LineTerminator",
            "PrivateField",
            "Template",
            "@",
            "target",
            "meta",
            "LineFeed",
            "Escaped",
            "JSXText",
          ],
          M = Object.create(null, {
            this: { value: 86113 },
            function: { value: 86106 },
            if: { value: 20571 },
            return: { value: 20574 },
            var: { value: 86090 },
            else: { value: 20565 },
            for: { value: 20569 },
            new: { value: 86109 },
            in: { value: 8738868 },
            typeof: { value: 16863277 },
            while: { value: 20580 },
            case: { value: 20558 },
            break: { value: 20557 },
            try: { value: 20579 },
            catch: { value: 20559 },
            delete: { value: 16863278 },
            throw: { value: 86114 },
            switch: { value: 86112 },
            continue: { value: 20561 },
            default: { value: 20563 },
            instanceof: { value: 8476725 },
            do: { value: 20564 },
            void: { value: 16863279 },
            finally: { value: 20568 },
            async: { value: 209007 },
            await: { value: 209008 },
            class: { value: 86096 },
            const: { value: 86092 },
            constructor: { value: 12401 },
            debugger: { value: 20562 },
            export: { value: 20566 },
            extends: { value: 20567 },
            false: { value: 86021 },
            from: { value: 12404 },
            get: { value: 12402 },
            implements: { value: 36966 },
            import: { value: 86108 },
            interface: { value: 36967 },
            let: { value: 241739 },
            null: { value: 86023 },
            of: { value: 274549 },
            package: { value: 36968 },
            private: { value: 36969 },
            protected: { value: 36970 },
            public: { value: 36971 },
            set: { value: 12403 },
            static: { value: 36972 },
            super: { value: 86111 },
            true: { value: 86022 },
            with: { value: 20581 },
            yield: { value: 241773 },
            enum: { value: 86134 },
            eval: { value: 537079927 },
            as: { value: 77934 },
            arguments: { value: 537079928 },
            target: { value: 143494 },
            meta: { value: 143495 },
          });
        function D(e, t, n) {
          for (; b[u(e)]; );
          return (
            (e.tokenValue = e.source.slice(e.tokenPos, e.index)),
            92 !== e.currentChar && e.currentChar < 126
              ? M[e.tokenValue] || 208897
              : H(e, t, 0, n)
          );
        }
        function j(e, t) {
          const n = B(e);
          return k(n) || a(e, 4), (e.tokenValue = h(n)), H(e, t, 1, 4 & g[n]);
        }
        function H(e, t, n, i) {
          let r = e.index;
          for (; e.index < e.end; )
            if (92 === e.currentChar) {
              (e.tokenValue += e.source.slice(r, e.index)), (n = 1);
              const t = B(e);
              k(t) || a(e, 4),
                (i = i && 4 & g[t]),
                (e.tokenValue += h(t)),
                (r = e.index);
            } else {
              if (!k(e.currentChar) && !p(e, e.currentChar)) break;
              u(e);
            }
          e.index <= e.end && (e.tokenValue += e.source.slice(r, e.index));
          const o = e.tokenValue.length;
          if (i && o >= 2 && o <= 11) {
            const i = M[e.tokenValue];
            return void 0 === i
              ? 208897
              : n
                ? 1024 & t
                  ? 209008 === i && 0 == (4196352 & t)
                    ? i
                    : 36972 === i || 36864 == (36864 & i)
                      ? 122
                      : 121
                  : 1073741824 & t && 0 == (8192 & t) && 20480 == (20480 & i)
                    ? i
                    : 241773 === i
                      ? 1073741824 & t
                        ? 143483
                        : 2097152 & t
                          ? 121
                          : i
                      : 209007 === i && 1073741824 & t
                        ? 143483
                        : 36864 == (36864 & i) ||
                            (209008 === i && 0 == (4194304 & t))
                          ? i
                          : 121
                : i;
          }
          return 208897;
        }
        function F(e) {
          return v(u(e)) || a(e, 93), 131;
        }
        function B(e) {
          return (
            117 !== e.source.charCodeAt(e.index + 1) && a(e, 4),
            (e.currentChar = e.source.charCodeAt((e.index += 2))),
            (function (e) {
              let t = 0;
              const n = e.currentChar;
              if (123 === n) {
                const n = e.index - 2;
                for (; 64 & g[u(e)]; )
                  (t = (t << 4) | f(e.currentChar)),
                    t > 1114111 && c(n, e.line, e.index + 1, 101);
                return (
                  125 !== e.currentChar && c(n, e.line, e.index - 1, 6), u(e), t
                );
              }
              0 == (64 & g[n]) && a(e, 6);
              const i = e.source.charCodeAt(e.index + 1);
              0 == (64 & g[i]) && a(e, 6);
              const r = e.source.charCodeAt(e.index + 2);
              0 == (64 & g[r]) && a(e, 6);
              const o = e.source.charCodeAt(e.index + 3);
              0 == (64 & g[o]) && a(e, 6);
              return (
                (t = (f(n) << 12) | (f(i) << 8) | (f(r) << 4) | f(o)),
                (e.currentChar = e.source.charCodeAt((e.index += 4))),
                t
              );
            })(e)
          );
        }
        const U = [
          129, 129, 129, 129, 129, 129, 129, 129, 129, 128, 136, 128, 128, 130,
          129, 129, 129, 129, 129, 129, 129, 129, 129, 129, 129, 129, 129, 129,
          129, 129, 129, 129, 128, 16842800, 134283267, 131, 208897, 8457015,
          8455751, 134283267, 67174411, 16, 8457014, 25233970, 18, 25233971,
          67108877, 8457016, 134283266, 134283266, 134283266, 134283266,
          134283266, 134283266, 134283266, 134283266, 134283266, 134283266, 21,
          1074790417, 8456258, 1077936157, 8456259, 22, 133, 208897, 208897,
          208897, 208897, 208897, 208897, 208897, 208897, 208897, 208897,
          208897, 208897, 208897, 208897, 208897, 208897, 208897, 208897,
          208897, 208897, 208897, 208897, 208897, 208897, 208897, 208897,
          69271571, 137, 20, 8455497, 208897, 132, 4096, 4096, 4096, 4096, 4096,
          4096, 4096, 208897, 4096, 208897, 208897, 4096, 208897, 4096, 208897,
          4096, 208897, 4096, 4096, 4096, 208897, 4096, 4096, 208897, 4096,
          4096, 2162700, 8455240, 1074790415, 16842801, 129,
        ];
        function z(e, t) {
          if (
            ((e.flags = 1 ^ (1 | e.flags)),
            (e.startPos = e.index),
            (e.startColumn = e.column),
            (e.startLine = e.line),
            (e.token = q(e, t, 0)),
            e.onToken && 1048576 !== e.token)
          ) {
            const t = {
              start: { line: e.linePos, column: e.colPos },
              end: { line: e.line, column: e.column },
            };
            e.onToken(
              (function (e) {
                switch (e) {
                  case 134283266:
                    return "NumericLiteral";
                  case 134283267:
                    return "StringLiteral";
                  case 86021:
                  case 86022:
                    return "BooleanLiteral";
                  case 86023:
                    return "NullLiteral";
                  case 65540:
                    return "RegularExpression";
                  case 67174408:
                  case 67174409:
                  case 132:
                    return "TemplateLiteral";
                  default:
                    return 143360 == (143360 & e)
                      ? "Identifier"
                      : 4096 == (4096 & e)
                        ? "Keyword"
                        : "Punctuator";
                }
              })(e.token),
              e.tokenPos,
              e.index,
              t,
            );
          }
        }
        function q(e, t, n) {
          const i = 0 === e.index,
            r = e.source;
          let o = e.index,
            s = e.line,
            c = e.column;
          for (; e.index < e.end; ) {
            (e.tokenPos = e.index), (e.colPos = e.column), (e.linePos = e.line);
            let f = e.currentChar;
            if (f <= 126) {
              const l = U[f];
              switch (l) {
                case 67174411:
                case 16:
                case 2162700:
                case 1074790415:
                case 69271571:
                case 20:
                case 21:
                case 1074790417:
                case 18:
                case 16842801:
                case 133:
                case 129:
                  return u(e), l;
                case 208897:
                  return D(e, t, 0);
                case 4096:
                  return D(e, t, 1);
                case 134283266:
                  return L(e, t, 144);
                case 134283267:
                  return A(e, t, f);
                case 132:
                  return N(e, t);
                case 137:
                  return j(e, t);
                case 131:
                  return F(e);
                case 128:
                  u(e);
                  break;
                case 130:
                  (n |= 5), m(e);
                  break;
                case 136:
                  d(e, n), (n = (-5 & n) | 1);
                  break;
                case 8456258:
                  let p = u(e);
                  if (e.index < e.end) {
                    if (60 === p)
                      return e.index < e.end && 61 === u(e)
                        ? (u(e), 4194334)
                        : 8456516;
                    if (61 === p) return u(e), 8456e3;
                    if (33 === p) {
                      const i = e.index + 1;
                      if (
                        i + 1 < e.end &&
                        45 === r.charCodeAt(i) &&
                        45 == r.charCodeAt(i + 1)
                      ) {
                        (e.column += 3),
                          (e.currentChar = r.charCodeAt((e.index += 3))),
                          (n = y(
                            e,
                            r,
                            n,
                            t,
                            2,
                            e.tokenPos,
                            e.linePos,
                            e.colPos,
                          )),
                          (o = e.tokenPos),
                          (s = e.linePos),
                          (c = e.colPos);
                        continue;
                      }
                      return 8456258;
                    }
                    if (47 === p) {
                      if ((16 & t) < 1) return 8456258;
                      const n = e.index + 1;
                      if (
                        n < e.end &&
                        ((p = r.charCodeAt(n)), 42 === p || 47 === p)
                      )
                        break;
                      return u(e), 25;
                    }
                  }
                  return 8456258;
                case 1077936157: {
                  u(e);
                  const t = e.currentChar;
                  return 61 === t
                    ? 61 === u(e)
                      ? (u(e), 8455996)
                      : 8455998
                    : 62 === t
                      ? (u(e), 10)
                      : 1077936157;
                }
                case 16842800:
                  return 61 !== u(e)
                    ? 16842800
                    : 61 !== u(e)
                      ? 8455999
                      : (u(e), 8455997);
                case 8457015:
                  return 61 !== u(e) ? 8457015 : (u(e), 4194342);
                case 8457014: {
                  if ((u(e), e.index >= e.end)) return 8457014;
                  const t = e.currentChar;
                  return 61 === t
                    ? (u(e), 4194340)
                    : 42 !== t
                      ? 8457014
                      : 61 !== u(e)
                        ? 8457273
                        : (u(e), 4194337);
                }
                case 8455497:
                  return 61 !== u(e) ? 8455497 : (u(e), 4194343);
                case 25233970: {
                  u(e);
                  const t = e.currentChar;
                  return 43 === t
                    ? (u(e), 33619995)
                    : 61 === t
                      ? (u(e), 4194338)
                      : 25233970;
                }
                case 25233971: {
                  u(e);
                  const l = e.currentChar;
                  if (45 === l) {
                    if ((u(e), (1 & n || i) && 62 === e.currentChar)) {
                      0 == (256 & t) && a(e, 108),
                        u(e),
                        (n = y(e, r, n, t, 3, o, s, c)),
                        (o = e.tokenPos),
                        (s = e.linePos),
                        (c = e.colPos);
                      continue;
                    }
                    return 33619996;
                  }
                  return 61 === l ? (u(e), 4194339) : 25233971;
                }
                case 8457016:
                  if ((u(e), e.index < e.end)) {
                    const i = e.currentChar;
                    if (47 === i) {
                      u(e),
                        (n = E(e, r, n, 0, e.tokenPos, e.linePos, e.colPos)),
                        (o = e.tokenPos),
                        (s = e.linePos),
                        (c = e.colPos);
                      continue;
                    }
                    if (42 === i) {
                      u(e),
                        (n = w(e, r, n)),
                        (o = e.tokenPos),
                        (s = e.linePos),
                        (c = e.colPos);
                      continue;
                    }
                    if (32768 & t) return C(e, t);
                    if (61 === i) return u(e), 4259877;
                  }
                  return 8457016;
                case 67108877:
                  const h = u(e);
                  if (h >= 48 && h <= 57) return L(e, t, 80);
                  if (46 === h) {
                    const t = e.index + 1;
                    if (t < e.end && 46 === r.charCodeAt(t))
                      return (
                        (e.column += 2),
                        (e.currentChar = r.charCodeAt((e.index += 2))),
                        14
                      );
                  }
                  return 67108877;
                case 8455240: {
                  u(e);
                  const t = e.currentChar;
                  return 124 === t
                    ? (u(e), 61 === e.currentChar ? (u(e), 4194346) : 8979003)
                    : 61 === t
                      ? (u(e), 4194344)
                      : 8455240;
                }
                case 8456259: {
                  u(e);
                  const t = e.currentChar;
                  if (61 === t) return u(e), 8456001;
                  if (62 !== t) return 8456259;
                  if ((u(e), e.index < e.end)) {
                    const t = e.currentChar;
                    if (62 === t)
                      return 61 === u(e) ? (u(e), 4194336) : 8456518;
                    if (61 === t) return u(e), 4194335;
                  }
                  return 8456517;
                }
                case 8455751: {
                  u(e);
                  const t = e.currentChar;
                  return 38 === t
                    ? (u(e), 61 === e.currentChar ? (u(e), 4194347) : 8979258)
                    : 61 === t
                      ? (u(e), 4194345)
                      : 8455751;
                }
                case 22: {
                  let t = u(e);
                  if (63 === t)
                    return (
                      u(e), 61 === e.currentChar ? (u(e), 4194348) : 276889982
                    );
                  if (46 === t) {
                    const n = e.index + 1;
                    if (
                      n < e.end &&
                      ((t = r.charCodeAt(n)), !(t >= 48 && t <= 57))
                    )
                      return u(e), 67108991;
                  }
                  return 22;
                }
              }
            } else {
              if ((8232 ^ f) <= 1) {
                (n = (-5 & n) | 1), m(e);
                continue;
              }
              if (
                55296 == (64512 & f) ||
                0 != (1 & (l[34816 + (f >>> 5)] >>> f))
              )
                return (
                  56320 == (64512 & f) &&
                    ((f = ((1023 & f) << 10) | (1023 & f) | 65536),
                    0 == (1 & (l[0 + (f >>> 5)] >>> f)) && a(e, 18, h(f)),
                    e.index++,
                    (e.currentChar = f)),
                  e.column++,
                  (e.tokenValue = ""),
                  H(e, t, 0, 0)
                );
              if (
                160 === (p = f) ||
                65279 === p ||
                133 === p ||
                5760 === p ||
                (p >= 8192 && p <= 8203) ||
                8239 === p ||
                8287 === p ||
                12288 === p ||
                8201 === p ||
                65519 === p
              ) {
                u(e);
                continue;
              }
              a(e, 18, h(f));
            }
          }
          var p;
          return 1048576;
        }
        const G = {
            AElig: "Æ",
            AMP: "&",
            Aacute: "Á",
            Abreve: "Ă",
            Acirc: "Â",
            Acy: "А",
            Afr: "𝔄",
            Agrave: "À",
            Alpha: "Α",
            Amacr: "Ā",
            And: "⩓",
            Aogon: "Ą",
            Aopf: "𝔸",
            ApplyFunction: "⁡",
            Aring: "Å",
            Ascr: "𝒜",
            Assign: "≔",
            Atilde: "Ã",
            Auml: "Ä",
            Backslash: "∖",
            Barv: "⫧",
            Barwed: "⌆",
            Bcy: "Б",
            Because: "∵",
            Bernoullis: "ℬ",
            Beta: "Β",
            Bfr: "𝔅",
            Bopf: "𝔹",
            Breve: "˘",
            Bscr: "ℬ",
            Bumpeq: "≎",
            CHcy: "Ч",
            COPY: "©",
            Cacute: "Ć",
            Cap: "⋒",
            CapitalDifferentialD: "ⅅ",
            Cayleys: "ℭ",
            Ccaron: "Č",
            Ccedil: "Ç",
            Ccirc: "Ĉ",
            Cconint: "∰",
            Cdot: "Ċ",
            Cedilla: "¸",
            CenterDot: "·",
            Cfr: "ℭ",
            Chi: "Χ",
            CircleDot: "⊙",
            CircleMinus: "⊖",
            CirclePlus: "⊕",
            CircleTimes: "⊗",
            ClockwiseContourIntegral: "∲",
            CloseCurlyDoubleQuote: "”",
            CloseCurlyQuote: "’",
            Colon: "∷",
            Colone: "⩴",
            Congruent: "≡",
            Conint: "∯",
            ContourIntegral: "∮",
            Copf: "ℂ",
            Coproduct: "∐",
            CounterClockwiseContourIntegral: "∳",
            Cross: "⨯",
            Cscr: "𝒞",
            Cup: "⋓",
            CupCap: "≍",
            DD: "ⅅ",
            DDotrahd: "⤑",
            DJcy: "Ђ",
            DScy: "Ѕ",
            DZcy: "Џ",
            Dagger: "‡",
            Darr: "↡",
            Dashv: "⫤",
            Dcaron: "Ď",
            Dcy: "Д",
            Del: "∇",
            Delta: "Δ",
            Dfr: "𝔇",
            DiacriticalAcute: "´",
            DiacriticalDot: "˙",
            DiacriticalDoubleAcute: "˝",
            DiacriticalGrave: "`",
            DiacriticalTilde: "˜",
            Diamond: "⋄",
            DifferentialD: "ⅆ",
            Dopf: "𝔻",
            Dot: "¨",
            DotDot: "⃜",
            DotEqual: "≐",
            DoubleContourIntegral: "∯",
            DoubleDot: "¨",
            DoubleDownArrow: "⇓",
            DoubleLeftArrow: "⇐",
            DoubleLeftRightArrow: "⇔",
            DoubleLeftTee: "⫤",
            DoubleLongLeftArrow: "⟸",
            DoubleLongLeftRightArrow: "⟺",
            DoubleLongRightArrow: "⟹",
            DoubleRightArrow: "⇒",
            DoubleRightTee: "⊨",
            DoubleUpArrow: "⇑",
            DoubleUpDownArrow: "⇕",
            DoubleVerticalBar: "∥",
            DownArrow: "↓",
            DownArrowBar: "⤓",
            DownArrowUpArrow: "⇵",
            DownBreve: "̑",
            DownLeftRightVector: "⥐",
            DownLeftTeeVector: "⥞",
            DownLeftVector: "↽",
            DownLeftVectorBar: "⥖",
            DownRightTeeVector: "⥟",
            DownRightVector: "⇁",
            DownRightVectorBar: "⥗",
            DownTee: "⊤",
            DownTeeArrow: "↧",
            Downarrow: "⇓",
            Dscr: "𝒟",
            Dstrok: "Đ",
            ENG: "Ŋ",
            ETH: "Ð",
            Eacute: "É",
            Ecaron: "Ě",
            Ecirc: "Ê",
            Ecy: "Э",
            Edot: "Ė",
            Efr: "𝔈",
            Egrave: "È",
            Element: "∈",
            Emacr: "Ē",
            EmptySmallSquare: "◻",
            EmptyVerySmallSquare: "▫",
            Eogon: "Ę",
            Eopf: "𝔼",
            Epsilon: "Ε",
            Equal: "⩵",
            EqualTilde: "≂",
            Equilibrium: "⇌",
            Escr: "ℰ",
            Esim: "⩳",
            Eta: "Η",
            Euml: "Ë",
            Exists: "∃",
            ExponentialE: "ⅇ",
            Fcy: "Ф",
            Ffr: "𝔉",
            FilledSmallSquare: "◼",
            FilledVerySmallSquare: "▪",
            Fopf: "𝔽",
            ForAll: "∀",
            Fouriertrf: "ℱ",
            Fscr: "ℱ",
            GJcy: "Ѓ",
            GT: ">",
            Gamma: "Γ",
            Gammad: "Ϝ",
            Gbreve: "Ğ",
            Gcedil: "Ģ",
            Gcirc: "Ĝ",
            Gcy: "Г",
            Gdot: "Ġ",
            Gfr: "𝔊",
            Gg: "⋙",
            Gopf: "𝔾",
            GreaterEqual: "≥",
            GreaterEqualLess: "⋛",
            GreaterFullEqual: "≧",
            GreaterGreater: "⪢",
            GreaterLess: "≷",
            GreaterSlantEqual: "⩾",
            GreaterTilde: "≳",
            Gscr: "𝒢",
            Gt: "≫",
            HARDcy: "Ъ",
            Hacek: "ˇ",
            Hat: "^",
            Hcirc: "Ĥ",
            Hfr: "ℌ",
            HilbertSpace: "ℋ",
            Hopf: "ℍ",
            HorizontalLine: "─",
            Hscr: "ℋ",
            Hstrok: "Ħ",
            HumpDownHump: "≎",
            HumpEqual: "≏",
            IEcy: "Е",
            IJlig: "Ĳ",
            IOcy: "Ё",
            Iacute: "Í",
            Icirc: "Î",
            Icy: "И",
            Idot: "İ",
            Ifr: "ℑ",
            Igrave: "Ì",
            Im: "ℑ",
            Imacr: "Ī",
            ImaginaryI: "ⅈ",
            Implies: "⇒",
            Int: "∬",
            Integral: "∫",
            Intersection: "⋂",
            InvisibleComma: "⁣",
            InvisibleTimes: "⁢",
            Iogon: "Į",
            Iopf: "𝕀",
            Iota: "Ι",
            Iscr: "ℐ",
            Itilde: "Ĩ",
            Iukcy: "І",
            Iuml: "Ï",
            Jcirc: "Ĵ",
            Jcy: "Й",
            Jfr: "𝔍",
            Jopf: "𝕁",
            Jscr: "𝒥",
            Jsercy: "Ј",
            Jukcy: "Є",
            KHcy: "Х",
            KJcy: "Ќ",
            Kappa: "Κ",
            Kcedil: "Ķ",
            Kcy: "К",
            Kfr: "𝔎",
            Kopf: "𝕂",
            Kscr: "𝒦",
            LJcy: "Љ",
            LT: "<",
            Lacute: "Ĺ",
            Lambda: "Λ",
            Lang: "⟪",
            Laplacetrf: "ℒ",
            Larr: "↞",
            Lcaron: "Ľ",
            Lcedil: "Ļ",
            Lcy: "Л",
            LeftAngleBracket: "⟨",
            LeftArrow: "←",
            LeftArrowBar: "⇤",
            LeftArrowRightArrow: "⇆",
            LeftCeiling: "⌈",
            LeftDoubleBracket: "⟦",
            LeftDownTeeVector: "⥡",
            LeftDownVector: "⇃",
            LeftDownVectorBar: "⥙",
            LeftFloor: "⌊",
            LeftRightArrow: "↔",
            LeftRightVector: "⥎",
            LeftTee: "⊣",
            LeftTeeArrow: "↤",
            LeftTeeVector: "⥚",
            LeftTriangle: "⊲",
            LeftTriangleBar: "⧏",
            LeftTriangleEqual: "⊴",
            LeftUpDownVector: "⥑",
            LeftUpTeeVector: "⥠",
            LeftUpVector: "↿",
            LeftUpVectorBar: "⥘",
            LeftVector: "↼",
            LeftVectorBar: "⥒",
            Leftarrow: "⇐",
            Leftrightarrow: "⇔",
            LessEqualGreater: "⋚",
            LessFullEqual: "≦",
            LessGreater: "≶",
            LessLess: "⪡",
            LessSlantEqual: "⩽",
            LessTilde: "≲",
            Lfr: "𝔏",
            Ll: "⋘",
            Lleftarrow: "⇚",
            Lmidot: "Ŀ",
            LongLeftArrow: "⟵",
            LongLeftRightArrow: "⟷",
            LongRightArrow: "⟶",
            Longleftarrow: "⟸",
            Longleftrightarrow: "⟺",
            Longrightarrow: "⟹",
            Lopf: "𝕃",
            LowerLeftArrow: "↙",
            LowerRightArrow: "↘",
            Lscr: "ℒ",
            Lsh: "↰",
            Lstrok: "Ł",
            Lt: "≪",
            Map: "⤅",
            Mcy: "М",
            MediumSpace: " ",
            Mellintrf: "ℳ",
            Mfr: "𝔐",
            MinusPlus: "∓",
            Mopf: "𝕄",
            Mscr: "ℳ",
            Mu: "Μ",
            NJcy: "Њ",
            Nacute: "Ń",
            Ncaron: "Ň",
            Ncedil: "Ņ",
            Ncy: "Н",
            NegativeMediumSpace: "​",
            NegativeThickSpace: "​",
            NegativeThinSpace: "​",
            NegativeVeryThinSpace: "​",
            NestedGreaterGreater: "≫",
            NestedLessLess: "≪",
            NewLine: "\n",
            Nfr: "𝔑",
            NoBreak: "⁠",
            NonBreakingSpace: " ",
            Nopf: "ℕ",
            Not: "⫬",
            NotCongruent: "≢",
            NotCupCap: "≭",
            NotDoubleVerticalBar: "∦",
            NotElement: "∉",
            NotEqual: "≠",
            NotEqualTilde: "≂̸",
            NotExists: "∄",
            NotGreater: "≯",
            NotGreaterEqual: "≱",
            NotGreaterFullEqual: "≧̸",
            NotGreaterGreater: "≫̸",
            NotGreaterLess: "≹",
            NotGreaterSlantEqual: "⩾̸",
            NotGreaterTilde: "≵",
            NotHumpDownHump: "≎̸",
            NotHumpEqual: "≏̸",
            NotLeftTriangle: "⋪",
            NotLeftTriangleBar: "⧏̸",
            NotLeftTriangleEqual: "⋬",
            NotLess: "≮",
            NotLessEqual: "≰",
            NotLessGreater: "≸",
            NotLessLess: "≪̸",
            NotLessSlantEqual: "⩽̸",
            NotLessTilde: "≴",
            NotNestedGreaterGreater: "⪢̸",
            NotNestedLessLess: "⪡̸",
            NotPrecedes: "⊀",
            NotPrecedesEqual: "⪯̸",
            NotPrecedesSlantEqual: "⋠",
            NotReverseElement: "∌",
            NotRightTriangle: "⋫",
            NotRightTriangleBar: "⧐̸",
            NotRightTriangleEqual: "⋭",
            NotSquareSubset: "⊏̸",
            NotSquareSubsetEqual: "⋢",
            NotSquareSuperset: "⊐̸",
            NotSquareSupersetEqual: "⋣",
            NotSubset: "⊂⃒",
            NotSubsetEqual: "⊈",
            NotSucceeds: "⊁",
            NotSucceedsEqual: "⪰̸",
            NotSucceedsSlantEqual: "⋡",
            NotSucceedsTilde: "≿̸",
            NotSuperset: "⊃⃒",
            NotSupersetEqual: "⊉",
            NotTilde: "≁",
            NotTildeEqual: "≄",
            NotTildeFullEqual: "≇",
            NotTildeTilde: "≉",
            NotVerticalBar: "∤",
            Nscr: "𝒩",
            Ntilde: "Ñ",
            Nu: "Ν",
            OElig: "Œ",
            Oacute: "Ó",
            Ocirc: "Ô",
            Ocy: "О",
            Odblac: "Ő",
            Ofr: "𝔒",
            Ograve: "Ò",
            Omacr: "Ō",
            Omega: "Ω",
            Omicron: "Ο",
            Oopf: "𝕆",
            OpenCurlyDoubleQuote: "“",
            OpenCurlyQuote: "‘",
            Or: "⩔",
            Oscr: "𝒪",
            Oslash: "Ø",
            Otilde: "Õ",
            Otimes: "⨷",
            Ouml: "Ö",
            OverBar: "‾",
            OverBrace: "⏞",
            OverBracket: "⎴",
            OverParenthesis: "⏜",
            PartialD: "∂",
            Pcy: "П",
            Pfr: "𝔓",
            Phi: "Φ",
            Pi: "Π",
            PlusMinus: "±",
            Poincareplane: "ℌ",
            Popf: "ℙ",
            Pr: "⪻",
            Precedes: "≺",
            PrecedesEqual: "⪯",
            PrecedesSlantEqual: "≼",
            PrecedesTilde: "≾",
            Prime: "″",
            Product: "∏",
            Proportion: "∷",
            Proportional: "∝",
            Pscr: "𝒫",
            Psi: "Ψ",
            QUOT: '"',
            Qfr: "𝔔",
            Qopf: "ℚ",
            Qscr: "𝒬",
            RBarr: "⤐",
            REG: "®",
            Racute: "Ŕ",
            Rang: "⟫",
            Rarr: "↠",
            Rarrtl: "⤖",
            Rcaron: "Ř",
            Rcedil: "Ŗ",
            Rcy: "Р",
            Re: "ℜ",
            ReverseElement: "∋",
            ReverseEquilibrium: "⇋",
            ReverseUpEquilibrium: "⥯",
            Rfr: "ℜ",
            Rho: "Ρ",
            RightAngleBracket: "⟩",
            RightArrow: "→",
            RightArrowBar: "⇥",
            RightArrowLeftArrow: "⇄",
            RightCeiling: "⌉",
            RightDoubleBracket: "⟧",
            RightDownTeeVector: "⥝",
            RightDownVector: "⇂",
            RightDownVectorBar: "⥕",
            RightFloor: "⌋",
            RightTee: "⊢",
            RightTeeArrow: "↦",
            RightTeeVector: "⥛",
            RightTriangle: "⊳",
            RightTriangleBar: "⧐",
            RightTriangleEqual: "⊵",
            RightUpDownVector: "⥏",
            RightUpTeeVector: "⥜",
            RightUpVector: "↾",
            RightUpVectorBar: "⥔",
            RightVector: "⇀",
            RightVectorBar: "⥓",
            Rightarrow: "⇒",
            Ropf: "ℝ",
            RoundImplies: "⥰",
            Rrightarrow: "⇛",
            Rscr: "ℛ",
            Rsh: "↱",
            RuleDelayed: "⧴",
            SHCHcy: "Щ",
            SHcy: "Ш",
            SOFTcy: "Ь",
            Sacute: "Ś",
            Sc: "⪼",
            Scaron: "Š",
            Scedil: "Ş",
            Scirc: "Ŝ",
            Scy: "С",
            Sfr: "𝔖",
            ShortDownArrow: "↓",
            ShortLeftArrow: "←",
            ShortRightArrow: "→",
            ShortUpArrow: "↑",
            Sigma: "Σ",
            SmallCircle: "∘",
            Sopf: "𝕊",
            Sqrt: "√",
            Square: "□",
            SquareIntersection: "⊓",
            SquareSubset: "⊏",
            SquareSubsetEqual: "⊑",
            SquareSuperset: "⊐",
            SquareSupersetEqual: "⊒",
            SquareUnion: "⊔",
            Sscr: "𝒮",
            Star: "⋆",
            Sub: "⋐",
            Subset: "⋐",
            SubsetEqual: "⊆",
            Succeeds: "≻",
            SucceedsEqual: "⪰",
            SucceedsSlantEqual: "≽",
            SucceedsTilde: "≿",
            SuchThat: "∋",
            Sum: "∑",
            Sup: "⋑",
            Superset: "⊃",
            SupersetEqual: "⊇",
            Supset: "⋑",
            THORN: "Þ",
            TRADE: "™",
            TSHcy: "Ћ",
            TScy: "Ц",
            Tab: "\t",
            Tau: "Τ",
            Tcaron: "Ť",
            Tcedil: "Ţ",
            Tcy: "Т",
            Tfr: "𝔗",
            Therefore: "∴",
            Theta: "Θ",
            ThickSpace: "  ",
            ThinSpace: " ",
            Tilde: "∼",
            TildeEqual: "≃",
            TildeFullEqual: "≅",
            TildeTilde: "≈",
            Topf: "𝕋",
            TripleDot: "⃛",
            Tscr: "𝒯",
            Tstrok: "Ŧ",
            Uacute: "Ú",
            Uarr: "↟",
            Uarrocir: "⥉",
            Ubrcy: "Ў",
            Ubreve: "Ŭ",
            Ucirc: "Û",
            Ucy: "У",
            Udblac: "Ű",
            Ufr: "𝔘",
            Ugrave: "Ù",
            Umacr: "Ū",
            UnderBar: "_",
            UnderBrace: "⏟",
            UnderBracket: "⎵",
            UnderParenthesis: "⏝",
            Union: "⋃",
            UnionPlus: "⊎",
            Uogon: "Ų",
            Uopf: "𝕌",
            UpArrow: "↑",
            UpArrowBar: "⤒",
            UpArrowDownArrow: "⇅",
            UpDownArrow: "↕",
            UpEquilibrium: "⥮",
            UpTee: "⊥",
            UpTeeArrow: "↥",
            Uparrow: "⇑",
            Updownarrow: "⇕",
            UpperLeftArrow: "↖",
            UpperRightArrow: "↗",
            Upsi: "ϒ",
            Upsilon: "Υ",
            Uring: "Ů",
            Uscr: "𝒰",
            Utilde: "Ũ",
            Uuml: "Ü",
            VDash: "⊫",
            Vbar: "⫫",
            Vcy: "В",
            Vdash: "⊩",
            Vdashl: "⫦",
            Vee: "⋁",
            Verbar: "‖",
            Vert: "‖",
            VerticalBar: "∣",
            VerticalLine: "|",
            VerticalSeparator: "❘",
            VerticalTilde: "≀",
            VeryThinSpace: " ",
            Vfr: "𝔙",
            Vopf: "𝕍",
            Vscr: "𝒱",
            Vvdash: "⊪",
            Wcirc: "Ŵ",
            Wedge: "⋀",
            Wfr: "𝔚",
            Wopf: "𝕎",
            Wscr: "𝒲",
            Xfr: "𝔛",
            Xi: "Ξ",
            Xopf: "𝕏",
            Xscr: "𝒳",
            YAcy: "Я",
            YIcy: "Ї",
            YUcy: "Ю",
            Yacute: "Ý",
            Ycirc: "Ŷ",
            Ycy: "Ы",
            Yfr: "𝔜",
            Yopf: "𝕐",
            Yscr: "𝒴",
            Yuml: "Ÿ",
            ZHcy: "Ж",
            Zacute: "Ź",
            Zcaron: "Ž",
            Zcy: "З",
            Zdot: "Ż",
            ZeroWidthSpace: "​",
            Zeta: "Ζ",
            Zfr: "ℨ",
            Zopf: "ℤ",
            Zscr: "𝒵",
            aacute: "á",
            abreve: "ă",
            ac: "∾",
            acE: "∾̳",
            acd: "∿",
            acirc: "â",
            acute: "´",
            acy: "а",
            aelig: "æ",
            af: "⁡",
            afr: "𝔞",
            agrave: "à",
            alefsym: "ℵ",
            aleph: "ℵ",
            alpha: "α",
            amacr: "ā",
            amalg: "⨿",
            amp: "&",
            and: "∧",
            andand: "⩕",
            andd: "⩜",
            andslope: "⩘",
            andv: "⩚",
            ang: "∠",
            ange: "⦤",
            angle: "∠",
            angmsd: "∡",
            angmsdaa: "⦨",
            angmsdab: "⦩",
            angmsdac: "⦪",
            angmsdad: "⦫",
            angmsdae: "⦬",
            angmsdaf: "⦭",
            angmsdag: "⦮",
            angmsdah: "⦯",
            angrt: "∟",
            angrtvb: "⊾",
            angrtvbd: "⦝",
            angsph: "∢",
            angst: "Å",
            angzarr: "⍼",
            aogon: "ą",
            aopf: "𝕒",
            ap: "≈",
            apE: "⩰",
            apacir: "⩯",
            ape: "≊",
            apid: "≋",
            apos: "'",
            approx: "≈",
            approxeq: "≊",
            aring: "å",
            ascr: "𝒶",
            ast: "*",
            asymp: "≈",
            asympeq: "≍",
            atilde: "ã",
            auml: "ä",
            awconint: "∳",
            awint: "⨑",
            bNot: "⫭",
            backcong: "≌",
            backepsilon: "϶",
            backprime: "‵",
            backsim: "∽",
            backsimeq: "⋍",
            barvee: "⊽",
            barwed: "⌅",
            barwedge: "⌅",
            bbrk: "⎵",
            bbrktbrk: "⎶",
            bcong: "≌",
            bcy: "б",
            bdquo: "„",
            becaus: "∵",
            because: "∵",
            bemptyv: "⦰",
            bepsi: "϶",
            bernou: "ℬ",
            beta: "β",
            beth: "ℶ",
            between: "≬",
            bfr: "𝔟",
            bigcap: "⋂",
            bigcirc: "◯",
            bigcup: "⋃",
            bigodot: "⨀",
            bigoplus: "⨁",
            bigotimes: "⨂",
            bigsqcup: "⨆",
            bigstar: "★",
            bigtriangledown: "▽",
            bigtriangleup: "△",
            biguplus: "⨄",
            bigvee: "⋁",
            bigwedge: "⋀",
            bkarow: "⤍",
            blacklozenge: "⧫",
            blacksquare: "▪",
            blacktriangle: "▴",
            blacktriangledown: "▾",
            blacktriangleleft: "◂",
            blacktriangleright: "▸",
            blank: "␣",
            blk12: "▒",
            blk14: "░",
            blk34: "▓",
            block: "█",
            bne: "=⃥",
            bnequiv: "≡⃥",
            bnot: "⌐",
            bopf: "𝕓",
            bot: "⊥",
            bottom: "⊥",
            bowtie: "⋈",
            boxDL: "╗",
            boxDR: "╔",
            boxDl: "╖",
            boxDr: "╓",
            boxH: "═",
            boxHD: "╦",
            boxHU: "╩",
            boxHd: "╤",
            boxHu: "╧",
            boxUL: "╝",
            boxUR: "╚",
            boxUl: "╜",
            boxUr: "╙",
            boxV: "║",
            boxVH: "╬",
            boxVL: "╣",
            boxVR: "╠",
            boxVh: "╫",
            boxVl: "╢",
            boxVr: "╟",
            boxbox: "⧉",
            boxdL: "╕",
            boxdR: "╒",
            boxdl: "┐",
            boxdr: "┌",
            boxh: "─",
            boxhD: "╥",
            boxhU: "╨",
            boxhd: "┬",
            boxhu: "┴",
            boxminus: "⊟",
            boxplus: "⊞",
            boxtimes: "⊠",
            boxuL: "╛",
            boxuR: "╘",
            boxul: "┘",
            boxur: "└",
            boxv: "│",
            boxvH: "╪",
            boxvL: "╡",
            boxvR: "╞",
            boxvh: "┼",
            boxvl: "┤",
            boxvr: "├",
            bprime: "‵",
            breve: "˘",
            brvbar: "¦",
            bscr: "𝒷",
            bsemi: "⁏",
            bsim: "∽",
            bsime: "⋍",
            bsol: "\\",
            bsolb: "⧅",
            bsolhsub: "⟈",
            bull: "•",
            bullet: "•",
            bump: "≎",
            bumpE: "⪮",
            bumpe: "≏",
            bumpeq: "≏",
            cacute: "ć",
            cap: "∩",
            capand: "⩄",
            capbrcup: "⩉",
            capcap: "⩋",
            capcup: "⩇",
            capdot: "⩀",
            caps: "∩︀",
            caret: "⁁",
            caron: "ˇ",
            ccaps: "⩍",
            ccaron: "č",
            ccedil: "ç",
            ccirc: "ĉ",
            ccups: "⩌",
            ccupssm: "⩐",
            cdot: "ċ",
            cedil: "¸",
            cemptyv: "⦲",
            cent: "¢",
            centerdot: "·",
            cfr: "𝔠",
            chcy: "ч",
            check: "✓",
            checkmark: "✓",
            chi: "χ",
            cir: "○",
            cirE: "⧃",
            circ: "ˆ",
            circeq: "≗",
            circlearrowleft: "↺",
            circlearrowright: "↻",
            circledR: "®",
            circledS: "Ⓢ",
            circledast: "⊛",
            circledcirc: "⊚",
            circleddash: "⊝",
            cire: "≗",
            cirfnint: "⨐",
            cirmid: "⫯",
            cirscir: "⧂",
            clubs: "♣",
            clubsuit: "♣",
            colon: ":",
            colone: "≔",
            coloneq: "≔",
            comma: ",",
            commat: "@",
            comp: "∁",
            compfn: "∘",
            complement: "∁",
            complexes: "ℂ",
            cong: "≅",
            congdot: "⩭",
            conint: "∮",
            copf: "𝕔",
            coprod: "∐",
            copy: "©",
            copysr: "℗",
            crarr: "↵",
            cross: "✗",
            cscr: "𝒸",
            csub: "⫏",
            csube: "⫑",
            csup: "⫐",
            csupe: "⫒",
            ctdot: "⋯",
            cudarrl: "⤸",
            cudarrr: "⤵",
            cuepr: "⋞",
            cuesc: "⋟",
            cularr: "↶",
            cularrp: "⤽",
            cup: "∪",
            cupbrcap: "⩈",
            cupcap: "⩆",
            cupcup: "⩊",
            cupdot: "⊍",
            cupor: "⩅",
            cups: "∪︀",
            curarr: "↷",
            curarrm: "⤼",
            curlyeqprec: "⋞",
            curlyeqsucc: "⋟",
            curlyvee: "⋎",
            curlywedge: "⋏",
            curren: "¤",
            curvearrowleft: "↶",
            curvearrowright: "↷",
            cuvee: "⋎",
            cuwed: "⋏",
            cwconint: "∲",
            cwint: "∱",
            cylcty: "⌭",
            dArr: "⇓",
            dHar: "⥥",
            dagger: "†",
            daleth: "ℸ",
            darr: "↓",
            dash: "‐",
            dashv: "⊣",
            dbkarow: "⤏",
            dblac: "˝",
            dcaron: "ď",
            dcy: "д",
            dd: "ⅆ",
            ddagger: "‡",
            ddarr: "⇊",
            ddotseq: "⩷",
            deg: "°",
            delta: "δ",
            demptyv: "⦱",
            dfisht: "⥿",
            dfr: "𝔡",
            dharl: "⇃",
            dharr: "⇂",
            diam: "⋄",
            diamond: "⋄",
            diamondsuit: "♦",
            diams: "♦",
            die: "¨",
            digamma: "ϝ",
            disin: "⋲",
            div: "÷",
            divide: "÷",
            divideontimes: "⋇",
            divonx: "⋇",
            djcy: "ђ",
            dlcorn: "⌞",
            dlcrop: "⌍",
            dollar: "$",
            dopf: "𝕕",
            dot: "˙",
            doteq: "≐",
            doteqdot: "≑",
            dotminus: "∸",
            dotplus: "∔",
            dotsquare: "⊡",
            doublebarwedge: "⌆",
            downarrow: "↓",
            downdownarrows: "⇊",
            downharpoonleft: "⇃",
            downharpoonright: "⇂",
            drbkarow: "⤐",
            drcorn: "⌟",
            drcrop: "⌌",
            dscr: "𝒹",
            dscy: "ѕ",
            dsol: "⧶",
            dstrok: "đ",
            dtdot: "⋱",
            dtri: "▿",
            dtrif: "▾",
            duarr: "⇵",
            duhar: "⥯",
            dwangle: "⦦",
            dzcy: "џ",
            dzigrarr: "⟿",
            eDDot: "⩷",
            eDot: "≑",
            eacute: "é",
            easter: "⩮",
            ecaron: "ě",
            ecir: "≖",
            ecirc: "ê",
            ecolon: "≕",
            ecy: "э",
            edot: "ė",
            ee: "ⅇ",
            efDot: "≒",
            efr: "𝔢",
            eg: "⪚",
            egrave: "è",
            egs: "⪖",
            egsdot: "⪘",
            el: "⪙",
            elinters: "⏧",
            ell: "ℓ",
            els: "⪕",
            elsdot: "⪗",
            emacr: "ē",
            empty: "∅",
            emptyset: "∅",
            emptyv: "∅",
            emsp13: " ",
            emsp14: " ",
            emsp: " ",
            eng: "ŋ",
            ensp: " ",
            eogon: "ę",
            eopf: "𝕖",
            epar: "⋕",
            eparsl: "⧣",
            eplus: "⩱",
            epsi: "ε",
            epsilon: "ε",
            epsiv: "ϵ",
            eqcirc: "≖",
            eqcolon: "≕",
            eqsim: "≂",
            eqslantgtr: "⪖",
            eqslantless: "⪕",
            equals: "=",
            equest: "≟",
            equiv: "≡",
            equivDD: "⩸",
            eqvparsl: "⧥",
            erDot: "≓",
            erarr: "⥱",
            escr: "ℯ",
            esdot: "≐",
            esim: "≂",
            eta: "η",
            eth: "ð",
            euml: "ë",
            euro: "€",
            excl: "!",
            exist: "∃",
            expectation: "ℰ",
            exponentiale: "ⅇ",
            fallingdotseq: "≒",
            fcy: "ф",
            female: "♀",
            ffilig: "ﬃ",
            fflig: "ﬀ",
            ffllig: "ﬄ",
            ffr: "𝔣",
            filig: "ﬁ",
            fjlig: "fj",
            flat: "♭",
            fllig: "ﬂ",
            fltns: "▱",
            fnof: "ƒ",
            fopf: "𝕗",
            forall: "∀",
            fork: "⋔",
            forkv: "⫙",
            fpartint: "⨍",
            frac12: "½",
            frac13: "⅓",
            frac14: "¼",
            frac15: "⅕",
            frac16: "⅙",
            frac18: "⅛",
            frac23: "⅔",
            frac25: "⅖",
            frac34: "¾",
            frac35: "⅗",
            frac38: "⅜",
            frac45: "⅘",
            frac56: "⅚",
            frac58: "⅝",
            frac78: "⅞",
            frasl: "⁄",
            frown: "⌢",
            fscr: "𝒻",
            gE: "≧",
            gEl: "⪌",
            gacute: "ǵ",
            gamma: "γ",
            gammad: "ϝ",
            gap: "⪆",
            gbreve: "ğ",
            gcirc: "ĝ",
            gcy: "г",
            gdot: "ġ",
            ge: "≥",
            gel: "⋛",
            geq: "≥",
            geqq: "≧",
            geqslant: "⩾",
            ges: "⩾",
            gescc: "⪩",
            gesdot: "⪀",
            gesdoto: "⪂",
            gesdotol: "⪄",
            gesl: "⋛︀",
            gesles: "⪔",
            gfr: "𝔤",
            gg: "≫",
            ggg: "⋙",
            gimel: "ℷ",
            gjcy: "ѓ",
            gl: "≷",
            glE: "⪒",
            gla: "⪥",
            glj: "⪤",
            gnE: "≩",
            gnap: "⪊",
            gnapprox: "⪊",
            gne: "⪈",
            gneq: "⪈",
            gneqq: "≩",
            gnsim: "⋧",
            gopf: "𝕘",
            grave: "`",
            gscr: "ℊ",
            gsim: "≳",
            gsime: "⪎",
            gsiml: "⪐",
            gt: ">",
            gtcc: "⪧",
            gtcir: "⩺",
            gtdot: "⋗",
            gtlPar: "⦕",
            gtquest: "⩼",
            gtrapprox: "⪆",
            gtrarr: "⥸",
            gtrdot: "⋗",
            gtreqless: "⋛",
            gtreqqless: "⪌",
            gtrless: "≷",
            gtrsim: "≳",
            gvertneqq: "≩︀",
            gvnE: "≩︀",
            hArr: "⇔",
            hairsp: " ",
            half: "½",
            hamilt: "ℋ",
            hardcy: "ъ",
            harr: "↔",
            harrcir: "⥈",
            harrw: "↭",
            hbar: "ℏ",
            hcirc: "ĥ",
            hearts: "♥",
            heartsuit: "♥",
            hellip: "…",
            hercon: "⊹",
            hfr: "𝔥",
            hksearow: "⤥",
            hkswarow: "⤦",
            hoarr: "⇿",
            homtht: "∻",
            hookleftarrow: "↩",
            hookrightarrow: "↪",
            hopf: "𝕙",
            horbar: "―",
            hscr: "𝒽",
            hslash: "ℏ",
            hstrok: "ħ",
            hybull: "⁃",
            hyphen: "‐",
            iacute: "í",
            ic: "⁣",
            icirc: "î",
            icy: "и",
            iecy: "е",
            iexcl: "¡",
            iff: "⇔",
            ifr: "𝔦",
            igrave: "ì",
            ii: "ⅈ",
            iiiint: "⨌",
            iiint: "∭",
            iinfin: "⧜",
            iiota: "℩",
            ijlig: "ĳ",
            imacr: "ī",
            image: "ℑ",
            imagline: "ℐ",
            imagpart: "ℑ",
            imath: "ı",
            imof: "⊷",
            imped: "Ƶ",
            in: "∈",
            incare: "℅",
            infin: "∞",
            infintie: "⧝",
            inodot: "ı",
            int: "∫",
            intcal: "⊺",
            integers: "ℤ",
            intercal: "⊺",
            intlarhk: "⨗",
            intprod: "⨼",
            iocy: "ё",
            iogon: "į",
            iopf: "𝕚",
            iota: "ι",
            iprod: "⨼",
            iquest: "¿",
            iscr: "𝒾",
            isin: "∈",
            isinE: "⋹",
            isindot: "⋵",
            isins: "⋴",
            isinsv: "⋳",
            isinv: "∈",
            it: "⁢",
            itilde: "ĩ",
            iukcy: "і",
            iuml: "ï",
            jcirc: "ĵ",
            jcy: "й",
            jfr: "𝔧",
            jmath: "ȷ",
            jopf: "𝕛",
            jscr: "𝒿",
            jsercy: "ј",
            jukcy: "є",
            kappa: "κ",
            kappav: "ϰ",
            kcedil: "ķ",
            kcy: "к",
            kfr: "𝔨",
            kgreen: "ĸ",
            khcy: "х",
            kjcy: "ќ",
            kopf: "𝕜",
            kscr: "𝓀",
            lAarr: "⇚",
            lArr: "⇐",
            lAtail: "⤛",
            lBarr: "⤎",
            lE: "≦",
            lEg: "⪋",
            lHar: "⥢",
            lacute: "ĺ",
            laemptyv: "⦴",
            lagran: "ℒ",
            lambda: "λ",
            lang: "⟨",
            langd: "⦑",
            langle: "⟨",
            lap: "⪅",
            laquo: "«",
            larr: "←",
            larrb: "⇤",
            larrbfs: "⤟",
            larrfs: "⤝",
            larrhk: "↩",
            larrlp: "↫",
            larrpl: "⤹",
            larrsim: "⥳",
            larrtl: "↢",
            lat: "⪫",
            latail: "⤙",
            late: "⪭",
            lates: "⪭︀",
            lbarr: "⤌",
            lbbrk: "❲",
            lbrace: "{",
            lbrack: "[",
            lbrke: "⦋",
            lbrksld: "⦏",
            lbrkslu: "⦍",
            lcaron: "ľ",
            lcedil: "ļ",
            lceil: "⌈",
            lcub: "{",
            lcy: "л",
            ldca: "⤶",
            ldquo: "“",
            ldquor: "„",
            ldrdhar: "⥧",
            ldrushar: "⥋",
            ldsh: "↲",
            le: "≤",
            leftarrow: "←",
            leftarrowtail: "↢",
            leftharpoondown: "↽",
            leftharpoonup: "↼",
            leftleftarrows: "⇇",
            leftrightarrow: "↔",
            leftrightarrows: "⇆",
            leftrightharpoons: "⇋",
            leftrightsquigarrow: "↭",
            leftthreetimes: "⋋",
            leg: "⋚",
            leq: "≤",
            leqq: "≦",
            leqslant: "⩽",
            les: "⩽",
            lescc: "⪨",
            lesdot: "⩿",
            lesdoto: "⪁",
            lesdotor: "⪃",
            lesg: "⋚︀",
            lesges: "⪓",
            lessapprox: "⪅",
            lessdot: "⋖",
            lesseqgtr: "⋚",
            lesseqqgtr: "⪋",
            lessgtr: "≶",
            lesssim: "≲",
            lfisht: "⥼",
            lfloor: "⌊",
            lfr: "𝔩",
            lg: "≶",
            lgE: "⪑",
            lhard: "↽",
            lharu: "↼",
            lharul: "⥪",
            lhblk: "▄",
            ljcy: "љ",
            ll: "≪",
            llarr: "⇇",
            llcorner: "⌞",
            llhard: "⥫",
            lltri: "◺",
            lmidot: "ŀ",
            lmoust: "⎰",
            lmoustache: "⎰",
            lnE: "≨",
            lnap: "⪉",
            lnapprox: "⪉",
            lne: "⪇",
            lneq: "⪇",
            lneqq: "≨",
            lnsim: "⋦",
            loang: "⟬",
            loarr: "⇽",
            lobrk: "⟦",
            longleftarrow: "⟵",
            longleftrightarrow: "⟷",
            longmapsto: "⟼",
            longrightarrow: "⟶",
            looparrowleft: "↫",
            looparrowright: "↬",
            lopar: "⦅",
            lopf: "𝕝",
            loplus: "⨭",
            lotimes: "⨴",
            lowast: "∗",
            lowbar: "_",
            loz: "◊",
            lozenge: "◊",
            lozf: "⧫",
            lpar: "(",
            lparlt: "⦓",
            lrarr: "⇆",
            lrcorner: "⌟",
            lrhar: "⇋",
            lrhard: "⥭",
            lrm: "‎",
            lrtri: "⊿",
            lsaquo: "‹",
            lscr: "𝓁",
            lsh: "↰",
            lsim: "≲",
            lsime: "⪍",
            lsimg: "⪏",
            lsqb: "[",
            lsquo: "‘",
            lsquor: "‚",
            lstrok: "ł",
            lt: "<",
            ltcc: "⪦",
            ltcir: "⩹",
            ltdot: "⋖",
            lthree: "⋋",
            ltimes: "⋉",
            ltlarr: "⥶",
            ltquest: "⩻",
            ltrPar: "⦖",
            ltri: "◃",
            ltrie: "⊴",
            ltrif: "◂",
            lurdshar: "⥊",
            luruhar: "⥦",
            lvertneqq: "≨︀",
            lvnE: "≨︀",
            mDDot: "∺",
            macr: "¯",
            male: "♂",
            malt: "✠",
            maltese: "✠",
            map: "↦",
            mapsto: "↦",
            mapstodown: "↧",
            mapstoleft: "↤",
            mapstoup: "↥",
            marker: "▮",
            mcomma: "⨩",
            mcy: "м",
            mdash: "—",
            measuredangle: "∡",
            mfr: "𝔪",
            mho: "℧",
            micro: "µ",
            mid: "∣",
            midast: "*",
            midcir: "⫰",
            middot: "·",
            minus: "−",
            minusb: "⊟",
            minusd: "∸",
            minusdu: "⨪",
            mlcp: "⫛",
            mldr: "…",
            mnplus: "∓",
            models: "⊧",
            mopf: "𝕞",
            mp: "∓",
            mscr: "𝓂",
            mstpos: "∾",
            mu: "μ",
            multimap: "⊸",
            mumap: "⊸",
            nGg: "⋙̸",
            nGt: "≫⃒",
            nGtv: "≫̸",
            nLeftarrow: "⇍",
            nLeftrightarrow: "⇎",
            nLl: "⋘̸",
            nLt: "≪⃒",
            nLtv: "≪̸",
            nRightarrow: "⇏",
            nVDash: "⊯",
            nVdash: "⊮",
            nabla: "∇",
            nacute: "ń",
            nang: "∠⃒",
            nap: "≉",
            napE: "⩰̸",
            napid: "≋̸",
            napos: "ŉ",
            napprox: "≉",
            natur: "♮",
            natural: "♮",
            naturals: "ℕ",
            nbsp: " ",
            nbump: "≎̸",
            nbumpe: "≏̸",
            ncap: "⩃",
            ncaron: "ň",
            ncedil: "ņ",
            ncong: "≇",
            ncongdot: "⩭̸",
            ncup: "⩂",
            ncy: "н",
            ndash: "–",
            ne: "≠",
            neArr: "⇗",
            nearhk: "⤤",
            nearr: "↗",
            nearrow: "↗",
            nedot: "≐̸",
            nequiv: "≢",
            nesear: "⤨",
            nesim: "≂̸",
            nexist: "∄",
            nexists: "∄",
            nfr: "𝔫",
            ngE: "≧̸",
            nge: "≱",
            ngeq: "≱",
            ngeqq: "≧̸",
            ngeqslant: "⩾̸",
            nges: "⩾̸",
            ngsim: "≵",
            ngt: "≯",
            ngtr: "≯",
            nhArr: "⇎",
            nharr: "↮",
            nhpar: "⫲",
            ni: "∋",
            nis: "⋼",
            nisd: "⋺",
            niv: "∋",
            njcy: "њ",
            nlArr: "⇍",
            nlE: "≦̸",
            nlarr: "↚",
            nldr: "‥",
            nle: "≰",
            nleftarrow: "↚",
            nleftrightarrow: "↮",
            nleq: "≰",
            nleqq: "≦̸",
            nleqslant: "⩽̸",
            nles: "⩽̸",
            nless: "≮",
            nlsim: "≴",
            nlt: "≮",
            nltri: "⋪",
            nltrie: "⋬",
            nmid: "∤",
            nopf: "𝕟",
            not: "¬",
            notin: "∉",
            notinE: "⋹̸",
            notindot: "⋵̸",
            notinva: "∉",
            notinvb: "⋷",
            notinvc: "⋶",
            notni: "∌",
            notniva: "∌",
            notnivb: "⋾",
            notnivc: "⋽",
            npar: "∦",
            nparallel: "∦",
            nparsl: "⫽⃥",
            npart: "∂̸",
            npolint: "⨔",
            npr: "⊀",
            nprcue: "⋠",
            npre: "⪯̸",
            nprec: "⊀",
            npreceq: "⪯̸",
            nrArr: "⇏",
            nrarr: "↛",
            nrarrc: "⤳̸",
            nrarrw: "↝̸",
            nrightarrow: "↛",
            nrtri: "⋫",
            nrtrie: "⋭",
            nsc: "⊁",
            nsccue: "⋡",
            nsce: "⪰̸",
            nscr: "𝓃",
            nshortmid: "∤",
            nshortparallel: "∦",
            nsim: "≁",
            nsime: "≄",
            nsimeq: "≄",
            nsmid: "∤",
            nspar: "∦",
            nsqsube: "⋢",
            nsqsupe: "⋣",
            nsub: "⊄",
            nsubE: "⫅̸",
            nsube: "⊈",
            nsubset: "⊂⃒",
            nsubseteq: "⊈",
            nsubseteqq: "⫅̸",
            nsucc: "⊁",
            nsucceq: "⪰̸",
            nsup: "⊅",
            nsupE: "⫆̸",
            nsupe: "⊉",
            nsupset: "⊃⃒",
            nsupseteq: "⊉",
            nsupseteqq: "⫆̸",
            ntgl: "≹",
            ntilde: "ñ",
            ntlg: "≸",
            ntriangleleft: "⋪",
            ntrianglelefteq: "⋬",
            ntriangleright: "⋫",
            ntrianglerighteq: "⋭",
            nu: "ν",
            num: "#",
            numero: "№",
            numsp: " ",
            nvDash: "⊭",
            nvHarr: "⤄",
            nvap: "≍⃒",
            nvdash: "⊬",
            nvge: "≥⃒",
            nvgt: ">⃒",
            nvinfin: "⧞",
            nvlArr: "⤂",
            nvle: "≤⃒",
            nvlt: "<⃒",
            nvltrie: "⊴⃒",
            nvrArr: "⤃",
            nvrtrie: "⊵⃒",
            nvsim: "∼⃒",
            nwArr: "⇖",
            nwarhk: "⤣",
            nwarr: "↖",
            nwarrow: "↖",
            nwnear: "⤧",
            oS: "Ⓢ",
            oacute: "ó",
            oast: "⊛",
            ocir: "⊚",
            ocirc: "ô",
            ocy: "о",
            odash: "⊝",
            odblac: "ő",
            odiv: "⨸",
            odot: "⊙",
            odsold: "⦼",
            oelig: "œ",
            ofcir: "⦿",
            ofr: "𝔬",
            ogon: "˛",
            ograve: "ò",
            ogt: "⧁",
            ohbar: "⦵",
            ohm: "Ω",
            oint: "∮",
            olarr: "↺",
            olcir: "⦾",
            olcross: "⦻",
            oline: "‾",
            olt: "⧀",
            omacr: "ō",
            omega: "ω",
            omicron: "ο",
            omid: "⦶",
            ominus: "⊖",
            oopf: "𝕠",
            opar: "⦷",
            operp: "⦹",
            oplus: "⊕",
            or: "∨",
            orarr: "↻",
            ord: "⩝",
            order: "ℴ",
            orderof: "ℴ",
            ordf: "ª",
            ordm: "º",
            origof: "⊶",
            oror: "⩖",
            orslope: "⩗",
            orv: "⩛",
            oscr: "ℴ",
            oslash: "ø",
            osol: "⊘",
            otilde: "õ",
            otimes: "⊗",
            otimesas: "⨶",
            ouml: "ö",
            ovbar: "⌽",
            par: "∥",
            para: "¶",
            parallel: "∥",
            parsim: "⫳",
            parsl: "⫽",
            part: "∂",
            pcy: "п",
            percnt: "%",
            period: ".",
            permil: "‰",
            perp: "⊥",
            pertenk: "‱",
            pfr: "𝔭",
            phi: "φ",
            phiv: "ϕ",
            phmmat: "ℳ",
            phone: "☎",
            pi: "π",
            pitchfork: "⋔",
            piv: "ϖ",
            planck: "ℏ",
            planckh: "ℎ",
            plankv: "ℏ",
            plus: "+",
            plusacir: "⨣",
            plusb: "⊞",
            pluscir: "⨢",
            plusdo: "∔",
            plusdu: "⨥",
            pluse: "⩲",
            plusmn: "±",
            plussim: "⨦",
            plustwo: "⨧",
            pm: "±",
            pointint: "⨕",
            popf: "𝕡",
            pound: "£",
            pr: "≺",
            prE: "⪳",
            prap: "⪷",
            prcue: "≼",
            pre: "⪯",
            prec: "≺",
            precapprox: "⪷",
            preccurlyeq: "≼",
            preceq: "⪯",
            precnapprox: "⪹",
            precneqq: "⪵",
            precnsim: "⋨",
            precsim: "≾",
            prime: "′",
            primes: "ℙ",
            prnE: "⪵",
            prnap: "⪹",
            prnsim: "⋨",
            prod: "∏",
            profalar: "⌮",
            profline: "⌒",
            profsurf: "⌓",
            prop: "∝",
            propto: "∝",
            prsim: "≾",
            prurel: "⊰",
            pscr: "𝓅",
            psi: "ψ",
            puncsp: " ",
            qfr: "𝔮",
            qint: "⨌",
            qopf: "𝕢",
            qprime: "⁗",
            qscr: "𝓆",
            quaternions: "ℍ",
            quatint: "⨖",
            quest: "?",
            questeq: "≟",
            quot: '"',
            rAarr: "⇛",
            rArr: "⇒",
            rAtail: "⤜",
            rBarr: "⤏",
            rHar: "⥤",
            race: "∽̱",
            racute: "ŕ",
            radic: "√",
            raemptyv: "⦳",
            rang: "⟩",
            rangd: "⦒",
            range: "⦥",
            rangle: "⟩",
            raquo: "»",
            rarr: "→",
            rarrap: "⥵",
            rarrb: "⇥",
            rarrbfs: "⤠",
            rarrc: "⤳",
            rarrfs: "⤞",
            rarrhk: "↪",
            rarrlp: "↬",
            rarrpl: "⥅",
            rarrsim: "⥴",
            rarrtl: "↣",
            rarrw: "↝",
            ratail: "⤚",
            ratio: "∶",
            rationals: "ℚ",
            rbarr: "⤍",
            rbbrk: "❳",
            rbrace: "}",
            rbrack: "]",
            rbrke: "⦌",
            rbrksld: "⦎",
            rbrkslu: "⦐",
            rcaron: "ř",
            rcedil: "ŗ",
            rceil: "⌉",
            rcub: "}",
            rcy: "р",
            rdca: "⤷",
            rdldhar: "⥩",
            rdquo: "”",
            rdquor: "”",
            rdsh: "↳",
            real: "ℜ",
            realine: "ℛ",
            realpart: "ℜ",
            reals: "ℝ",
            rect: "▭",
            reg: "®",
            rfisht: "⥽",
            rfloor: "⌋",
            rfr: "𝔯",
            rhard: "⇁",
            rharu: "⇀",
            rharul: "⥬",
            rho: "ρ",
            rhov: "ϱ",
            rightarrow: "→",
            rightarrowtail: "↣",
            rightharpoondown: "⇁",
            rightharpoonup: "⇀",
            rightleftarrows: "⇄",
            rightleftharpoons: "⇌",
            rightrightarrows: "⇉",
            rightsquigarrow: "↝",
            rightthreetimes: "⋌",
            ring: "˚",
            risingdotseq: "≓",
            rlarr: "⇄",
            rlhar: "⇌",
            rlm: "‏",
            rmoust: "⎱",
            rmoustache: "⎱",
            rnmid: "⫮",
            roang: "⟭",
            roarr: "⇾",
            robrk: "⟧",
            ropar: "⦆",
            ropf: "𝕣",
            roplus: "⨮",
            rotimes: "⨵",
            rpar: ")",
            rpargt: "⦔",
            rppolint: "⨒",
            rrarr: "⇉",
            rsaquo: "›",
            rscr: "𝓇",
            rsh: "↱",
            rsqb: "]",
            rsquo: "’",
            rsquor: "’",
            rthree: "⋌",
            rtimes: "⋊",
            rtri: "▹",
            rtrie: "⊵",
            rtrif: "▸",
            rtriltri: "⧎",
            ruluhar: "⥨",
            rx: "℞",
            sacute: "ś",
            sbquo: "‚",
            sc: "≻",
            scE: "⪴",
            scap: "⪸",
            scaron: "š",
            sccue: "≽",
            sce: "⪰",
            scedil: "ş",
            scirc: "ŝ",
            scnE: "⪶",
            scnap: "⪺",
            scnsim: "⋩",
            scpolint: "⨓",
            scsim: "≿",
            scy: "с",
            sdot: "⋅",
            sdotb: "⊡",
            sdote: "⩦",
            seArr: "⇘",
            searhk: "⤥",
            searr: "↘",
            searrow: "↘",
            sect: "§",
            semi: ";",
            seswar: "⤩",
            setminus: "∖",
            setmn: "∖",
            sext: "✶",
            sfr: "𝔰",
            sfrown: "⌢",
            sharp: "♯",
            shchcy: "щ",
            shcy: "ш",
            shortmid: "∣",
            shortparallel: "∥",
            shy: "­",
            sigma: "σ",
            sigmaf: "ς",
            sigmav: "ς",
            sim: "∼",
            simdot: "⩪",
            sime: "≃",
            simeq: "≃",
            simg: "⪞",
            simgE: "⪠",
            siml: "⪝",
            simlE: "⪟",
            simne: "≆",
            simplus: "⨤",
            simrarr: "⥲",
            slarr: "←",
            smallsetminus: "∖",
            smashp: "⨳",
            smeparsl: "⧤",
            smid: "∣",
            smile: "⌣",
            smt: "⪪",
            smte: "⪬",
            smtes: "⪬︀",
            softcy: "ь",
            sol: "/",
            solb: "⧄",
            solbar: "⌿",
            sopf: "𝕤",
            spades: "♠",
            spadesuit: "♠",
            spar: "∥",
            sqcap: "⊓",
            sqcaps: "⊓︀",
            sqcup: "⊔",
            sqcups: "⊔︀",
            sqsub: "⊏",
            sqsube: "⊑",
            sqsubset: "⊏",
            sqsubseteq: "⊑",
            sqsup: "⊐",
            sqsupe: "⊒",
            sqsupset: "⊐",
            sqsupseteq: "⊒",
            squ: "□",
            square: "□",
            squarf: "▪",
            squf: "▪",
            srarr: "→",
            sscr: "𝓈",
            ssetmn: "∖",
            ssmile: "⌣",
            sstarf: "⋆",
            star: "☆",
            starf: "★",
            straightepsilon: "ϵ",
            straightphi: "ϕ",
            strns: "¯",
            sub: "⊂",
            subE: "⫅",
            subdot: "⪽",
            sube: "⊆",
            subedot: "⫃",
            submult: "⫁",
            subnE: "⫋",
            subne: "⊊",
            subplus: "⪿",
            subrarr: "⥹",
            subset: "⊂",
            subseteq: "⊆",
            subseteqq: "⫅",
            subsetneq: "⊊",
            subsetneqq: "⫋",
            subsim: "⫇",
            subsub: "⫕",
            subsup: "⫓",
            succ: "≻",
            succapprox: "⪸",
            succcurlyeq: "≽",
            succeq: "⪰",
            succnapprox: "⪺",
            succneqq: "⪶",
            succnsim: "⋩",
            succsim: "≿",
            sum: "∑",
            sung: "♪",
            sup1: "¹",
            sup2: "²",
            sup3: "³",
            sup: "⊃",
            supE: "⫆",
            supdot: "⪾",
            supdsub: "⫘",
            supe: "⊇",
            supedot: "⫄",
            suphsol: "⟉",
            suphsub: "⫗",
            suplarr: "⥻",
            supmult: "⫂",
            supnE: "⫌",
            supne: "⊋",
            supplus: "⫀",
            supset: "⊃",
            supseteq: "⊇",
            supseteqq: "⫆",
            supsetneq: "⊋",
            supsetneqq: "⫌",
            supsim: "⫈",
            supsub: "⫔",
            supsup: "⫖",
            swArr: "⇙",
            swarhk: "⤦",
            swarr: "↙",
            swarrow: "↙",
            swnwar: "⤪",
            szlig: "ß",
            target: "⌖",
            tau: "τ",
            tbrk: "⎴",
            tcaron: "ť",
            tcedil: "ţ",
            tcy: "т",
            tdot: "⃛",
            telrec: "⌕",
            tfr: "𝔱",
            there4: "∴",
            therefore: "∴",
            theta: "θ",
            thetasym: "ϑ",
            thetav: "ϑ",
            thickapprox: "≈",
            thicksim: "∼",
            thinsp: " ",
            thkap: "≈",
            thksim: "∼",
            thorn: "þ",
            tilde: "˜",
            times: "×",
            timesb: "⊠",
            timesbar: "⨱",
            timesd: "⨰",
            tint: "∭",
            toea: "⤨",
            top: "⊤",
            topbot: "⌶",
            topcir: "⫱",
            topf: "𝕥",
            topfork: "⫚",
            tosa: "⤩",
            tprime: "‴",
            trade: "™",
            triangle: "▵",
            triangledown: "▿",
            triangleleft: "◃",
            trianglelefteq: "⊴",
            triangleq: "≜",
            triangleright: "▹",
            trianglerighteq: "⊵",
            tridot: "◬",
            trie: "≜",
            triminus: "⨺",
            triplus: "⨹",
            trisb: "⧍",
            tritime: "⨻",
            trpezium: "⏢",
            tscr: "𝓉",
            tscy: "ц",
            tshcy: "ћ",
            tstrok: "ŧ",
            twixt: "≬",
            twoheadleftarrow: "↞",
            twoheadrightarrow: "↠",
            uArr: "⇑",
            uHar: "⥣",
            uacute: "ú",
            uarr: "↑",
            ubrcy: "ў",
            ubreve: "ŭ",
            ucirc: "û",
            ucy: "у",
            udarr: "⇅",
            udblac: "ű",
            udhar: "⥮",
            ufisht: "⥾",
            ufr: "𝔲",
            ugrave: "ù",
            uharl: "↿",
            uharr: "↾",
            uhblk: "▀",
            ulcorn: "⌜",
            ulcorner: "⌜",
            ulcrop: "⌏",
            ultri: "◸",
            umacr: "ū",
            uml: "¨",
            uogon: "ų",
            uopf: "𝕦",
            uparrow: "↑",
            updownarrow: "↕",
            upharpoonleft: "↿",
            upharpoonright: "↾",
            uplus: "⊎",
            upsi: "υ",
            upsih: "ϒ",
            upsilon: "υ",
            upuparrows: "⇈",
            urcorn: "⌝",
            urcorner: "⌝",
            urcrop: "⌎",
            uring: "ů",
            urtri: "◹",
            uscr: "𝓊",
            utdot: "⋰",
            utilde: "ũ",
            utri: "▵",
            utrif: "▴",
            uuarr: "⇈",
            uuml: "ü",
            uwangle: "⦧",
            vArr: "⇕",
            vBar: "⫨",
            vBarv: "⫩",
            vDash: "⊨",
            vangrt: "⦜",
            varepsilon: "ϵ",
            varkappa: "ϰ",
            varnothing: "∅",
            varphi: "ϕ",
            varpi: "ϖ",
            varpropto: "∝",
            varr: "↕",
            varrho: "ϱ",
            varsigma: "ς",
            varsubsetneq: "⊊︀",
            varsubsetneqq: "⫋︀",
            varsupsetneq: "⊋︀",
            varsupsetneqq: "⫌︀",
            vartheta: "ϑ",
            vartriangleleft: "⊲",
            vartriangleright: "⊳",
            vcy: "в",
            vdash: "⊢",
            vee: "∨",
            veebar: "⊻",
            veeeq: "≚",
            vellip: "⋮",
            verbar: "|",
            vert: "|",
            vfr: "𝔳",
            vltri: "⊲",
            vnsub: "⊂⃒",
            vnsup: "⊃⃒",
            vopf: "𝕧",
            vprop: "∝",
            vrtri: "⊳",
            vscr: "𝓋",
            vsubnE: "⫋︀",
            vsubne: "⊊︀",
            vsupnE: "⫌︀",
            vsupne: "⊋︀",
            vzigzag: "⦚",
            wcirc: "ŵ",
            wedbar: "⩟",
            wedge: "∧",
            wedgeq: "≙",
            weierp: "℘",
            wfr: "𝔴",
            wopf: "𝕨",
            wp: "℘",
            wr: "≀",
            wreath: "≀",
            wscr: "𝓌",
            xcap: "⋂",
            xcirc: "◯",
            xcup: "⋃",
            xdtri: "▽",
            xfr: "𝔵",
            xhArr: "⟺",
            xharr: "⟷",
            xi: "ξ",
            xlArr: "⟸",
            xlarr: "⟵",
            xmap: "⟼",
            xnis: "⋻",
            xodot: "⨀",
            xopf: "𝕩",
            xoplus: "⨁",
            xotime: "⨂",
            xrArr: "⟹",
            xrarr: "⟶",
            xscr: "𝓍",
            xsqcup: "⨆",
            xuplus: "⨄",
            xutri: "△",
            xvee: "⋁",
            xwedge: "⋀",
            yacute: "ý",
            yacy: "я",
            ycirc: "ŷ",
            ycy: "ы",
            yen: "¥",
            yfr: "𝔶",
            yicy: "ї",
            yopf: "𝕪",
            yscr: "𝓎",
            yucy: "ю",
            yuml: "ÿ",
            zacute: "ź",
            zcaron: "ž",
            zcy: "з",
            zdot: "ż",
            zeetrf: "ℨ",
            zeta: "ζ",
            zfr: "𝔷",
            zhcy: "ж",
            zigrarr: "⇝",
            zopf: "𝕫",
            zscr: "𝓏",
            zwj: "‍",
            zwnj: "‌",
          },
          K = {
            0: 65533,
            128: 8364,
            130: 8218,
            131: 402,
            132: 8222,
            133: 8230,
            134: 8224,
            135: 8225,
            136: 710,
            137: 8240,
            138: 352,
            139: 8249,
            140: 338,
            142: 381,
            145: 8216,
            146: 8217,
            147: 8220,
            148: 8221,
            149: 8226,
            150: 8211,
            151: 8212,
            152: 732,
            153: 8482,
            154: 353,
            155: 8250,
            156: 339,
            158: 382,
            159: 376,
          };
        function V(e) {
          return e.replace(/&(?:[a-zA-Z]+|#[xX][\da-fA-F]+|#\d+);/g, (e) => {
            if ("#" === e.charAt(1)) {
              const t = e.charAt(2);
              return (function (e) {
                if ((e >= 55296 && e <= 57343) || e > 1114111) return "�";
                e in K && (e = K[e]);
                return String.fromCodePoint(e);
              })(
                "X" === t || "x" === t
                  ? parseInt(e.slice(3), 16)
                  : parseInt(e.slice(2), 10),
              );
            }
            return G[e.slice(1, -1)] || e;
          });
        }
        function W(e, t) {
          return (
            (e.startPos = e.tokenPos = e.index),
            (e.startColumn = e.colPos = e.column),
            (e.startLine = e.linePos = e.line),
            (e.token =
              8192 & g[e.currentChar]
                ? (function (e, t) {
                    const n = e.currentChar;
                    let i = u(e);
                    const r = e.index;
                    for (; i !== n; ) e.index >= e.end && a(e, 14), (i = u(e));
                    i !== n && a(e, 14);
                    (e.tokenValue = e.source.slice(r, e.index)),
                      u(e),
                      512 & t &&
                        (e.tokenRaw = e.source.slice(e.tokenPos, e.index));
                    return 134283267;
                  })(e, t)
                : q(e, t, 0)),
            e.token
          );
        }
        function Y(e, t) {
          if (
            ((e.startPos = e.tokenPos = e.index),
            (e.startColumn = e.colPos = e.column),
            (e.startLine = e.linePos = e.line),
            e.index >= e.end)
          )
            return (e.token = 1048576);
          switch (U[e.source.charCodeAt(e.index)]) {
            case 8456258:
              u(e),
                47 === e.currentChar
                  ? (u(e), (e.token = 25))
                  : (e.token = 8456258);
              break;
            case 2162700:
              u(e), (e.token = 2162700);
              break;
            default: {
              let n = 0;
              for (; e.index < e.end; ) {
                const t = g[e.source.charCodeAt(e.index)];
                if (
                  (1024 & t
                    ? ((n |= 5), m(e))
                    : 2048 & t
                      ? (d(e, n), (n = (-5 & n) | 1))
                      : u(e),
                  16384 & g[e.currentChar])
                )
                  break;
              }
              const i = e.source.slice(e.tokenPos, e.index);
              512 & t && (e.tokenRaw = i),
                (e.tokenValue = V(i)),
                (e.token = 138);
            }
          }
          return e.token;
        }
        function Q(e) {
          if (143360 == (143360 & e.token)) {
            const { index: t } = e;
            let n = e.currentChar;
            for (; 32770 & g[n]; ) n = u(e);
            e.tokenValue += e.source.slice(t, e.index);
          }
          return (e.token = 208897), e.token;
        }
        function X(e, t, n) {
          0 != (1 & e.flags) ||
            1048576 == (1048576 & e.token) ||
            n ||
            a(e, 28, R[255 & e.token]),
            Z(e, t, 1074790417);
        }
        function J(e, t, n, i) {
          return t - n < 13 &&
            "use strict" === i &&
            (1048576 == (1048576 & e.token) || 1 & e.flags)
            ? 1
            : 0;
        }
        function $(e, t, n) {
          return e.token !== n ? 0 : (z(e, t), 1);
        }
        function Z(e, t, n) {
          return e.token === n && (z(e, t), !0);
        }
        function ee(e, t, n) {
          e.token !== n && a(e, 23, R[255 & n]), z(e, t);
        }
        function te(e, t) {
          switch (t.type) {
            case "ArrayExpression":
              t.type = "ArrayPattern";
              const n = t.elements;
              for (let t = 0, i = n.length; t < i; ++t) {
                const i = n[t];
                i && te(e, i);
              }
              return;
            case "ObjectExpression":
              t.type = "ObjectPattern";
              const i = t.properties;
              for (let t = 0, n = i.length; t < n; ++t) te(e, i[t]);
              return;
            case "AssignmentExpression":
              return (
                (t.type = "AssignmentPattern"),
                "=" !== t.operator && a(e, 68),
                delete t.operator,
                void te(e, t.left)
              );
            case "Property":
              return void te(e, t.value);
            case "SpreadElement":
              (t.type = "RestElement"), te(e, t.argument);
          }
        }
        function ne(e, t, n, i, r) {
          1024 & t &&
            (36864 == (36864 & i) && a(e, 114),
            r || 537079808 != (537079808 & i) || a(e, 115)),
            20480 == (20480 & i) && a(e, 99),
            24 & n && 241739 === i && a(e, 97),
            4196352 & t && 209008 === i && a(e, 95),
            2098176 & t && 241773 === i && a(e, 94, "yield");
        }
        function ie(e, t, n) {
          1024 & t &&
            (36864 == (36864 & n) && a(e, 114),
            537079808 == (537079808 & n) && a(e, 115),
            122 === n && a(e, 92),
            121 === n && a(e, 92)),
            20480 == (20480 & n) && a(e, 99),
            4196352 & t && 209008 === n && a(e, 95),
            2098176 & t && 241773 === n && a(e, 94, "yield");
        }
        function re(e, t, n) {
          return (
            209008 === n && (4196352 & t && a(e, 95), (e.destructible |= 128)),
            241773 === n && 2097152 & t && a(e, 94, "yield"),
            20480 == (20480 & n) || 36864 == (36864 & n) || 122 == n
          );
        }
        function ae(e, t, n, i) {
          for (; t; ) {
            if (t["$" + n]) return i && a(e, 133), 1;
            i && t.loop && (i = 0), (t = t.$);
          }
          return 0;
        }
        function oe(e, t, n, i, r, a) {
          return (
            2 & t &&
              ((a.start = n),
              (a.end = e.startPos),
              (a.range = [n, e.startPos])),
            4 & t &&
              ((a.loc = {
                start: { line: i, column: r },
                end: { line: e.startLine, column: e.startColumn },
              }),
              e.sourceFile && (a.loc.source = e.sourceFile)),
            a
          );
        }
        function se(e) {
          switch (e.type) {
            case "JSXIdentifier":
              return e.name;
            case "JSXNamespacedName":
              return e.namespace + ":" + e.name;
            case "JSXMemberExpression":
              return se(e.object) + "." + se(e.property);
          }
        }
        function ce(e, t, n) {
          const i = ue({ parent: void 0, type: 2 }, 1024);
          return de(e, t, i, n, 1, 0), i;
        }
        function le(e, t, ...n) {
          const { index: i, line: r, column: a } = e;
          return { type: t, params: n, index: i, line: r, column: a };
        }
        function ue(e, t) {
          return { parent: e, type: t, scopeError: void 0 };
        }
        function pe(e, t, n, i, r, a) {
          4 & r ? me(e, t, n, i, r) : de(e, t, n, i, r, a), 64 & a && he(e, i);
        }
        function de(e, t, n, i, r, o) {
          const s = n["#" + i];
          s &&
            0 == (2 & s) &&
            (1 & r
              ? (n.scopeError = le(e, 140, i))
              : (256 & t && 64 & s && 2 & o) || a(e, 140, i)),
            128 & n.type &&
              n.parent["#" + i] &&
              0 == (2 & n.parent["#" + i]) &&
              a(e, 140, i),
            1024 & n.type &&
              s &&
              0 == (2 & s) &&
              1 & r &&
              (n.scopeError = le(e, 140, i)),
            64 & n.type && 768 & n.parent["#" + i] && a(e, 153, i),
            (n["#" + i] = r);
        }
        function me(e, t, n, i, r) {
          let o = n;
          for (; o && 0 == (256 & o.type); ) {
            const s = o["#" + i];
            248 & s &&
              ((256 & t &&
                0 == (1024 & t) &&
                ((128 & r && 68 & s) || (128 & s && 68 & r))) ||
                a(e, 140, i)),
              o === n && 1 & s && 1 & r && (o.scopeError = le(e, 140, i)),
              768 & s &&
                (0 == (512 & s) || 0 == (256 & t) || 1024 & t) &&
                a(e, 140, i),
              (o["#" + i] = r),
              (o = o.parent);
          }
        }
        function he(e, t) {
          void 0 !== e.exportedNames &&
            "" !== t &&
            (e.exportedNames["#" + t] && a(e, 141, t),
            (e.exportedNames["#" + t] = 1));
        }
        function fe(e, t) {
          void 0 !== e.exportedBindings &&
            "" !== t &&
            (e.exportedBindings["#" + t] = 1);
        }
        function ge(e, t) {
          return 2098176 & e
            ? !(2048 & e && 209008 === t) &&
                !(2097152 & e && 241773 === t) &&
                (143360 == (143360 & t) || 12288 == (12288 & t))
            : 143360 == (143360 & t) ||
                12288 == (12288 & t) ||
                36864 == (36864 & t);
        }
        function xe(e, t, n, i) {
          537079808 == (537079808 & n) &&
            (1024 & t && a(e, 115), i && (e.flags |= 512)),
            ge(t, n) || a(e, 0);
        }
        function be(e, t, n) {
          let i,
            r,
            o = "";
          null != t &&
            (t.module && (n |= 3072),
            t.next && (n |= 1),
            t.loc && (n |= 4),
            t.ranges && (n |= 2),
            t.uniqueKeyInPattern && (n |= -2147483648),
            t.lexical && (n |= 64),
            t.webcompat && (n |= 256),
            t.directives && (n |= 520),
            t.globalReturn && (n |= 32),
            t.raw && (n |= 512),
            t.preserveParens && (n |= 128),
            t.impliedStrict && (n |= 1024),
            t.jsx && (n |= 16),
            t.identifierPattern && (n |= 268435456),
            t.specDeviation && (n |= 536870912),
            t.source && (o = t.source),
            null != t.onComment &&
              (i = Array.isArray(t.onComment)
                ? (function (e, t) {
                    return function (n, i, r, a, o) {
                      const s = { type: n, value: i };
                      2 & e && ((s.start = r), (s.end = a), (s.range = [r, a])),
                        4 & e && (s.loc = o),
                        t.push(s);
                    };
                  })(n, t.onComment)
                : t.onComment),
            null != t.onToken &&
              (r = Array.isArray(t.onToken)
                ? (function (e, t) {
                    return function (n, i, r, a) {
                      const o = { token: n };
                      2 & e && ((o.start = i), (o.end = r), (o.range = [i, r])),
                        4 & e && (o.loc = a),
                        t.push(o);
                    };
                  })(n, t.onToken)
                : t.onToken));
          const s = (function (e, t, n, i) {
            return {
              source: e,
              flags: 0,
              index: 0,
              line: 1,
              column: 0,
              startPos: 0,
              end: e.length,
              tokenPos: 0,
              startColumn: 0,
              colPos: 0,
              linePos: 1,
              startLine: 1,
              sourceFile: t,
              tokenValue: "",
              token: 1048576,
              tokenRaw: "",
              tokenRegExp: void 0,
              currentChar: e.charCodeAt(0),
              exportedNames: [],
              exportedBindings: [],
              assignable: 1,
              destructible: 0,
              onComment: n,
              onToken: i,
              leadingDecorators: [],
            };
          })(e, o, i, r);
          1 & n &&
            (function (e) {
              const t = e.source;
              35 === e.currentChar &&
                33 === t.charCodeAt(e.index + 1) &&
                (u(e), u(e), E(e, t, 0, 4, e.tokenPos, e.linePos, e.colPos));
            })(s);
          const c = 64 & n ? { parent: void 0, type: 2 } : void 0;
          let l = [],
            p = "script";
          if (2048 & n) {
            if (
              ((p = "module"),
              (l = (function (e, t, n) {
                z(e, 32768 | t);
                const i = [];
                if (8 & t)
                  for (; 134283267 === e.token; ) {
                    const { tokenPos: n, linePos: r, colPos: a, token: o } = e;
                    i.push(Ae(e, t, at(e, t), o, n, r, a));
                  }
                for (; 1048576 !== e.token; ) i.push(ve(e, t, n));
                return i;
              })(s, 8192 | n, c)),
              c)
            )
              for (const e in s.exportedBindings)
                "#" !== e[0] || c[e] || a(s, 142, e.slice(1));
          } else
            l = (function (e, t, n) {
              z(e, 1073774592 | t);
              const i = [];
              for (; 134283267 === e.token; ) {
                const {
                    index: n,
                    tokenPos: r,
                    tokenValue: a,
                    linePos: o,
                    colPos: s,
                    token: c,
                  } = e,
                  l = at(e, t);
                J(e, n, r, a) && (t |= 1024), i.push(Ae(e, t, l, c, r, o, s));
              }
              for (; 1048576 !== e.token; ) i.push(ke(e, t, n, 4, {}));
              return i;
            })(s, 8192 | n, c);
          const d = { type: "Program", sourceType: p, body: l };
          return (
            2 & n &&
              ((d.start = 0), (d.end = e.length), (d.range = [0, e.length])),
            4 & n &&
              ((d.loc = {
                start: { line: 1, column: 0 },
                end: { line: s.line, column: s.column },
              }),
              s.sourceFile && (d.loc.source = o)),
            d
          );
        }
        function ve(e, t, n) {
          let i;
          switch (((e.leadingDecorators = Et(e, t)), e.token)) {
            case 20566:
              i = (function (e, t, n) {
                const i = e.tokenPos,
                  r = e.linePos,
                  o = e.colPos;
                z(e, 32768 | t);
                const s = [];
                let c,
                  l = null,
                  u = null;
                if (Z(e, 32768 | t, 20563)) {
                  switch (e.token) {
                    case 86106:
                      l = ot(
                        e,
                        t,
                        n,
                        4,
                        1,
                        1,
                        0,
                        e.tokenPos,
                        e.linePos,
                        e.colPos,
                      );
                      break;
                    case 133:
                    case 86096:
                      l = yt(e, t, n, 1, e.tokenPos, e.linePos, e.colPos);
                      break;
                    case 209007:
                      const { tokenPos: i, linePos: r, colPos: a } = e;
                      l = rt(e, t, 0);
                      const { flags: o } = e;
                      (1 & o) < 1 &&
                        (86106 === e.token
                          ? (l = ot(e, t, n, 4, 1, 1, 1, i, r, a))
                          : 67174411 === e.token
                            ? ((l = Tt(e, t, l, 1, 1, 0, o, i, r, a)),
                              (l = We(e, t, l, 0, 0, i, r, a)),
                              (l = Ue(e, t, 0, 0, i, r, a, l)))
                            : 143360 & e.token &&
                              (n && (n = ce(e, t, e.tokenValue)),
                              (l = rt(e, t, 0)),
                              (l = xt(e, t, n, [l], 1, i, r, a))));
                      break;
                    default:
                      (l = He(e, t, 1, 0, 0, e.tokenPos, e.linePos, e.colPos)),
                        X(e, 32768 | t);
                  }
                  return (
                    n && he(e, "default"),
                    oe(e, t, i, r, o, {
                      type: "ExportDefaultDeclaration",
                      declaration: l,
                    })
                  );
                }
                switch (e.token) {
                  case 8457014: {
                    z(e, t);
                    let s = null;
                    return (
                      Z(e, t, 77934) &&
                        (n && he(e, e.tokenValue), (s = rt(e, t, 0))),
                      ee(e, t, 12404),
                      134283267 !== e.token && a(e, 102, "Export"),
                      (u = at(e, t)),
                      X(e, 32768 | t),
                      oe(e, t, i, r, o, {
                        type: "ExportAllDeclaration",
                        source: u,
                        exported: s,
                      })
                    );
                  }
                  case 2162700: {
                    z(e, t);
                    const i = [],
                      r = [];
                    for (; 143360 & e.token; ) {
                      const {
                          tokenPos: o,
                          tokenValue: c,
                          linePos: l,
                          colPos: u,
                        } = e,
                        p = rt(e, t, 0);
                      let d;
                      77934 === e.token
                        ? (z(e, t),
                          134217728 == (134217728 & e.token) && a(e, 103),
                          n && (i.push(e.tokenValue), r.push(c)),
                          (d = rt(e, t, 0)))
                        : (n && (i.push(e.tokenValue), r.push(e.tokenValue)),
                          (d = p)),
                        s.push(
                          oe(e, t, o, l, u, {
                            type: "ExportSpecifier",
                            local: p,
                            exported: d,
                          }),
                        ),
                        1074790415 !== e.token && ee(e, t, 18);
                    }
                    if ((ee(e, t, 1074790415), Z(e, t, 12404)))
                      134283267 !== e.token && a(e, 102, "Export"),
                        (u = at(e, t));
                    else if (n) {
                      let t = 0,
                        n = i.length;
                      for (; t < n; t++) he(e, i[t]);
                      for (t = 0, n = r.length; t < n; t++) fe(e, r[t]);
                    }
                    X(e, 32768 | t);
                    break;
                  }
                  case 86096:
                    l = yt(e, t, n, 2, e.tokenPos, e.linePos, e.colPos);
                    break;
                  case 86106:
                    l = ot(
                      e,
                      t,
                      n,
                      4,
                      1,
                      2,
                      0,
                      e.tokenPos,
                      e.linePos,
                      e.colPos,
                    );
                    break;
                  case 241739:
                    l = Ne(e, t, n, 8, 64, e.tokenPos, e.linePos, e.colPos);
                    break;
                  case 86092:
                    l = Ne(e, t, n, 16, 64, e.tokenPos, e.linePos, e.colPos);
                    break;
                  case 86090:
                    l = Pe(e, t, n, 64, e.tokenPos, e.linePos, e.colPos);
                    break;
                  case 209007:
                    const { tokenPos: p, linePos: d, colPos: m } = e;
                    if ((z(e, t), (1 & e.flags) < 1 && 86106 === e.token)) {
                      (l = ot(e, t, n, 4, 1, 2, 1, p, d, m)),
                        n && ((c = l.id ? l.id.name : ""), he(e, c));
                      break;
                    }
                  default:
                    a(e, 28, R[255 & e.token]);
                }
                return oe(e, t, i, r, o, {
                  type: "ExportNamedDeclaration",
                  declaration: l,
                  specifiers: s,
                  source: u,
                });
              })(e, t, n);
              break;
            case 86108:
              i = (function (e, t, n) {
                const i = e.tokenPos,
                  r = e.linePos,
                  o = e.colPos;
                z(e, t);
                let s = null;
                const { tokenPos: c, linePos: l, colPos: u } = e;
                let p = [];
                if (134283267 === e.token) s = at(e, t);
                else {
                  if (143360 & e.token) {
                    if (
                      ((p = [
                        oe(e, t, c, l, u, {
                          type: "ImportDefaultSpecifier",
                          local: Ie(e, t, n),
                        }),
                      ]),
                      Z(e, t, 18))
                    )
                      switch (e.token) {
                        case 8457014:
                          p.push(Re(e, t, n));
                          break;
                        case 2162700:
                          Me(e, t, n, p);
                          break;
                        default:
                          a(e, 104);
                      }
                  } else
                    switch (e.token) {
                      case 8457014:
                        p = [Re(e, t, n)];
                        break;
                      case 2162700:
                        Me(e, t, n, p);
                        break;
                      case 67174411:
                        return je(e, t, i, r, o);
                      case 67108877:
                        return De(e, t, i, r, o);
                      default:
                        a(e, 28, R[255 & e.token]);
                    }
                  s = (function (e, t) {
                    Z(e, t, 12404),
                      134283267 !== e.token && a(e, 102, "Import");
                    return at(e, t);
                  })(e, t);
                }
                return (
                  X(e, 32768 | t),
                  oe(e, t, i, r, o, {
                    type: "ImportDeclaration",
                    specifiers: p,
                    source: s,
                  })
                );
              })(e, t, n);
              break;
            default:
              i = ke(e, t, n, 4, {});
          }
          return e.leadingDecorators.length && a(e, 164), i;
        }
        function ke(e, t, n, i, r) {
          const o = e.tokenPos,
            s = e.linePos,
            c = e.colPos;
          switch (e.token) {
            case 86106:
              return ot(e, t, n, i, 1, 0, 0, o, s, c);
            case 133:
            case 86096:
              return yt(e, t, n, 0, o, s, c);
            case 86092:
              return Ne(e, t, n, 16, 0, o, s, c);
            case 241739:
              return (function (e, t, n, i, r, o, s) {
                const { token: c, tokenValue: l } = e;
                let u = rt(e, t, 0);
                if (2240512 & e.token) {
                  const i = Oe(e, t, n, 8, 0);
                  return (
                    X(e, 32768 | t),
                    oe(e, t, r, o, s, {
                      type: "VariableDeclaration",
                      kind: "let",
                      declarations: i,
                    })
                  );
                }
                (e.assignable = 1), 1024 & t && a(e, 82);
                if (21 === e.token)
                  return we(e, t, n, i, {}, l, u, c, 0, r, o, s);
                if (10 === e.token) {
                  let n;
                  64 & t && (n = ce(e, t, l)),
                    (e.flags = 128 ^ (128 | e.flags)),
                    (u = xt(e, t, n, [u], 0, r, o, s));
                } else
                  (u = We(e, t, u, 0, 0, r, o, s)),
                    (u = Ue(e, t, 0, 0, r, o, s, u));
                18 === e.token && (u = Fe(e, t, 0, r, o, s, u));
                return Ee(e, t, u, r, o, s);
              })(e, t, n, i, o, s, c);
            case 20566:
              a(e, 100, "export");
            case 86108:
              switch ((z(e, t), e.token)) {
                case 67174411:
                  return je(e, t, o, s, c);
                case 67108877:
                  return De(e, t, o, s, c);
                default:
                  a(e, 100, "import");
              }
            case 209007:
              return Ce(e, t, n, i, r, 1, o, s, c);
            default:
              return Te(e, t, n, i, r, 1, o, s, c);
          }
        }
        function Te(e, t, n, i, r, o, s, c, l) {
          switch (e.token) {
            case 86090:
              return Pe(e, t, n, 0, s, c, l);
            case 20574:
              return (function (e, t, n, i, r) {
                (32 & t) < 1 && 8192 & t && a(e, 89);
                z(e, 32768 | t);
                const o =
                  1 & e.flags || 1048576 & e.token
                    ? null
                    : Be(e, t, 0, 1, e.tokenPos, e.line, e.column);
                return (
                  X(e, 32768 | t),
                  oe(e, t, n, i, r, { type: "ReturnStatement", argument: o })
                );
              })(e, t, s, c, l);
            case 20571:
              return (function (e, t, n, i, r, a, o) {
                z(e, t), ee(e, 32768 | t, 67174411), (e.assignable = 1);
                const s = Be(e, t, 0, 1, e.tokenPos, e.line, e.colPos);
                ee(e, 32768 | t, 16);
                const c = Se(e, t, n, i, e.tokenPos, e.linePos, e.colPos);
                let l = null;
                20565 === e.token &&
                  (z(e, 32768 | t),
                  (l = Se(e, t, n, i, e.tokenPos, e.linePos, e.colPos)));
                return oe(e, t, r, a, o, {
                  type: "IfStatement",
                  test: s,
                  consequent: c,
                  alternate: l,
                });
              })(e, t, n, r, s, c, l);
            case 20569:
              return (function (e, t, n, i, r, o, s) {
                z(e, t);
                const c = (4194304 & t) > 0 && Z(e, t, 209008);
                ee(e, 32768 | t, 67174411), n && (n = ue(n, 1));
                let l,
                  u = null,
                  p = null,
                  d = 0,
                  m = null,
                  h =
                    86090 === e.token ||
                    241739 === e.token ||
                    86092 === e.token;
                const { token: f, tokenPos: g, linePos: x, colPos: b } = e;
                h
                  ? 241739 === f
                    ? ((m = rt(e, t, 0)),
                      2240512 & e.token
                        ? (8738868 === e.token
                            ? 1024 & t && a(e, 64)
                            : (m = oe(e, t, g, x, b, {
                                type: "VariableDeclaration",
                                kind: "let",
                                declarations: Oe(e, 134217728 | t, n, 8, 32),
                              })),
                          (e.assignable = 1))
                        : 1024 & t
                          ? a(e, 64)
                          : ((h = !1),
                            (e.assignable = 1),
                            (m = We(e, t, m, 0, 0, g, x, b)),
                            274549 === e.token && a(e, 111)))
                    : (z(e, t),
                      (m = oe(
                        e,
                        t,
                        g,
                        x,
                        b,
                        86090 === f
                          ? {
                              type: "VariableDeclaration",
                              kind: "var",
                              declarations: Oe(e, 134217728 | t, n, 4, 32),
                            }
                          : {
                              type: "VariableDeclaration",
                              kind: "const",
                              declarations: Oe(e, 134217728 | t, n, 16, 32),
                            },
                      )),
                      (e.assignable = 1))
                  : 1074790417 === f
                    ? c && a(e, 79)
                    : 2097152 == (2097152 & f)
                      ? ((m =
                          2162700 === f
                            ? dt(e, t, void 0, 1, 0, 0, 2, 32, g, x, b)
                            : ct(e, t, void 0, 1, 0, 0, 2, 32, g, x, b)),
                        (d = e.destructible),
                        256 & t && 64 & d && a(e, 60),
                        (e.assignable = 16 & d ? 2 : 1),
                        (m = We(
                          e,
                          134217728 | t,
                          m,
                          0,
                          0,
                          e.tokenPos,
                          e.linePos,
                          e.colPos,
                        )))
                      : (m = Ve(e, 134217728 | t, 1, 0, 1, g, x, b));
                if (262144 == (262144 & e.token)) {
                  if (274549 === e.token) {
                    2 & e.assignable && a(e, 77, c ? "await" : "of"),
                      te(e, m),
                      z(e, 32768 | t),
                      (l = He(e, t, 1, 0, 0, e.tokenPos, e.linePos, e.colPos)),
                      ee(e, 32768 | t, 16);
                    return oe(e, t, r, o, s, {
                      type: "ForOfStatement",
                      left: m,
                      right: l,
                      body: _e(e, t, n, i),
                      await: c,
                    });
                  }
                  2 & e.assignable && a(e, 77, "in"),
                    te(e, m),
                    z(e, 32768 | t),
                    c && a(e, 79),
                    (l = Be(e, t, 0, 1, e.tokenPos, e.linePos, e.colPos)),
                    ee(e, 32768 | t, 16);
                  return oe(e, t, r, o, s, {
                    type: "ForInStatement",
                    body: _e(e, t, n, i),
                    left: m,
                    right: l,
                  });
                }
                c && a(e, 79);
                h ||
                  (8 & d && 1077936157 !== e.token && a(e, 77, "loop"),
                  (m = Ue(e, 134217728 | t, 0, 0, g, x, b, m)));
                18 === e.token &&
                  (m = Fe(e, t, 0, e.tokenPos, e.linePos, e.colPos, m));
                ee(e, 32768 | t, 1074790417),
                  1074790417 !== e.token &&
                    (u = Be(e, t, 0, 1, e.tokenPos, e.linePos, e.colPos));
                ee(e, 32768 | t, 1074790417),
                  16 !== e.token &&
                    (p = Be(e, t, 0, 1, e.tokenPos, e.linePos, e.colPos));
                ee(e, 32768 | t, 16);
                const v = _e(e, t, n, i);
                return oe(e, t, r, o, s, {
                  type: "ForStatement",
                  init: m,
                  test: u,
                  update: p,
                  body: v,
                });
              })(e, t, n, r, s, c, l);
            case 20564:
              return (function (e, t, n, i, r, a, o) {
                z(e, 32768 | t);
                const s = _e(e, t, n, i);
                ee(e, t, 20580), ee(e, 32768 | t, 67174411);
                const c = Be(e, t, 0, 1, e.tokenPos, e.linePos, e.colPos);
                return (
                  ee(e, 32768 | t, 16),
                  Z(e, t, 1074790417),
                  oe(e, t, r, a, o, {
                    type: "DoWhileStatement",
                    body: s,
                    test: c,
                  })
                );
              })(e, t, n, r, s, c, l);
            case 20580:
              return (function (e, t, n, i, r, a, o) {
                z(e, t), ee(e, 32768 | t, 67174411);
                const s = Be(e, t, 0, 1, e.tokenPos, e.linePos, e.colPos);
                ee(e, 32768 | t, 16);
                const c = _e(e, t, n, i);
                return oe(e, t, r, a, o, {
                  type: "WhileStatement",
                  test: s,
                  body: c,
                });
              })(e, t, n, r, s, c, l);
            case 86112:
              return (function (e, t, n, i, r, o, s) {
                z(e, t), ee(e, 32768 | t, 67174411);
                const c = Be(e, t, 0, 1, e.tokenPos, e.linePos, e.colPos);
                ee(e, t, 16), ee(e, t, 2162700);
                const l = [];
                let u = 0;
                n && (n = ue(n, 8));
                for (; 1074790415 !== e.token; ) {
                  const { tokenPos: r, linePos: o, colPos: s } = e;
                  let c = null;
                  const p = [];
                  for (
                    Z(e, 32768 | t, 20558)
                      ? (c = Be(e, t, 0, 1, e.tokenPos, e.linePos, e.colPos))
                      : (ee(e, 32768 | t, 20563), u && a(e, 86), (u = 1)),
                      ee(e, 32768 | t, 21);
                    20558 !== e.token &&
                    1074790415 !== e.token &&
                    20563 !== e.token;

                  )
                    p.push(ke(e, 4096 | t, n, 2, { $: i }));
                  l.push(
                    oe(e, t, r, o, s, {
                      type: "SwitchCase",
                      test: c,
                      consequent: p,
                    }),
                  );
                }
                return (
                  ee(e, 32768 | t, 1074790415),
                  oe(e, t, r, o, s, {
                    type: "SwitchStatement",
                    discriminant: c,
                    cases: l,
                  })
                );
              })(e, t, n, r, s, c, l);
            case 1074790417:
              return (function (e, t, n, i, r) {
                return (
                  z(e, 32768 | t), oe(e, t, n, i, r, { type: "EmptyStatement" })
                );
              })(e, t, s, c, l);
            case 2162700:
              return ye(e, t, n ? ue(n, 2) : n, r, s, c, l);
            case 86114:
              return (function (e, t, n, i, r) {
                z(e, 32768 | t), 1 & e.flags && a(e, 87);
                const o = Be(e, t, 0, 1, e.tokenPos, e.linePos, e.colPos);
                return (
                  X(e, 32768 | t),
                  oe(e, t, n, i, r, { type: "ThrowStatement", argument: o })
                );
              })(e, t, s, c, l);
            case 20557:
              return (function (e, t, n, i, r, o) {
                z(e, 32768 | t);
                let s = null;
                if ((1 & e.flags) < 1 && 143360 & e.token) {
                  const { tokenValue: i } = e;
                  (s = rt(e, 32768 | t, 0)), ae(e, n, i, 0) || a(e, 134, i);
                } else (135168 & t) < 1 && a(e, 66);
                return (
                  X(e, 32768 | t),
                  oe(e, t, i, r, o, { type: "BreakStatement", label: s })
                );
              })(e, t, r, s, c, l);
            case 20561:
              return (function (e, t, n, i, r, o) {
                (131072 & t) < 1 && a(e, 65);
                z(e, t);
                let s = null;
                if ((1 & e.flags) < 1 && 143360 & e.token) {
                  const { tokenValue: i } = e;
                  (s = rt(e, 32768 | t, 0)), ae(e, n, i, 1) || a(e, 134, i);
                }
                return (
                  X(e, 32768 | t),
                  oe(e, t, i, r, o, { type: "ContinueStatement", label: s })
                );
              })(e, t, r, s, c, l);
            case 20579:
              return (function (e, t, n, i, r, o, s) {
                z(e, 32768 | t);
                const c = n ? ue(n, 32) : void 0,
                  l = ye(e, t, c, { $: i }, e.tokenPos, e.linePos, e.colPos),
                  { tokenPos: u, linePos: p, colPos: d } = e,
                  m = Z(e, 32768 | t, 20559)
                    ? (function (e, t, n, i, r, o, s) {
                        let c = null,
                          l = n;
                        Z(e, t, 67174411) &&
                          (n && (n = ue(n, 4)),
                          (c = Nt(
                            e,
                            t,
                            n,
                            2097152 == (2097152 & e.token) ? 256 : 512,
                            0,
                            e.tokenPos,
                            e.linePos,
                            e.colPos,
                          )),
                          18 === e.token
                            ? a(e, 83)
                            : 1077936157 === e.token && a(e, 84),
                          ee(e, 32768 | t, 16),
                          n && (l = ue(n, 64)));
                        const u = ye(
                          e,
                          t,
                          l,
                          { $: i },
                          e.tokenPos,
                          e.linePos,
                          e.colPos,
                        );
                        return oe(e, t, r, o, s, {
                          type: "CatchClause",
                          param: c,
                          body: u,
                        });
                      })(e, t, n, i, u, p, d)
                    : null;
                let h = null;
                if (20568 === e.token) {
                  z(e, 32768 | t);
                  h = ye(
                    e,
                    t,
                    c ? ue(n, 4) : void 0,
                    { $: i },
                    e.tokenPos,
                    e.linePos,
                    e.colPos,
                  );
                }
                m || h || a(e, 85);
                return oe(e, t, r, o, s, {
                  type: "TryStatement",
                  block: l,
                  handler: m,
                  finalizer: h,
                });
              })(e, t, n, r, s, c, l);
            case 20581:
              return (function (e, t, n, i, r, o, s) {
                z(e, t), 1024 & t && a(e, 88);
                ee(e, 32768 | t, 67174411);
                const c = Be(e, t, 0, 1, e.tokenPos, e.linePos, e.colPos);
                ee(e, 32768 | t, 16);
                const l = Te(e, t, n, 2, i, 0, e.tokenPos, e.linePos, e.colPos);
                return oe(e, t, r, o, s, {
                  type: "WithStatement",
                  object: c,
                  body: l,
                });
              })(e, t, n, r, s, c, l);
            case 20562:
              return (function (e, t, n, i, r) {
                return (
                  z(e, 32768 | t),
                  X(e, 32768 | t),
                  oe(e, t, n, i, r, { type: "DebuggerStatement" })
                );
              })(e, t, s, c, l);
            case 209007:
              return Ce(e, t, n, i, r, 0, s, c, l);
            case 20559:
              a(e, 156);
            case 20568:
              a(e, 157);
            case 86106:
              a(e, 1024 & t ? 73 : (256 & t) < 1 ? 75 : 74);
            case 86096:
              a(e, 76);
            default:
              return (function (e, t, n, i, r, o, s, c, l) {
                const { tokenValue: u, token: p } = e;
                let d;
                if (241739 === p)
                  (d = rt(e, t, 0)),
                    1024 & t && a(e, 82),
                    69271571 === e.token && a(e, 81);
                else
                  d = Qe(
                    e,
                    t,
                    2,
                    0,
                    1,
                    0,
                    0,
                    1,
                    e.tokenPos,
                    e.linePos,
                    e.colPos,
                  );
                if (143360 & p && 21 === e.token)
                  return we(e, t, n, i, r, u, d, p, o, s, c, l);
                (d = We(e, t, d, 0, 0, s, c, l)),
                  (d = Ue(e, t, 0, 0, s, c, l, d)),
                  18 === e.token && (d = Fe(e, t, 0, s, c, l, d));
                return Ee(e, t, d, s, c, l);
              })(e, t, n, i, r, o, s, c, l);
          }
        }
        function ye(e, t, n, i, r, a, o) {
          const s = [];
          for (ee(e, 32768 | t, 2162700); 1074790415 !== e.token; )
            s.push(ke(e, t, n, 2, { $: i }));
          return (
            ee(e, 32768 | t, 1074790415),
            oe(e, t, r, a, o, { type: "BlockStatement", body: s })
          );
        }
        function Ee(e, t, n, i, r, a) {
          return (
            X(e, 32768 | t),
            oe(e, t, i, r, a, { type: "ExpressionStatement", expression: n })
          );
        }
        function we(e, t, n, i, r, o, s, c, l, u, p, d) {
          ne(e, t, 0, c, 1),
            (function (e, t, n) {
              let i = t;
              for (; i; ) i["$" + n] && a(e, 132, n), (i = i.$);
              t["$" + n] = 1;
            })(e, r, o),
            z(e, 32768 | t);
          return oe(e, t, u, p, d, {
            type: "LabeledStatement",
            label: s,
            body:
              l && (1024 & t) < 1 && 256 & t && 86106 === e.token
                ? ot(
                    e,
                    t,
                    ue(n, 2),
                    i,
                    0,
                    0,
                    0,
                    e.tokenPos,
                    e.linePos,
                    e.colPos,
                  )
                : Te(e, t, n, i, r, l, e.tokenPos, e.linePos, e.colPos),
          });
        }
        function Ce(e, t, n, i, r, o, s, c, l) {
          const { token: u, tokenValue: p } = e;
          let d = rt(e, t, 0);
          if (21 === e.token) return we(e, t, n, i, r, p, d, u, 1, s, c, l);
          const m = 1 & e.flags;
          if (!m) {
            if (86106 === e.token)
              return o || a(e, 119), ot(e, t, n, i, 1, 0, 1, s, c, l);
            if (143360 == (143360 & e.token))
              return (
                (d = kt(e, t, 1, s, c, l)),
                18 === e.token && (d = Fe(e, t, 0, s, c, l, d)),
                Ee(e, t, d, s, c, l)
              );
          }
          return (
            67174411 === e.token
              ? (d = Tt(e, t, d, 1, 1, 0, m, s, c, l))
              : (10 === e.token &&
                  (xe(e, t, u, 1),
                  (d = ft(e, t, e.tokenValue, d, 0, 1, 0, s, c, l))),
                (e.assignable = 1)),
            (d = We(e, t, d, 0, 0, s, c, l)),
            18 === e.token && (d = Fe(e, t, 0, s, c, l, d)),
            (d = Ue(e, t, 0, 0, s, c, l, d)),
            (e.assignable = 1),
            Ee(e, t, d, s, c, l)
          );
        }
        function Ae(e, t, n, i, r, a, o) {
          return (
            1074790417 !== i &&
              ((e.assignable = 2),
              (n = We(e, t, n, 0, 0, r, a, o)),
              1074790417 !== e.token &&
                ((n = Ue(e, t, 0, 0, r, a, o, n)),
                18 === e.token && (n = Fe(e, t, 0, r, a, o, n))),
              X(e, 32768 | t)),
            8 & t && "Literal" === n.type && "string" == typeof n.value
              ? oe(e, t, r, a, o, {
                  type: "ExpressionStatement",
                  expression: n,
                  directive: n.raw.slice(1, -1),
                })
              : oe(e, t, r, a, o, {
                  type: "ExpressionStatement",
                  expression: n,
                })
          );
        }
        function Se(e, t, n, i, r, a, o) {
          return 1024 & t || (256 & t) < 1 || 86106 !== e.token
            ? Te(e, t, n, 0, { $: i }, 0, e.tokenPos, e.linePos, e.colPos)
            : ot(e, t, ue(n, 2), 0, 0, 0, 0, r, a, o);
        }
        function _e(e, t, n, i) {
          return Te(
            e,
            (134217728 ^ (134217728 | t)) | 131072,
            n,
            0,
            { loop: 1, $: i },
            0,
            e.tokenPos,
            e.linePos,
            e.colPos,
          );
        }
        function Ne(e, t, n, i, r, a, o, s) {
          z(e, t);
          const c = Oe(e, t, n, i, r);
          return (
            X(e, 32768 | t),
            oe(e, t, a, o, s, {
              type: "VariableDeclaration",
              kind: 8 & i ? "let" : "const",
              declarations: c,
            })
          );
        }
        function Pe(e, t, n, i, r, a, o) {
          z(e, t);
          const s = Oe(e, t, n, 4, i);
          return (
            X(e, 32768 | t),
            oe(e, t, r, a, o, {
              type: "VariableDeclaration",
              kind: "var",
              declarations: s,
            })
          );
        }
        function Oe(e, t, n, i, r) {
          let o = 1;
          const s = [Le(e, t, n, i, r)];
          for (; Z(e, t, 18); ) o++, s.push(Le(e, t, n, i, r));
          return (
            o > 1 && 32 & r && 262144 & e.token && a(e, 58, R[255 & e.token]), s
          );
        }
        function Le(e, t, n, i, r) {
          const { token: o, tokenPos: c, linePos: l, colPos: u } = e;
          let p = null;
          const d = Nt(e, t, n, i, r, c, l, u);
          return (
            1077936157 === e.token
              ? (z(e, 32768 | t),
                (p = He(e, t, 1, 0, 0, e.tokenPos, e.linePos, e.colPos)),
                (32 & r || (2097152 & o) < 1) &&
                  (274549 === e.token ||
                    (8738868 === e.token &&
                      (2097152 & o || (4 & i) < 1 || 1024 & t))) &&
                  s(
                    c,
                    e.line,
                    e.index - 3,
                    57,
                    274549 === e.token ? "of" : "in",
                  ))
              : (16 & i || (2097152 & o) > 0) &&
                262144 != (262144 & e.token) &&
                a(e, 56, 16 & i ? "const" : "destructuring"),
            oe(e, t, c, l, u, { type: "VariableDeclarator", id: d, init: p })
          );
        }
        function Ie(e, t, n) {
          return (
            ge(t, e.token) || a(e, 114),
            537079808 == (537079808 & e.token) && a(e, 115),
            n && de(e, t, n, e.tokenValue, 8, 0),
            rt(e, t, 0)
          );
        }
        function Re(e, t, n) {
          const { tokenPos: i, linePos: r, colPos: a } = e;
          return (
            z(e, t),
            ee(e, t, 77934),
            134217728 == (134217728 & e.token) &&
              s(i, e.line, e.index, 28, R[255 & e.token]),
            oe(e, t, i, r, a, {
              type: "ImportNamespaceSpecifier",
              local: Ie(e, t, n),
            })
          );
        }
        function Me(e, t, n, i) {
          for (z(e, t); 143360 & e.token; ) {
            let {
              token: r,
              tokenValue: o,
              tokenPos: s,
              linePos: c,
              colPos: l,
            } = e;
            const u = rt(e, t, 0);
            let p;
            Z(e, t, 77934)
              ? (134217728 == (134217728 & e.token) || 18 === e.token
                  ? a(e, 103)
                  : ne(e, t, 16, e.token, 0),
                (o = e.tokenValue),
                (p = rt(e, t, 0)))
              : (ne(e, t, 16, r, 0), (p = u)),
              n && de(e, t, n, o, 8, 0),
              i.push(
                oe(e, t, s, c, l, {
                  type: "ImportSpecifier",
                  local: p,
                  imported: u,
                }),
              ),
              1074790415 !== e.token && ee(e, t, 18);
          }
          return ee(e, t, 1074790415), i;
        }
        function De(e, t, n, i, r) {
          let a = Xe(
            e,
            t,
            oe(e, t, n, i, r, { type: "Identifier", name: "import" }),
            n,
            i,
            r,
          );
          return (
            (a = We(e, t, a, 0, 0, n, i, r)),
            (a = Ue(e, t, 0, 0, n, i, r, a)),
            Ee(e, t, a, n, i, r)
          );
        }
        function je(e, t, n, i, r) {
          let a = Je(e, t, 0, n, i, r);
          return (a = We(e, t, a, 0, 0, n, i, r)), Ee(e, t, a, n, i, r);
        }
        function He(e, t, n, i, r, a, o, s) {
          let c = Qe(e, t, 2, 0, n, i, r, 1, a, o, s);
          return (c = We(e, t, c, r, 0, a, o, s)), Ue(e, t, r, 0, a, o, s, c);
        }
        function Fe(e, t, n, i, r, a, o) {
          const s = [o];
          for (; Z(e, 32768 | t, 18); )
            s.push(He(e, t, 1, 0, n, e.tokenPos, e.linePos, e.colPos));
          return oe(e, t, i, r, a, {
            type: "SequenceExpression",
            expressions: s,
          });
        }
        function Be(e, t, n, i, r, a, o) {
          const s = He(e, t, i, 0, n, r, a, o);
          return 18 === e.token ? Fe(e, t, n, r, a, o, s) : s;
        }
        function Ue(e, t, n, i, r, o, s, c) {
          const { token: l } = e;
          if (4194304 == (4194304 & l)) {
            2 & e.assignable && a(e, 24),
              ((!i && 1077936157 === l && "ArrayExpression" === c.type) ||
                "ObjectExpression" === c.type) &&
                te(e, c),
              z(e, 32768 | t);
            const u = He(e, t, 1, 1, n, e.tokenPos, e.linePos, e.colPos);
            return (
              (e.assignable = 2),
              oe(
                e,
                t,
                r,
                o,
                s,
                i
                  ? { type: "AssignmentPattern", left: c, right: u }
                  : {
                      type: "AssignmentExpression",
                      left: c,
                      operator: R[255 & l],
                      right: u,
                    },
              )
            );
          }
          return (
            8454144 == (8454144 & l) && (c = Ge(e, t, n, r, o, s, 4, l, c)),
            Z(e, 32768 | t, 22) && (c = qe(e, t, c, r, o, s)),
            c
          );
        }
        function ze(e, t, n, i, r, a, o, s) {
          const { token: c } = e;
          z(e, 32768 | t);
          const l = He(e, t, 1, 1, n, e.tokenPos, e.linePos, e.colPos);
          return (
            (s = oe(
              e,
              t,
              r,
              a,
              o,
              i
                ? { type: "AssignmentPattern", left: s, right: l }
                : {
                    type: "AssignmentExpression",
                    left: s,
                    operator: R[255 & c],
                    right: l,
                  },
            )),
            (e.assignable = 2),
            s
          );
        }
        function qe(e, t, n, i, r, a) {
          const o = He(
            e,
            134217728 ^ (134217728 | t),
            1,
            0,
            0,
            e.tokenPos,
            e.linePos,
            e.colPos,
          );
          ee(e, 32768 | t, 21), (e.assignable = 1);
          const s = He(e, t, 1, 0, 0, e.tokenPos, e.linePos, e.colPos);
          return (
            (e.assignable = 2),
            oe(e, t, i, r, a, {
              type: "ConditionalExpression",
              test: n,
              consequent: o,
              alternate: s,
            })
          );
        }
        function Ge(e, t, n, i, r, o, s, c, l) {
          const u = 8738868 & -((134217728 & t) > 0);
          let p, d;
          for (
            e.assignable = 2;
            8454144 & e.token &&
            ((p = e.token),
            (d = 3840 & p),
            ((524288 & p && 268435456 & c) || (524288 & c && 268435456 & p)) &&
              a(e, 159),
            !(d + ((8457273 === p) << 8) - ((u === p) << 12) <= s));

          )
            z(e, 32768 | t),
              (l = oe(e, t, i, r, o, {
                type:
                  524288 & p || 268435456 & p
                    ? "LogicalExpression"
                    : "BinaryExpression",
                left: l,
                right: Ge(
                  e,
                  t,
                  n,
                  e.tokenPos,
                  e.linePos,
                  e.colPos,
                  d,
                  p,
                  Ve(e, t, 0, n, 1, e.tokenPos, e.linePos, e.colPos),
                ),
                operator: R[255 & p],
              }));
          return 1077936157 === e.token && a(e, 24), l;
        }
        function Ke(e, t, n, i, r, c) {
          const { tokenPos: l, linePos: u, colPos: p } = e;
          ee(e, 32768 | t, 2162700);
          const d = [],
            m = t;
          if (1074790415 !== e.token) {
            for (; 134283267 === e.token; ) {
              const { index: n, tokenPos: i, tokenValue: r, token: a } = e,
                o = at(e, t);
              J(e, n, i, r) &&
                ((t |= 1024),
                128 & e.flags && s(e.index, e.line, e.tokenPos, 63),
                64 & e.flags && s(e.index, e.line, e.tokenPos, 8)),
                d.push(Ae(e, t, o, a, i, e.linePos, e.colPos));
            }
            1024 & t &&
              (r &&
                (537079808 == (537079808 & r) && a(e, 115),
                36864 == (36864 & r) && a(e, 38)),
              512 & e.flags && a(e, 115),
              256 & e.flags && a(e, 114)),
              64 & t &&
                n &&
                void 0 !== c &&
                (1024 & m) < 1 &&
                (8192 & t) < 1 &&
                o(c);
          }
          for (
            e.flags = 832 ^ (832 | e.flags),
              e.destructible = 256 ^ (256 | e.destructible);
            1074790415 !== e.token;

          )
            d.push(ke(e, t, n, 4, {}));
          return (
            ee(e, 24 & i ? 32768 | t : t, 1074790415),
            (e.flags &= -193),
            1077936157 === e.token && a(e, 24),
            oe(e, t, l, u, p, { type: "BlockStatement", body: d })
          );
        }
        function Ve(e, t, n, i, r, a, o, s) {
          return We(e, t, Qe(e, t, 2, 0, n, 0, i, r, a, o, s), i, 0, a, o, s);
        }
        function We(e, t, n, i, r, o, s, c) {
          if (33619968 == (33619968 & e.token) && (1 & e.flags) < 1)
            n = (function (e, t, n, i, r, o) {
              2 & e.assignable && a(e, 52);
              const { token: s } = e;
              return (
                z(e, t),
                (e.assignable = 2),
                oe(e, t, i, r, o, {
                  type: "UpdateExpression",
                  argument: n,
                  operator: R[255 & s],
                  prefix: !1,
                })
              );
            })(e, t, n, o, s, c);
          else if (67108864 == (67108864 & e.token)) {
            switch (((t = 134225920 ^ (134225920 | t)), e.token)) {
              case 67108877:
                z(e, 1073741824 | t), (e.assignable = 1);
                n = oe(e, t, o, s, c, {
                  type: "MemberExpression",
                  object: n,
                  computed: !1,
                  property: Ye(e, t),
                });
                break;
              case 69271571: {
                let r = !1;
                2048 == (2048 & e.flags) &&
                  ((r = !0), (e.flags = 2048 ^ (2048 | e.flags))),
                  z(e, 32768 | t);
                const { tokenPos: a, linePos: l, colPos: u } = e,
                  p = Be(e, t, i, 1, a, l, u);
                ee(e, t, 20),
                  (e.assignable = 1),
                  (n = oe(e, t, o, s, c, {
                    type: "MemberExpression",
                    object: n,
                    computed: !0,
                    property: p,
                  })),
                  r && (e.flags |= 2048);
                break;
              }
              case 67174411: {
                if (1024 == (1024 & e.flags))
                  return (e.flags = 1024 ^ (1024 | e.flags)), n;
                let r = !1;
                2048 == (2048 & e.flags) &&
                  ((r = !0), (e.flags = 2048 ^ (2048 | e.flags)));
                const a = it(e, t, i);
                (e.assignable = 2),
                  (n = oe(e, t, o, s, c, {
                    type: "CallExpression",
                    callee: n,
                    arguments: a,
                  })),
                  r && (e.flags |= 2048);
                break;
              }
              case 67108991:
                z(e, t),
                  (e.flags |= 2048),
                  (e.assignable = 2),
                  (n = (function (e, t, n, i, r, o) {
                    let s,
                      c = !1;
                    (69271571 !== e.token && 67174411 !== e.token) ||
                      (2048 == (2048 & e.flags) &&
                        ((c = !0), (e.flags = 2048 ^ (2048 | e.flags))));
                    if (69271571 === e.token) {
                      z(e, 32768 | t);
                      const { tokenPos: a, linePos: c, colPos: l } = e,
                        u = Be(e, t, 0, 1, a, c, l);
                      ee(e, t, 20),
                        (e.assignable = 2),
                        (s = oe(e, t, i, r, o, {
                          type: "MemberExpression",
                          object: n,
                          computed: !0,
                          optional: !0,
                          property: u,
                        }));
                    } else if (67174411 === e.token) {
                      const a = it(e, t, 0);
                      (e.assignable = 2),
                        (s = oe(e, t, i, r, o, {
                          type: "CallExpression",
                          callee: n,
                          arguments: a,
                          optional: !0,
                        }));
                    } else {
                      (143360 & e.token) < 1 && a(e, 154);
                      const c = rt(e, t, 0);
                      (e.assignable = 2),
                        (s = oe(e, t, i, r, o, {
                          type: "MemberExpression",
                          object: n,
                          computed: !1,
                          optional: !0,
                          property: c,
                        }));
                    }
                    c && (e.flags |= 2048);
                    return s;
                  })(e, t, n, o, s, c));
                break;
              default:
                2048 == (2048 & e.flags) && a(e, 160),
                  (e.assignable = 2),
                  (n = oe(e, t, o, s, c, {
                    type: "TaggedTemplateExpression",
                    tag: n,
                    quasi:
                      67174408 === e.token
                        ? et(e, 65536 | t)
                        : Ze(e, t, e.tokenPos, e.linePos, e.colPos),
                  }));
            }
            n = We(e, t, n, 0, 1, o, s, c);
          }
          return (
            0 === r &&
              2048 == (2048 & e.flags) &&
              ((e.flags = 2048 ^ (2048 | e.flags)),
              (n = oe(e, t, o, s, c, {
                type: "ChainExpression",
                expression: n,
              }))),
            n
          );
        }
        function Ye(e, t) {
          return (
            (143360 & e.token) < 1 && 131 !== e.token && a(e, 154),
            1 & t && 131 === e.token
              ? St(e, t, e.tokenPos, e.linePos, e.colPos)
              : rt(e, t, 0)
          );
        }
        function Qe(e, t, n, i, r, o, c, l, u, p, d) {
          if (143360 == (143360 & e.token)) {
            switch (e.token) {
              case 209008:
                return (function (e, t, n, i, r, o, c) {
                  if (
                    (i && (e.destructible |= 128),
                    4194304 & t || (2048 & t && 8192 & t))
                  ) {
                    n && a(e, 0),
                      8388608 & t && s(e.index, e.line, e.index, 29),
                      z(e, 32768 | t);
                    const i = Ve(
                      e,
                      t,
                      0,
                      0,
                      1,
                      e.tokenPos,
                      e.linePos,
                      e.colPos,
                    );
                    return (
                      8457273 === e.token && a(e, 31),
                      (e.assignable = 2),
                      oe(e, t, r, o, c, {
                        type: "AwaitExpression",
                        argument: i,
                      })
                    );
                  }
                  return 2048 & t && a(e, 95), ht(e, t, r, o, c);
                })(e, t, i, c, u, p, d);
              case 241773:
                return (function (e, t, n, i, r, o, s) {
                  if ((n && (e.destructible |= 256), 2097152 & t)) {
                    z(e, 32768 | t),
                      8388608 & t && a(e, 30),
                      i || a(e, 24),
                      22 === e.token && a(e, 120);
                    let n = null,
                      c = !1;
                    return (
                      (1 & e.flags) < 1 &&
                        ((c = Z(e, 32768 | t, 8457014)),
                        (77824 & e.token || c) &&
                          (n = He(
                            e,
                            t,
                            1,
                            0,
                            0,
                            e.tokenPos,
                            e.linePos,
                            e.colPos,
                          ))),
                      (e.assignable = 2),
                      oe(e, t, r, o, s, {
                        type: "YieldExpression",
                        argument: n,
                        delegate: c,
                      })
                    );
                  }
                  return 1024 & t && a(e, 94, "yield"), ht(e, t, r, o, s);
                })(e, t, c, r, u, p, d);
              case 209007:
                return (function (e, t, n, i, r, o, s, c, l, u) {
                  const { token: p } = e,
                    d = rt(e, t, o),
                    { flags: m } = e;
                  if ((1 & m) < 1) {
                    if (86106 === e.token) return st(e, t, 1, n, c, l, u);
                    if (143360 == (143360 & e.token))
                      return i || a(e, 0), kt(e, t, r, c, l, u);
                  }
                  return s || 67174411 !== e.token
                    ? 10 === e.token
                      ? (xe(e, t, p, 1),
                        s && a(e, 48),
                        ft(e, t, e.tokenValue, d, s, r, 0, c, l, u))
                      : d
                    : Tt(e, t, d, r, 1, 0, m, c, l, u);
                })(e, t, c, l, r, o, i, u, p, d);
            }
            const { token: m, tokenValue: h } = e,
              f = rt(e, 65536 | t, o);
            return 10 === e.token
              ? (l || a(e, 0), xe(e, t, m, 1), ft(e, t, h, f, i, r, 0, u, p, d))
              : (16384 & t && 537079928 === m && a(e, 126),
                241739 === m && (1024 & t && a(e, 109), 24 & n && a(e, 97)),
                (e.assignable =
                  1024 & t && 537079808 == (537079808 & m) ? 2 : 1),
                f);
          }
          if (134217728 == (134217728 & e.token)) return at(e, t);
          switch (e.token) {
            case 33619995:
            case 33619996:
              return (function (e, t, n, i, r, o, s) {
                n && a(e, 53), i || a(e, 0);
                const { token: c } = e;
                z(e, 32768 | t);
                const l = Ve(e, t, 0, 0, 1, e.tokenPos, e.linePos, e.colPos);
                return (
                  2 & e.assignable && a(e, 52),
                  (e.assignable = 2),
                  oe(e, t, r, o, s, {
                    type: "UpdateExpression",
                    argument: l,
                    operator: R[255 & c],
                    prefix: !0,
                  })
                );
              })(e, t, i, l, u, p, d);
            case 16863278:
            case 16842800:
            case 16842801:
            case 25233970:
            case 25233971:
            case 16863277:
            case 16863279:
              return (function (e, t, n, i, r, o, s) {
                n || a(e, 0);
                const c = e.token;
                z(e, 32768 | t);
                const l = Ve(e, t, 0, s, 1, e.tokenPos, e.linePos, e.colPos);
                var u;
                return (
                  8457273 === e.token && a(e, 31),
                  1024 & t &&
                    16863278 === c &&
                    ("Identifier" === l.type
                      ? a(e, 117)
                      : (u = l).property &&
                        "PrivateIdentifier" === u.property.type &&
                        a(e, 123)),
                  (e.assignable = 2),
                  oe(e, t, i, r, o, {
                    type: "UnaryExpression",
                    operator: R[255 & c],
                    argument: l,
                    prefix: !0,
                  })
                );
              })(e, t, l, u, p, d, c);
            case 86106:
              return st(e, t, 0, c, u, p, d);
            case 2162700:
              return (function (e, t, n, i, r, o, s) {
                const c = dt(e, t, void 0, n, i, 0, 2, 0, r, o, s);
                256 & t && 64 & e.destructible && a(e, 60);
                8 & e.destructible && a(e, 59);
                return c;
              })(e, t, r ? 0 : 1, c, u, p, d);
            case 69271571:
              return (function (e, t, n, i, r, o, s) {
                const c = ct(e, t, void 0, n, i, 0, 2, 0, r, o, s);
                256 & t && 64 & e.destructible && a(e, 60);
                8 & e.destructible && a(e, 59);
                return c;
              })(e, t, r ? 0 : 1, c, u, p, d);
            case 67174411:
              return (function (e, t, n, i, r, o, s, c) {
                e.flags = 128 ^ (128 | e.flags);
                const { tokenPos: l, linePos: u, colPos: p } = e;
                z(e, 1073774592 | t);
                const d =
                  64 & t ? ue({ parent: void 0, type: 2 }, 1024) : void 0;
                if (((t = 134217728 ^ (134217728 | t)), Z(e, t, 16)))
                  return gt(e, t, d, [], n, 0, o, s, c);
                let m,
                  h = 0;
                e.destructible &= -385;
                let f = [],
                  g = 0,
                  x = 0;
                const { tokenPos: b, linePos: v, colPos: k } = e;
                e.assignable = 1;
                for (; 16 !== e.token; ) {
                  const { token: n, tokenPos: o, linePos: s, colPos: c } = e;
                  if (143360 & n)
                    d && de(e, t, d, e.tokenValue, 1, 0),
                      (m = Qe(e, t, i, 0, 1, 0, 1, 1, o, s, c)),
                      16 === e.token || 18 === e.token
                        ? 2 & e.assignable
                          ? ((h |= 16), (x = 1))
                          : (537079808 != (537079808 & n) &&
                              36864 != (36864 & n)) ||
                            (x = 1)
                        : (1077936157 === e.token ? (x = 1) : (h |= 16),
                          (m = We(e, t, m, 1, 0, o, s, c)),
                          16 !== e.token &&
                            18 !== e.token &&
                            (m = Ue(e, t, 1, 0, o, s, c, m)));
                  else {
                    if (2097152 != (2097152 & n)) {
                      if (14 === n) {
                        (m = ut(e, t, d, 16, i, r, 0, 1, 0, o, s, c)),
                          16 & e.destructible && a(e, 71),
                          (x = 1),
                          !g || (16 !== e.token && 18 !== e.token) || f.push(m),
                          (h |= 8);
                        break;
                      }
                      if (
                        ((h |= 16),
                        (m = He(e, t, 1, 0, 1, o, s, c)),
                        !g || (16 !== e.token && 18 !== e.token) || f.push(m),
                        18 === e.token && (g || ((g = 1), (f = [m]))),
                        g)
                      ) {
                        for (; Z(e, 32768 | t, 18); )
                          f.push(
                            He(e, t, 1, 0, 1, e.tokenPos, e.linePos, e.colPos),
                          );
                        (e.assignable = 2),
                          (m = oe(e, t, b, v, k, {
                            type: "SequenceExpression",
                            expressions: f,
                          }));
                      }
                      return ee(e, t, 16), (e.destructible = h), m;
                    }
                    (m =
                      2162700 === n
                        ? dt(e, 1073741824 | t, d, 0, 1, 0, i, r, o, s, c)
                        : ct(e, 1073741824 | t, d, 0, 1, 0, i, r, o, s, c)),
                      (h |= e.destructible),
                      (x = 1),
                      (e.assignable = 2),
                      16 !== e.token &&
                        18 !== e.token &&
                        (8 & h && a(e, 118),
                        (m = We(e, t, m, 0, 0, o, s, c)),
                        (h |= 16),
                        16 !== e.token &&
                          18 !== e.token &&
                          (m = Ue(e, t, 0, 0, o, s, c, m)));
                  }
                  if (
                    (!g || (16 !== e.token && 18 !== e.token) || f.push(m),
                    !Z(e, 32768 | t, 18))
                  )
                    break;
                  if ((g || ((g = 1), (f = [m])), 16 === e.token)) {
                    h |= 8;
                    break;
                  }
                }
                g &&
                  ((e.assignable = 2),
                  (m = oe(e, t, b, v, k, {
                    type: "SequenceExpression",
                    expressions: f,
                  })));
                ee(e, t, 16), 16 & h && 8 & h && a(e, 145);
                if (
                  ((h |=
                    256 & e.destructible
                      ? 256
                      : 0 | (128 & e.destructible)
                        ? 128
                        : 0),
                  10 === e.token)
                )
                  return (
                    48 & h && a(e, 46),
                    4196352 & t && 128 & h && a(e, 29),
                    2098176 & t && 256 & h && a(e, 30),
                    x && (e.flags |= 128),
                    gt(e, t, d, g ? f : [m], n, 0, o, s, c)
                  );
                8 & h && a(e, 139);
                return (
                  (e.destructible = (256 ^ (256 | e.destructible)) | h),
                  128 & t
                    ? oe(e, t, l, u, p, {
                        type: "ParenthesizedExpression",
                        expression: m,
                      })
                    : m
                );
              })(e, t, r, 1, 0, u, p, d);
            case 86021:
            case 86022:
            case 86023:
              return (function (e, t, n, i, r) {
                const a = R[255 & e.token],
                  o = 86023 === e.token ? null : "true" === a;
                return (
                  z(e, t),
                  (e.assignable = 2),
                  oe(
                    e,
                    t,
                    n,
                    i,
                    r,
                    512 & t
                      ? { type: "Literal", value: o, raw: a }
                      : { type: "Literal", value: o },
                  )
                );
              })(e, t, u, p, d);
            case 86113:
              return (function (e, t) {
                const { tokenPos: n, linePos: i, colPos: r } = e;
                return (
                  z(e, t),
                  (e.assignable = 2),
                  oe(e, t, n, i, r, { type: "ThisExpression" })
                );
              })(e, t);
            case 65540:
              return (function (e, t, n, i, r) {
                const { tokenRaw: a, tokenRegExp: o, tokenValue: s } = e;
                return (
                  z(e, t),
                  (e.assignable = 2),
                  oe(
                    e,
                    t,
                    n,
                    i,
                    r,
                    512 & t
                      ? { type: "Literal", value: s, regex: o, raw: a }
                      : { type: "Literal", value: s, regex: o },
                  )
                );
              })(e, t, u, p, d);
            case 133:
            case 86096:
              return (function (e, t, n, i, r, o) {
                let s = null,
                  c = null;
                t = 16777216 ^ (16778240 | t);
                const l = Et(e, t);
                l.length && ((i = e.tokenPos), (r = e.linePos), (o = e.colPos));
                z(e, t),
                  4096 & e.token &&
                    20567 !== e.token &&
                    (re(e, t, e.token) && a(e, 114),
                    537079808 == (537079808 & e.token) && a(e, 115),
                    (s = rt(e, t, 0)));
                let u = t;
                Z(e, 32768 | t, 20567)
                  ? ((c = Ve(e, t, 0, n, 0, e.tokenPos, e.linePos, e.colPos)),
                    (u |= 524288))
                  : (u = 524288 ^ (524288 | u));
                const p = Ct(e, u, t, void 0, 2, 0, n);
                return (
                  (e.assignable = 2),
                  oe(
                    e,
                    t,
                    i,
                    r,
                    o,
                    1 & t
                      ? {
                          type: "ClassExpression",
                          id: s,
                          superClass: c,
                          decorators: l,
                          body: p,
                        }
                      : {
                          type: "ClassExpression",
                          id: s,
                          superClass: c,
                          body: p,
                        },
                  )
                );
              })(e, t, c, u, p, d);
            case 86111:
              return (function (e, t, n, i, r) {
                switch ((z(e, t), e.token)) {
                  case 67108991:
                    a(e, 161);
                  case 67174411:
                    (524288 & t) < 1 && a(e, 26),
                      16384 & t && a(e, 143),
                      (e.assignable = 2);
                    break;
                  case 69271571:
                  case 67108877:
                    (262144 & t) < 1 && a(e, 27),
                      16384 & t && a(e, 143),
                      (e.assignable = 1);
                    break;
                  default:
                    a(e, 28, "super");
                }
                return oe(e, t, n, i, r, { type: "Super" });
              })(e, t, u, p, d);
            case 67174409:
              return Ze(e, t, u, p, d);
            case 67174408:
              return et(e, t);
            case 86109:
              return (function (e, t, n, i, r, o) {
                const s = rt(e, 32768 | t, 0),
                  { tokenPos: c, linePos: l, colPos: u } = e;
                if (Z(e, t, 67108877)) {
                  if (67108864 & t && 143494 === e.token)
                    return (
                      (e.assignable = 2),
                      (function (e, t, n, i, r, a) {
                        const o = rt(e, t, 0);
                        return oe(e, t, i, r, a, {
                          type: "MetaProperty",
                          meta: n,
                          property: o,
                        });
                      })(e, t, s, i, r, o)
                    );
                  a(e, 91);
                }
                (e.assignable = 2),
                  16842752 == (16842752 & e.token) &&
                    a(e, 62, R[255 & e.token]);
                const p = Qe(e, t, 2, 1, 0, 0, n, 1, c, l, u);
                (t = 134217728 ^ (134217728 | t)),
                  67108991 === e.token && a(e, 162);
                const d = vt(e, t, p, n, c, l, u);
                return (
                  (e.assignable = 2),
                  oe(e, t, i, r, o, {
                    type: "NewExpression",
                    callee: d,
                    arguments: 67174411 === e.token ? it(e, t, n) : [],
                  })
                );
              })(e, t, c, u, p, d);
            case 134283389:
              return $e(e, t, u, p, d);
            case 131:
              return St(e, t, u, p, d);
            case 86108:
              return (function (e, t, n, i, r, o, s) {
                let c = rt(e, t, 0);
                if (67108877 === e.token) return Xe(e, t, c, r, o, s);
                n && a(e, 137);
                return (
                  (c = Je(e, t, i, r, o, s)),
                  (e.assignable = 2),
                  We(e, t, c, i, 0, r, o, s)
                );
              })(e, t, i, c, u, p, d);
            case 8456258:
              if (16 & t) return Ot(e, t, 1, u, p, d);
            default:
              if (ge(t, e.token)) return ht(e, t, u, p, d);
              a(e, 28, R[255 & e.token]);
          }
        }
        function Xe(e, t, n, i, r, o) {
          return (
            0 == (2048 & t) && a(e, 163),
            z(e, t),
            143495 !== e.token &&
              "meta" !== e.tokenValue &&
              a(e, 28, R[255 & e.token]),
            (e.assignable = 2),
            oe(e, t, i, r, o, {
              type: "MetaProperty",
              meta: n,
              property: rt(e, t, 0),
            })
          );
        }
        function Je(e, t, n, i, r, o) {
          ee(e, 32768 | t, 67174411), 14 === e.token && a(e, 138);
          const s = He(e, t, 1, 0, n, e.tokenPos, e.linePos, e.colPos);
          return (
            ee(e, t, 16),
            oe(e, t, i, r, o, { type: "ImportExpression", source: s })
          );
        }
        function $e(e, t, n, i, r) {
          const { tokenRaw: a, tokenValue: o } = e;
          return (
            z(e, t),
            (e.assignable = 2),
            oe(
              e,
              t,
              n,
              i,
              r,
              512 & t
                ? { type: "Literal", value: o, bigint: a.slice(0, -1), raw: a }
                : { type: "Literal", value: o, bigint: a.slice(0, -1) },
            )
          );
        }
        function Ze(e, t, n, i, r) {
          e.assignable = 2;
          const {
            tokenValue: a,
            tokenRaw: o,
            tokenPos: s,
            linePos: c,
            colPos: l,
          } = e;
          ee(e, t, 67174409);
          return oe(e, t, n, i, r, {
            type: "TemplateLiteral",
            expressions: [],
            quasis: [tt(e, t, a, o, s, c, l, !0)],
          });
        }
        function et(e, t) {
          t = 134217728 ^ (134217728 | t);
          const {
            tokenValue: n,
            tokenRaw: i,
            tokenPos: r,
            linePos: o,
            colPos: s,
          } = e;
          ee(e, 32768 | t, 67174408);
          const c = [tt(e, t, n, i, r, o, s, !1)],
            l = [Be(e, t, 0, 1, e.tokenPos, e.linePos, e.colPos)];
          for (
            1074790415 !== e.token && a(e, 80);
            67174409 !== (e.token = O(e, t));

          ) {
            const {
              tokenValue: n,
              tokenRaw: i,
              tokenPos: r,
              linePos: o,
              colPos: s,
            } = e;
            ee(e, 32768 | t, 67174408),
              c.push(tt(e, t, n, i, r, o, s, !1)),
              l.push(Be(e, t, 0, 1, e.tokenPos, e.linePos, e.colPos)),
              1074790415 !== e.token && a(e, 80);
          }
          {
            const {
              tokenValue: n,
              tokenRaw: i,
              tokenPos: r,
              linePos: a,
              colPos: o,
            } = e;
            ee(e, t, 67174409), c.push(tt(e, t, n, i, r, a, o, !0));
          }
          return oe(e, t, r, o, s, {
            type: "TemplateLiteral",
            expressions: l,
            quasis: c,
          });
        }
        function tt(e, t, n, i, r, a, o, s) {
          const c = oe(e, t, r, a, o, {
              type: "TemplateElement",
              value: { cooked: n, raw: i },
              tail: s,
            }),
            l = s ? 1 : 2;
          return (
            2 & t &&
              ((c.start += 1),
              (c.range[0] += 1),
              (c.end -= l),
              (c.range[1] -= l)),
            4 & t && ((c.loc.start.column += 1), (c.loc.end.column -= l)),
            c
          );
        }
        function nt(e, t, n, i, r) {
          ee(e, 32768 | (t = 134217728 ^ (134217728 | t)), 14);
          const a = He(e, t, 1, 0, 0, e.tokenPos, e.linePos, e.colPos);
          return (
            (e.assignable = 1),
            oe(e, t, n, i, r, { type: "SpreadElement", argument: a })
          );
        }
        function it(e, t, n) {
          z(e, 32768 | t);
          const i = [];
          if (16 === e.token) return z(e, t), i;
          for (
            ;
            16 !== e.token &&
            (14 === e.token
              ? i.push(nt(e, t, e.tokenPos, e.linePos, e.colPos))
              : i.push(He(e, t, 1, 0, n, e.tokenPos, e.linePos, e.colPos)),
            18 === e.token) &&
            (z(e, 32768 | t), 16 !== e.token);

          );
          return ee(e, t, 16), i;
        }
        function rt(e, t, n) {
          const { tokenValue: i, tokenPos: r, linePos: a, colPos: o } = e;
          return (
            z(e, t),
            oe(
              e,
              t,
              r,
              a,
              o,
              268435456 & t
                ? { type: "Identifier", name: i, pattern: 1 === n }
                : { type: "Identifier", name: i },
            )
          );
        }
        function at(e, t) {
          const {
            tokenValue: n,
            tokenRaw: i,
            tokenPos: r,
            linePos: a,
            colPos: o,
          } = e;
          return 134283389 === e.token
            ? $e(e, t, r, a, o)
            : (z(e, t),
              (e.assignable = 2),
              oe(
                e,
                t,
                r,
                a,
                o,
                512 & t
                  ? { type: "Literal", value: n, raw: i }
                  : { type: "Literal", value: n },
              ));
        }
        function ot(e, t, n, i, r, o, s, c, l, u) {
          z(e, 32768 | t);
          const p = r ? $(e, t, 8457014) : 0;
          let d,
            m = null,
            h = n ? { parent: void 0, type: 2 } : void 0;
          if (67174411 === e.token) (1 & o) < 1 && a(e, 37, "Function");
          else {
            const r = 4 & i && ((8192 & t) < 1 || (2048 & t) < 1) ? 4 : 64;
            ie(e, t | ((3072 & t) << 11), e.token),
              n &&
                (4 & r
                  ? me(e, t, n, e.tokenValue, r)
                  : de(e, t, n, e.tokenValue, r, i),
                (h = ue(h, 256)),
                o && 2 & o && he(e, e.tokenValue)),
              (d = e.token),
              143360 & e.token ? (m = rt(e, t, 0)) : a(e, 28, R[255 & e.token]);
          }
          (t =
            (32243712 ^ (32243712 | t)) |
            67108864 |
            ((2 * s + p) << 21) |
            (p ? 0 : 1073741824)),
            n && (h = ue(h, 512));
          return oe(e, t, c, l, u, {
            type: "FunctionDeclaration",
            id: m,
            params: bt(e, 8388608 | t, h, 0, 1),
            body: Ke(
              e,
              143360 ^ (143360 | t),
              n ? ue(h, 128) : h,
              8,
              d,
              n ? h.scopeError : void 0,
            ),
            async: 1 === s,
            generator: 1 === p,
          });
        }
        function st(e, t, n, i, r, a, o) {
          z(e, 32768 | t);
          const s = $(e, t, 8457014),
            c = (2 * n + s) << 21;
          let l,
            u = null,
            p = 64 & t ? { parent: void 0, type: 2 } : void 0;
          (176128 & e.token) > 0 &&
            (ie(e, (32243712 ^ (32243712 | t)) | c, e.token),
            p && (p = ue(p, 256)),
            (l = e.token),
            (u = rt(e, t, 0))),
            (t =
              (32243712 ^ (32243712 | t)) |
              67108864 |
              c |
              (s ? 0 : 1073741824)),
            p && (p = ue(p, 512));
          const d = bt(e, 8388608 | t, p, i, 1),
            m = Ke(e, -134377473 & t, p ? ue(p, 128) : p, 0, l, void 0);
          return (
            (e.assignable = 2),
            oe(e, t, r, a, o, {
              type: "FunctionExpression",
              id: u,
              params: d,
              body: m,
              async: 1 === n,
              generator: 1 === s,
            })
          );
        }
        function ct(e, t, n, i, r, o, s, c, l, u, p) {
          z(e, 32768 | t);
          const d = [];
          let m = 0;
          for (t = 134217728 ^ (134217728 | t); 20 !== e.token; )
            if (Z(e, 32768 | t, 18)) d.push(null);
            else {
              let i;
              const {
                token: l,
                tokenPos: u,
                linePos: p,
                colPos: h,
                tokenValue: f,
              } = e;
              if (143360 & l)
                if (
                  ((i = Qe(e, t, s, 0, 1, 0, r, 1, u, p, h)),
                  1077936157 === e.token)
                ) {
                  2 & e.assignable && a(e, 24),
                    z(e, 32768 | t),
                    n && pe(e, t, n, f, s, c);
                  const l = He(e, t, 1, 1, r, e.tokenPos, e.linePos, e.colPos);
                  (i = oe(
                    e,
                    t,
                    u,
                    p,
                    h,
                    o
                      ? { type: "AssignmentPattern", left: i, right: l }
                      : {
                          type: "AssignmentExpression",
                          operator: "=",
                          left: i,
                          right: l,
                        },
                  )),
                    (m |=
                      256 & e.destructible
                        ? 256
                        : 0 | (128 & e.destructible)
                          ? 128
                          : 0);
                } else
                  18 === e.token || 20 === e.token
                    ? (2 & e.assignable ? (m |= 16) : n && pe(e, t, n, f, s, c),
                      (m |=
                        256 & e.destructible
                          ? 256
                          : 0 | (128 & e.destructible)
                            ? 128
                            : 0))
                    : ((m |= 1 & s ? 32 : (2 & s) < 1 ? 16 : 0),
                      (i = We(e, t, i, r, 0, u, p, h)),
                      18 !== e.token && 20 !== e.token
                        ? (1077936157 !== e.token && (m |= 16),
                          (i = Ue(e, t, r, o, u, p, h, i)))
                        : 1077936157 !== e.token &&
                          (m |= 2 & e.assignable ? 16 : 32));
              else
                2097152 & l
                  ? ((i =
                      2162700 === e.token
                        ? dt(e, t, n, 0, r, o, s, c, u, p, h)
                        : ct(e, t, n, 0, r, o, s, c, u, p, h)),
                    (m |= e.destructible),
                    (e.assignable = 16 & e.destructible ? 2 : 1),
                    18 === e.token || 20 === e.token
                      ? 2 & e.assignable && (m |= 16)
                      : 8 & e.destructible
                        ? a(e, 68)
                        : ((i = We(e, t, i, r, 0, u, p, h)),
                          (m = 2 & e.assignable ? 16 : 0),
                          18 !== e.token && 20 !== e.token
                            ? (i = Ue(e, t, r, o, u, p, h, i))
                            : 1077936157 !== e.token &&
                              (m |= 2 & e.assignable ? 16 : 32)))
                  : 14 === l
                    ? ((i = ut(e, t, n, 20, s, c, 0, r, o, u, p, h)),
                      (m |= e.destructible),
                      18 !== e.token &&
                        20 !== e.token &&
                        a(e, 28, R[255 & e.token]))
                    : ((i = Ve(e, t, 1, 0, 1, u, p, h)),
                      18 !== e.token && 20 !== e.token
                        ? ((i = Ue(e, t, r, o, u, p, h, i)),
                          (3 & s) < 1 && 67174411 === l && (m |= 16))
                        : 2 & e.assignable
                          ? (m |= 16)
                          : 67174411 === l &&
                            (m |= 1 & e.assignable && 3 & s ? 32 : 16));
              if ((d.push(i), !Z(e, 32768 | t, 18))) break;
              if (20 === e.token) break;
            }
          ee(e, t, 20);
          const h = oe(e, t, l, u, p, {
            type: o ? "ArrayPattern" : "ArrayExpression",
            elements: d,
          });
          return !i && 4194304 & e.token
            ? lt(e, t, m, r, o, l, u, p, h)
            : ((e.destructible = m), h);
        }
        function lt(e, t, n, i, r, o, s, c, l) {
          1077936157 !== e.token && a(e, 24),
            z(e, 32768 | t),
            16 & n && a(e, 24),
            r || te(e, l);
          const { tokenPos: u, linePos: p, colPos: d } = e,
            m = He(e, t, 1, 1, i, u, p, d);
          return (
            (e.destructible =
              (72 ^ (72 | n)) |
              (128 & e.destructible ? 128 : 0) |
              (256 & e.destructible ? 256 : 0)),
            oe(
              e,
              t,
              o,
              s,
              c,
              r
                ? { type: "AssignmentPattern", left: l, right: m }
                : {
                    type: "AssignmentExpression",
                    left: l,
                    operator: "=",
                    right: m,
                  },
            )
          );
        }
        function ut(e, t, n, i, r, o, s, c, l, u, p, d) {
          z(e, 32768 | t);
          let m = null,
            h = 0,
            { token: f, tokenValue: g, tokenPos: x, linePos: b, colPos: v } = e;
          if (143360 & f)
            (e.assignable = 1),
              (m = Qe(e, t, r, 0, 1, 0, c, 1, x, b, v)),
              (f = e.token),
              (m = We(e, t, m, c, 0, x, b, v)),
              18 !== e.token &&
                e.token !== i &&
                (2 & e.assignable && 1077936157 === e.token && a(e, 68),
                (h |= 16),
                (m = Ue(e, t, c, l, x, b, v, m))),
              2 & e.assignable
                ? (h |= 16)
                : f === i || 18 === f
                  ? n && pe(e, t, n, g, r, o)
                  : (h |= 32),
              (h |= 128 & e.destructible ? 128 : 0);
          else if (f === i) a(e, 39);
          else {
            if (!(2097152 & f)) {
              (h |= 32),
                (m = Ve(e, t, 1, c, 1, e.tokenPos, e.linePos, e.colPos));
              const { token: n, tokenPos: r, linePos: o, colPos: s } = e;
              return (
                1077936157 === n && n !== i && 18 !== n
                  ? (2 & e.assignable && a(e, 24),
                    (m = Ue(e, t, c, l, r, o, s, m)),
                    (h |= 16))
                  : (18 === n
                      ? (h |= 16)
                      : n !== i && (m = Ue(e, t, c, l, r, o, s, m)),
                    (h |= 1 & e.assignable ? 32 : 16)),
                (e.destructible = h),
                e.token !== i && 18 !== e.token && a(e, 155),
                oe(e, t, u, p, d, {
                  type: l ? "RestElement" : "SpreadElement",
                  argument: m,
                })
              );
            }
            (m =
              2162700 === e.token
                ? dt(e, t, n, 1, c, l, r, o, x, b, v)
                : ct(e, t, n, 1, c, l, r, o, x, b, v)),
              (f = e.token),
              1077936157 !== f && f !== i && 18 !== f
                ? (8 & e.destructible && a(e, 68),
                  (m = We(e, t, m, c, 0, x, b, v)),
                  (h |= 2 & e.assignable ? 16 : 0),
                  4194304 == (4194304 & e.token)
                    ? (1077936157 !== e.token && (h |= 16),
                      (m = Ue(e, t, c, l, x, b, v, m)))
                    : (8454144 == (8454144 & e.token) &&
                        (m = Ge(e, t, 1, x, b, v, 4, f, m)),
                      Z(e, 32768 | t, 22) && (m = qe(e, t, m, x, b, v)),
                      (h |= 2 & e.assignable ? 16 : 32)))
                : (h |=
                    1074790415 === i && 1077936157 !== f ? 16 : e.destructible);
          }
          if (e.token !== i)
            if ((1 & r && (h |= s ? 16 : 32), Z(e, 32768 | t, 1077936157))) {
              16 & h && a(e, 24), te(e, m);
              const n = He(e, t, 1, 1, c, e.tokenPos, e.linePos, e.colPos);
              (m = oe(
                e,
                t,
                x,
                b,
                v,
                l
                  ? { type: "AssignmentPattern", left: m, right: n }
                  : {
                      type: "AssignmentExpression",
                      left: m,
                      operator: "=",
                      right: n,
                    },
              )),
                (h = 16);
            } else h |= 16;
          return (
            (e.destructible = h),
            oe(e, t, u, p, d, {
              type: l ? "RestElement" : "SpreadElement",
              argument: m,
            })
          );
        }
        function pt(e, t, n, i, r, s, c) {
          const l = (64 & n) < 1 ? 31981568 : 14680064;
          let u =
            64 & (t = ((t | l) ^ l) | ((88 & n) << 18) | 100925440)
              ? ue({ parent: void 0, type: 2 }, 512)
              : void 0;
          const p = (function (e, t, n, i, r, s) {
            ee(e, t, 67174411);
            const c = [];
            if (((e.flags = 128 ^ (128 | e.flags)), 16 === e.token))
              return 512 & i && a(e, 35, "Setter", "one", ""), z(e, t), c;
            256 & i && a(e, 35, "Getter", "no", "s");
            512 & i && 14 === e.token && a(e, 36);
            t = 134217728 ^ (134217728 | t);
            let l = 0,
              u = 0;
            for (; 18 !== e.token; ) {
              let o = null;
              const { tokenPos: p, linePos: d, colPos: m } = e;
              if (
                (143360 & e.token
                  ? ((1024 & t) < 1 &&
                      (36864 == (36864 & e.token) && (e.flags |= 256),
                      537079808 == (537079808 & e.token) && (e.flags |= 512)),
                    (o = Pt(e, t, n, 1 | i, 0, p, d, m)))
                  : (2162700 === e.token
                      ? (o = dt(e, t, n, 1, s, 1, r, 0, p, d, m))
                      : 69271571 === e.token
                        ? (o = ct(e, t, n, 1, s, 1, r, 0, p, d, m))
                        : 14 === e.token &&
                          (o = ut(e, t, n, 16, r, 0, 0, s, 1, p, d, m)),
                    (u = 1),
                    48 & e.destructible && a(e, 47)),
                1077936157 === e.token)
              ) {
                z(e, 32768 | t), (u = 1);
                o = oe(e, t, p, d, m, {
                  type: "AssignmentPattern",
                  left: o,
                  right: He(e, t, 1, 1, 0, e.tokenPos, e.linePos, e.colPos),
                });
              }
              if ((l++, c.push(o), !Z(e, t, 18))) break;
              if (16 === e.token) break;
            }
            512 & i && 1 !== l && a(e, 35, "Setter", "one", "");
            n && void 0 !== n.scopeError && o(n.scopeError);
            u && (e.flags |= 128);
            return ee(e, t, 16), c;
          })(e, 8388608 | t, u, n, 1, i);
          u && (u = ue(u, 128));
          return oe(e, t, r, s, c, {
            type: "FunctionExpression",
            params: p,
            body: Ke(e, -134230017 & t, u, 0, void 0, void 0),
            async: (16 & n) > 0,
            generator: (8 & n) > 0,
            id: null,
          });
        }
        function dt(e, t, n, i, r, o, c, l, u, p, d) {
          z(e, t);
          const m = [];
          let h = 0,
            f = 0;
          for (t = 134217728 ^ (134217728 | t); 1074790415 !== e.token; ) {
            const {
              token: i,
              tokenValue: u,
              linePos: p,
              colPos: d,
              tokenPos: g,
            } = e;
            if (14 === i)
              m.push(ut(e, t, n, 1074790415, c, l, 0, r, o, g, p, d));
            else {
              let x,
                b = 0,
                v = null;
              const k = e.token;
              if (143360 & e.token || 121 === e.token)
                if (
                  ((v = rt(e, t, 0)),
                  18 === e.token ||
                    1074790415 === e.token ||
                    1077936157 === e.token)
                )
                  if (
                    ((b |= 4),
                    1024 & t && 537079808 == (537079808 & i)
                      ? (h |= 16)
                      : ne(e, t, c, i, 0),
                    n && pe(e, t, n, u, c, l),
                    Z(e, 32768 | t, 1077936157))
                  ) {
                    h |= 8;
                    const n = He(
                      e,
                      t,
                      1,
                      1,
                      r,
                      e.tokenPos,
                      e.linePos,
                      e.colPos,
                    );
                    (h |=
                      256 & e.destructible
                        ? 256
                        : 0 | (128 & e.destructible)
                          ? 128
                          : 0),
                      (x = oe(e, t, g, p, d, {
                        type: "AssignmentPattern",
                        left: -2147483648 & t ? Object.assign({}, v) : v,
                        right: n,
                      }));
                  } else
                    (h |= (209008 === i ? 128 : 0) | (121 === i ? 16 : 0)),
                      (x = -2147483648 & t ? Object.assign({}, v) : v);
                else if (Z(e, 32768 | t, 21)) {
                  const { tokenPos: s, linePos: p, colPos: d } = e;
                  if (("__proto__" === u && f++, 143360 & e.token)) {
                    const i = e.token,
                      a = e.tokenValue;
                    (h |= 121 === k ? 16 : 0),
                      (x = Qe(e, t, c, 0, 1, 0, r, 1, s, p, d));
                    const { token: u } = e;
                    (x = We(e, t, x, r, 0, s, p, d)),
                      18 === e.token || 1074790415 === e.token
                        ? 1077936157 === u || 1074790415 === u || 18 === u
                          ? ((h |= 128 & e.destructible ? 128 : 0),
                            2 & e.assignable
                              ? (h |= 16)
                              : n &&
                                143360 == (143360 & i) &&
                                pe(e, t, n, a, c, l))
                          : (h |= 1 & e.assignable ? 32 : 16)
                        : 4194304 == (4194304 & e.token)
                          ? (2 & e.assignable
                              ? (h |= 16)
                              : 1077936157 !== u
                                ? (h |= 32)
                                : n && pe(e, t, n, a, c, l),
                            (x = Ue(e, t, r, o, s, p, d, x)))
                          : ((h |= 16),
                            8454144 == (8454144 & e.token) &&
                              (x = Ge(e, t, 1, s, p, d, 4, u, x)),
                            Z(e, 32768 | t, 22) && (x = qe(e, t, x, s, p, d)));
                  } else
                    2097152 == (2097152 & e.token)
                      ? ((x =
                          69271571 === e.token
                            ? ct(e, t, n, 0, r, o, c, l, s, p, d)
                            : dt(e, t, n, 0, r, o, c, l, s, p, d)),
                        (h = e.destructible),
                        (e.assignable = 16 & h ? 2 : 1),
                        18 === e.token || 1074790415 === e.token
                          ? 2 & e.assignable && (h |= 16)
                          : 8 & e.destructible
                            ? a(e, 68)
                            : ((x = We(e, t, x, r, 0, s, p, d)),
                              (h = 2 & e.assignable ? 16 : 0),
                              4194304 == (4194304 & e.token)
                                ? (x = ze(e, t, r, o, s, p, d, x))
                                : (8454144 == (8454144 & e.token) &&
                                    (x = Ge(e, t, 1, s, p, d, 4, i, x)),
                                  Z(e, 32768 | t, 22) &&
                                    (x = qe(e, t, x, s, p, d)),
                                  (h |= 2 & e.assignable ? 16 : 32))))
                      : ((x = Ve(e, t, 1, r, 1, s, p, d)),
                        (h |= 1 & e.assignable ? 32 : 16),
                        18 === e.token || 1074790415 === e.token
                          ? 2 & e.assignable && (h |= 16)
                          : ((x = We(e, t, x, r, 0, s, p, d)),
                            (h = 2 & e.assignable ? 16 : 0),
                            18 !== e.token &&
                              1074790415 !== i &&
                              (1077936157 !== e.token && (h |= 16),
                              (x = Ue(e, t, r, o, s, p, d, x)))));
                } else
                  69271571 === e.token
                    ? ((h |= 16),
                      209007 === i && (b |= 16),
                      (b |= 2 | (12402 === i ? 256 : 12403 === i ? 512 : 1)),
                      (v = mt(e, t, r)),
                      (h |= e.assignable),
                      (x = pt(e, t, b, r, e.tokenPos, e.linePos, e.colPos)))
                    : 143360 & e.token
                      ? ((h |= 16),
                        121 === i && a(e, 92),
                        209007 === i && (1 & e.flags && a(e, 128), (b |= 16)),
                        (v = rt(e, t, 0)),
                        (b |= 12402 === i ? 256 : 12403 === i ? 512 : 1),
                        (x = pt(e, t, b, r, e.tokenPos, e.linePos, e.colPos)))
                      : 67174411 === e.token
                        ? ((h |= 16),
                          (b |= 1),
                          (x = pt(e, t, b, r, e.tokenPos, e.linePos, e.colPos)))
                        : 8457014 === e.token
                          ? ((h |= 16),
                            12402 === i || 12403 === i
                              ? a(e, 40)
                              : 143483 === i && a(e, 92),
                            z(e, t),
                            (b |= 9 | (209007 === i ? 16 : 0)),
                            143360 & e.token
                              ? (v = rt(e, t, 0))
                              : 134217728 == (134217728 & e.token)
                                ? (v = at(e, t))
                                : 69271571 === e.token
                                  ? ((b |= 2),
                                    (v = mt(e, t, r)),
                                    (h |= e.assignable))
                                  : a(e, 28, R[255 & e.token]),
                            (x = pt(
                              e,
                              t,
                              b,
                              r,
                              e.tokenPos,
                              e.linePos,
                              e.colPos,
                            )))
                          : 134217728 == (134217728 & e.token)
                            ? (209007 === i && (b |= 16),
                              (b |= 12402 === i ? 256 : 12403 === i ? 512 : 1),
                              (h |= 16),
                              (v = at(e, t)),
                              (x = pt(
                                e,
                                t,
                                b,
                                r,
                                e.tokenPos,
                                e.linePos,
                                e.colPos,
                              )))
                            : a(e, 129);
              else if (134217728 == (134217728 & e.token))
                if (((v = at(e, t)), 21 === e.token)) {
                  ee(e, 32768 | t, 21);
                  const { tokenPos: a, linePos: s, colPos: p } = e;
                  if (("__proto__" === u && f++, 143360 & e.token)) {
                    x = Qe(e, t, c, 0, 1, 0, r, 1, a, s, p);
                    const { token: i, tokenValue: u } = e;
                    (x = We(e, t, x, r, 0, a, s, p)),
                      18 === e.token || 1074790415 === e.token
                        ? 1077936157 === i || 1074790415 === i || 18 === i
                          ? 2 & e.assignable
                            ? (h |= 16)
                            : n && pe(e, t, n, u, c, l)
                          : (h |= 1 & e.assignable ? 32 : 16)
                        : 1077936157 === e.token
                          ? (2 & e.assignable && (h |= 16),
                            (x = Ue(e, t, r, o, a, s, p, x)))
                          : ((h |= 16), (x = Ue(e, t, r, o, a, s, p, x)));
                  } else
                    2097152 == (2097152 & e.token)
                      ? ((x =
                          69271571 === e.token
                            ? ct(e, t, n, 0, r, o, c, l, a, s, p)
                            : dt(e, t, n, 0, r, o, c, l, a, s, p)),
                        (h = e.destructible),
                        (e.assignable = 16 & h ? 2 : 1),
                        18 === e.token || 1074790415 === e.token
                          ? 2 & e.assignable && (h |= 16)
                          : 8 != (8 & e.destructible) &&
                            ((x = We(e, t, x, r, 0, a, s, p)),
                            (h = 2 & e.assignable ? 16 : 0),
                            4194304 == (4194304 & e.token)
                              ? (x = ze(e, t, r, o, a, s, p, x))
                              : (8454144 == (8454144 & e.token) &&
                                  (x = Ge(e, t, 1, a, s, p, 4, i, x)),
                                Z(e, 32768 | t, 22) &&
                                  (x = qe(e, t, x, a, s, p)),
                                (h |= 2 & e.assignable ? 16 : 32))))
                      : ((x = Ve(e, t, 1, 0, 1, a, s, p)),
                        (h |= 1 & e.assignable ? 32 : 16),
                        18 === e.token || 1074790415 === e.token
                          ? 2 & e.assignable && (h |= 16)
                          : ((x = We(e, t, x, r, 0, a, s, p)),
                            (h = 1 & e.assignable ? 0 : 16),
                            18 !== e.token &&
                              1074790415 !== e.token &&
                              (1077936157 !== e.token && (h |= 16),
                              (x = Ue(e, t, r, o, a, s, p, x)))));
                } else
                  67174411 === e.token
                    ? ((b |= 1),
                      (x = pt(e, t, b, r, e.tokenPos, e.linePos, e.colPos)),
                      (h = 16 | e.assignable))
                    : a(e, 130);
              else if (69271571 === e.token)
                if (
                  ((v = mt(e, t, r)),
                  (h |= 256 & e.destructible ? 256 : 0),
                  (b |= 2),
                  21 === e.token)
                ) {
                  z(e, 32768 | t);
                  const {
                    tokenPos: s,
                    linePos: u,
                    colPos: p,
                    tokenValue: d,
                    token: m,
                  } = e;
                  if (143360 & e.token) {
                    x = Qe(e, t, c, 0, 1, 0, r, 1, s, u, p);
                    const { token: i } = e;
                    (x = We(e, t, x, r, 0, s, u, p)),
                      4194304 == (4194304 & e.token)
                        ? ((h |=
                            2 & e.assignable ? 16 : 1077936157 === i ? 0 : 32),
                          (x = ze(e, t, r, o, s, u, p, x)))
                        : 18 === e.token || 1074790415 === e.token
                          ? 1077936157 === i || 1074790415 === i || 18 === i
                            ? 2 & e.assignable
                              ? (h |= 16)
                              : n &&
                                143360 == (143360 & m) &&
                                pe(e, t, n, d, c, l)
                            : (h |= 1 & e.assignable ? 32 : 16)
                          : ((h |= 16), (x = Ue(e, t, r, o, s, u, p, x)));
                  } else
                    2097152 == (2097152 & e.token)
                      ? ((x =
                          69271571 === e.token
                            ? ct(e, t, n, 0, r, o, c, l, s, u, p)
                            : dt(e, t, n, 0, r, o, c, l, s, u, p)),
                        (h = e.destructible),
                        (e.assignable = 16 & h ? 2 : 1),
                        18 === e.token || 1074790415 === e.token
                          ? 2 & e.assignable && (h |= 16)
                          : 8 & h
                            ? a(e, 59)
                            : ((x = We(e, t, x, r, 0, s, u, p)),
                              (h = 2 & e.assignable ? 16 | h : 0),
                              4194304 == (4194304 & e.token)
                                ? (1077936157 !== e.token && (h |= 16),
                                  (x = ze(e, t, r, o, s, u, p, x)))
                                : (8454144 == (8454144 & e.token) &&
                                    (x = Ge(e, t, 1, s, u, p, 4, i, x)),
                                  Z(e, 32768 | t, 22) &&
                                    (x = qe(e, t, x, s, u, p)),
                                  (h |= 2 & e.assignable ? 16 : 32))))
                      : ((x = Ve(e, t, 1, 0, 1, s, u, p)),
                        (h |= 1 & e.assignable ? 32 : 16),
                        18 === e.token || 1074790415 === e.token
                          ? 2 & e.assignable && (h |= 16)
                          : ((x = We(e, t, x, r, 0, s, u, p)),
                            (h = 1 & e.assignable ? 0 : 16),
                            18 !== e.token &&
                              1074790415 !== e.token &&
                              (1077936157 !== e.token && (h |= 16),
                              (x = Ue(e, t, r, o, s, u, p, x)))));
                } else
                  67174411 === e.token
                    ? ((b |= 1),
                      (x = pt(e, t, b, r, e.tokenPos, p, d)),
                      (h = 16))
                    : a(e, 41);
              else if (8457014 === i)
                if ((ee(e, 32768 | t, 8457014), (b |= 8), 143360 & e.token)) {
                  const { token: n, line: i, index: a } = e;
                  (v = rt(e, t, 0)),
                    (b |= 1),
                    67174411 === e.token
                      ? ((h |= 16),
                        (x = pt(e, t, b, r, e.tokenPos, e.linePos, e.colPos)))
                      : s(
                          a,
                          i,
                          a,
                          209007 === n
                            ? 43
                            : 12402 === n || 12403 === e.token
                              ? 42
                              : 44,
                          R[255 & n],
                        );
                } else
                  134217728 == (134217728 & e.token)
                    ? ((h |= 16),
                      (v = at(e, t)),
                      (b |= 1),
                      (x = pt(e, t, b, r, g, p, d)))
                    : 69271571 === e.token
                      ? ((h |= 16),
                        (b |= 3),
                        (v = mt(e, t, r)),
                        (x = pt(e, t, b, r, e.tokenPos, e.linePos, e.colPos)))
                      : a(e, 122);
              else a(e, 28, R[255 & i]);
              (h |= 128 & e.destructible ? 128 : 0),
                (e.destructible = h),
                m.push(
                  oe(e, t, g, p, d, {
                    type: "Property",
                    key: v,
                    value: x,
                    kind: 768 & b ? (512 & b ? "set" : "get") : "init",
                    computed: (2 & b) > 0,
                    method: (1 & b) > 0,
                    shorthand: (4 & b) > 0,
                  }),
                );
            }
            if (((h |= e.destructible), 18 !== e.token)) break;
            z(e, t);
          }
          ee(e, t, 1074790415), f > 1 && (h |= 64);
          const g = oe(e, t, u, p, d, {
            type: o ? "ObjectPattern" : "ObjectExpression",
            properties: m,
          });
          return !i && 4194304 & e.token
            ? lt(e, t, h, r, o, u, p, d, g)
            : ((e.destructible = h), g);
        }
        function mt(e, t, n) {
          z(e, 32768 | t);
          const i = He(
            e,
            134217728 ^ (134217728 | t),
            1,
            0,
            n,
            e.tokenPos,
            e.linePos,
            e.colPos,
          );
          return ee(e, t, 20), i;
        }
        function ht(e, t, n, i, r) {
          const { tokenValue: a } = e,
            o = rt(e, t, 0);
          if (((e.assignable = 1), 10 === e.token)) {
            let s;
            return (
              64 & t && (s = ce(e, t, a)),
              (e.flags = 128 ^ (128 | e.flags)),
              xt(e, t, s, [o], 0, n, i, r)
            );
          }
          return o;
        }
        function ft(e, t, n, i, r, o, s, c, l, u) {
          o || a(e, 54), r && a(e, 48), (e.flags &= -129);
          return xt(e, t, 64 & t ? ce(e, t, n) : void 0, [i], s, c, l, u);
        }
        function gt(e, t, n, i, r, o, s, c, l) {
          r || a(e, 54);
          for (let t = 0; t < i.length; ++t) te(e, i[t]);
          return xt(e, t, n, i, o, s, c, l);
        }
        function xt(e, t, n, i, r, s, c, l) {
          1 & e.flags && a(e, 45),
            ee(e, 32768 | t, 10),
            (t = (15728640 ^ (15728640 | t)) | (r << 22));
          const u = 2162700 !== e.token;
          let p;
          if ((n && void 0 !== n.scopeError && o(n.scopeError), u))
            p = He(e, t, 1, 0, 0, e.tokenPos, e.linePos, e.colPos);
          else {
            switch (
              (n && (n = ue(n, 128)),
              (p = Ke(e, 134246400 ^ (134246400 | t), n, 16, void 0, void 0)),
              e.token)
            ) {
              case 69271571:
                (1 & e.flags) < 1 && a(e, 112);
                break;
              case 67108877:
              case 67174409:
              case 22:
                a(e, 113);
              case 67174411:
                (1 & e.flags) < 1 && a(e, 112), (e.flags |= 1024);
            }
            8454144 == (8454144 & e.token) &&
              (1 & e.flags) < 1 &&
              a(e, 28, R[255 & e.token]),
              33619968 == (33619968 & e.token) && a(e, 121);
          }
          return (
            (e.assignable = 2),
            oe(e, t, s, c, l, {
              type: "ArrowFunctionExpression",
              params: i,
              body: p,
              async: 1 === r,
              expression: u,
            })
          );
        }
        function bt(e, t, n, i, r) {
          ee(e, t, 67174411), (e.flags = 128 ^ (128 | e.flags));
          const s = [];
          if (Z(e, t, 16)) return s;
          t = 134217728 ^ (134217728 | t);
          let c = 0;
          for (; 18 !== e.token; ) {
            let o;
            const { tokenPos: l, linePos: u, colPos: p } = e;
            if (
              (143360 & e.token
                ? ((1024 & t) < 1 &&
                    (36864 == (36864 & e.token) && (e.flags |= 256),
                    537079808 == (537079808 & e.token) && (e.flags |= 512)),
                  (o = Pt(e, t, n, 1 | r, 0, l, u, p)))
                : (2162700 === e.token
                    ? (o = dt(e, t, n, 1, i, 1, r, 0, l, u, p))
                    : 69271571 === e.token
                      ? (o = ct(e, t, n, 1, i, 1, r, 0, l, u, p))
                      : 14 === e.token
                        ? (o = ut(e, t, n, 16, r, 0, 0, i, 1, l, u, p))
                        : a(e, 28, R[255 & e.token]),
                  (c = 1),
                  48 & e.destructible && a(e, 47)),
              1077936157 === e.token)
            ) {
              z(e, 32768 | t), (c = 1);
              o = oe(e, t, l, u, p, {
                type: "AssignmentPattern",
                left: o,
                right: He(e, t, 1, 1, i, e.tokenPos, e.linePos, e.colPos),
              });
            }
            if ((s.push(o), !Z(e, t, 18))) break;
            if (16 === e.token) break;
          }
          return (
            c && (e.flags |= 128),
            n && (c || 1024 & t) && void 0 !== n.scopeError && o(n.scopeError),
            ee(e, t, 16),
            s
          );
        }
        function vt(e, t, n, i, r, a, o) {
          const { token: s } = e;
          if (67108864 & s) {
            if (67108877 === s) {
              z(e, 1073741824 | t), (e.assignable = 1);
              return vt(
                e,
                t,
                oe(e, t, r, a, o, {
                  type: "MemberExpression",
                  object: n,
                  computed: !1,
                  property: Ye(e, t),
                }),
                0,
                r,
                a,
                o,
              );
            }
            if (69271571 === s) {
              z(e, 32768 | t);
              const { tokenPos: s, linePos: c, colPos: l } = e,
                u = Be(e, t, i, 1, s, c, l);
              return (
                ee(e, t, 20),
                (e.assignable = 1),
                vt(
                  e,
                  t,
                  oe(e, t, r, a, o, {
                    type: "MemberExpression",
                    object: n,
                    computed: !0,
                    property: u,
                  }),
                  0,
                  r,
                  a,
                  o,
                )
              );
            }
            if (67174408 === s || 67174409 === s)
              return (
                (e.assignable = 2),
                vt(
                  e,
                  t,
                  oe(e, t, r, a, o, {
                    type: "TaggedTemplateExpression",
                    tag: n,
                    quasi:
                      67174408 === e.token
                        ? et(e, 65536 | t)
                        : Ze(e, t, e.tokenPos, e.linePos, e.colPos),
                  }),
                  0,
                  r,
                  a,
                  o,
                )
              );
          }
          return n;
        }
        function kt(e, t, n, i, r, o) {
          return (
            209008 === e.token && a(e, 29),
            2098176 & t && 241773 === e.token && a(e, 30),
            537079808 == (537079808 & e.token) && (e.flags |= 512),
            ft(e, t, e.tokenValue, rt(e, t, 0), 0, n, 1, i, r, o)
          );
        }
        function Tt(e, t, n, i, r, o, s, c, l, u) {
          z(e, 32768 | t);
          const p = 64 & t ? ue({ parent: void 0, type: 2 }, 1024) : void 0;
          if (Z(e, (t = 134217728 ^ (134217728 | t)), 16))
            return 10 === e.token
              ? (1 & s && a(e, 45), gt(e, t, p, [], i, 1, c, l, u))
              : oe(e, t, c, l, u, {
                  type: "CallExpression",
                  callee: n,
                  arguments: [],
                });
          let d = 0,
            m = null,
            h = 0;
          e.destructible = 384 ^ (384 | e.destructible);
          const f = [];
          for (; 16 !== e.token; ) {
            const { token: i, tokenPos: s, linePos: g, colPos: x } = e;
            if (143360 & i)
              p && de(e, t, p, e.tokenValue, r, 0),
                (m = Qe(e, t, r, 0, 1, 0, 1, 1, s, g, x)),
                16 === e.token || 18 === e.token
                  ? 2 & e.assignable
                    ? ((d |= 16), (h = 1))
                    : 537079808 == (537079808 & i)
                      ? (e.flags |= 512)
                      : 36864 == (36864 & i) && (e.flags |= 256)
                  : (1077936157 === e.token ? (h = 1) : (d |= 16),
                    (m = We(e, t, m, 1, 0, s, g, x)),
                    16 !== e.token &&
                      18 !== e.token &&
                      (m = Ue(e, t, 1, 0, s, g, x, m)));
            else if (2097152 & i)
              (m =
                2162700 === i
                  ? dt(e, t, p, 0, 1, 0, r, o, s, g, x)
                  : ct(e, t, p, 0, 1, 0, r, o, s, g, x)),
                (d |= e.destructible),
                (h = 1),
                16 !== e.token &&
                  18 !== e.token &&
                  (8 & d && a(e, 118),
                  (m = We(e, t, m, 0, 0, s, g, x)),
                  (d |= 16),
                  8454144 == (8454144 & e.token) &&
                    (m = Ge(e, t, 1, c, l, u, 4, i, m)),
                  Z(e, 32768 | t, 22) && (m = qe(e, t, m, c, l, u)));
            else {
              if (14 !== i) {
                for (
                  m = He(e, t, 1, 0, 0, s, g, x), d = e.assignable, f.push(m);
                  Z(e, 32768 | t, 18);

                )
                  f.push(He(e, t, 1, 0, 0, s, g, x));
                return (
                  (d |= e.assignable),
                  ee(e, t, 16),
                  (e.destructible = 16 | d),
                  (e.assignable = 2),
                  oe(e, t, c, l, u, {
                    type: "CallExpression",
                    callee: n,
                    arguments: f,
                  })
                );
              }
              (m = ut(e, t, p, 16, r, o, 1, 1, 0, s, g, x)),
                (d |= (16 === e.token ? 0 : 16) | e.destructible),
                (h = 1);
            }
            if ((f.push(m), !Z(e, 32768 | t, 18))) break;
          }
          return (
            ee(e, t, 16),
            (d |=
              256 & e.destructible
                ? 256
                : 0 | (128 & e.destructible)
                  ? 128
                  : 0),
            10 === e.token
              ? (48 & d && a(e, 25),
                (1 & e.flags || 1 & s) && a(e, 45),
                128 & d && a(e, 29),
                2098176 & t && 256 & d && a(e, 30),
                h && (e.flags |= 128),
                gt(e, t, p, f, i, 1, c, l, u))
              : (8 & d && a(e, 59),
                (e.assignable = 2),
                oe(e, t, c, l, u, {
                  type: "CallExpression",
                  callee: n,
                  arguments: f,
                }))
          );
        }
        function yt(e, t, n, i, r, o, s) {
          let c = Et(e, (t = 16777216 ^ (16778240 | t)));
          c.length && ((r = e.tokenPos), (o = e.linePos), (s = e.colPos)),
            e.leadingDecorators.length &&
              (e.leadingDecorators.push(...c),
              (c = e.leadingDecorators),
              (e.leadingDecorators = [])),
            z(e, t);
          let l = null,
            u = null;
          const { tokenValue: p } = e;
          4096 & e.token && 20567 !== e.token
            ? (re(e, t, e.token) && a(e, 114),
              537079808 == (537079808 & e.token) && a(e, 115),
              n && (de(e, t, n, p, 32, 0), i && 2 & i && he(e, p)),
              (l = rt(e, t, 0)))
            : (1 & i) < 1 && a(e, 37, "Class");
          let d = t;
          Z(e, 32768 | t, 20567)
            ? ((u = Ve(e, t, 0, 0, 0, e.tokenPos, e.linePos, e.colPos)),
              (d |= 524288))
            : (d = 524288 ^ (524288 | d));
          const m = Ct(e, d, t, n, 2, 8, 0);
          return oe(
            e,
            t,
            r,
            o,
            s,
            1 & t
              ? {
                  type: "ClassDeclaration",
                  id: l,
                  superClass: u,
                  decorators: c,
                  body: m,
                }
              : { type: "ClassDeclaration", id: l, superClass: u, body: m },
          );
        }
        function Et(e, t) {
          const n = [];
          if (1 & t)
            for (; 133 === e.token; )
              n.push(wt(e, t, e.tokenPos, e.linePos, e.colPos));
          return n;
        }
        function wt(e, t, n, i, r) {
          z(e, 32768 | t);
          let a = Qe(e, t, 2, 0, 1, 0, 0, 1, n, i, r);
          return (
            (a = We(e, t, a, 0, 0, n, i, r)),
            oe(e, t, n, i, r, { type: "Decorator", expression: a })
          );
        }
        function Ct(e, t, n, i, r, o, s) {
          const { tokenPos: c, linePos: l, colPos: u } = e;
          ee(e, 32768 | t, 2162700),
            (t = 134217728 ^ (134217728 | t)),
            (e.flags = 32 ^ (32 | e.flags));
          const p = [];
          let d;
          for (; 1074790415 !== e.token; ) {
            let o = 0;
            (d = Et(e, t)),
              (o = d.length),
              o > 0 && "constructor" === e.tokenValue && a(e, 106),
              1074790415 === e.token && a(e, 105),
              Z(e, t, 1074790417)
                ? o > 0 && a(e, 116)
                : p.push(
                    At(e, t, i, n, r, d, 0, s, e.tokenPos, e.linePos, e.colPos),
                  );
          }
          return (
            ee(e, 8 & o ? 32768 | t : t, 1074790415),
            oe(e, t, c, l, u, { type: "ClassBody", body: p })
          );
        }
        function At(e, t, n, i, r, o, s, c, l, u, p) {
          let d = s ? 32 : 0,
            m = null;
          const { token: h, tokenPos: f, linePos: g, colPos: x } = e;
          if (176128 & h)
            switch (((m = rt(e, t, 0)), h)) {
              case 36972:
                if (!s && 67174411 !== e.token)
                  return At(e, t, n, i, r, o, 1, c, l, u, p);
                break;
              case 209007:
                if (67174411 !== e.token && (1 & e.flags) < 1) {
                  if (1 & t && 1073741824 == (1073741824 & e.token))
                    return _t(e, t, m, d, o, f, g, x);
                  d |= 16 | ($(e, t, 8457014) ? 8 : 0);
                }
                break;
              case 12402:
                if (67174411 !== e.token) {
                  if (1 & t && 1073741824 == (1073741824 & e.token))
                    return _t(e, t, m, d, o, f, g, x);
                  d |= 256;
                }
                break;
              case 12403:
                if (67174411 !== e.token) {
                  if (1 & t && 1073741824 == (1073741824 & e.token))
                    return _t(e, t, m, d, o, f, g, x);
                  d |= 512;
                }
            }
          else
            69271571 === h
              ? ((d |= 2), (m = mt(e, i, c)))
              : 134217728 == (134217728 & h)
                ? (m = at(e, t))
                : 8457014 === h
                  ? ((d |= 8), z(e, t))
                  : 1 & t && 131 === e.token
                    ? ((d |= 4096), (m = St(e, t, f, g, x)), (t |= 16384))
                    : 1 & t && 1073741824 == (1073741824 & e.token)
                      ? ((d |= 128), (t |= 16384))
                      : 122 === h
                        ? ((m = rt(e, t, 0)),
                          67174411 !== e.token && a(e, 28, R[255 & e.token]))
                        : a(e, 28, R[255 & e.token]);
          if (
            (792 & d &&
              (143360 & e.token
                ? (m = rt(e, t, 0))
                : 134217728 == (134217728 & e.token)
                  ? (m = at(e, t))
                  : 69271571 === e.token
                    ? ((d |= 2), (m = mt(e, t, 0)))
                    : 122 === e.token
                      ? (m = rt(e, t, 0))
                      : 1 & t && 131 === e.token
                        ? ((d |= 4096), (m = St(e, t, f, g, x)))
                        : a(e, 131)),
            (2 & d) < 1 &&
              ("constructor" === e.tokenValue
                ? (1073741824 == (1073741824 & e.token)
                    ? a(e, 125)
                    : (32 & d) < 1 &&
                      67174411 === e.token &&
                      (920 & d
                        ? a(e, 50, "accessor")
                        : (524288 & t) < 1 &&
                          (32 & e.flags ? a(e, 51) : (e.flags |= 32))),
                  (d |= 64))
                : (4096 & d) < 1 &&
                  824 & d &&
                  "prototype" === e.tokenValue &&
                  a(e, 49)),
            1 & t && 67174411 !== e.token)
          )
            return _t(e, t, m, d, o, f, g, x);
          const b = pt(e, t, d, c, e.tokenPos, e.linePos, e.colPos);
          return oe(
            e,
            t,
            l,
            u,
            p,
            1 & t
              ? {
                  type: "MethodDefinition",
                  kind:
                    (32 & d) < 1 && 64 & d
                      ? "constructor"
                      : 256 & d
                        ? "get"
                        : 512 & d
                          ? "set"
                          : "method",
                  static: (32 & d) > 0,
                  computed: (2 & d) > 0,
                  key: m,
                  decorators: o,
                  value: b,
                }
              : {
                  type: "MethodDefinition",
                  kind:
                    (32 & d) < 1 && 64 & d
                      ? "constructor"
                      : 256 & d
                        ? "get"
                        : 512 & d
                          ? "set"
                          : "method",
                  static: (32 & d) > 0,
                  computed: (2 & d) > 0,
                  key: m,
                  value: b,
                },
          );
        }
        function St(e, t, n, i, r) {
          z(e, t);
          const { tokenValue: o } = e;
          return (
            "constructor" === o && a(e, 124),
            z(e, t),
            oe(e, t, n, i, r, { type: "PrivateIdentifier", name: o })
          );
        }
        function _t(e, t, n, i, r, o, s, c) {
          let l = null;
          if ((8 & i && a(e, 0), 1077936157 === e.token)) {
            z(e, 32768 | t);
            const { tokenPos: n, linePos: i, colPos: r } = e;
            537079928 === e.token && a(e, 115),
              (l = Qe(e, 16384 | t, 2, 0, 1, 0, 0, 1, n, i, r)),
              1073741824 != (1073741824 & e.token) &&
                ((l = We(e, 16384 | t, l, 0, 0, n, i, r)),
                (l = Ue(e, 16384 | t, 0, 0, n, i, r, l)),
                18 === e.token && (l = Fe(e, t, 0, o, s, c, l)));
          }
          return oe(e, t, o, s, c, {
            type: "PropertyDefinition",
            key: n,
            value: l,
            static: (32 & i) > 0,
            computed: (2 & i) > 0,
            decorators: r,
          });
        }
        function Nt(e, t, n, i, r, o, s, c) {
          if (143360 & e.token) return Pt(e, t, n, i, r, o, s, c);
          2097152 != (2097152 & e.token) && a(e, 28, R[255 & e.token]);
          const l =
            69271571 === e.token
              ? ct(e, t, n, 1, 0, 1, i, r, o, s, c)
              : dt(e, t, n, 1, 0, 1, i, r, o, s, c);
          return (
            16 & e.destructible && a(e, 47), 32 & e.destructible && a(e, 47), l
          );
        }
        function Pt(e, t, n, i, r, o, s, c) {
          const { tokenValue: l, token: u } = e;
          return (
            1024 & t &&
              (537079808 == (537079808 & u)
                ? a(e, 115)
                : 36864 == (36864 & u) && a(e, 114)),
            20480 == (20480 & u) && a(e, 99),
            2099200 & t && 241773 === u && a(e, 30),
            241739 === u && 24 & i && a(e, 97),
            4196352 & t && 209008 === u && a(e, 95),
            z(e, t),
            n && pe(e, t, n, l, i, r),
            oe(e, t, o, s, c, { type: "Identifier", name: l })
          );
        }
        function Ot(e, t, n, i, r, o) {
          if ((z(e, t), 8456259 === e.token))
            return oe(e, t, i, r, o, {
              type: "JSXFragment",
              openingFragment: Lt(e, t, i, r, o),
              children: Rt(e, t),
              closingFragment: It(e, t, n, e.tokenPos, e.linePos, e.colPos),
            });
          let s = null,
            c = [];
          const l = (function (e, t, n, i, r, o) {
            143360 != (143360 & e.token) && 4096 != (4096 & e.token) && a(e, 0);
            const s = Dt(e, t, e.tokenPos, e.linePos, e.colPos),
              c = (function (e, t) {
                const n = [];
                for (
                  ;
                  8457016 !== e.token &&
                  8456259 !== e.token &&
                  1048576 !== e.token;

                )
                  n.push(Ht(e, t, e.tokenPos, e.linePos, e.colPos));
                return n;
              })(e, t),
              l = 8457016 === e.token;
            8456259 === e.token
              ? Y(e, t)
              : (ee(e, t, 8457016), n ? ee(e, t, 8456259) : Y(e, t));
            return oe(e, t, i, r, o, {
              type: "JSXOpeningElement",
              name: s,
              attributes: c,
              selfClosing: l,
            });
          })(e, t, n, i, r, o);
          if (!l.selfClosing) {
            (c = Rt(e, t)),
              (s = (function (e, t, n, i, r, a) {
                ee(e, t, 25);
                const o = Dt(e, t, e.tokenPos, e.linePos, e.colPos);
                n ? ee(e, t, 8456259) : (e.token = Y(e, t));
                return oe(e, t, i, r, a, {
                  type: "JSXClosingElement",
                  name: o,
                });
              })(e, t, n, e.tokenPos, e.linePos, e.colPos));
            const i = se(s.name);
            se(l.name) !== i && a(e, 149, i);
          }
          return oe(e, t, i, r, o, {
            type: "JSXElement",
            children: c,
            openingElement: l,
            closingElement: s,
          });
        }
        function Lt(e, t, n, i, r) {
          return Y(e, t), oe(e, t, n, i, r, { type: "JSXOpeningFragment" });
        }
        function It(e, t, n, i, r, a) {
          return (
            ee(e, t, 25),
            ee(e, t, 8456259),
            oe(e, t, i, r, a, { type: "JSXClosingFragment" })
          );
        }
        function Rt(e, t) {
          const n = [];
          for (; 25 !== e.token; )
            (e.index = e.tokenPos = e.startPos),
              (e.column = e.colPos = e.startColumn),
              (e.line = e.linePos = e.startLine),
              Y(e, t),
              n.push(Mt(e, t, e.tokenPos, e.linePos, e.colPos));
          return n;
        }
        function Mt(e, t, n, i, r) {
          return 138 === e.token
            ? (function (e, t, n, i, r) {
                Y(e, t);
                const a = { type: "JSXText", value: e.tokenValue };
                512 & t && (a.raw = e.tokenRaw);
                return oe(e, t, n, i, r, a);
              })(e, t, n, i, r)
            : 2162700 === e.token
              ? Bt(e, t, 0, 0, n, i, r)
              : 8456258 === e.token
                ? Ot(e, t, 0, n, i, r)
                : void a(e, 0);
        }
        function Dt(e, t, n, i, r) {
          Q(e);
          let a = Ut(e, t, n, i, r);
          if (21 === e.token) return Ft(e, t, a, n, i, r);
          for (; Z(e, t, 67108877); ) Q(e), (a = jt(e, t, a, n, i, r));
          return a;
        }
        function jt(e, t, n, i, r, a) {
          return oe(e, t, i, r, a, {
            type: "JSXMemberExpression",
            object: n,
            property: Ut(e, t, e.tokenPos, e.linePos, e.colPos),
          });
        }
        function Ht(e, t, n, i, r) {
          if (2162700 === e.token)
            return (function (e, t, n, i, r) {
              z(e, t), ee(e, t, 14);
              const a = He(e, t, 1, 0, 0, e.tokenPos, e.linePos, e.colPos);
              return (
                ee(e, t, 1074790415),
                oe(e, t, n, i, r, { type: "JSXSpreadAttribute", argument: a })
              );
            })(e, t, n, i, r);
          Q(e);
          let o = null,
            s = Ut(e, t, n, i, r);
          if (
            (21 === e.token && (s = Ft(e, t, s, n, i, r)),
            1077936157 === e.token)
          ) {
            const n = W(e, t),
              { tokenPos: i, linePos: r, colPos: s } = e;
            switch (n) {
              case 134283267:
                o = at(e, t);
                break;
              case 8456258:
                o = Ot(e, t, 1, i, r, s);
                break;
              case 2162700:
                o = Bt(e, t, 1, 1, i, r, s);
                break;
              default:
                a(e, 148);
            }
          }
          return oe(e, t, n, i, r, { type: "JSXAttribute", value: o, name: s });
        }
        function Ft(e, t, n, i, r, a) {
          ee(e, t, 21);
          return oe(e, t, i, r, a, {
            type: "JSXNamespacedName",
            namespace: n,
            name: Ut(e, t, e.tokenPos, e.linePos, e.colPos),
          });
        }
        function Bt(e, t, n, i, r, o, s) {
          z(e, t);
          const { tokenPos: c, linePos: l, colPos: u } = e;
          if (14 === e.token)
            return (function (e, t, n, i, r) {
              ee(e, t, 14);
              const a = He(e, t, 1, 0, 0, e.tokenPos, e.linePos, e.colPos);
              return (
                ee(e, t, 1074790415),
                oe(e, t, n, i, r, { type: "JSXSpreadChild", expression: a })
              );
            })(e, t, c, l, u);
          let p = null;
          return (
            1074790415 === e.token
              ? (i && a(e, 151),
                (p = (function (e, t, n, i, r) {
                  return (
                    (e.startPos = e.tokenPos),
                    (e.startLine = e.linePos),
                    (e.startColumn = e.colPos),
                    oe(e, t, n, i, r, { type: "JSXEmptyExpression" })
                  );
                })(e, t, e.startPos, e.startLine, e.startColumn)))
              : (p = He(e, t, 1, 0, 0, c, l, u)),
            n ? ee(e, t, 1074790415) : Y(e, t),
            oe(e, t, r, o, s, { type: "JSXExpressionContainer", expression: p })
          );
        }
        function Ut(e, t, n, i, r) {
          const { tokenValue: a } = e;
          return z(e, t), oe(e, t, n, i, r, { type: "JSXIdentifier", name: a });
        }
        var zt = Object.freeze({ __proto__: null });
        const qt = "4.2.0";
        function Gt(e, t) {
          return be(e, t, 0);
        }
        function Kt(e, t) {
          return be(e, t, 3072);
        }
        function Vt(e, t) {
          return be(e, t, 0);
        }
      },
      (e, t) => {
        "use strict";
        var n,
          i,
          r,
          a,
          o,
          s,
          c,
          l,
          u,
          p,
          d,
          m = {
            AssignmentExpression: "AssignmentExpression",
            AssignmentPattern: "AssignmentPattern",
            ArrayExpression: "ArrayExpression",
            ArrayPattern: "ArrayPattern",
            ArrowFunctionExpression: "ArrowFunctionExpression",
            AwaitExpression: "AwaitExpression",
            BlockStatement: "BlockStatement",
            BinaryExpression: "BinaryExpression",
            BreakStatement: "BreakStatement",
            CallExpression: "CallExpression",
            CatchClause: "CatchClause",
            ClassBody: "ClassBody",
            ClassDeclaration: "ClassDeclaration",
            ClassExpression: "ClassExpression",
            ComprehensionBlock: "ComprehensionBlock",
            ComprehensionExpression: "ComprehensionExpression",
            ConditionalExpression: "ConditionalExpression",
            ContinueStatement: "ContinueStatement",
            DirectiveStatement: "DirectiveStatement",
            DoWhileStatement: "DoWhileStatement",
            DebuggerStatement: "DebuggerStatement",
            EmptyStatement: "EmptyStatement",
            ExportAllDeclaration: "ExportAllDeclaration",
            ExportBatchSpecifier: "ExportBatchSpecifier",
            ExportDeclaration: "ExportDeclaration",
            ExportNamedDeclaration: "ExportNamedDeclaration",
            ExportSpecifier: "ExportSpecifier",
            ExpressionStatement: "ExpressionStatement",
            ForStatement: "ForStatement",
            ForInStatement: "ForInStatement",
            ForOfStatement: "ForOfStatement",
            FunctionDeclaration: "FunctionDeclaration",
            FunctionExpression: "FunctionExpression",
            GeneratorExpression: "GeneratorExpression",
            Identifier: "Identifier",
            IfStatement: "IfStatement",
            ImportExpression: "ImportExpression",
            ImportSpecifier: "ImportSpecifier",
            ImportDeclaration: "ImportDeclaration",
            ChainExpression: "ChainExpression",
            Literal: "Literal",
            LabeledStatement: "LabeledStatement",
            LogicalExpression: "LogicalExpression",
            MemberExpression: "MemberExpression",
            MetaProperty: "MetaProperty",
            MethodDefinition: "MethodDefinition",
            ModuleDeclaration: "ModuleDeclaration",
            NewExpression: "NewExpression",
            ObjectExpression: "ObjectExpression",
            ObjectPattern: "ObjectPattern",
            Program: "Program",
            Property: "Property",
            RestElement: "RestElement",
            ReturnStatement: "ReturnStatement",
            SequenceExpression: "SequenceExpression",
            SpreadElement: "SpreadElement",
            Super: "Super",
            SwitchStatement: "SwitchStatement",
            SwitchCase: "SwitchCase",
            TaggedTemplateExpression: "TaggedTemplateExpression",
            TemplateElement: "TemplateElement",
            TemplateLiteral: "TemplateLiteral",
            ThisExpression: "ThisExpression",
            ThrowStatement: "ThrowStatement",
            TryStatement: "TryStatement",
            UnaryExpression: "UnaryExpression",
            UpdateExpression: "UpdateExpression",
            VariableDeclaration: "VariableDeclaration",
            VariableDeclarator: "VariableDeclarator",
            WhileStatement: "WhileStatement",
            WithStatement: "WithStatement",
            YieldExpression: "YieldExpression",
          };
        t.Syntax = m;
        var h = {
            Sequence: 0,
            Yield: 1,
            Assignment: 1,
            Conditional: 2,
            ArrowFunction: 2,
            Coalesce: 3,
            LogicalOR: 3,
            LogicalAND: 4,
            BitwiseOR: 5,
            BitwiseXOR: 6,
            BitwiseAND: 7,
            Equality: 8,
            Relational: 9,
            BitwiseSHIFT: 10,
            Additive: 11,
            Multiplicative: 12,
            Unary: 13,
            Exponentiation: 14,
            Postfix: 14,
            Await: 14,
            Call: 15,
            New: 16,
            TaggedTemplate: 17,
            OptionalChaining: 17,
            Member: 18,
            Primary: 19,
          },
          f = {
            "||": h.LogicalOR,
            "&&": h.LogicalAND,
            "|": h.BitwiseOR,
            "^": h.BitwiseXOR,
            "&": h.BitwiseAND,
            "==": h.Equality,
            "!=": h.Equality,
            "===": h.Equality,
            "!==": h.Equality,
            is: h.Equality,
            isnt: h.Equality,
            "<": h.Relational,
            ">": h.Relational,
            "<=": h.Relational,
            ">=": h.Relational,
            in: h.Relational,
            instanceof: h.Relational,
            "<<": h.BitwiseSHIFT,
            ">>": h.BitwiseSHIFT,
            ">>>": h.BitwiseSHIFT,
            "+": h.Additive,
            "-": h.Additive,
            "*": h.Multiplicative,
            "%": h.Multiplicative,
            "/": h.Multiplicative,
            "??": h.Coalesce,
            "**": h.Exponentiation,
          };
        var g = [
            5760, 6158, 8192, 8193, 8194, 8195, 8196, 8197, 8198, 8199, 8200,
            8201, 8202, 8239, 8287, 12288, 65279,
          ],
          x = new RegExp(
            "[ªµºÀ-ÖØ-öø-ˁˆ-ˑˠ-ˤˬˮ̀-ʹͶͷͺ-ͽΆΈ-ΊΌΎ-ΡΣ-ϵϷ-ҁ҃-҇Ҋ-ԧԱ-Ֆՙա-և֑-ׇֽֿׁׂׅׄא-תװ-ײؐ-ؚؠ-٩ٮ-ۓە-ۜ۟-۪ۨ-ۼۿܐ-݊ݍ-ޱ߀-ߵߺࠀ-࠭ࡀ-࡛ࢠࢢ-ࢬࣤ-ࣾऀ-ॣ०-९ॱ-ॷॹ-ॿঁ-ঃঅ-ঌএঐও-নপ-রলশ-হ়-ৄেৈো-ৎৗড়ঢ়য়-ৣ০-ৱਁ-ਃਅ-ਊਏਐਓ-ਨਪ-ਰਲਲ਼ਵਸ਼ਸਹ਼ਾ-ੂੇੈੋ-੍ੑਖ਼-ੜਫ਼੦-ੵઁ-ઃઅ-ઍએ-ઑઓ-નપ-રલળવ-હ઼-ૅે-ૉો-્ૐૠ-ૣ૦-૯ଁ-ଃଅ-ଌଏଐଓ-ନପ-ରଲଳଵ-ହ଼-ୄେୈୋ-୍ୖୗଡ଼ଢ଼ୟ-ୣ୦-୯ୱஂஃஅ-ஊஎ-ஐஒ-கஙசஜஞடணதந-பம-ஹா-ூெ-ைொ-்ௐௗ௦-௯ఁ-ఃఅ-ఌఎ-ఐఒ-నప-ళవ-హఽ-ౄె-ైొ-్ౕౖౘౙౠ-ౣ౦-౯ಂಃಅ-ಌಎ-ಐಒ-ನಪ-ಳವ-ಹ಼-ೄೆ-ೈೊ-್ೕೖೞೠ-ೣ೦-೯ೱೲംഃഅ-ഌഎ-ഐഒ-ഺഽ-ൄെ-ൈൊ-ൎൗൠ-ൣ൦-൯ൺ-ൿංඃඅ-ඖක-නඳ-රලව-ෆ්ා-ුූෘ-ෟෲෳก-ฺเ-๎๐-๙ກຂຄງຈຊຍດ-ທນ-ຟມ-ຣລວສຫອ-ູົ-ຽເ-ໄໆ່-ໍ໐-໙ໜ-ໟༀ༘༙༠-༩༹༵༷༾-ཇཉ-ཬཱ-྄྆-ྗྙ-ྼ࿆က-၉ၐ-ႝႠ-ჅჇჍა-ჺჼ-ቈቊ-ቍቐ-ቖቘቚ-ቝበ-ኈኊ-ኍነ-ኰኲ-ኵኸ-ኾዀዂ-ዅወ-ዖዘ-ጐጒ-ጕጘ-ፚ፝-፟ᎀ-ᎏᎠ-Ᏼᐁ-ᙬᙯ-ᙿᚁ-ᚚᚠ-ᛪᛮ-ᛰᜀ-ᜌᜎ-᜔ᜠ-᜴ᝀ-ᝓᝠ-ᝬᝮ-ᝰᝲᝳក-៓ៗៜ៝០-៩᠋-᠍᠐-᠙ᠠ-ᡷᢀ-ᢪᢰ-ᣵᤀ-ᤜᤠ-ᤫᤰ-᤻᥆-ᥭᥰ-ᥴᦀ-ᦫᦰ-ᧉ᧐-᧙ᨀ-ᨛᨠ-ᩞ᩠-᩿᩼-᪉᪐-᪙ᪧᬀ-ᭋ᭐-᭙᭫-᭳ᮀ-᯳ᰀ-᰷᱀-᱉ᱍ-ᱽ᳐-᳔᳒-ᳶᴀ-ᷦ᷼-ἕἘ-Ἕἠ-ὅὈ-Ὅὐ-ὗὙὛὝὟ-ώᾀ-ᾴᾶ-ᾼιῂ-ῄῆ-ῌῐ-ΐῖ-Ίῠ-Ῥῲ-ῴῶ-ῼ‌‍‿⁀⁔ⁱⁿₐ-ₜ⃐-⃥⃜⃡-⃰ℂℇℊ-ℓℕℙ-ℝℤΩℨK-ℭℯ-ℹℼ-ℿⅅ-ⅉⅎⅠ-ↈⰀ-Ⱞⰰ-ⱞⱠ-ⳤⳫ-ⳳⴀ-ⴥⴧⴭⴰ-ⵧⵯ⵿-ⶖⶠ-ⶦⶨ-ⶮⶰ-ⶶⶸ-ⶾⷀ-ⷆⷈ-ⷎⷐ-ⷖⷘ-ⷞⷠ-ⷿⸯ々-〇〡-〯〱-〵〸-〼ぁ-ゖ゙゚ゝ-ゟァ-ヺー-ヿㄅ-ㄭㄱ-ㆎㆠ-ㆺㇰ-ㇿ㐀-䶵一-鿌ꀀ-ꒌꓐ-ꓽꔀ-ꘌꘐ-ꘫꙀ-꙯ꙴ-꙽ꙿ-ꚗꚟ-꛱ꜗ-ꜟꜢ-ꞈꞋ-ꞎꞐ-ꞓꞠ-Ɦꟸ-ꠧꡀ-ꡳꢀ-꣄꣐-꣙꣠-ꣷꣻ꤀-꤭ꤰ-꥓ꥠ-ꥼꦀ-꧀ꧏ-꧙ꨀ-ꨶꩀ-ꩍ꩐-꩙ꩠ-ꩶꩺꩻꪀ-ꫂꫛ-ꫝꫠ-ꫯꫲ-꫶ꬁ-ꬆꬉ-ꬎꬑ-ꬖꬠ-ꬦꬨ-ꬮꯀ-ꯪ꯬꯭꯰-꯹가-힣ힰ-ퟆퟋ-ퟻ豈-舘並-龎ﬀ-ﬆﬓ-ﬗיִ-ﬨשׁ-זּטּ-לּמּנּסּףּפּצּ-ﮱﯓ-ﴽﵐ-ﶏﶒ-ﷇﷰ-ﷻ︀-️︠-︦︳︴﹍-﹏ﹰ-ﹴﹶ-ﻼ０-９Ａ-Ｚ＿ａ-ｚｦ-ﾾￂ-ￇￊ-ￏￒ-ￗￚ-ￜ]",
          );
        function b(e) {
          if (e < 128)
            return (
              (e >= 97 && e <= 122) ||
              (e >= 65 && e <= 90) ||
              (e >= 48 && e <= 57) ||
              36 === e ||
              95 === e ||
              92 === e
            );
          var t = String.fromCharCode(e);
          return x.test(t);
        }
        function v(e) {
          return 10 === e || 13 === e || 8232 === e || 8233 === e;
        }
        function k(e) {
          return (
            32 === e ||
            9 === e ||
            v(e) ||
            11 === e ||
            12 === e ||
            160 === e ||
            (e >= 5760 && g.indexOf(e) >= 0)
          );
        }
        function T(e, t) {
          var n = "";
          for (t |= 0; t > 0; t >>>= 1, e += e) 1 & t && (n += e);
          return n;
        }
        function y(e, t) {
          var n, i;
          function r(e) {
            return (
              "object" == typeof e &&
              e instanceof Object &&
              !(e instanceof RegExp)
            );
          }
          for (n in t)
            t.hasOwnProperty(n) &&
              (r((i = t[n]))
                ? r(e[n])
                  ? y(e[n], i)
                  : (e[n] = y({}, i))
                : (e[n] = i));
          return e;
        }
        function E(e, t) {
          return 8232 == (-2 & e)
            ? (t ? "u" : "\\u") + (8232 === e ? "2028" : "2029")
            : 10 === e || 13 === e
              ? (t ? "" : "\\") + (10 === e ? "n" : "r")
              : String.fromCharCode(e);
        }
        function w(e, t) {
          var n,
            r,
            a = "\\";
          switch (e) {
            case 8:
              a += "b";
              break;
            case 12:
              a += "f";
              break;
            case 9:
              a += "t";
              break;
            default:
              (n = e.toString(16).toUpperCase()),
                i || e > 255
                  ? (a += "u" + "0000".slice(n.length) + n)
                  : 0 !== e || ((r = t) >= 48 && r <= 57)
                    ? (a += 11 === e ? "x0B" : "x" + "00".slice(n.length) + n)
                    : (a += "0");
          }
          return a;
        }
        function C(e) {
          var t = "\\";
          switch (e) {
            case 92:
              t += "\\";
              break;
            case 10:
              t += "n";
              break;
            case 13:
              t += "r";
              break;
            case 8232:
              t += "u2028";
              break;
            case 8233:
              t += "u2029";
          }
          return t;
        }
        function A(e, t) {
          if (!e.length) return t;
          if (!t.length) return e;
          var n = e.charCodeAt(e.length - 1),
            i = t.charCodeAt(0);
          return (b(n) && b(i)) ||
            (n === i && (43 === n || 45 === n)) ||
            (47 === n && 105 === i)
            ? e + K.space + t
            : k(n) || k(i)
              ? e + t
              : e + K.optSpace + t;
        }
        function S() {
          var e = K.indent;
          return (K.indent += K.indentUnit), e;
        }
        function _(e) {
          return e.type === m.BlockStatement
            ? K.optSpace
            : e.type === m.EmptyStatement
              ? ""
              : K.newline + K.indent + K.indentUnit;
        }
        function N(e) {
          return e.type === m.BlockStatement
            ? K.optSpace
            : K.newline + K.indent;
        }
        function P(e) {
          var t = e.body;
          if (
            ((function (e) {
              var t = e.params,
                n = t.length,
                i = n - 1;
              if (
                e.type === m.ArrowFunctionExpression &&
                1 === n &&
                t[0].type === m.Identifier
              )
                K.js += t[0].name;
              else {
                K.js += "(";
                for (var r = 0; r < n; ++r) {
                  var a = t[r];
                  t[r].type === m.Identifier
                    ? (K.js += a.name)
                    : V[a.type](a, O.e4),
                    r !== i && (K.js += "," + K.optSpace);
                }
                K.js += ")";
              }
            })(e),
            e.type === m.ArrowFunctionExpression && (K.js += K.optSpace + "=>"),
            e.expression)
          ) {
            K.js += K.optSpace;
            var n = z(t, O.e4);
            "{" === n.charAt(0) && (n = "(" + n + ")"), (K.js += n);
          } else (K.js += _(t)), W[t.type](t, O.s8);
        }
        (n = Array.isArray) ||
          (n = function (e) {
            return "[object Array]" === Object.prototype.toString.call(e);
          });
        var O = {
            e1: function (e) {
              return {
                precedence: h.Assignment,
                allowIn: e,
                allowCall: !0,
                allowUnparenthesizedNew: !0,
              };
            },
            e2: function (e) {
              return {
                precedence: h.LogicalOR,
                allowIn: e,
                allowCall: !0,
                allowUnparenthesizedNew: !0,
              };
            },
            e3: {
              precedence: h.Call,
              allowIn: !0,
              allowCall: !0,
              allowUnparenthesizedNew: !1,
            },
            e4: {
              precedence: h.Assignment,
              allowIn: !0,
              allowCall: !0,
              allowUnparenthesizedNew: !0,
            },
            e5: {
              precedence: h.Sequence,
              allowIn: !0,
              allowCall: !0,
              allowUnparenthesizedNew: !0,
            },
            e6: function (e) {
              return {
                precedence: h.New,
                allowIn: !0,
                allowCall: !1,
                allowUnparenthesizedNew: e,
              };
            },
            e7: {
              precedence: h.Unary,
              allowIn: !0,
              allowCall: !0,
              allowUnparenthesizedNew: !0,
            },
            e8: {
              precedence: h.Postfix,
              allowIn: !0,
              allowCall: !0,
              allowUnparenthesizedNew: !0,
            },
            e9: {
              precedence: void 0,
              allowIn: !0,
              allowCall: !0,
              allowUnparenthesizedNew: !0,
            },
            e10: {
              precedence: h.Call,
              allowIn: !0,
              allowCall: !0,
              allowUnparenthesizedNew: !0,
            },
            e11: function (e) {
              return {
                precedence: h.Call,
                allowIn: !0,
                allowCall: e,
                allowUnparenthesizedNew: !1,
              };
            },
            e12: {
              precedence: h.Primary,
              allowIn: !1,
              allowCall: !1,
              allowUnparenthesizedNew: !0,
            },
            e13: {
              precedence: h.Primary,
              allowIn: !0,
              allowCall: !0,
              allowUnparenthesizedNew: !0,
            },
            e14: {
              precedence: h.Sequence,
              allowIn: !1,
              allowCall: !0,
              allowUnparenthesizedNew: !0,
            },
            e15: function (e) {
              return {
                precedence: h.Sequence,
                allowIn: !0,
                allowCall: e,
                allowUnparenthesizedNew: !0,
              };
            },
            e16: function (e, t) {
              return {
                precedence: e,
                allowIn: t,
                allowCall: !0,
                allowUnparenthesizedNew: !0,
              };
            },
            e17: function (e) {
              return {
                precedence: h.Call,
                allowIn: e,
                allowCall: !0,
                allowUnparenthesizedNew: !0,
              };
            },
            e18: function (e) {
              return {
                precedence: h.Assignment,
                allowIn: e,
                allowCall: !0,
                allowUnparenthesizedNew: !0,
              };
            },
            e19: {
              precedence: h.Sequence,
              allowIn: !0,
              allowCall: !0,
              semicolonOptional: !1,
            },
            e20: { precedence: h.Await, allowCall: !0 },
            s1: function (e, t) {
              return {
                allowIn: !0,
                functionBody: !1,
                directiveContext: e,
                semicolonOptional: t,
              };
            },
            s2: {
              allowIn: !0,
              functionBody: !1,
              directiveContext: !1,
              semicolonOptional: !0,
            },
            s3: function (e) {
              return {
                allowIn: e,
                functionBody: !1,
                directiveContext: !1,
                semicolonOptional: !1,
              };
            },
            s4: function (e) {
              return {
                allowIn: !0,
                functionBody: !1,
                directiveContext: !1,
                semicolonOptional: e,
              };
            },
            s5: function (e) {
              return {
                allowIn: !0,
                functionBody: !1,
                directiveContext: !0,
                semicolonOptional: e,
              };
            },
            s6: {
              allowIn: !1,
              functionBody: !1,
              directiveContext: !1,
              semicolonOptional: !1,
            },
            s7: {
              allowIn: !0,
              functionBody: !1,
              directiveContext: !1,
              semicolonOptional: !1,
            },
            s8: {
              allowIn: !0,
              functionBody: !0,
              directiveContext: !1,
              semicolonOptional: !1,
            },
          },
          L = /[.eExX]|^0[0-9]+/,
          I = /[0-9]$/;
        function R(e, t) {
          var n = e.operator,
            i = f[e.operator],
            r = i < t.precedence,
            a = t.allowIn || r,
            o = O.e16(i, a),
            s = z(e.left, o);
          (r |= "in" === n && !a) && (K.js += "("),
            (s =
              47 === s.charCodeAt(s.length - 1) && b(n.charCodeAt(0))
                ? s + K.space + n
                : A(s, n)),
            o.precedence++;
          var c = z(e.right, o);
          ("/" === n && "/" === c.charAt(0)) ||
          ("<" === n.slice(-1) && "!--" === c.slice(0, 3))
            ? (s += K.space + c)
            : (s = A(s, c)),
            (K.js += s),
            r && (K.js += ")");
        }
        function M(e) {
          var t = e.elements,
            n = t.length;
          if (n) {
            var i = n - 1,
              r = n > 1,
              a = S(),
              o = K.newline + K.indent;
            K.js += "[";
            for (var s = 0; s < n; s++) {
              var c = t[s];
              r && (K.js += o),
                c && V[c.type](c, O.e4),
                (s === i && c) || (K.js += ",");
            }
            (K.indent = a), r && (K.js += K.newline + K.indent), (K.js += "]");
          } else K.js += "[]";
        }
        function D(e) {
          var t = e.blocks,
            n = e.filter,
            i = e.type === m.GeneratorExpression,
            r = i ? "(" : "[",
            a = z(e.body, O.e4);
          if (t) {
            for (var o = S(), s = t.length, c = 0; c < s; ++c) {
              var l = z(t[c], O.e5);
              r = c > 0 ? A(r, l) : r + l;
            }
            K.indent = o;
          }
          if (n) {
            var u = z(n, O.e5);
            (r = A(r, "if" + K.optSpace)), (r = A(r, "(" + u + ")"));
          }
          (r = A(r, a)), (r += i ? ")" : "]"), (K.js += r);
        }
        var j = {
            SequenceExpression: function (e, t) {
              var n = e.expressions,
                i = n.length,
                r = i - 1,
                a = h.Sequence < t.precedence,
                o = O.e1(t.allowIn || a);
              a && (K.js += "(");
              for (var s = 0; s < i; s++) {
                var c = n[s];
                V[c.type](c, o), s !== r && (K.js += "," + K.optSpace);
              }
              a && (K.js += ")");
            },
            AssignmentExpression: function (e, t) {
              var n = e.left,
                i = e.right,
                r = h.Assignment < t.precedence,
                a = t.allowIn || r;
              r && (K.js += "("),
                V[n.type](n, O.e17(a)),
                (K.js += K.optSpace + e.operator + K.optSpace),
                V[i.type](i, O.e18(a)),
                r && (K.js += ")");
            },
            AssignmentPattern: function (e) {
              var t = { left: e.left, right: e.right, operator: "=" };
              V.AssignmentExpression(t, O.e4);
            },
            ArrowFunctionExpression: function (e, t) {
              var n = h.ArrowFunction < t.precedence;
              n && (K.js += "("),
                e.async && (K.js += "async "),
                P(e),
                n && (K.js += ")");
            },
            AwaitExpression: function (e, t) {
              var n = h.Await < t.precedence;
              n && (K.js += "("),
                (K.js += e.all ? "await* " : "await "),
                V[e.argument.type](e.argument, O.e20),
                n && (K.js += ")");
            },
            ConditionalExpression: function (e, t) {
              var n = e.test,
                i = e.consequent,
                r = e.alternate,
                a = h.Conditional < t.precedence,
                o = t.allowIn || a,
                s = O.e2(o),
                c = O.e1(o);
              a && (K.js += "("),
                V[n.type](n, s),
                (K.js += K.optSpace + "?" + K.optSpace),
                V[i.type](i, c),
                (K.js += K.optSpace + ":" + K.optSpace),
                V[r.type](r, c),
                a && (K.js += ")");
            },
            LogicalExpression: R,
            BinaryExpression: R,
            CallExpression: function (e, t) {
              var n = e.callee,
                i = e.arguments,
                r = i.length,
                a = r - 1,
                o = !t.allowCall || h.Call < t.precedence;
              o && (K.js += "("),
                V[n.type](n, O.e3),
                e.optional && (K.js += "?."),
                (K.js += "(");
              for (var s = 0; s < r; ++s) {
                var c = i[s];
                V[c.type](c, O.e4), s !== a && (K.js += "," + K.optSpace);
              }
              (K.js += ")"), o && (K.js += ")");
            },
            NewExpression: function (e, t) {
              var n = e.arguments,
                i = h.New < t.precedence,
                r = n.length,
                a = r - 1,
                o = !t.allowUnparenthesizedNew || c || r > 0,
                s = z(e.callee, O.e6(!o));
              if ((i && (K.js += "("), (K.js += A("new", s)), o)) {
                K.js += "(";
                for (var l = 0; l < r; ++l) {
                  var u = n[l];
                  V[u.type](u, O.e4), l !== a && (K.js += "," + K.optSpace);
                }
                K.js += ")";
              }
              i && (K.js += ")");
            },
            MemberExpression: function (e, t) {
              var n = e.object,
                i = e.property,
                r = h.Member < t.precedence,
                a =
                  !e.computed &&
                  n.type === m.Literal &&
                  "number" == typeof n.value;
              if ((r && (K.js += "("), a)) {
                var o = z(n, O.e11(t.allowCall)),
                  s = I.test(o) && !L.test(o);
                K.js += s ? o + "." : o;
              } else V[n.type](n, O.e11(t.allowCall));
              e.computed
                ? (e.optional && (K.js += "?."),
                  (K.js += "["),
                  V[i.type](i, O.e15(t.allowCall)),
                  (K.js += "]"))
                : (K.js += (e.optional ? "?." : ".") + i.name),
                r && (K.js += ")");
            },
            UnaryExpression: function (e, t) {
              var n = h.Unary < t.precedence,
                i = e.operator,
                r = z(e.argument, O.e7);
              if ((n && (K.js += "("), "" === K.optSpace || i.length > 2))
                K.js += A(i, r);
              else {
                K.js += i;
                var a = i.charCodeAt(i.length - 1),
                  o = r.charCodeAt(0);
                ((a === o && (43 === a || 45 === a)) || (b(a) && b(o))) &&
                  (K.js += K.space),
                  (K.js += r);
              }
              n && (K.js += ")");
            },
            YieldExpression: function (e, t) {
              var n = e.argument,
                i = e.delegate ? "yield*" : "yield",
                r = h.Yield < t.precedence;
              (r && (K.js += "("), n) && (i = A(i, z(n, O.e4)));
              (K.js += i), r && (K.js += ")");
            },
            UpdateExpression: function (e, t) {
              var n = e.argument,
                i = e.operator,
                r = e.prefix,
                a = (r ? h.Unary : h.Postfix) < t.precedence;
              a && (K.js += "("),
                r
                  ? ((K.js += i), V[n.type](n, O.e8))
                  : (V[n.type](n, O.e8), (K.js += i)),
                a && (K.js += ")");
            },
            FunctionExpression: function (e) {
              var t = !!e.generator;
              e.async && (K.js += "async "),
                (K.js += t ? "function*" : "function"),
                e.id
                  ? ((K.js += t ? K.optSpace : K.space), (K.js += e.id.name))
                  : (K.js += K.optSpace),
                P(e);
            },
            ExportBatchSpecifier: function () {
              K.js += "*";
            },
            ArrayPattern: M,
            ArrayExpression: M,
            ClassExpression: function (e) {
              var t = e.id,
                n = e.superClass,
                i = e.body,
                r = "class";
              t && (r = A(r, z(t, O.e9)));
              if (n) {
                var a = z(n, O.e4);
                (a = A("extends", a)), (r = A(r, a));
              }
              (K.js += r + K.optSpace), W[i.type](i, O.s2);
            },
            MetaProperty: function (e, t) {
              var n = e.meta,
                i = e.property,
                r = h.Member < t.precedence;
              r && (K.js += "("),
                (K.js +=
                  ("string" == typeof n ? n : n.name) +
                  "." +
                  ("string" == typeof i ? i : i.name)),
                r && (K.js += ")");
            },
            MethodDefinition: function (e) {
              var t = e.static ? "static" + K.optSpace : "",
                n = z(e.key, O.e5);
              e.computed && (n = "[" + n + "]"),
                "get" === e.kind || "set" === e.kind
                  ? ((n = A(e.kind, n)), (K.js += A(t, n)))
                  : e.value.generator
                    ? (K.js += t + "*" + n)
                    : e.value.async
                      ? (K.js += t + "async " + n)
                      : (K.js += A(t, n)),
                P(e.value);
            },
            Property: function (e) {
              var t = e.value,
                n = e.kind,
                i = z(e.key, O.e4);
              e.computed && (i = "[" + i + "]"),
                "get" === n || "set" === n
                  ? ((K.js += n + K.space + i), P(t))
                  : e.shorthand
                    ? (K.js += i)
                    : e.method
                      ? (t.generator
                          ? (i = "*" + i)
                          : t.async && (i = "async " + i),
                        (K.js += i),
                        P(t))
                      : ((K.js += i + ":" + K.optSpace), V[t.type](t, O.e4));
            },
            ObjectExpression: function (e) {
              var t = e.properties,
                n = t.length;
              if (n) {
                var i = n - 1,
                  r = S();
                K.js += "{";
                for (var a = 0; a < n; a++) {
                  var o = t[a],
                    s = o.type || m.Property;
                  (K.js += K.newline + K.indent),
                    V[s](o, O.e5),
                    a !== i && (K.js += ",");
                }
                (K.indent = r), (K.js += K.newline + K.indent + "}");
              } else K.js += "{}";
            },
            ObjectPattern: function (e) {
              var t = e.properties,
                n = t.length;
              if (n) {
                var i = n - 1,
                  r = !1;
                if (1 === n) r = t[0].value.type !== m.Identifier;
                else
                  for (var a = 0; a < n; a++)
                    if (!t[a].shorthand) {
                      r = !0;
                      break;
                    }
                K.js += r ? "{" + K.newline : "{";
                var o = S(),
                  s = "," + (r ? K.newline : K.optSpace);
                for (a = 0; a < n; a++) {
                  var c = t[a];
                  r && (K.js += K.indent),
                    V[c.type](c, O.e5),
                    a !== i && (K.js += s);
                }
                (K.indent = o), (K.js += r ? K.newline + K.indent + "}" : "}");
              } else K.js += "{}";
            },
            ThisExpression: function () {
              K.js += "this";
            },
            Identifier: function (e, t, n) {
              K.js += e.name;
            },
            ImportExpression: function (e, t) {
              var n = h.Call < t.precedence,
                i = e.source;
              n && (K.js += "("),
                (K.js += "import("),
                V[i.type](i, O.e4),
                (K.js += ")"),
                n && (K.js += ")");
            },
            ImportSpecifier: function (e) {
              (K.js += e.imported.name),
                e.local && (K.js += K.space + "as" + K.space + e.local.name);
            },
            ExportSpecifier: function (e) {
              (K.js += e.local.name),
                e.exported &&
                  (K.js += K.space + "as" + K.space + e.exported.name);
            },
            ChainExpression: function (e, t) {
              var n = h.OptionalChaining < t.precedence,
                i = e.expression;
              t = t || {};
              var r = {
                precedence: h.OptionalChaining,
                allowIn: t.allowIn,
                allowCall: t.allowCall,
                allowUnparenthesizedNew: t.allowUnparenthesizedNew,
              };
              n && ((r.allowCall = !0), (K.js += "(")),
                V[i.type](i, r),
                n && (K.js += ")");
            },
            Literal: function (e) {
              if (d.raw && void 0 !== e.raw) K.js += e.raw;
              else if (null === e.value) K.js += "null";
              else {
                var t = typeof e.value;
                K.js +=
                  "string" === t
                    ? (function (e) {
                        var t,
                          n,
                          r,
                          a,
                          c,
                          l = "",
                          u = 0,
                          p = 0;
                        for (t = 0, n = e.length; t < n; ++t) {
                          if (39 === (r = e.charCodeAt(t))) ++u;
                          else if (34 === r) ++p;
                          else if (47 === r && i) l += "\\";
                          else {
                            if (v(r) || 92 === r) {
                              l += C(r);
                              continue;
                            }
                            if (
                              (i && r < 32) ||
                              !(i || s || (r >= 32 && r <= 126))
                            ) {
                              l += w(r, e.charCodeAt(t + 1));
                              continue;
                            }
                          }
                          l += String.fromCharCode(r);
                        }
                        if (
                          ((c = (a = !(
                            "double" === o ||
                            ("auto" === o && p < u)
                          ))
                            ? "'"
                            : '"'),
                          !(a ? u : p))
                        )
                          return c + l + c;
                        for (e = l, l = c, t = 0, n = e.length; t < n; ++t)
                          ((39 === (r = e.charCodeAt(t)) && a) ||
                            (34 === r && !a)) &&
                            (l += "\\"),
                            (l += String.fromCharCode(r));
                        return l + c;
                      })(e.value)
                    : "number" === t
                      ? (function (e) {
                          var t, n, o, s, c;
                          if (e === 1 / 0)
                            return i ? "null" : r ? "1e400" : "1e+400";
                          if (((t = "" + e), !r || t.length < 3)) return t;
                          for (
                            n = t.indexOf("."),
                              i ||
                                48 !== t.charCodeAt(0) ||
                                1 !== n ||
                                ((n = 0), (t = t.slice(1))),
                              o = t,
                              t = t.replace("e+", "e"),
                              s = 0,
                              (c = o.indexOf("e")) > 0 &&
                                ((s = +o.slice(c + 1)), (o = o.slice(0, c))),
                              n >= 0 &&
                                ((s -= o.length - n - 1),
                                (o = +(o.slice(0, n) + o.slice(n + 1)) + "")),
                              c = 0;
                            48 === o.charCodeAt(o.length + c - 1);

                          )
                            --c;
                          return (
                            0 !== c && ((s -= c), (o = o.slice(0, c))),
                            0 !== s && (o += "e" + s),
                            (o.length < t.length ||
                              (a &&
                                e > 1e12 &&
                                Math.floor(e) === e &&
                                (o = "0x" + e.toString(16)).length <
                                  t.length)) &&
                              +o === e &&
                              (t = o),
                            t
                          );
                        })(e.value)
                      : "boolean" === t
                        ? e.value
                          ? "true"
                          : "false"
                        : (function (e) {
                            var t, n, i, r, a, o, s, c;
                            if (((n = e.toString()), e.source)) {
                              if (!(t = n.match(/\/([^/]*)$/))) return n;
                              for (
                                i = t[1],
                                  n = "",
                                  s = !1,
                                  c = !1,
                                  r = 0,
                                  a = e.source.length;
                                r < a;
                                ++r
                              )
                                (o = e.source.charCodeAt(r)),
                                  c
                                    ? ((n += E(o, c)), (c = !1))
                                    : (s
                                        ? 93 === o && (s = !1)
                                        : 47 === o
                                          ? (n += "\\")
                                          : 91 === o && (s = !0),
                                      (n += E(o, c)),
                                      (c = 92 === o));
                              return "/" + n + "/" + i;
                            }
                            return n;
                          })(e.value);
              }
            },
            GeneratorExpression: D,
            ComprehensionExpression: D,
            ComprehensionBlock: function (e) {
              var t = e.left,
                n = void 0,
                i = z(e.right, O.e5);
              (n = A(
                (n =
                  t.type === m.VariableDeclaration
                    ? t.kind + K.space + q(t.declarations[0], O.s6)
                    : z(t, O.e10)),
                e.of ? "of" : "in",
              )),
                (K.js += "for" + K.optSpace + "(" + A(n, i) + ")");
            },
            RestElement: function (e) {
              K.js += "..." + e.argument.name;
            },
            SpreadElement: function (e) {
              var t = e.argument;
              (K.js += "..."), V[t.type](t, O.e4);
            },
            TaggedTemplateExpression: function (e, t) {
              var n = e.tag,
                i = e.quasi,
                r = h.TaggedTemplate < t.precedence;
              r && (K.js += "("),
                V[n.type](n, O.e11(t.allowCall)),
                V[i.type](i, O.e12),
                r && (K.js += ")");
            },
            TemplateElement: function (e) {
              K.js += e.value.raw;
            },
            TemplateLiteral: function (e) {
              var t = e.quasis,
                n = e.expressions,
                i = t.length,
                r = i - 1;
              K.js += "`";
              for (var a = 0; a < i; ++a) {
                var o = t[a];
                if ((V[o.type](o, O.e13), a !== r)) {
                  var s = n[a];
                  (K.js += "${" + K.optSpace),
                    V[s.type](s, O.e5),
                    (K.js += K.optSpace + "}");
                }
              }
              K.js += "`";
            },
            Super: function () {
              K.js += "super";
            },
          },
          H = /^{|^class(?:\s|{)|^(async )?function(?:\s|\*|\()/;
        function F(e, t, n) {
          for (var i = n.length, r = i - 1, a = 0; a < i; ++a) {
            (e = A(e, q(n[a], O.s7))), (t || a !== r) && (e += N(n[a].body));
          }
          return e;
        }
        function B(e, t, n) {
          var i = t.body,
            r = t.left,
            a = !l && n.semicolonOptional,
            o = S(),
            s = "for" + (t.await ? " await" : "") + K.optSpace + "(";
          if (r.type === m.VariableDeclaration) {
            var c = S();
            (s += r.kind + K.space + q(r.declarations[0], O.s6)),
              (K.indent = c);
          } else s += z(r, O.e10);
          (s = A(s, e)),
            (s = A(s, z(t.right, O.e4)) + ")"),
            (K.indent = o),
            (K.js += s + _(i)),
            W[i.type](i, O.s4(a));
        }
        var U = {
          BlockStatement: function (e, t) {
            var n = e.body,
              i = n.length,
              r = i - 1,
              a = S();
            K.js += "{" + K.newline;
            for (var o = 0; o < i; o++) {
              var s = n[o];
              (K.js += K.indent),
                W[s.type](s, O.s1(t.functionBody, o === r)),
                (K.js += K.newline);
            }
            (K.indent = a), (K.js += K.indent + "}");
          },
          BreakStatement: function (e, t) {
            e.label ? (K.js += "break " + e.label.name) : (K.js += "break"),
              (!l && t.semicolonOptional) || (K.js += ";");
          },
          ContinueStatement: function (e, t) {
            e.label
              ? (K.js += "continue " + e.label.name)
              : (K.js += "continue"),
              (!l && t.semicolonOptional) || (K.js += ";");
          },
          ClassBody: function (e) {
            var t = e.body,
              n = t.length,
              i = n - 1,
              r = S();
            K.js += "{" + K.newline;
            for (var a = 0; a < n; a++) {
              var o = t[a],
                s = o.type || m.Property;
              (K.js += K.indent), V[s](o, O.e5), a !== i && (K.js += K.newline);
            }
            (K.indent = r), (K.js += K.newline + K.indent + "}");
          },
          ClassDeclaration: function (e) {
            var t = e.body,
              n = e.superClass,
              i = "class " + e.id.name;
            if (n) {
              var r = z(n, O.e4);
              i += K.space + A("extends", r);
            }
            (K.js += i + K.optSpace), W[t.type](t, O.s2);
          },
          DirectiveStatement: function (e, t) {
            d.raw && e.raw
              ? (K.js += e.raw)
              : (K.js += (function (e) {
                  var t, n, i, r;
                  for (
                    r = "double" === o ? '"' : "'", t = 0, n = e.length;
                    t < n;
                    ++t
                  ) {
                    if (39 === (i = e.charCodeAt(t))) {
                      r = '"';
                      break;
                    }
                    if (34 === i) {
                      r = "'";
                      break;
                    }
                    92 === i && ++t;
                  }
                  return r + e + r;
                })(e.directive)),
              (!l && t.semicolonOptional) || (K.js += ";");
          },
          DoWhileStatement: function (e, t) {
            var n = e.body,
              i = e.test,
              r = A("do", _(n) + q(n, O.s7) + N(n));
            (K.js += A(r, "while" + K.optSpace + "(")),
              V[i.type](i, O.e5),
              (K.js += ")"),
              (!l && t.semicolonOptional) || (K.js += ";");
          },
          CatchClause: function (e) {
            var t = e.param,
              n = e.guard,
              i = e.body,
              r = S();
            (K.js += "catch" + K.optSpace),
              t && ((K.js += "("), V[t.type](t, O.e5)),
              n && ((K.js += " if "), V[n.type](n, O.e5)),
              (K.indent = r),
              t && (K.js += ")"),
              (K.js += _(i)),
              W[i.type](i, O.s7);
          },
          DebuggerStatement: function (e, t) {
            (K.js += "debugger"), (!l && t.semicolonOptional) || (K.js += ";");
          },
          EmptyStatement: function () {
            K.js += ";";
          },
          ExportAllDeclaration: function (e, t) {
            U.ExportDeclaration(e, t, !0);
          },
          ExportDeclaration: function (e, t, n) {
            var i = e.specifiers,
              r = e.declaration,
              a = l || !t.semicolonOptional;
            if (e.default) {
              var o = z(r, O.e4);
              (K.js += A("export default", o)), a && (K.js += ";");
            } else if (i || n) {
              var s = "export";
              if (n) s += K.optSpace + "*";
              else if (0 === i.length) s += K.optSpace + "{" + K.optSpace + "}";
              else if (i[0].type === m.ExportBatchSpecifier) {
                s = A(s, z(i[0], O.e5));
              } else {
                var c = S(),
                  u = i.length,
                  p = u - 1;
                s += K.optSpace + "{";
                for (var d = 0; d < u; ++d)
                  (s += K.newline + K.indent),
                    (s += z(i[d], O.e5)),
                    d !== p && (s += ",");
                (K.indent = c), (s += K.newline + K.indent + "}");
              }
              e.source
                ? ((K.js += A(s, "from" + K.optSpace)), V.Literal(e.source))
                : (K.js += s),
                a && (K.js += ";");
            } else if (r) {
              o = q(r, O.s4(!a));
              K.js += A("export", o);
            }
          },
          ExportNamedDeclaration: function (e, t) {
            U.ExportDeclaration(e, t);
          },
          ExpressionStatement: function (e, t) {
            var n = z(e.expression, O.e5),
              i =
                H.test(n) ||
                (p &&
                  t.directiveContext &&
                  e.expression.type === m.Literal &&
                  "string" == typeof e.expression.value);
            (K.js += i ? "(" + n + ")" : n),
              (!l && t.semicolonOptional) || (K.js += ";");
          },
          ImportDeclaration: function (e, t) {
            var n = e.specifiers,
              i = "import",
              r = n.length;
            if (r) {
              var a = !!n[0].default,
                o = a ? 1 : 0,
                s = r - 1;
              if ((a && (i = A(i, n[0].id.name)), o < r)) {
                if ((a && (i += ","), (i += K.optSpace + "{"), o === s))
                  i += K.optSpace + z(n[o], O.e5) + K.optSpace;
                else {
                  for (var c = S(), u = o; u < r; u++)
                    (i += K.newline + K.indent + z(n[u], O.e5)),
                      u !== s && (i += ",");
                  (K.indent = c), (i += K.newline + K.indent);
                }
                i += "}" + K.optSpace;
              }
              i = A(i, "from");
            }
            (K.js += i + K.optSpace),
              V.Literal(e.source),
              (!l && t.semicolonOptional) || (K.js += ";");
          },
          VariableDeclarator: function (e, t) {
            var n = e.id,
              i = e.init,
              r = O.e1(t.allowIn);
            i
              ? (V[n.type](n, r),
                (K.js += K.optSpace + "=" + K.optSpace),
                V[i.type](i, r))
              : n.type === m.Identifier
                ? (K.js += n.name)
                : V[n.type](n, r);
          },
          VariableDeclaration: function (e, t) {
            var n = e.declarations,
              i = n.length,
              r = i > 1 ? S() : K.indent,
              a = O.s3(t.allowIn);
            K.js += e.kind;
            for (var o = 0; o < i; o++) {
              var s = n[o];
              (K.js += 0 === o ? K.space : "," + K.optSpace), W[s.type](s, a);
            }
            (!l && t.semicolonOptional) || (K.js += ";"), (K.indent = r);
          },
          ThrowStatement: function (e, t) {
            var n = z(e.argument, O.e5);
            (K.js += A("throw", n)),
              (!l && t.semicolonOptional) || (K.js += ";");
          },
          TryStatement: function (e) {
            var t = e.block,
              i = e.finalizer,
              r = "try" + _(t) + q(t, O.s7) + N(t),
              a = e.handlers || e.guardedHandlers;
            a && (r = F(r, i, a)),
              e.handler &&
                (r = F(r, i, (a = n(e.handler) ? e.handler : [e.handler]))),
              i && ((r = A(r, "finally" + _(i))), (r += q(i, O.s7))),
              (K.js += r);
          },
          SwitchStatement: function (e) {
            var t = e.cases,
              n = e.discriminant,
              i = S();
            if (
              ((K.js += "switch" + K.optSpace + "("),
              V[n.type](n, O.e5),
              (K.js += ")" + K.optSpace + "{" + K.newline),
              (K.indent = i),
              t)
            )
              for (var r = t.length, a = r - 1, o = 0; o < r; o++) {
                var s = t[o];
                (K.js += K.indent),
                  W[s.type](s, O.s4(o === a)),
                  (K.js += K.newline);
              }
            K.js += K.indent + "}";
          },
          SwitchCase: function (e, t) {
            var n = e.consequent,
              i = n[0],
              r = e.test,
              a = 0,
              o = !l && t.semicolonOptional,
              s = n.length,
              c = s - 1,
              u = S();
            if (r) {
              var p = z(r, O.e5);
              K.js += A("case", p) + ":";
            } else K.js += "default:";
            for (
              s &&
              i.type === m.BlockStatement &&
              (a++, (K.js += _(i)), W[i.type](i, O.s7));
              a < s;
              a++
            ) {
              var d = n[a],
                h = a === c && o;
              (K.js += K.newline + K.indent), W[d.type](d, O.s4(h));
            }
            K.indent = u;
          },
          IfStatement: function (e, t) {
            var n = e.consequent,
              i = e.test,
              r = S(),
              a = !l && t.semicolonOptional;
            if (
              ((K.js += "if" + K.optSpace + "("),
              V[i.type](i, O.e5),
              (K.js += ")"),
              (K.indent = r),
              (K.js += _(n)),
              e.alternate)
            ) {
              var o = q(n, O.s7) + N(n),
                s = q(e.alternate, O.s4(a));
              (s =
                e.alternate.type === m.IfStatement
                  ? "else " + s
                  : A("else", _(e.alternate) + s)),
                (K.js += A(o, s));
            } else W[n.type](n, O.s4(a));
          },
          ForStatement: function (e, t) {
            var n = e.init,
              i = e.test,
              r = e.body,
              a = e.update,
              o = !l && t.semicolonOptional,
              s = S();
            (K.js += "for" + K.optSpace + "("),
              n
                ? n.type === m.VariableDeclaration
                  ? W[n.type](n, O.s6)
                  : (V[n.type](n, O.e14), (K.js += ";"))
                : (K.js += ";"),
              i && ((K.js += K.optSpace), V[i.type](i, O.e5)),
              (K.js += ";"),
              a && ((K.js += K.optSpace), V[a.type](a, O.e5)),
              (K.js += ")"),
              (K.indent = s),
              (K.js += _(r)),
              W[r.type](r, O.s4(o));
          },
          ForInStatement: function (e, t) {
            B("in", e, t);
          },
          ForOfStatement: function (e, t) {
            B("of", e, t);
          },
          LabeledStatement: function (e, t) {
            var n = e.body,
              i = !l && t.semicolonOptional,
              r = K.indent;
            (K.js += e.label.name + ":" + _(n)),
              n.type !== m.BlockStatement && (r = S()),
              W[n.type](n, O.s4(i)),
              (K.indent = r);
          },
          ModuleDeclaration: function (e, t) {
            (K.js +=
              "module" + K.space + e.id.name + K.space + "from" + K.optSpace),
              V.Literal(e.source),
              (!l && t.semicolonOptional) || (K.js += ";");
          },
          Program: function (e) {
            var t = e.body,
              n = t.length,
              i = n - 1;
            u && n > 0 && (K.js += "\n");
            for (var r = 0; r < n; r++) {
              var a = t[r];
              (K.js += K.indent),
                W[a.type](a, O.s5(!u && r === i)),
                r !== i && (K.js += K.newline);
            }
          },
          FunctionDeclaration: function (e) {
            var t = !!e.generator;
            e.async && (K.js += "async "),
              (K.js += t ? "function*" + K.optSpace : "function" + K.space),
              (K.js += e.id.name),
              P(e);
          },
          ReturnStatement: function (e, t) {
            var n = e.argument;
            if (n) {
              var i = z(n, O.e5);
              K.js += A("return", i);
            } else K.js += "return";
            (!l && t.semicolonOptional) || (K.js += ";");
          },
          WhileStatement: function (e, t) {
            var n = e.body,
              i = e.test,
              r = !l && t.semicolonOptional,
              a = S();
            (K.js += "while" + K.optSpace + "("),
              V[i.type](i, O.e5),
              (K.js += ")"),
              (K.indent = a),
              (K.js += _(n)),
              W[n.type](n, O.s4(r));
          },
          WithStatement: function (e, t) {
            var n = e.body,
              i = e.object,
              r = !l && t.semicolonOptional,
              a = S();
            (K.js += "with" + K.optSpace + "("),
              V[i.type](i, O.e5),
              (K.js += ")"),
              (K.indent = a),
              (K.js += _(n)),
              W[n.type](n, O.s4(r));
          },
        };
        function z(e, t) {
          var n = K.js;
          (K.js = ""), V[e.type](e, t);
          var i = K.js;
          return (K.js = n), i;
        }
        function q(e, t) {
          var n = K.js;
          (K.js = ""), W[e.type](e, t);
          var i = K.js;
          return (K.js = n), i;
        }
        function G(e) {
          return function (t, n) {
            d.verbatim && t.hasOwnProperty(d.verbatim)
              ? (function (e, t) {
                  var n = e[d.verbatim],
                    i = "string" == typeof n,
                    r =
                      (i || void 0 === n.precedence
                        ? h.Sequence
                        : n.precedence) < t.precedence,
                    a = (i ? n : n.content).split(/\r\n|\n/),
                    o = a.length;
                  r && (K.js += "("), (K.js += a[0]);
                  for (var s = 1; s < o; s++)
                    K.js += K.newline + K.indent + a[s];
                  r && (K.js += ")");
                })(t, n)
              : e(t, n);
          };
        }
        var K = {
            js: "",
            newline: "\n",
            optSpace: " ",
            space: " ",
            indentUnit: "    ",
            indent: "",
          },
          V = void 0,
          W = U;
        t.generate = function (e, t) {
          var n = {
            indent: null,
            base: null,
            parse: null,
            format: {
              indent: { style: "    ", base: 0 },
              newline: "\n",
              space: " ",
              json: !1,
              renumber: !1,
              hexadecimal: !1,
              quotes: "single",
              escapeless: !1,
              compact: !1,
              parentheses: !0,
              semicolons: !0,
              safeConcatenation: !1,
            },
            directive: !1,
            raw: !0,
            verbatim: null,
          };
          return (
            null != t
              ? ("string" == typeof t.indent &&
                  (n.format.indent.style = t.indent),
                "number" == typeof t.base && (n.format.indent.base = t.base),
                (t = y(n, t)),
                (K.indentUnit = t.format.indent.style),
                "string" == typeof t.base
                  ? (K.indent = t.base)
                  : (K.indent = T(K.indentUnit, t.format.indent.base)))
              : ((t = n),
                (K.indentUnit = t.format.indent.style),
                (K.indent = T(K.indentUnit, t.format.indent.base))),
            (i = t.format.json),
            (r = t.format.renumber),
            (a = !i && t.format.hexadecimal),
            (o = i ? "double" : t.format.quotes),
            (s = t.format.escapeless),
            (K.newline = t.format.newline),
            (K.optSpace = t.format.space),
            t.format.compact &&
              (K.newline = K.optSpace = K.indentUnit = K.indent = ""),
            (K.space = K.optSpace ? K.optSpace : " "),
            (c = t.format.parentheses),
            (l = t.format.semicolons),
            (u = t.format.safeConcatenation),
            (p = t.directive),
            i ? null : t.parse,
            (V = (d = t).verbatim
              ? (function () {
                  var e = {};
                  for (var t in j) j.hasOwnProperty(t) && (e[t] = G(j[t]));
                  return e;
                })()
              : j),
            (function (e) {
              return (
                (K.js = ""),
                W[e.type] ? W[e.type](e, O.s7) : V[e.type](e, O.e19),
                K.js
              );
            })(e)
          );
        };
      },
      (e) => {
        "use strict";
        var t = { decodeValues: !0, map: !1, silent: !1 };
        function n(e) {
          return "string" == typeof e && !!e.trim();
        }
        function i(e, i) {
          var r = e.split(";").filter(n),
            a = r.shift().split("="),
            o = a.shift(),
            s = a.join("=");
          i = i ? Object.assign({}, t, i) : t;
          try {
            s = i.decodeValues ? decodeURIComponent(s) : s;
          } catch (e) {
            console.error(
              "set-cookie-parser encountered an error while decoding a cookie with value '" +
                s +
                "'. Set options.decodeValues to false to disable this feature.",
              e,
            );
          }
          var c = { name: o, value: s };
          return (
            r.forEach(function (e) {
              var t = e.split("="),
                n = t.shift().trimLeft().toLowerCase(),
                i = t.join("=");
              "expires" === n
                ? (c.expires = new Date(i))
                : "max-age" === n
                  ? (c.maxAge = parseInt(i, 10))
                  : "secure" === n
                    ? (c.secure = !0)
                    : "httponly" === n
                      ? (c.httpOnly = !0)
                      : "samesite" === n
                        ? (c.sameSite = i)
                        : (c[n] = i);
            }),
            c
          );
        }
        function r(e, r) {
          if (((r = r ? Object.assign({}, t, r) : t), !e))
            return r.map ? {} : [];
          if (e.headers && e.headers["set-cookie"]) e = e.headers["set-cookie"];
          else if (e.headers) {
            var a =
              e.headers[
                Object.keys(e.headers).find(function (e) {
                  return "set-cookie" === e.toLowerCase();
                })
              ];
            a ||
              !e.headers.cookie ||
              r.silent ||
              console.warn(
                "Warning: set-cookie-parser appears to have been called on a request object. It is designed to parse Set-Cookie headers from responses, not Cookie headers from requests. Set the option {silent: true} to suppress this warning.",
              ),
              (e = a);
          }
          if (
            (Array.isArray(e) || (e = [e]),
            (r = r ? Object.assign({}, t, r) : t).map)
          ) {
            return e.filter(n).reduce(function (e, t) {
              var n = i(t, r);
              return (e[n.name] = n), e;
            }, {});
          }
          return e.filter(n).map(function (e) {
            return i(e, r);
          });
        }
        (e.exports = r),
          (e.exports.parse = r),
          (e.exports.parseString = i),
          (e.exports.splitCookiesString = function (e) {
            if (Array.isArray(e)) return e;
            if ("string" != typeof e) return [];
            var t,
              n,
              i,
              r,
              a,
              o = [],
              s = 0;
            function c() {
              for (; s < e.length && /\s/.test(e.charAt(s)); ) s += 1;
              return s < e.length;
            }
            for (; s < e.length; ) {
              for (t = s, a = !1; c(); )
                if ("," === (n = e.charAt(s))) {
                  for (
                    i = s, s += 1, c(), r = s;
                    s < e.length &&
                    "=" !== (n = e.charAt(s)) &&
                    ";" !== n &&
                    "," !== n;

                  )
                    s += 1;
                  s < e.length && "=" === e.charAt(s)
                    ? ((a = !0), (s = r), o.push(e.substring(t, i)), (t = s))
                    : (s = i + 1);
                } else s += 1;
              (!a || s >= e.length) && o.push(e.substring(t, e.length));
            }
            return o;
          });
      },
      (e, t, n) => {
        "use strict";
        n.r(t), n.d(t, { xor: () => i, plain: () => r, base64: () => a });
        const i = {
            encode: (e) =>
              e
                ? encodeURIComponent(
                    e
                      .toString()
                      .split("")
                      .map((e, t) =>
                        t % 2 ? String.fromCharCode(2 ^ e.charCodeAt()) : e,
                      )
                      .join(""),
                  )
                : e,
            decode(e) {
              if (!e) return e;
              let [t, ...n] = e.split("?");
              return (
                decodeURIComponent(t)
                  .split("")
                  .map((e, t) =>
                    t % 2 ? String.fromCharCode(2 ^ e.charCodeAt(0)) : e,
                  )
                  .join("") + (n.length ? "?" + n.join("?") : "")
              );
            },
          },
          r = {
            encode: (e) => (e ? encodeURIComponent(e) : e),
            decode: (e) => (e ? decodeURIComponent(e) : e),
          },
          a = {
            encode(e) {
              if (!e) return e;
              e = e.toString();
              const t = Array.from(
                "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=",
              );
              let n,
                i,
                r,
                a,
                o = "",
                s = e.length % 3;
              for (let s = 0; s < e.length; ) {
                if (
                  (i = e.charCodeAt(s++)) > 255 ||
                  (r = e.charCodeAt(s++)) > 255 ||
                  (a = e.charCodeAt(s++)) > 255
                )
                  throw new TypeError("invalid character found");
                (n = (i << 16) | (r << 8) | a),
                  (o +=
                    t[(n >> 18) & 63] +
                    t[(n >> 12) & 63] +
                    t[(n >> 6) & 63] +
                    t[63 & n]);
              }
              return encodeURIComponent(
                s ? o.slice(0, s - 3) + "===".substr(s) : o,
              );
            },
            decode(e) {
              if (!e) return e;
              const t = {
                0: 52,
                1: 53,
                2: 54,
                3: 55,
                4: 56,
                5: 57,
                6: 58,
                7: 59,
                8: 60,
                9: 61,
                A: 0,
                B: 1,
                C: 2,
                D: 3,
                E: 4,
                F: 5,
                G: 6,
                H: 7,
                I: 8,
                J: 9,
                K: 10,
                L: 11,
                M: 12,
                N: 13,
                O: 14,
                P: 15,
                Q: 16,
                R: 17,
                S: 18,
                T: 19,
                U: 20,
                V: 21,
                W: 22,
                X: 23,
                Y: 24,
                Z: 25,
                a: 26,
                b: 27,
                c: 28,
                d: 29,
                e: 30,
                f: 31,
                g: 32,
                h: 33,
                i: 34,
                j: 35,
                k: 36,
                l: 37,
                m: 38,
                n: 39,
                o: 40,
                p: 41,
                q: 42,
                r: 43,
                s: 44,
                t: 45,
                u: 46,
                v: 47,
                w: 48,
                x: 49,
                y: 50,
                z: 51,
                "+": 62,
                "/": 63,
                "=": 64,
              };
              let n;
              (e = (e = decodeURIComponent(e.toString())).replace(/\s+/g, "")),
                (e += "==".slice(2 - (3 & e.length)));
              let i,
                r,
                a = "";
              for (let o = 0; o < e.length; )
                (n =
                  (t[e.charAt(o++)] << 18) |
                  (t[e.charAt(o++)] << 12) |
                  ((i = t[e.charAt(o++)]) << 6) |
                  (r = t[e.charAt(o++)])),
                  (a +=
                    64 === i
                      ? String.fromCharCode((n >> 16) & 255)
                      : 64 === r
                        ? String.fromCharCode((n >> 16) & 255, (n >> 8) & 255)
                        : String.fromCharCode(
                            (n >> 16) & 255,
                            (n >> 8) & 255,
                            255 & n,
                          ));
              return a;
            },
          };
      },
      (e, t, n) => {
        "use strict";
        n.r(t), n.d(t, { default: () => p });
        var i,
          r,
          a,
          o = n(145),
          s = {},
          c = /^\s*([^;\s]*)(?:;|\s|$)/,
          l = /^text\//i;
        /*!
         * mime-types
         * Copyright(c) 2014 Jonathan Ong
         * Copyright(c) 2015 Douglas Christopher Wilson
         * MIT Licensed
         */ function u(e) {
          if (!e || "string" != typeof e) return !1;
          var t = c.exec(e),
            n = t && o[t[1].toLowerCase()];
          return n && n.charset ? n.charset : !(!t || !l.test(t[1])) && "UTF-8";
        }
        (s.charset = u),
          (s.charsets = { lookup: u }),
          (s.contentType = function (e) {
            if (!e || "string" != typeof e) return !1;
            var t = -1 === e.indexOf("/") ? s.lookup(e) : e;
            if (!t) return !1;
            if (-1 === t.indexOf("charset")) {
              var n = s.charset(t);
              n && (t += "; charset=" + n.toLowerCase());
            }
            return t;
          }),
          (s.extension = function (e) {
            if (!e || "string" != typeof e) return !1;
            var t = c.exec(e),
              n = t && s.extensions[t[1].toLowerCase()];
            if (!n || !n.length) return !1;
            return n[0];
          }),
          (s.extensions = Object.create(null)),
          (s.lookup = function (e) {
            if (!e || "string" != typeof e) return !1;
            var t = (function (e = "") {
              if (!e.includes(".")) return "";
              const t = e.split(".");
              return "." + t[t.length - 1];
            })("x." + e)
              .toLowerCase()
              .substr(1);
            if (!t) return !1;
            return s.types[t] || !1;
          }),
          (s.types = Object.create(null)),
          (i = s.extensions),
          (r = s.types),
          (a = ["nginx", "apache", void 0, "iana"]),
          Object.keys(o).forEach(function (e) {
            var t = o[e],
              n = t.extensions;
            if (n && n.length) {
              i[e] = n;
              for (var s = 0; s < n.length; s++) {
                var c = n[s];
                if (r[c]) {
                  var l = a.indexOf(o[r[c]].source),
                    u = a.indexOf(t.source);
                  if (
                    "application/octet-stream" !== r[c] &&
                    (l > u ||
                      (l === u && "application/" === r[c].substr(0, 12)))
                  )
                    continue;
                }
                r[c] = e;
              }
            }
          });
        const p = s;
      },
      (e, t, n) => {
        /*!
         * mime-db
         * Copyright(c) 2014 Jonathan Ong
         * MIT Licensed
         */
        e.exports = n(146);
      },
      (e) => {
        "use strict";
        e.exports = JSON.parse(
          '{"application/1d-interleaved-parityfec":{"source":"iana"},"application/3gpdash-qoe-report+xml":{"source":"iana","charset":"UTF-8","compressible":true},"application/3gpp-ims+xml":{"source":"iana","compressible":true},"application/3gpphal+json":{"source":"iana","compressible":true},"application/3gpphalforms+json":{"source":"iana","compressible":true},"application/a2l":{"source":"iana"},"application/ace+cbor":{"source":"iana"},"application/activemessage":{"source":"iana"},"application/activity+json":{"source":"iana","compressible":true},"application/alto-costmap+json":{"source":"iana","compressible":true},"application/alto-costmapfilter+json":{"source":"iana","compressible":true},"application/alto-directory+json":{"source":"iana","compressible":true},"application/alto-endpointcost+json":{"source":"iana","compressible":true},"application/alto-endpointcostparams+json":{"source":"iana","compressible":true},"application/alto-endpointprop+json":{"source":"iana","compressible":true},"application/alto-endpointpropparams+json":{"source":"iana","compressible":true},"application/alto-error+json":{"source":"iana","compressible":true},"application/alto-networkmap+json":{"source":"iana","compressible":true},"application/alto-networkmapfilter+json":{"source":"iana","compressible":true},"application/alto-updatestreamcontrol+json":{"source":"iana","compressible":true},"application/alto-updatestreamparams+json":{"source":"iana","compressible":true},"application/aml":{"source":"iana"},"application/andrew-inset":{"source":"iana","extensions":["ez"]},"application/applefile":{"source":"iana"},"application/applixware":{"source":"apache","extensions":["aw"]},"application/at+jwt":{"source":"iana"},"application/atf":{"source":"iana"},"application/atfx":{"source":"iana"},"application/atom+xml":{"source":"iana","compressible":true,"extensions":["atom"]},"application/atomcat+xml":{"source":"iana","compressible":true,"extensions":["atomcat"]},"application/atomdeleted+xml":{"source":"iana","compressible":true,"extensions":["atomdeleted"]},"application/atomicmail":{"source":"iana"},"application/atomsvc+xml":{"source":"iana","compressible":true,"extensions":["atomsvc"]},"application/atsc-dwd+xml":{"source":"iana","compressible":true,"extensions":["dwd"]},"application/atsc-dynamic-event-message":{"source":"iana"},"application/atsc-held+xml":{"source":"iana","compressible":true,"extensions":["held"]},"application/atsc-rdt+json":{"source":"iana","compressible":true},"application/atsc-rsat+xml":{"source":"iana","compressible":true,"extensions":["rsat"]},"application/atxml":{"source":"iana"},"application/auth-policy+xml":{"source":"iana","compressible":true},"application/bacnet-xdd+zip":{"source":"iana","compressible":false},"application/batch-smtp":{"source":"iana"},"application/bdoc":{"compressible":false,"extensions":["bdoc"]},"application/beep+xml":{"source":"iana","charset":"UTF-8","compressible":true},"application/calendar+json":{"source":"iana","compressible":true},"application/calendar+xml":{"source":"iana","compressible":true,"extensions":["xcs"]},"application/call-completion":{"source":"iana"},"application/cals-1840":{"source":"iana"},"application/captive+json":{"source":"iana","compressible":true},"application/cbor":{"source":"iana"},"application/cbor-seq":{"source":"iana"},"application/cccex":{"source":"iana"},"application/ccmp+xml":{"source":"iana","compressible":true},"application/ccxml+xml":{"source":"iana","compressible":true,"extensions":["ccxml"]},"application/cdfx+xml":{"source":"iana","compressible":true,"extensions":["cdfx"]},"application/cdmi-capability":{"source":"iana","extensions":["cdmia"]},"application/cdmi-container":{"source":"iana","extensions":["cdmic"]},"application/cdmi-domain":{"source":"iana","extensions":["cdmid"]},"application/cdmi-object":{"source":"iana","extensions":["cdmio"]},"application/cdmi-queue":{"source":"iana","extensions":["cdmiq"]},"application/cdni":{"source":"iana"},"application/cea":{"source":"iana"},"application/cea-2018+xml":{"source":"iana","compressible":true},"application/cellml+xml":{"source":"iana","compressible":true},"application/cfw":{"source":"iana"},"application/clr":{"source":"iana"},"application/clue+xml":{"source":"iana","compressible":true},"application/clue_info+xml":{"source":"iana","compressible":true},"application/cms":{"source":"iana"},"application/cnrp+xml":{"source":"iana","compressible":true},"application/coap-group+json":{"source":"iana","compressible":true},"application/coap-payload":{"source":"iana"},"application/commonground":{"source":"iana"},"application/conference-info+xml":{"source":"iana","compressible":true},"application/cose":{"source":"iana"},"application/cose-key":{"source":"iana"},"application/cose-key-set":{"source":"iana"},"application/cpl+xml":{"source":"iana","compressible":true},"application/csrattrs":{"source":"iana"},"application/csta+xml":{"source":"iana","compressible":true},"application/cstadata+xml":{"source":"iana","compressible":true},"application/csvm+json":{"source":"iana","compressible":true},"application/cu-seeme":{"source":"apache","extensions":["cu"]},"application/cwt":{"source":"iana"},"application/cybercash":{"source":"iana"},"application/dart":{"compressible":true},"application/dash+xml":{"source":"iana","compressible":true,"extensions":["mpd"]},"application/dashdelta":{"source":"iana"},"application/davmount+xml":{"source":"iana","compressible":true,"extensions":["davmount"]},"application/dca-rft":{"source":"iana"},"application/dcd":{"source":"iana"},"application/dec-dx":{"source":"iana"},"application/dialog-info+xml":{"source":"iana","compressible":true},"application/dicom":{"source":"iana"},"application/dicom+json":{"source":"iana","compressible":true},"application/dicom+xml":{"source":"iana","compressible":true},"application/dii":{"source":"iana"},"application/dit":{"source":"iana"},"application/dns":{"source":"iana"},"application/dns+json":{"source":"iana","compressible":true},"application/dns-message":{"source":"iana"},"application/docbook+xml":{"source":"apache","compressible":true,"extensions":["dbk"]},"application/dots+cbor":{"source":"iana"},"application/dskpp+xml":{"source":"iana","compressible":true},"application/dssc+der":{"source":"iana","extensions":["dssc"]},"application/dssc+xml":{"source":"iana","compressible":true,"extensions":["xdssc"]},"application/dvcs":{"source":"iana"},"application/ecmascript":{"source":"iana","compressible":true,"extensions":["es","ecma"]},"application/edi-consent":{"source":"iana"},"application/edi-x12":{"source":"iana","compressible":false},"application/edifact":{"source":"iana","compressible":false},"application/efi":{"source":"iana"},"application/elm+json":{"source":"iana","charset":"UTF-8","compressible":true},"application/elm+xml":{"source":"iana","compressible":true},"application/emergencycalldata.cap+xml":{"source":"iana","charset":"UTF-8","compressible":true},"application/emergencycalldata.comment+xml":{"source":"iana","compressible":true},"application/emergencycalldata.control+xml":{"source":"iana","compressible":true},"application/emergencycalldata.deviceinfo+xml":{"source":"iana","compressible":true},"application/emergencycalldata.ecall.msd":{"source":"iana"},"application/emergencycalldata.providerinfo+xml":{"source":"iana","compressible":true},"application/emergencycalldata.serviceinfo+xml":{"source":"iana","compressible":true},"application/emergencycalldata.subscriberinfo+xml":{"source":"iana","compressible":true},"application/emergencycalldata.veds+xml":{"source":"iana","compressible":true},"application/emma+xml":{"source":"iana","compressible":true,"extensions":["emma"]},"application/emotionml+xml":{"source":"iana","compressible":true,"extensions":["emotionml"]},"application/encaprtp":{"source":"iana"},"application/epp+xml":{"source":"iana","compressible":true},"application/epub+zip":{"source":"iana","compressible":false,"extensions":["epub"]},"application/eshop":{"source":"iana"},"application/exi":{"source":"iana","extensions":["exi"]},"application/expect-ct-report+json":{"source":"iana","compressible":true},"application/express":{"source":"iana","extensions":["exp"]},"application/fastinfoset":{"source":"iana"},"application/fastsoap":{"source":"iana"},"application/fdt+xml":{"source":"iana","compressible":true,"extensions":["fdt"]},"application/fhir+json":{"source":"iana","charset":"UTF-8","compressible":true},"application/fhir+xml":{"source":"iana","charset":"UTF-8","compressible":true},"application/fido.trusted-apps+json":{"compressible":true},"application/fits":{"source":"iana"},"application/flexfec":{"source":"iana"},"application/font-sfnt":{"source":"iana"},"application/font-tdpfr":{"source":"iana","extensions":["pfr"]},"application/font-woff":{"source":"iana","compressible":false},"application/framework-attributes+xml":{"source":"iana","compressible":true},"application/geo+json":{"source":"iana","compressible":true,"extensions":["geojson"]},"application/geo+json-seq":{"source":"iana"},"application/geopackage+sqlite3":{"source":"iana"},"application/geoxacml+xml":{"source":"iana","compressible":true},"application/gltf-buffer":{"source":"iana"},"application/gml+xml":{"source":"iana","compressible":true,"extensions":["gml"]},"application/gpx+xml":{"source":"apache","compressible":true,"extensions":["gpx"]},"application/gxf":{"source":"apache","extensions":["gxf"]},"application/gzip":{"source":"iana","compressible":false,"extensions":["gz"]},"application/h224":{"source":"iana"},"application/held+xml":{"source":"iana","compressible":true},"application/hjson":{"extensions":["hjson"]},"application/http":{"source":"iana"},"application/hyperstudio":{"source":"iana","extensions":["stk"]},"application/ibe-key-request+xml":{"source":"iana","compressible":true},"application/ibe-pkg-reply+xml":{"source":"iana","compressible":true},"application/ibe-pp-data":{"source":"iana"},"application/iges":{"source":"iana"},"application/im-iscomposing+xml":{"source":"iana","charset":"UTF-8","compressible":true},"application/index":{"source":"iana"},"application/index.cmd":{"source":"iana"},"application/index.obj":{"source":"iana"},"application/index.response":{"source":"iana"},"application/index.vnd":{"source":"iana"},"application/inkml+xml":{"source":"iana","compressible":true,"extensions":["ink","inkml"]},"application/iotp":{"source":"iana"},"application/ipfix":{"source":"iana","extensions":["ipfix"]},"application/ipp":{"source":"iana"},"application/isup":{"source":"iana"},"application/its+xml":{"source":"iana","compressible":true,"extensions":["its"]},"application/java-archive":{"source":"apache","compressible":false,"extensions":["jar","war","ear"]},"application/java-serialized-object":{"source":"apache","compressible":false,"extensions":["ser"]},"application/java-vm":{"source":"apache","compressible":false,"extensions":["class"]},"application/javascript":{"source":"iana","charset":"UTF-8","compressible":true,"extensions":["js","mjs"]},"application/jf2feed+json":{"source":"iana","compressible":true},"application/jose":{"source":"iana"},"application/jose+json":{"source":"iana","compressible":true},"application/jrd+json":{"source":"iana","compressible":true},"application/jscalendar+json":{"source":"iana","compressible":true},"application/json":{"source":"iana","charset":"UTF-8","compressible":true,"extensions":["json","map"]},"application/json-patch+json":{"source":"iana","compressible":true},"application/json-seq":{"source":"iana"},"application/json5":{"extensions":["json5"]},"application/jsonml+json":{"source":"apache","compressible":true,"extensions":["jsonml"]},"application/jwk+json":{"source":"iana","compressible":true},"application/jwk-set+json":{"source":"iana","compressible":true},"application/jwt":{"source":"iana"},"application/kpml-request+xml":{"source":"iana","compressible":true},"application/kpml-response+xml":{"source":"iana","compressible":true},"application/ld+json":{"source":"iana","compressible":true,"extensions":["jsonld"]},"application/lgr+xml":{"source":"iana","compressible":true,"extensions":["lgr"]},"application/link-format":{"source":"iana"},"application/load-control+xml":{"source":"iana","compressible":true},"application/lost+xml":{"source":"iana","compressible":true,"extensions":["lostxml"]},"application/lostsync+xml":{"source":"iana","compressible":true},"application/lpf+zip":{"source":"iana","compressible":false},"application/lxf":{"source":"iana"},"application/mac-binhex40":{"source":"iana","extensions":["hqx"]},"application/mac-compactpro":{"source":"apache","extensions":["cpt"]},"application/macwriteii":{"source":"iana"},"application/mads+xml":{"source":"iana","compressible":true,"extensions":["mads"]},"application/manifest+json":{"source":"iana","charset":"UTF-8","compressible":true,"extensions":["webmanifest"]},"application/marc":{"source":"iana","extensions":["mrc"]},"application/marcxml+xml":{"source":"iana","compressible":true,"extensions":["mrcx"]},"application/mathematica":{"source":"iana","extensions":["ma","nb","mb"]},"application/mathml+xml":{"source":"iana","compressible":true,"extensions":["mathml"]},"application/mathml-content+xml":{"source":"iana","compressible":true},"application/mathml-presentation+xml":{"source":"iana","compressible":true},"application/mbms-associated-procedure-description+xml":{"source":"iana","compressible":true},"application/mbms-deregister+xml":{"source":"iana","compressible":true},"application/mbms-envelope+xml":{"source":"iana","compressible":true},"application/mbms-msk+xml":{"source":"iana","compressible":true},"application/mbms-msk-response+xml":{"source":"iana","compressible":true},"application/mbms-protection-description+xml":{"source":"iana","compressible":true},"application/mbms-reception-report+xml":{"source":"iana","compressible":true},"application/mbms-register+xml":{"source":"iana","compressible":true},"application/mbms-register-response+xml":{"source":"iana","compressible":true},"application/mbms-schedule+xml":{"source":"iana","compressible":true},"application/mbms-user-service-description+xml":{"source":"iana","compressible":true},"application/mbox":{"source":"iana","extensions":["mbox"]},"application/media-policy-dataset+xml":{"source":"iana","compressible":true},"application/media_control+xml":{"source":"iana","compressible":true},"application/mediaservercontrol+xml":{"source":"iana","compressible":true,"extensions":["mscml"]},"application/merge-patch+json":{"source":"iana","compressible":true},"application/metalink+xml":{"source":"apache","compressible":true,"extensions":["metalink"]},"application/metalink4+xml":{"source":"iana","compressible":true,"extensions":["meta4"]},"application/mets+xml":{"source":"iana","compressible":true,"extensions":["mets"]},"application/mf4":{"source":"iana"},"application/mikey":{"source":"iana"},"application/mipc":{"source":"iana"},"application/missing-blocks+cbor-seq":{"source":"iana"},"application/mmt-aei+xml":{"source":"iana","compressible":true,"extensions":["maei"]},"application/mmt-usd+xml":{"source":"iana","compressible":true,"extensions":["musd"]},"application/mods+xml":{"source":"iana","compressible":true,"extensions":["mods"]},"application/moss-keys":{"source":"iana"},"application/moss-signature":{"source":"iana"},"application/mosskey-data":{"source":"iana"},"application/mosskey-request":{"source":"iana"},"application/mp21":{"source":"iana","extensions":["m21","mp21"]},"application/mp4":{"source":"iana","extensions":["mp4s","m4p"]},"application/mpeg4-generic":{"source":"iana"},"application/mpeg4-iod":{"source":"iana"},"application/mpeg4-iod-xmt":{"source":"iana"},"application/mrb-consumer+xml":{"source":"iana","compressible":true},"application/mrb-publish+xml":{"source":"iana","compressible":true},"application/msc-ivr+xml":{"source":"iana","charset":"UTF-8","compressible":true},"application/msc-mixer+xml":{"source":"iana","charset":"UTF-8","compressible":true},"application/msword":{"source":"iana","compressible":false,"extensions":["doc","dot"]},"application/mud+json":{"source":"iana","compressible":true},"application/multipart-core":{"source":"iana"},"application/mxf":{"source":"iana","extensions":["mxf"]},"application/n-quads":{"source":"iana","extensions":["nq"]},"application/n-triples":{"source":"iana","extensions":["nt"]},"application/nasdata":{"source":"iana"},"application/news-checkgroups":{"source":"iana","charset":"US-ASCII"},"application/news-groupinfo":{"source":"iana","charset":"US-ASCII"},"application/news-transmission":{"source":"iana"},"application/nlsml+xml":{"source":"iana","compressible":true},"application/node":{"source":"iana","extensions":["cjs"]},"application/nss":{"source":"iana"},"application/oauth-authz-req+jwt":{"source":"iana"},"application/ocsp-request":{"source":"iana"},"application/ocsp-response":{"source":"iana"},"application/octet-stream":{"source":"iana","compressible":false,"extensions":["bin","dms","lrf","mar","so","dist","distz","pkg","bpk","dump","elc","deploy","exe","dll","deb","dmg","iso","img","msi","msp","msm","buffer"]},"application/oda":{"source":"iana","extensions":["oda"]},"application/odm+xml":{"source":"iana","compressible":true},"application/odx":{"source":"iana"},"application/oebps-package+xml":{"source":"iana","compressible":true,"extensions":["opf"]},"application/ogg":{"source":"iana","compressible":false,"extensions":["ogx"]},"application/omdoc+xml":{"source":"apache","compressible":true,"extensions":["omdoc"]},"application/onenote":{"source":"apache","extensions":["onetoc","onetoc2","onetmp","onepkg"]},"application/opc-nodeset+xml":{"source":"iana","compressible":true},"application/oscore":{"source":"iana"},"application/oxps":{"source":"iana","extensions":["oxps"]},"application/p21":{"source":"iana"},"application/p21+zip":{"source":"iana","compressible":false},"application/p2p-overlay+xml":{"source":"iana","compressible":true,"extensions":["relo"]},"application/parityfec":{"source":"iana"},"application/passport":{"source":"iana"},"application/patch-ops-error+xml":{"source":"iana","compressible":true,"extensions":["xer"]},"application/pdf":{"source":"iana","compressible":false,"extensions":["pdf"]},"application/pdx":{"source":"iana"},"application/pem-certificate-chain":{"source":"iana"},"application/pgp-encrypted":{"source":"iana","compressible":false,"extensions":["pgp"]},"application/pgp-keys":{"source":"iana"},"application/pgp-signature":{"source":"iana","extensions":["asc","sig"]},"application/pics-rules":{"source":"apache","extensions":["prf"]},"application/pidf+xml":{"source":"iana","charset":"UTF-8","compressible":true},"application/pidf-diff+xml":{"source":"iana","charset":"UTF-8","compressible":true},"application/pkcs10":{"source":"iana","extensions":["p10"]},"application/pkcs12":{"source":"iana"},"application/pkcs7-mime":{"source":"iana","extensions":["p7m","p7c"]},"application/pkcs7-signature":{"source":"iana","extensions":["p7s"]},"application/pkcs8":{"source":"iana","extensions":["p8"]},"application/pkcs8-encrypted":{"source":"iana"},"application/pkix-attr-cert":{"source":"iana","extensions":["ac"]},"application/pkix-cert":{"source":"iana","extensions":["cer"]},"application/pkix-crl":{"source":"iana","extensions":["crl"]},"application/pkix-pkipath":{"source":"iana","extensions":["pkipath"]},"application/pkixcmp":{"source":"iana","extensions":["pki"]},"application/pls+xml":{"source":"iana","compressible":true,"extensions":["pls"]},"application/poc-settings+xml":{"source":"iana","charset":"UTF-8","compressible":true},"application/postscript":{"source":"iana","compressible":true,"extensions":["ai","eps","ps"]},"application/ppsp-tracker+json":{"source":"iana","compressible":true},"application/problem+json":{"source":"iana","compressible":true},"application/problem+xml":{"source":"iana","compressible":true},"application/provenance+xml":{"source":"iana","compressible":true,"extensions":["provx"]},"application/prs.alvestrand.titrax-sheet":{"source":"iana"},"application/prs.cww":{"source":"iana","extensions":["cww"]},"application/prs.cyn":{"source":"iana","charset":"7-BIT"},"application/prs.hpub+zip":{"source":"iana","compressible":false},"application/prs.nprend":{"source":"iana"},"application/prs.plucker":{"source":"iana"},"application/prs.rdf-xml-crypt":{"source":"iana"},"application/prs.xsf+xml":{"source":"iana","compressible":true},"application/pskc+xml":{"source":"iana","compressible":true,"extensions":["pskcxml"]},"application/pvd+json":{"source":"iana","compressible":true},"application/qsig":{"source":"iana"},"application/raml+yaml":{"compressible":true,"extensions":["raml"]},"application/raptorfec":{"source":"iana"},"application/rdap+json":{"source":"iana","compressible":true},"application/rdf+xml":{"source":"iana","compressible":true,"extensions":["rdf","owl"]},"application/reginfo+xml":{"source":"iana","compressible":true,"extensions":["rif"]},"application/relax-ng-compact-syntax":{"source":"iana","extensions":["rnc"]},"application/remote-printing":{"source":"iana"},"application/reputon+json":{"source":"iana","compressible":true},"application/resource-lists+xml":{"source":"iana","compressible":true,"extensions":["rl"]},"application/resource-lists-diff+xml":{"source":"iana","compressible":true,"extensions":["rld"]},"application/rfc+xml":{"source":"iana","compressible":true},"application/riscos":{"source":"iana"},"application/rlmi+xml":{"source":"iana","compressible":true},"application/rls-services+xml":{"source":"iana","compressible":true,"extensions":["rs"]},"application/route-apd+xml":{"source":"iana","compressible":true,"extensions":["rapd"]},"application/route-s-tsid+xml":{"source":"iana","compressible":true,"extensions":["sls"]},"application/route-usd+xml":{"source":"iana","compressible":true,"extensions":["rusd"]},"application/rpki-ghostbusters":{"source":"iana","extensions":["gbr"]},"application/rpki-manifest":{"source":"iana","extensions":["mft"]},"application/rpki-publication":{"source":"iana"},"application/rpki-roa":{"source":"iana","extensions":["roa"]},"application/rpki-updown":{"source":"iana"},"application/rsd+xml":{"source":"apache","compressible":true,"extensions":["rsd"]},"application/rss+xml":{"source":"apache","compressible":true,"extensions":["rss"]},"application/rtf":{"source":"iana","compressible":true,"extensions":["rtf"]},"application/rtploopback":{"source":"iana"},"application/rtx":{"source":"iana"},"application/samlassertion+xml":{"source":"iana","compressible":true},"application/samlmetadata+xml":{"source":"iana","compressible":true},"application/sarif+json":{"source":"iana","compressible":true},"application/sarif-external-properties+json":{"source":"iana","compressible":true},"application/sbe":{"source":"iana"},"application/sbml+xml":{"source":"iana","compressible":true,"extensions":["sbml"]},"application/scaip+xml":{"source":"iana","compressible":true},"application/scim+json":{"source":"iana","compressible":true},"application/scvp-cv-request":{"source":"iana","extensions":["scq"]},"application/scvp-cv-response":{"source":"iana","extensions":["scs"]},"application/scvp-vp-request":{"source":"iana","extensions":["spq"]},"application/scvp-vp-response":{"source":"iana","extensions":["spp"]},"application/sdp":{"source":"iana","extensions":["sdp"]},"application/secevent+jwt":{"source":"iana"},"application/senml+cbor":{"source":"iana"},"application/senml+json":{"source":"iana","compressible":true},"application/senml+xml":{"source":"iana","compressible":true,"extensions":["senmlx"]},"application/senml-etch+cbor":{"source":"iana"},"application/senml-etch+json":{"source":"iana","compressible":true},"application/senml-exi":{"source":"iana"},"application/sensml+cbor":{"source":"iana"},"application/sensml+json":{"source":"iana","compressible":true},"application/sensml+xml":{"source":"iana","compressible":true,"extensions":["sensmlx"]},"application/sensml-exi":{"source":"iana"},"application/sep+xml":{"source":"iana","compressible":true},"application/sep-exi":{"source":"iana"},"application/session-info":{"source":"iana"},"application/set-payment":{"source":"iana"},"application/set-payment-initiation":{"source":"iana","extensions":["setpay"]},"application/set-registration":{"source":"iana"},"application/set-registration-initiation":{"source":"iana","extensions":["setreg"]},"application/sgml":{"source":"iana"},"application/sgml-open-catalog":{"source":"iana"},"application/shf+xml":{"source":"iana","compressible":true,"extensions":["shf"]},"application/sieve":{"source":"iana","extensions":["siv","sieve"]},"application/simple-filter+xml":{"source":"iana","compressible":true},"application/simple-message-summary":{"source":"iana"},"application/simplesymbolcontainer":{"source":"iana"},"application/sipc":{"source":"iana"},"application/slate":{"source":"iana"},"application/smil":{"source":"iana"},"application/smil+xml":{"source":"iana","compressible":true,"extensions":["smi","smil"]},"application/smpte336m":{"source":"iana"},"application/soap+fastinfoset":{"source":"iana"},"application/soap+xml":{"source":"iana","compressible":true},"application/sparql-query":{"source":"iana","extensions":["rq"]},"application/sparql-results+xml":{"source":"iana","compressible":true,"extensions":["srx"]},"application/spdx+json":{"source":"iana","compressible":true},"application/spirits-event+xml":{"source":"iana","compressible":true},"application/sql":{"source":"iana"},"application/srgs":{"source":"iana","extensions":["gram"]},"application/srgs+xml":{"source":"iana","compressible":true,"extensions":["grxml"]},"application/sru+xml":{"source":"iana","compressible":true,"extensions":["sru"]},"application/ssdl+xml":{"source":"apache","compressible":true,"extensions":["ssdl"]},"application/ssml+xml":{"source":"iana","compressible":true,"extensions":["ssml"]},"application/stix+json":{"source":"iana","compressible":true},"application/swid+xml":{"source":"iana","compressible":true,"extensions":["swidtag"]},"application/tamp-apex-update":{"source":"iana"},"application/tamp-apex-update-confirm":{"source":"iana"},"application/tamp-community-update":{"source":"iana"},"application/tamp-community-update-confirm":{"source":"iana"},"application/tamp-error":{"source":"iana"},"application/tamp-sequence-adjust":{"source":"iana"},"application/tamp-sequence-adjust-confirm":{"source":"iana"},"application/tamp-status-query":{"source":"iana"},"application/tamp-status-response":{"source":"iana"},"application/tamp-update":{"source":"iana"},"application/tamp-update-confirm":{"source":"iana"},"application/tar":{"compressible":true},"application/taxii+json":{"source":"iana","compressible":true},"application/td+json":{"source":"iana","compressible":true},"application/tei+xml":{"source":"iana","compressible":true,"extensions":["tei","teicorpus"]},"application/tetra_isi":{"source":"iana"},"application/thraud+xml":{"source":"iana","compressible":true,"extensions":["tfi"]},"application/timestamp-query":{"source":"iana"},"application/timestamp-reply":{"source":"iana"},"application/timestamped-data":{"source":"iana","extensions":["tsd"]},"application/tlsrpt+gzip":{"source":"iana"},"application/tlsrpt+json":{"source":"iana","compressible":true},"application/tnauthlist":{"source":"iana"},"application/token-introspection+jwt":{"source":"iana"},"application/toml":{"compressible":true,"extensions":["toml"]},"application/trickle-ice-sdpfrag":{"source":"iana"},"application/trig":{"source":"iana","extensions":["trig"]},"application/ttml+xml":{"source":"iana","compressible":true,"extensions":["ttml"]},"application/tve-trigger":{"source":"iana"},"application/tzif":{"source":"iana"},"application/tzif-leap":{"source":"iana"},"application/ubjson":{"compressible":false,"extensions":["ubj"]},"application/ulpfec":{"source":"iana"},"application/urc-grpsheet+xml":{"source":"iana","compressible":true},"application/urc-ressheet+xml":{"source":"iana","compressible":true,"extensions":["rsheet"]},"application/urc-targetdesc+xml":{"source":"iana","compressible":true,"extensions":["td"]},"application/urc-uisocketdesc+xml":{"source":"iana","compressible":true},"application/vcard+json":{"source":"iana","compressible":true},"application/vcard+xml":{"source":"iana","compressible":true},"application/vemmi":{"source":"iana"},"application/vividence.scriptfile":{"source":"apache"},"application/vnd.1000minds.decision-model+xml":{"source":"iana","compressible":true,"extensions":["1km"]},"application/vnd.3gpp-prose+xml":{"source":"iana","compressible":true},"application/vnd.3gpp-prose-pc3ch+xml":{"source":"iana","compressible":true},"application/vnd.3gpp-v2x-local-service-information":{"source":"iana"},"application/vnd.3gpp.5gnas":{"source":"iana"},"application/vnd.3gpp.access-transfer-events+xml":{"source":"iana","compressible":true},"application/vnd.3gpp.bsf+xml":{"source":"iana","compressible":true},"application/vnd.3gpp.gmop+xml":{"source":"iana","compressible":true},"application/vnd.3gpp.gtpc":{"source":"iana"},"application/vnd.3gpp.interworking-data":{"source":"iana"},"application/vnd.3gpp.lpp":{"source":"iana"},"application/vnd.3gpp.mc-signalling-ear":{"source":"iana"},"application/vnd.3gpp.mcdata-affiliation-command+xml":{"source":"iana","compressible":true},"application/vnd.3gpp.mcdata-info+xml":{"source":"iana","compressible":true},"application/vnd.3gpp.mcdata-payload":{"source":"iana"},"application/vnd.3gpp.mcdata-service-config+xml":{"source":"iana","compressible":true},"application/vnd.3gpp.mcdata-signalling":{"source":"iana"},"application/vnd.3gpp.mcdata-ue-config+xml":{"source":"iana","compressible":true},"application/vnd.3gpp.mcdata-user-profile+xml":{"source":"iana","compressible":true},"application/vnd.3gpp.mcptt-affiliation-command+xml":{"source":"iana","compressible":true},"application/vnd.3gpp.mcptt-floor-request+xml":{"source":"iana","compressible":true},"application/vnd.3gpp.mcptt-info+xml":{"source":"iana","compressible":true},"application/vnd.3gpp.mcptt-location-info+xml":{"source":"iana","compressible":true},"application/vnd.3gpp.mcptt-mbms-usage-info+xml":{"source":"iana","compressible":true},"application/vnd.3gpp.mcptt-service-config+xml":{"source":"iana","compressible":true},"application/vnd.3gpp.mcptt-signed+xml":{"source":"iana","compressible":true},"application/vnd.3gpp.mcptt-ue-config+xml":{"source":"iana","compressible":true},"application/vnd.3gpp.mcptt-ue-init-config+xml":{"source":"iana","compressible":true},"application/vnd.3gpp.mcptt-user-profile+xml":{"source":"iana","compressible":true},"application/vnd.3gpp.mcvideo-affiliation-command+xml":{"source":"iana","compressible":true},"application/vnd.3gpp.mcvideo-affiliation-info+xml":{"source":"iana","compressible":true},"application/vnd.3gpp.mcvideo-info+xml":{"source":"iana","compressible":true},"application/vnd.3gpp.mcvideo-location-info+xml":{"source":"iana","compressible":true},"application/vnd.3gpp.mcvideo-mbms-usage-info+xml":{"source":"iana","compressible":true},"application/vnd.3gpp.mcvideo-service-config+xml":{"source":"iana","compressible":true},"application/vnd.3gpp.mcvideo-transmission-request+xml":{"source":"iana","compressible":true},"application/vnd.3gpp.mcvideo-ue-config+xml":{"source":"iana","compressible":true},"application/vnd.3gpp.mcvideo-user-profile+xml":{"source":"iana","compressible":true},"application/vnd.3gpp.mid-call+xml":{"source":"iana","compressible":true},"application/vnd.3gpp.ngap":{"source":"iana"},"application/vnd.3gpp.pfcp":{"source":"iana"},"application/vnd.3gpp.pic-bw-large":{"source":"iana","extensions":["plb"]},"application/vnd.3gpp.pic-bw-small":{"source":"iana","extensions":["psb"]},"application/vnd.3gpp.pic-bw-var":{"source":"iana","extensions":["pvb"]},"application/vnd.3gpp.s1ap":{"source":"iana"},"application/vnd.3gpp.sms":{"source":"iana"},"application/vnd.3gpp.sms+xml":{"source":"iana","compressible":true},"application/vnd.3gpp.srvcc-ext+xml":{"source":"iana","compressible":true},"application/vnd.3gpp.srvcc-info+xml":{"source":"iana","compressible":true},"application/vnd.3gpp.state-and-event-info+xml":{"source":"iana","compressible":true},"application/vnd.3gpp.ussd+xml":{"source":"iana","compressible":true},"application/vnd.3gpp2.bcmcsinfo+xml":{"source":"iana","compressible":true},"application/vnd.3gpp2.sms":{"source":"iana"},"application/vnd.3gpp2.tcap":{"source":"iana","extensions":["tcap"]},"application/vnd.3lightssoftware.imagescal":{"source":"iana"},"application/vnd.3m.post-it-notes":{"source":"iana","extensions":["pwn"]},"application/vnd.accpac.simply.aso":{"source":"iana","extensions":["aso"]},"application/vnd.accpac.simply.imp":{"source":"iana","extensions":["imp"]},"application/vnd.acucobol":{"source":"iana","extensions":["acu"]},"application/vnd.acucorp":{"source":"iana","extensions":["atc","acutc"]},"application/vnd.adobe.air-application-installer-package+zip":{"source":"apache","compressible":false,"extensions":["air"]},"application/vnd.adobe.flash.movie":{"source":"iana"},"application/vnd.adobe.formscentral.fcdt":{"source":"iana","extensions":["fcdt"]},"application/vnd.adobe.fxp":{"source":"iana","extensions":["fxp","fxpl"]},"application/vnd.adobe.partial-upload":{"source":"iana"},"application/vnd.adobe.xdp+xml":{"source":"iana","compressible":true,"extensions":["xdp"]},"application/vnd.adobe.xfdf":{"source":"iana","extensions":["xfdf"]},"application/vnd.aether.imp":{"source":"iana"},"application/vnd.afpc.afplinedata":{"source":"iana"},"application/vnd.afpc.afplinedata-pagedef":{"source":"iana"},"application/vnd.afpc.cmoca-cmresource":{"source":"iana"},"application/vnd.afpc.foca-charset":{"source":"iana"},"application/vnd.afpc.foca-codedfont":{"source":"iana"},"application/vnd.afpc.foca-codepage":{"source":"iana"},"application/vnd.afpc.modca":{"source":"iana"},"application/vnd.afpc.modca-cmtable":{"source":"iana"},"application/vnd.afpc.modca-formdef":{"source":"iana"},"application/vnd.afpc.modca-mediummap":{"source":"iana"},"application/vnd.afpc.modca-objectcontainer":{"source":"iana"},"application/vnd.afpc.modca-overlay":{"source":"iana"},"application/vnd.afpc.modca-pagesegment":{"source":"iana"},"application/vnd.age":{"source":"iana","extensions":["age"]},"application/vnd.ah-barcode":{"source":"iana"},"application/vnd.ahead.space":{"source":"iana","extensions":["ahead"]},"application/vnd.airzip.filesecure.azf":{"source":"iana","extensions":["azf"]},"application/vnd.airzip.filesecure.azs":{"source":"iana","extensions":["azs"]},"application/vnd.amadeus+json":{"source":"iana","compressible":true},"application/vnd.amazon.ebook":{"source":"apache","extensions":["azw"]},"application/vnd.amazon.mobi8-ebook":{"source":"iana"},"application/vnd.americandynamics.acc":{"source":"iana","extensions":["acc"]},"application/vnd.amiga.ami":{"source":"iana","extensions":["ami"]},"application/vnd.amundsen.maze+xml":{"source":"iana","compressible":true},"application/vnd.android.ota":{"source":"iana"},"application/vnd.android.package-archive":{"source":"apache","compressible":false,"extensions":["apk"]},"application/vnd.anki":{"source":"iana"},"application/vnd.anser-web-certificate-issue-initiation":{"source":"iana","extensions":["cii"]},"application/vnd.anser-web-funds-transfer-initiation":{"source":"apache","extensions":["fti"]},"application/vnd.antix.game-component":{"source":"iana","extensions":["atx"]},"application/vnd.apache.arrow.file":{"source":"iana"},"application/vnd.apache.arrow.stream":{"source":"iana"},"application/vnd.apache.thrift.binary":{"source":"iana"},"application/vnd.apache.thrift.compact":{"source":"iana"},"application/vnd.apache.thrift.json":{"source":"iana"},"application/vnd.api+json":{"source":"iana","compressible":true},"application/vnd.aplextor.warrp+json":{"source":"iana","compressible":true},"application/vnd.apothekende.reservation+json":{"source":"iana","compressible":true},"application/vnd.apple.installer+xml":{"source":"iana","compressible":true,"extensions":["mpkg"]},"application/vnd.apple.keynote":{"source":"iana","extensions":["key"]},"application/vnd.apple.mpegurl":{"source":"iana","extensions":["m3u8"]},"application/vnd.apple.numbers":{"source":"iana","extensions":["numbers"]},"application/vnd.apple.pages":{"source":"iana","extensions":["pages"]},"application/vnd.apple.pkpass":{"compressible":false,"extensions":["pkpass"]},"application/vnd.arastra.swi":{"source":"iana"},"application/vnd.aristanetworks.swi":{"source":"iana","extensions":["swi"]},"application/vnd.artisan+json":{"source":"iana","compressible":true},"application/vnd.artsquare":{"source":"iana"},"application/vnd.astraea-software.iota":{"source":"iana","extensions":["iota"]},"application/vnd.audiograph":{"source":"iana","extensions":["aep"]},"application/vnd.autopackage":{"source":"iana"},"application/vnd.avalon+json":{"source":"iana","compressible":true},"application/vnd.avistar+xml":{"source":"iana","compressible":true},"application/vnd.balsamiq.bmml+xml":{"source":"iana","compressible":true,"extensions":["bmml"]},"application/vnd.balsamiq.bmpr":{"source":"iana"},"application/vnd.banana-accounting":{"source":"iana"},"application/vnd.bbf.usp.error":{"source":"iana"},"application/vnd.bbf.usp.msg":{"source":"iana"},"application/vnd.bbf.usp.msg+json":{"source":"iana","compressible":true},"application/vnd.bekitzur-stech+json":{"source":"iana","compressible":true},"application/vnd.bint.med-content":{"source":"iana"},"application/vnd.biopax.rdf+xml":{"source":"iana","compressible":true},"application/vnd.blink-idb-value-wrapper":{"source":"iana"},"application/vnd.blueice.multipass":{"source":"iana","extensions":["mpm"]},"application/vnd.bluetooth.ep.oob":{"source":"iana"},"application/vnd.bluetooth.le.oob":{"source":"iana"},"application/vnd.bmi":{"source":"iana","extensions":["bmi"]},"application/vnd.bpf":{"source":"iana"},"application/vnd.bpf3":{"source":"iana"},"application/vnd.businessobjects":{"source":"iana","extensions":["rep"]},"application/vnd.byu.uapi+json":{"source":"iana","compressible":true},"application/vnd.cab-jscript":{"source":"iana"},"application/vnd.canon-cpdl":{"source":"iana"},"application/vnd.canon-lips":{"source":"iana"},"application/vnd.capasystems-pg+json":{"source":"iana","compressible":true},"application/vnd.cendio.thinlinc.clientconf":{"source":"iana"},"application/vnd.century-systems.tcp_stream":{"source":"iana"},"application/vnd.chemdraw+xml":{"source":"iana","compressible":true,"extensions":["cdxml"]},"application/vnd.chess-pgn":{"source":"iana"},"application/vnd.chipnuts.karaoke-mmd":{"source":"iana","extensions":["mmd"]},"application/vnd.ciedi":{"source":"iana"},"application/vnd.cinderella":{"source":"iana","extensions":["cdy"]},"application/vnd.cirpack.isdn-ext":{"source":"iana"},"application/vnd.citationstyles.style+xml":{"source":"iana","compressible":true,"extensions":["csl"]},"application/vnd.claymore":{"source":"iana","extensions":["cla"]},"application/vnd.cloanto.rp9":{"source":"iana","extensions":["rp9"]},"application/vnd.clonk.c4group":{"source":"iana","extensions":["c4g","c4d","c4f","c4p","c4u"]},"application/vnd.cluetrust.cartomobile-config":{"source":"iana","extensions":["c11amc"]},"application/vnd.cluetrust.cartomobile-config-pkg":{"source":"iana","extensions":["c11amz"]},"application/vnd.coffeescript":{"source":"iana"},"application/vnd.collabio.xodocuments.document":{"source":"iana"},"application/vnd.collabio.xodocuments.document-template":{"source":"iana"},"application/vnd.collabio.xodocuments.presentation":{"source":"iana"},"application/vnd.collabio.xodocuments.presentation-template":{"source":"iana"},"application/vnd.collabio.xodocuments.spreadsheet":{"source":"iana"},"application/vnd.collabio.xodocuments.spreadsheet-template":{"source":"iana"},"application/vnd.collection+json":{"source":"iana","compressible":true},"application/vnd.collection.doc+json":{"source":"iana","compressible":true},"application/vnd.collection.next+json":{"source":"iana","compressible":true},"application/vnd.comicbook+zip":{"source":"iana","compressible":false},"application/vnd.comicbook-rar":{"source":"iana"},"application/vnd.commerce-battelle":{"source":"iana"},"application/vnd.commonspace":{"source":"iana","extensions":["csp"]},"application/vnd.contact.cmsg":{"source":"iana","extensions":["cdbcmsg"]},"application/vnd.coreos.ignition+json":{"source":"iana","compressible":true},"application/vnd.cosmocaller":{"source":"iana","extensions":["cmc"]},"application/vnd.crick.clicker":{"source":"iana","extensions":["clkx"]},"application/vnd.crick.clicker.keyboard":{"source":"iana","extensions":["clkk"]},"application/vnd.crick.clicker.palette":{"source":"iana","extensions":["clkp"]},"application/vnd.crick.clicker.template":{"source":"iana","extensions":["clkt"]},"application/vnd.crick.clicker.wordbank":{"source":"iana","extensions":["clkw"]},"application/vnd.criticaltools.wbs+xml":{"source":"iana","compressible":true,"extensions":["wbs"]},"application/vnd.cryptii.pipe+json":{"source":"iana","compressible":true},"application/vnd.crypto-shade-file":{"source":"iana"},"application/vnd.cryptomator.encrypted":{"source":"iana"},"application/vnd.cryptomator.vault":{"source":"iana"},"application/vnd.ctc-posml":{"source":"iana","extensions":["pml"]},"application/vnd.ctct.ws+xml":{"source":"iana","compressible":true},"application/vnd.cups-pdf":{"source":"iana"},"application/vnd.cups-postscript":{"source":"iana"},"application/vnd.cups-ppd":{"source":"iana","extensions":["ppd"]},"application/vnd.cups-raster":{"source":"iana"},"application/vnd.cups-raw":{"source":"iana"},"application/vnd.curl":{"source":"iana"},"application/vnd.curl.car":{"source":"apache","extensions":["car"]},"application/vnd.curl.pcurl":{"source":"apache","extensions":["pcurl"]},"application/vnd.cyan.dean.root+xml":{"source":"iana","compressible":true},"application/vnd.cybank":{"source":"iana"},"application/vnd.cyclonedx+json":{"source":"iana","compressible":true},"application/vnd.cyclonedx+xml":{"source":"iana","compressible":true},"application/vnd.d2l.coursepackage1p0+zip":{"source":"iana","compressible":false},"application/vnd.d3m-dataset":{"source":"iana"},"application/vnd.d3m-problem":{"source":"iana"},"application/vnd.dart":{"source":"iana","compressible":true,"extensions":["dart"]},"application/vnd.data-vision.rdz":{"source":"iana","extensions":["rdz"]},"application/vnd.datapackage+json":{"source":"iana","compressible":true},"application/vnd.dataresource+json":{"source":"iana","compressible":true},"application/vnd.dbf":{"source":"iana","extensions":["dbf"]},"application/vnd.debian.binary-package":{"source":"iana"},"application/vnd.dece.data":{"source":"iana","extensions":["uvf","uvvf","uvd","uvvd"]},"application/vnd.dece.ttml+xml":{"source":"iana","compressible":true,"extensions":["uvt","uvvt"]},"application/vnd.dece.unspecified":{"source":"iana","extensions":["uvx","uvvx"]},"application/vnd.dece.zip":{"source":"iana","extensions":["uvz","uvvz"]},"application/vnd.denovo.fcselayout-link":{"source":"iana","extensions":["fe_launch"]},"application/vnd.desmume.movie":{"source":"iana"},"application/vnd.dir-bi.plate-dl-nosuffix":{"source":"iana"},"application/vnd.dm.delegation+xml":{"source":"iana","compressible":true},"application/vnd.dna":{"source":"iana","extensions":["dna"]},"application/vnd.document+json":{"source":"iana","compressible":true},"application/vnd.dolby.mlp":{"source":"apache","extensions":["mlp"]},"application/vnd.dolby.mobile.1":{"source":"iana"},"application/vnd.dolby.mobile.2":{"source":"iana"},"application/vnd.doremir.scorecloud-binary-document":{"source":"iana"},"application/vnd.dpgraph":{"source":"iana","extensions":["dpg"]},"application/vnd.dreamfactory":{"source":"iana","extensions":["dfac"]},"application/vnd.drive+json":{"source":"iana","compressible":true},"application/vnd.ds-keypoint":{"source":"apache","extensions":["kpxx"]},"application/vnd.dtg.local":{"source":"iana"},"application/vnd.dtg.local.flash":{"source":"iana"},"application/vnd.dtg.local.html":{"source":"iana"},"application/vnd.dvb.ait":{"source":"iana","extensions":["ait"]},"application/vnd.dvb.dvbisl+xml":{"source":"iana","compressible":true},"application/vnd.dvb.dvbj":{"source":"iana"},"application/vnd.dvb.esgcontainer":{"source":"iana"},"application/vnd.dvb.ipdcdftnotifaccess":{"source":"iana"},"application/vnd.dvb.ipdcesgaccess":{"source":"iana"},"application/vnd.dvb.ipdcesgaccess2":{"source":"iana"},"application/vnd.dvb.ipdcesgpdd":{"source":"iana"},"application/vnd.dvb.ipdcroaming":{"source":"iana"},"application/vnd.dvb.iptv.alfec-base":{"source":"iana"},"application/vnd.dvb.iptv.alfec-enhancement":{"source":"iana"},"application/vnd.dvb.notif-aggregate-root+xml":{"source":"iana","compressible":true},"application/vnd.dvb.notif-container+xml":{"source":"iana","compressible":true},"application/vnd.dvb.notif-generic+xml":{"source":"iana","compressible":true},"application/vnd.dvb.notif-ia-msglist+xml":{"source":"iana","compressible":true},"application/vnd.dvb.notif-ia-registration-request+xml":{"source":"iana","compressible":true},"application/vnd.dvb.notif-ia-registration-response+xml":{"source":"iana","compressible":true},"application/vnd.dvb.notif-init+xml":{"source":"iana","compressible":true},"application/vnd.dvb.pfr":{"source":"iana"},"application/vnd.dvb.service":{"source":"iana","extensions":["svc"]},"application/vnd.dxr":{"source":"iana"},"application/vnd.dynageo":{"source":"iana","extensions":["geo"]},"application/vnd.dzr":{"source":"iana"},"application/vnd.easykaraoke.cdgdownload":{"source":"iana"},"application/vnd.ecdis-update":{"source":"iana"},"application/vnd.ecip.rlp":{"source":"iana"},"application/vnd.ecowin.chart":{"source":"iana","extensions":["mag"]},"application/vnd.ecowin.filerequest":{"source":"iana"},"application/vnd.ecowin.fileupdate":{"source":"iana"},"application/vnd.ecowin.series":{"source":"iana"},"application/vnd.ecowin.seriesrequest":{"source":"iana"},"application/vnd.ecowin.seriesupdate":{"source":"iana"},"application/vnd.efi.img":{"source":"iana"},"application/vnd.efi.iso":{"source":"iana"},"application/vnd.emclient.accessrequest+xml":{"source":"iana","compressible":true},"application/vnd.enliven":{"source":"iana","extensions":["nml"]},"application/vnd.enphase.envoy":{"source":"iana"},"application/vnd.eprints.data+xml":{"source":"iana","compressible":true},"application/vnd.epson.esf":{"source":"iana","extensions":["esf"]},"application/vnd.epson.msf":{"source":"iana","extensions":["msf"]},"application/vnd.epson.quickanime":{"source":"iana","extensions":["qam"]},"application/vnd.epson.salt":{"source":"iana","extensions":["slt"]},"application/vnd.epson.ssf":{"source":"iana","extensions":["ssf"]},"application/vnd.ericsson.quickcall":{"source":"iana"},"application/vnd.espass-espass+zip":{"source":"iana","compressible":false},"application/vnd.eszigno3+xml":{"source":"iana","compressible":true,"extensions":["es3","et3"]},"application/vnd.etsi.aoc+xml":{"source":"iana","compressible":true},"application/vnd.etsi.asic-e+zip":{"source":"iana","compressible":false},"application/vnd.etsi.asic-s+zip":{"source":"iana","compressible":false},"application/vnd.etsi.cug+xml":{"source":"iana","compressible":true},"application/vnd.etsi.iptvcommand+xml":{"source":"iana","compressible":true},"application/vnd.etsi.iptvdiscovery+xml":{"source":"iana","compressible":true},"application/vnd.etsi.iptvprofile+xml":{"source":"iana","compressible":true},"application/vnd.etsi.iptvsad-bc+xml":{"source":"iana","compressible":true},"application/vnd.etsi.iptvsad-cod+xml":{"source":"iana","compressible":true},"application/vnd.etsi.iptvsad-npvr+xml":{"source":"iana","compressible":true},"application/vnd.etsi.iptvservice+xml":{"source":"iana","compressible":true},"application/vnd.etsi.iptvsync+xml":{"source":"iana","compressible":true},"application/vnd.etsi.iptvueprofile+xml":{"source":"iana","compressible":true},"application/vnd.etsi.mcid+xml":{"source":"iana","compressible":true},"application/vnd.etsi.mheg5":{"source":"iana"},"application/vnd.etsi.overload-control-policy-dataset+xml":{"source":"iana","compressible":true},"application/vnd.etsi.pstn+xml":{"source":"iana","compressible":true},"application/vnd.etsi.sci+xml":{"source":"iana","compressible":true},"application/vnd.etsi.simservs+xml":{"source":"iana","compressible":true},"application/vnd.etsi.timestamp-token":{"source":"iana"},"application/vnd.etsi.tsl+xml":{"source":"iana","compressible":true},"application/vnd.etsi.tsl.der":{"source":"iana"},"application/vnd.eudora.data":{"source":"iana"},"application/vnd.evolv.ecig.profile":{"source":"iana"},"application/vnd.evolv.ecig.settings":{"source":"iana"},"application/vnd.evolv.ecig.theme":{"source":"iana"},"application/vnd.exstream-empower+zip":{"source":"iana","compressible":false},"application/vnd.exstream-package":{"source":"iana"},"application/vnd.ezpix-album":{"source":"iana","extensions":["ez2"]},"application/vnd.ezpix-package":{"source":"iana","extensions":["ez3"]},"application/vnd.f-secure.mobile":{"source":"iana"},"application/vnd.fastcopy-disk-image":{"source":"iana"},"application/vnd.fdf":{"source":"iana","extensions":["fdf"]},"application/vnd.fdsn.mseed":{"source":"iana","extensions":["mseed"]},"application/vnd.fdsn.seed":{"source":"iana","extensions":["seed","dataless"]},"application/vnd.ffsns":{"source":"iana"},"application/vnd.ficlab.flb+zip":{"source":"iana","compressible":false},"application/vnd.filmit.zfc":{"source":"iana"},"application/vnd.fints":{"source":"iana"},"application/vnd.firemonkeys.cloudcell":{"source":"iana"},"application/vnd.flographit":{"source":"iana","extensions":["gph"]},"application/vnd.fluxtime.clip":{"source":"iana","extensions":["ftc"]},"application/vnd.font-fontforge-sfd":{"source":"iana"},"application/vnd.framemaker":{"source":"iana","extensions":["fm","frame","maker","book"]},"application/vnd.frogans.fnc":{"source":"iana","extensions":["fnc"]},"application/vnd.frogans.ltf":{"source":"iana","extensions":["ltf"]},"application/vnd.fsc.weblaunch":{"source":"iana","extensions":["fsc"]},"application/vnd.fujifilm.fb.docuworks":{"source":"iana"},"application/vnd.fujifilm.fb.docuworks.binder":{"source":"iana"},"application/vnd.fujifilm.fb.docuworks.container":{"source":"iana"},"application/vnd.fujifilm.fb.jfi+xml":{"source":"iana","compressible":true},"application/vnd.fujitsu.oasys":{"source":"iana","extensions":["oas"]},"application/vnd.fujitsu.oasys2":{"source":"iana","extensions":["oa2"]},"application/vnd.fujitsu.oasys3":{"source":"iana","extensions":["oa3"]},"application/vnd.fujitsu.oasysgp":{"source":"iana","extensions":["fg5"]},"application/vnd.fujitsu.oasysprs":{"source":"iana","extensions":["bh2"]},"application/vnd.fujixerox.art-ex":{"source":"iana"},"application/vnd.fujixerox.art4":{"source":"iana"},"application/vnd.fujixerox.ddd":{"source":"iana","extensions":["ddd"]},"application/vnd.fujixerox.docuworks":{"source":"iana","extensions":["xdw"]},"application/vnd.fujixerox.docuworks.binder":{"source":"iana","extensions":["xbd"]},"application/vnd.fujixerox.docuworks.container":{"source":"iana"},"application/vnd.fujixerox.hbpl":{"source":"iana"},"application/vnd.fut-misnet":{"source":"iana"},"application/vnd.futoin+cbor":{"source":"iana"},"application/vnd.futoin+json":{"source":"iana","compressible":true},"application/vnd.fuzzysheet":{"source":"iana","extensions":["fzs"]},"application/vnd.genomatix.tuxedo":{"source":"iana","extensions":["txd"]},"application/vnd.gentics.grd+json":{"source":"iana","compressible":true},"application/vnd.geo+json":{"source":"iana","compressible":true},"application/vnd.geocube+xml":{"source":"iana","compressible":true},"application/vnd.geogebra.file":{"source":"iana","extensions":["ggb"]},"application/vnd.geogebra.slides":{"source":"iana"},"application/vnd.geogebra.tool":{"source":"iana","extensions":["ggt"]},"application/vnd.geometry-explorer":{"source":"iana","extensions":["gex","gre"]},"application/vnd.geonext":{"source":"iana","extensions":["gxt"]},"application/vnd.geoplan":{"source":"iana","extensions":["g2w"]},"application/vnd.geospace":{"source":"iana","extensions":["g3w"]},"application/vnd.gerber":{"source":"iana"},"application/vnd.globalplatform.card-content-mgt":{"source":"iana"},"application/vnd.globalplatform.card-content-mgt-response":{"source":"iana"},"application/vnd.gmx":{"source":"iana","extensions":["gmx"]},"application/vnd.google-apps.document":{"compressible":false,"extensions":["gdoc"]},"application/vnd.google-apps.presentation":{"compressible":false,"extensions":["gslides"]},"application/vnd.google-apps.spreadsheet":{"compressible":false,"extensions":["gsheet"]},"application/vnd.google-earth.kml+xml":{"source":"iana","compressible":true,"extensions":["kml"]},"application/vnd.google-earth.kmz":{"source":"iana","compressible":false,"extensions":["kmz"]},"application/vnd.gov.sk.e-form+xml":{"source":"iana","compressible":true},"application/vnd.gov.sk.e-form+zip":{"source":"iana","compressible":false},"application/vnd.gov.sk.xmldatacontainer+xml":{"source":"iana","compressible":true},"application/vnd.grafeq":{"source":"iana","extensions":["gqf","gqs"]},"application/vnd.gridmp":{"source":"iana"},"application/vnd.groove-account":{"source":"iana","extensions":["gac"]},"application/vnd.groove-help":{"source":"iana","extensions":["ghf"]},"application/vnd.groove-identity-message":{"source":"iana","extensions":["gim"]},"application/vnd.groove-injector":{"source":"iana","extensions":["grv"]},"application/vnd.groove-tool-message":{"source":"iana","extensions":["gtm"]},"application/vnd.groove-tool-template":{"source":"iana","extensions":["tpl"]},"application/vnd.groove-vcard":{"source":"iana","extensions":["vcg"]},"application/vnd.hal+json":{"source":"iana","compressible":true},"application/vnd.hal+xml":{"source":"iana","compressible":true,"extensions":["hal"]},"application/vnd.handheld-entertainment+xml":{"source":"iana","compressible":true,"extensions":["zmm"]},"application/vnd.hbci":{"source":"iana","extensions":["hbci"]},"application/vnd.hc+json":{"source":"iana","compressible":true},"application/vnd.hcl-bireports":{"source":"iana"},"application/vnd.hdt":{"source":"iana"},"application/vnd.heroku+json":{"source":"iana","compressible":true},"application/vnd.hhe.lesson-player":{"source":"iana","extensions":["les"]},"application/vnd.hp-hpgl":{"source":"iana","extensions":["hpgl"]},"application/vnd.hp-hpid":{"source":"iana","extensions":["hpid"]},"application/vnd.hp-hps":{"source":"iana","extensions":["hps"]},"application/vnd.hp-jlyt":{"source":"iana","extensions":["jlt"]},"application/vnd.hp-pcl":{"source":"iana","extensions":["pcl"]},"application/vnd.hp-pclxl":{"source":"iana","extensions":["pclxl"]},"application/vnd.httphone":{"source":"iana"},"application/vnd.hydrostatix.sof-data":{"source":"iana","extensions":["sfd-hdstx"]},"application/vnd.hyper+json":{"source":"iana","compressible":true},"application/vnd.hyper-item+json":{"source":"iana","compressible":true},"application/vnd.hyperdrive+json":{"source":"iana","compressible":true},"application/vnd.hzn-3d-crossword":{"source":"iana"},"application/vnd.ibm.afplinedata":{"source":"iana"},"application/vnd.ibm.electronic-media":{"source":"iana"},"application/vnd.ibm.minipay":{"source":"iana","extensions":["mpy"]},"application/vnd.ibm.modcap":{"source":"iana","extensions":["afp","listafp","list3820"]},"application/vnd.ibm.rights-management":{"source":"iana","extensions":["irm"]},"application/vnd.ibm.secure-container":{"source":"iana","extensions":["sc"]},"application/vnd.iccprofile":{"source":"iana","extensions":["icc","icm"]},"application/vnd.ieee.1905":{"source":"iana"},"application/vnd.igloader":{"source":"iana","extensions":["igl"]},"application/vnd.imagemeter.folder+zip":{"source":"iana","compressible":false},"application/vnd.imagemeter.image+zip":{"source":"iana","compressible":false},"application/vnd.immervision-ivp":{"source":"iana","extensions":["ivp"]},"application/vnd.immervision-ivu":{"source":"iana","extensions":["ivu"]},"application/vnd.ims.imsccv1p1":{"source":"iana"},"application/vnd.ims.imsccv1p2":{"source":"iana"},"application/vnd.ims.imsccv1p3":{"source":"iana"},"application/vnd.ims.lis.v2.result+json":{"source":"iana","compressible":true},"application/vnd.ims.lti.v2.toolconsumerprofile+json":{"source":"iana","compressible":true},"application/vnd.ims.lti.v2.toolproxy+json":{"source":"iana","compressible":true},"application/vnd.ims.lti.v2.toolproxy.id+json":{"source":"iana","compressible":true},"application/vnd.ims.lti.v2.toolsettings+json":{"source":"iana","compressible":true},"application/vnd.ims.lti.v2.toolsettings.simple+json":{"source":"iana","compressible":true},"application/vnd.informedcontrol.rms+xml":{"source":"iana","compressible":true},"application/vnd.informix-visionary":{"source":"iana"},"application/vnd.infotech.project":{"source":"iana"},"application/vnd.infotech.project+xml":{"source":"iana","compressible":true},"application/vnd.innopath.wamp.notification":{"source":"iana"},"application/vnd.insors.igm":{"source":"iana","extensions":["igm"]},"application/vnd.intercon.formnet":{"source":"iana","extensions":["xpw","xpx"]},"application/vnd.intergeo":{"source":"iana","extensions":["i2g"]},"application/vnd.intertrust.digibox":{"source":"iana"},"application/vnd.intertrust.nncp":{"source":"iana"},"application/vnd.intu.qbo":{"source":"iana","extensions":["qbo"]},"application/vnd.intu.qfx":{"source":"iana","extensions":["qfx"]},"application/vnd.iptc.g2.catalogitem+xml":{"source":"iana","compressible":true},"application/vnd.iptc.g2.conceptitem+xml":{"source":"iana","compressible":true},"application/vnd.iptc.g2.knowledgeitem+xml":{"source":"iana","compressible":true},"application/vnd.iptc.g2.newsitem+xml":{"source":"iana","compressible":true},"application/vnd.iptc.g2.newsmessage+xml":{"source":"iana","compressible":true},"application/vnd.iptc.g2.packageitem+xml":{"source":"iana","compressible":true},"application/vnd.iptc.g2.planningitem+xml":{"source":"iana","compressible":true},"application/vnd.ipunplugged.rcprofile":{"source":"iana","extensions":["rcprofile"]},"application/vnd.irepository.package+xml":{"source":"iana","compressible":true,"extensions":["irp"]},"application/vnd.is-xpr":{"source":"iana","extensions":["xpr"]},"application/vnd.isac.fcs":{"source":"iana","extensions":["fcs"]},"application/vnd.iso11783-10+zip":{"source":"iana","compressible":false},"application/vnd.jam":{"source":"iana","extensions":["jam"]},"application/vnd.japannet-directory-service":{"source":"iana"},"application/vnd.japannet-jpnstore-wakeup":{"source":"iana"},"application/vnd.japannet-payment-wakeup":{"source":"iana"},"application/vnd.japannet-registration":{"source":"iana"},"application/vnd.japannet-registration-wakeup":{"source":"iana"},"application/vnd.japannet-setstore-wakeup":{"source":"iana"},"application/vnd.japannet-verification":{"source":"iana"},"application/vnd.japannet-verification-wakeup":{"source":"iana"},"application/vnd.jcp.javame.midlet-rms":{"source":"iana","extensions":["rms"]},"application/vnd.jisp":{"source":"iana","extensions":["jisp"]},"application/vnd.joost.joda-archive":{"source":"iana","extensions":["joda"]},"application/vnd.jsk.isdn-ngn":{"source":"iana"},"application/vnd.kahootz":{"source":"iana","extensions":["ktz","ktr"]},"application/vnd.kde.karbon":{"source":"iana","extensions":["karbon"]},"application/vnd.kde.kchart":{"source":"iana","extensions":["chrt"]},"application/vnd.kde.kformula":{"source":"iana","extensions":["kfo"]},"application/vnd.kde.kivio":{"source":"iana","extensions":["flw"]},"application/vnd.kde.kontour":{"source":"iana","extensions":["kon"]},"application/vnd.kde.kpresenter":{"source":"iana","extensions":["kpr","kpt"]},"application/vnd.kde.kspread":{"source":"iana","extensions":["ksp"]},"application/vnd.kde.kword":{"source":"iana","extensions":["kwd","kwt"]},"application/vnd.kenameaapp":{"source":"iana","extensions":["htke"]},"application/vnd.kidspiration":{"source":"iana","extensions":["kia"]},"application/vnd.kinar":{"source":"iana","extensions":["kne","knp"]},"application/vnd.koan":{"source":"iana","extensions":["skp","skd","skt","skm"]},"application/vnd.kodak-descriptor":{"source":"iana","extensions":["sse"]},"application/vnd.las":{"source":"iana"},"application/vnd.las.las+json":{"source":"iana","compressible":true},"application/vnd.las.las+xml":{"source":"iana","compressible":true,"extensions":["lasxml"]},"application/vnd.laszip":{"source":"iana"},"application/vnd.leap+json":{"source":"iana","compressible":true},"application/vnd.liberty-request+xml":{"source":"iana","compressible":true},"application/vnd.llamagraphics.life-balance.desktop":{"source":"iana","extensions":["lbd"]},"application/vnd.llamagraphics.life-balance.exchange+xml":{"source":"iana","compressible":true,"extensions":["lbe"]},"application/vnd.logipipe.circuit+zip":{"source":"iana","compressible":false},"application/vnd.loom":{"source":"iana"},"application/vnd.lotus-1-2-3":{"source":"iana","extensions":["123"]},"application/vnd.lotus-approach":{"source":"iana","extensions":["apr"]},"application/vnd.lotus-freelance":{"source":"iana","extensions":["pre"]},"application/vnd.lotus-notes":{"source":"iana","extensions":["nsf"]},"application/vnd.lotus-organizer":{"source":"iana","extensions":["org"]},"application/vnd.lotus-screencam":{"source":"iana","extensions":["scm"]},"application/vnd.lotus-wordpro":{"source":"iana","extensions":["lwp"]},"application/vnd.macports.portpkg":{"source":"iana","extensions":["portpkg"]},"application/vnd.mapbox-vector-tile":{"source":"iana","extensions":["mvt"]},"application/vnd.marlin.drm.actiontoken+xml":{"source":"iana","compressible":true},"application/vnd.marlin.drm.conftoken+xml":{"source":"iana","compressible":true},"application/vnd.marlin.drm.license+xml":{"source":"iana","compressible":true},"application/vnd.marlin.drm.mdcf":{"source":"iana"},"application/vnd.mason+json":{"source":"iana","compressible":true},"application/vnd.maxmind.maxmind-db":{"source":"iana"},"application/vnd.mcd":{"source":"iana","extensions":["mcd"]},"application/vnd.medcalcdata":{"source":"iana","extensions":["mc1"]},"application/vnd.mediastation.cdkey":{"source":"iana","extensions":["cdkey"]},"application/vnd.meridian-slingshot":{"source":"iana"},"application/vnd.mfer":{"source":"iana","extensions":["mwf"]},"application/vnd.mfmp":{"source":"iana","extensions":["mfm"]},"application/vnd.micro+json":{"source":"iana","compressible":true},"application/vnd.micrografx.flo":{"source":"iana","extensions":["flo"]},"application/vnd.micrografx.igx":{"source":"iana","extensions":["igx"]},"application/vnd.microsoft.portable-executable":{"source":"iana"},"application/vnd.microsoft.windows.thumbnail-cache":{"source":"iana"},"application/vnd.miele+json":{"source":"iana","compressible":true},"application/vnd.mif":{"source":"iana","extensions":["mif"]},"application/vnd.minisoft-hp3000-save":{"source":"iana"},"application/vnd.mitsubishi.misty-guard.trustweb":{"source":"iana"},"application/vnd.mobius.daf":{"source":"iana","extensions":["daf"]},"application/vnd.mobius.dis":{"source":"iana","extensions":["dis"]},"application/vnd.mobius.mbk":{"source":"iana","extensions":["mbk"]},"application/vnd.mobius.mqy":{"source":"iana","extensions":["mqy"]},"application/vnd.mobius.msl":{"source":"iana","extensions":["msl"]},"application/vnd.mobius.plc":{"source":"iana","extensions":["plc"]},"application/vnd.mobius.txf":{"source":"iana","extensions":["txf"]},"application/vnd.mophun.application":{"source":"iana","extensions":["mpn"]},"application/vnd.mophun.certificate":{"source":"iana","extensions":["mpc"]},"application/vnd.motorola.flexsuite":{"source":"iana"},"application/vnd.motorola.flexsuite.adsi":{"source":"iana"},"application/vnd.motorola.flexsuite.fis":{"source":"iana"},"application/vnd.motorola.flexsuite.gotap":{"source":"iana"},"application/vnd.motorola.flexsuite.kmr":{"source":"iana"},"application/vnd.motorola.flexsuite.ttc":{"source":"iana"},"application/vnd.motorola.flexsuite.wem":{"source":"iana"},"application/vnd.motorola.iprm":{"source":"iana"},"application/vnd.mozilla.xul+xml":{"source":"iana","compressible":true,"extensions":["xul"]},"application/vnd.ms-3mfdocument":{"source":"iana"},"application/vnd.ms-artgalry":{"source":"iana","extensions":["cil"]},"application/vnd.ms-asf":{"source":"iana"},"application/vnd.ms-cab-compressed":{"source":"iana","extensions":["cab"]},"application/vnd.ms-color.iccprofile":{"source":"apache"},"application/vnd.ms-excel":{"source":"iana","compressible":false,"extensions":["xls","xlm","xla","xlc","xlt","xlw"]},"application/vnd.ms-excel.addin.macroenabled.12":{"source":"iana","extensions":["xlam"]},"application/vnd.ms-excel.sheet.binary.macroenabled.12":{"source":"iana","extensions":["xlsb"]},"application/vnd.ms-excel.sheet.macroenabled.12":{"source":"iana","extensions":["xlsm"]},"application/vnd.ms-excel.template.macroenabled.12":{"source":"iana","extensions":["xltm"]},"application/vnd.ms-fontobject":{"source":"iana","compressible":true,"extensions":["eot"]},"application/vnd.ms-htmlhelp":{"source":"iana","extensions":["chm"]},"application/vnd.ms-ims":{"source":"iana","extensions":["ims"]},"application/vnd.ms-lrm":{"source":"iana","extensions":["lrm"]},"application/vnd.ms-office.activex+xml":{"source":"iana","compressible":true},"application/vnd.ms-officetheme":{"source":"iana","extensions":["thmx"]},"application/vnd.ms-opentype":{"source":"apache","compressible":true},"application/vnd.ms-outlook":{"compressible":false,"extensions":["msg"]},"application/vnd.ms-package.obfuscated-opentype":{"source":"apache"},"application/vnd.ms-pki.seccat":{"source":"apache","extensions":["cat"]},"application/vnd.ms-pki.stl":{"source":"apache","extensions":["stl"]},"application/vnd.ms-playready.initiator+xml":{"source":"iana","compressible":true},"application/vnd.ms-powerpoint":{"source":"iana","compressible":false,"extensions":["ppt","pps","pot"]},"application/vnd.ms-powerpoint.addin.macroenabled.12":{"source":"iana","extensions":["ppam"]},"application/vnd.ms-powerpoint.presentation.macroenabled.12":{"source":"iana","extensions":["pptm"]},"application/vnd.ms-powerpoint.slide.macroenabled.12":{"source":"iana","extensions":["sldm"]},"application/vnd.ms-powerpoint.slideshow.macroenabled.12":{"source":"iana","extensions":["ppsm"]},"application/vnd.ms-powerpoint.template.macroenabled.12":{"source":"iana","extensions":["potm"]},"application/vnd.ms-printdevicecapabilities+xml":{"source":"iana","compressible":true},"application/vnd.ms-printing.printticket+xml":{"source":"apache","compressible":true},"application/vnd.ms-printschematicket+xml":{"source":"iana","compressible":true},"application/vnd.ms-project":{"source":"iana","extensions":["mpp","mpt"]},"application/vnd.ms-tnef":{"source":"iana"},"application/vnd.ms-windows.devicepairing":{"source":"iana"},"application/vnd.ms-windows.nwprinting.oob":{"source":"iana"},"application/vnd.ms-windows.printerpairing":{"source":"iana"},"application/vnd.ms-windows.wsd.oob":{"source":"iana"},"application/vnd.ms-wmdrm.lic-chlg-req":{"source":"iana"},"application/vnd.ms-wmdrm.lic-resp":{"source":"iana"},"application/vnd.ms-wmdrm.meter-chlg-req":{"source":"iana"},"application/vnd.ms-wmdrm.meter-resp":{"source":"iana"},"application/vnd.ms-word.document.macroenabled.12":{"source":"iana","extensions":["docm"]},"application/vnd.ms-word.template.macroenabled.12":{"source":"iana","extensions":["dotm"]},"application/vnd.ms-works":{"source":"iana","extensions":["wps","wks","wcm","wdb"]},"application/vnd.ms-wpl":{"source":"iana","extensions":["wpl"]},"application/vnd.ms-xpsdocument":{"source":"iana","compressible":false,"extensions":["xps"]},"application/vnd.msa-disk-image":{"source":"iana"},"application/vnd.mseq":{"source":"iana","extensions":["mseq"]},"application/vnd.msign":{"source":"iana"},"application/vnd.multiad.creator":{"source":"iana"},"application/vnd.multiad.creator.cif":{"source":"iana"},"application/vnd.music-niff":{"source":"iana"},"application/vnd.musician":{"source":"iana","extensions":["mus"]},"application/vnd.muvee.style":{"source":"iana","extensions":["msty"]},"application/vnd.mynfc":{"source":"iana","extensions":["taglet"]},"application/vnd.nacamar.ybrid+json":{"source":"iana","compressible":true},"application/vnd.ncd.control":{"source":"iana"},"application/vnd.ncd.reference":{"source":"iana"},"application/vnd.nearst.inv+json":{"source":"iana","compressible":true},"application/vnd.nebumind.line":{"source":"iana"},"application/vnd.nervana":{"source":"iana"},"application/vnd.netfpx":{"source":"iana"},"application/vnd.neurolanguage.nlu":{"source":"iana","extensions":["nlu"]},"application/vnd.nimn":{"source":"iana"},"application/vnd.nintendo.nitro.rom":{"source":"iana"},"application/vnd.nintendo.snes.rom":{"source":"iana"},"application/vnd.nitf":{"source":"iana","extensions":["ntf","nitf"]},"application/vnd.noblenet-directory":{"source":"iana","extensions":["nnd"]},"application/vnd.noblenet-sealer":{"source":"iana","extensions":["nns"]},"application/vnd.noblenet-web":{"source":"iana","extensions":["nnw"]},"application/vnd.nokia.catalogs":{"source":"iana"},"application/vnd.nokia.conml+wbxml":{"source":"iana"},"application/vnd.nokia.conml+xml":{"source":"iana","compressible":true},"application/vnd.nokia.iptv.config+xml":{"source":"iana","compressible":true},"application/vnd.nokia.isds-radio-presets":{"source":"iana"},"application/vnd.nokia.landmark+wbxml":{"source":"iana"},"application/vnd.nokia.landmark+xml":{"source":"iana","compressible":true},"application/vnd.nokia.landmarkcollection+xml":{"source":"iana","compressible":true},"application/vnd.nokia.n-gage.ac+xml":{"source":"iana","compressible":true,"extensions":["ac"]},"application/vnd.nokia.n-gage.data":{"source":"iana","extensions":["ngdat"]},"application/vnd.nokia.n-gage.symbian.install":{"source":"iana","extensions":["n-gage"]},"application/vnd.nokia.ncd":{"source":"iana"},"application/vnd.nokia.pcd+wbxml":{"source":"iana"},"application/vnd.nokia.pcd+xml":{"source":"iana","compressible":true},"application/vnd.nokia.radio-preset":{"source":"iana","extensions":["rpst"]},"application/vnd.nokia.radio-presets":{"source":"iana","extensions":["rpss"]},"application/vnd.novadigm.edm":{"source":"iana","extensions":["edm"]},"application/vnd.novadigm.edx":{"source":"iana","extensions":["edx"]},"application/vnd.novadigm.ext":{"source":"iana","extensions":["ext"]},"application/vnd.ntt-local.content-share":{"source":"iana"},"application/vnd.ntt-local.file-transfer":{"source":"iana"},"application/vnd.ntt-local.ogw_remote-access":{"source":"iana"},"application/vnd.ntt-local.sip-ta_remote":{"source":"iana"},"application/vnd.ntt-local.sip-ta_tcp_stream":{"source":"iana"},"application/vnd.oasis.opendocument.chart":{"source":"iana","extensions":["odc"]},"application/vnd.oasis.opendocument.chart-template":{"source":"iana","extensions":["otc"]},"application/vnd.oasis.opendocument.database":{"source":"iana","extensions":["odb"]},"application/vnd.oasis.opendocument.formula":{"source":"iana","extensions":["odf"]},"application/vnd.oasis.opendocument.formula-template":{"source":"iana","extensions":["odft"]},"application/vnd.oasis.opendocument.graphics":{"source":"iana","compressible":false,"extensions":["odg"]},"application/vnd.oasis.opendocument.graphics-template":{"source":"iana","extensions":["otg"]},"application/vnd.oasis.opendocument.image":{"source":"iana","extensions":["odi"]},"application/vnd.oasis.opendocument.image-template":{"source":"iana","extensions":["oti"]},"application/vnd.oasis.opendocument.presentation":{"source":"iana","compressible":false,"extensions":["odp"]},"application/vnd.oasis.opendocument.presentation-template":{"source":"iana","extensions":["otp"]},"application/vnd.oasis.opendocument.spreadsheet":{"source":"iana","compressible":false,"extensions":["ods"]},"application/vnd.oasis.opendocument.spreadsheet-template":{"source":"iana","extensions":["ots"]},"application/vnd.oasis.opendocument.text":{"source":"iana","compressible":false,"extensions":["odt"]},"application/vnd.oasis.opendocument.text-master":{"source":"iana","extensions":["odm"]},"application/vnd.oasis.opendocument.text-template":{"source":"iana","extensions":["ott"]},"application/vnd.oasis.opendocument.text-web":{"source":"iana","extensions":["oth"]},"application/vnd.obn":{"source":"iana"},"application/vnd.ocf+cbor":{"source":"iana"},"application/vnd.oci.image.manifest.v1+json":{"source":"iana","compressible":true},"application/vnd.oftn.l10n+json":{"source":"iana","compressible":true},"application/vnd.oipf.contentaccessdownload+xml":{"source":"iana","compressible":true},"application/vnd.oipf.contentaccessstreaming+xml":{"source":"iana","compressible":true},"application/vnd.oipf.cspg-hexbinary":{"source":"iana"},"application/vnd.oipf.dae.svg+xml":{"source":"iana","compressible":true},"application/vnd.oipf.dae.xhtml+xml":{"source":"iana","compressible":true},"application/vnd.oipf.mippvcontrolmessage+xml":{"source":"iana","compressible":true},"application/vnd.oipf.pae.gem":{"source":"iana"},"application/vnd.oipf.spdiscovery+xml":{"source":"iana","compressible":true},"application/vnd.oipf.spdlist+xml":{"source":"iana","compressible":true},"application/vnd.oipf.ueprofile+xml":{"source":"iana","compressible":true},"application/vnd.oipf.userprofile+xml":{"source":"iana","compressible":true},"application/vnd.olpc-sugar":{"source":"iana","extensions":["xo"]},"application/vnd.oma-scws-config":{"source":"iana"},"application/vnd.oma-scws-http-request":{"source":"iana"},"application/vnd.oma-scws-http-response":{"source":"iana"},"application/vnd.oma.bcast.associated-procedure-parameter+xml":{"source":"iana","compressible":true},"application/vnd.oma.bcast.drm-trigger+xml":{"source":"iana","compressible":true},"application/vnd.oma.bcast.imd+xml":{"source":"iana","compressible":true},"application/vnd.oma.bcast.ltkm":{"source":"iana"},"application/vnd.oma.bcast.notification+xml":{"source":"iana","compressible":true},"application/vnd.oma.bcast.provisioningtrigger":{"source":"iana"},"application/vnd.oma.bcast.sgboot":{"source":"iana"},"application/vnd.oma.bcast.sgdd+xml":{"source":"iana","compressible":true},"application/vnd.oma.bcast.sgdu":{"source":"iana"},"application/vnd.oma.bcast.simple-symbol-container":{"source":"iana"},"application/vnd.oma.bcast.smartcard-trigger+xml":{"source":"iana","compressible":true},"application/vnd.oma.bcast.sprov+xml":{"source":"iana","compressible":true},"application/vnd.oma.bcast.stkm":{"source":"iana"},"application/vnd.oma.cab-address-book+xml":{"source":"iana","compressible":true},"application/vnd.oma.cab-feature-handler+xml":{"source":"iana","compressible":true},"application/vnd.oma.cab-pcc+xml":{"source":"iana","compressible":true},"application/vnd.oma.cab-subs-invite+xml":{"source":"iana","compressible":true},"application/vnd.oma.cab-user-prefs+xml":{"source":"iana","compressible":true},"application/vnd.oma.dcd":{"source":"iana"},"application/vnd.oma.dcdc":{"source":"iana"},"application/vnd.oma.dd2+xml":{"source":"iana","compressible":true,"extensions":["dd2"]},"application/vnd.oma.drm.risd+xml":{"source":"iana","compressible":true},"application/vnd.oma.group-usage-list+xml":{"source":"iana","compressible":true},"application/vnd.oma.lwm2m+cbor":{"source":"iana"},"application/vnd.oma.lwm2m+json":{"source":"iana","compressible":true},"application/vnd.oma.lwm2m+tlv":{"source":"iana"},"application/vnd.oma.pal+xml":{"source":"iana","compressible":true},"application/vnd.oma.poc.detailed-progress-report+xml":{"source":"iana","compressible":true},"application/vnd.oma.poc.final-report+xml":{"source":"iana","compressible":true},"application/vnd.oma.poc.groups+xml":{"source":"iana","compressible":true},"application/vnd.oma.poc.invocation-descriptor+xml":{"source":"iana","compressible":true},"application/vnd.oma.poc.optimized-progress-report+xml":{"source":"iana","compressible":true},"application/vnd.oma.push":{"source":"iana"},"application/vnd.oma.scidm.messages+xml":{"source":"iana","compressible":true},"application/vnd.oma.xcap-directory+xml":{"source":"iana","compressible":true},"application/vnd.omads-email+xml":{"source":"iana","charset":"UTF-8","compressible":true},"application/vnd.omads-file+xml":{"source":"iana","charset":"UTF-8","compressible":true},"application/vnd.omads-folder+xml":{"source":"iana","charset":"UTF-8","compressible":true},"application/vnd.omaloc-supl-init":{"source":"iana"},"application/vnd.onepager":{"source":"iana"},"application/vnd.onepagertamp":{"source":"iana"},"application/vnd.onepagertamx":{"source":"iana"},"application/vnd.onepagertat":{"source":"iana"},"application/vnd.onepagertatp":{"source":"iana"},"application/vnd.onepagertatx":{"source":"iana"},"application/vnd.openblox.game+xml":{"source":"iana","compressible":true,"extensions":["obgx"]},"application/vnd.openblox.game-binary":{"source":"iana"},"application/vnd.openeye.oeb":{"source":"iana"},"application/vnd.openofficeorg.extension":{"source":"apache","extensions":["oxt"]},"application/vnd.openstreetmap.data+xml":{"source":"iana","compressible":true,"extensions":["osm"]},"application/vnd.opentimestamps.ots":{"source":"iana"},"application/vnd.openxmlformats-officedocument.custom-properties+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.customxmlproperties+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.drawing+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.drawingml.chart+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.drawingml.chartshapes+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.drawingml.diagramcolors+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.drawingml.diagramdata+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.drawingml.diagramlayout+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.drawingml.diagramstyle+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.extended-properties+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.presentationml.commentauthors+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.presentationml.comments+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.presentationml.handoutmaster+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.presentationml.notesmaster+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.presentationml.notesslide+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.presentationml.presentation":{"source":"iana","compressible":false,"extensions":["pptx"]},"application/vnd.openxmlformats-officedocument.presentationml.presentation.main+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.presentationml.presprops+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.presentationml.slide":{"source":"iana","extensions":["sldx"]},"application/vnd.openxmlformats-officedocument.presentationml.slide+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.presentationml.slidelayout+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.presentationml.slidemaster+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.presentationml.slideshow":{"source":"iana","extensions":["ppsx"]},"application/vnd.openxmlformats-officedocument.presentationml.slideshow.main+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.presentationml.slideupdateinfo+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.presentationml.tablestyles+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.presentationml.tags+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.presentationml.template":{"source":"iana","extensions":["potx"]},"application/vnd.openxmlformats-officedocument.presentationml.template.main+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.presentationml.viewprops+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.spreadsheetml.calcchain+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.spreadsheetml.chartsheet+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.spreadsheetml.comments+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.spreadsheetml.connections+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.spreadsheetml.dialogsheet+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.spreadsheetml.externallink+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.spreadsheetml.pivotcachedefinition+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.spreadsheetml.pivotcacherecords+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.spreadsheetml.pivottable+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.spreadsheetml.querytable+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.spreadsheetml.revisionheaders+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.spreadsheetml.revisionlog+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.spreadsheetml.sharedstrings+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet":{"source":"iana","compressible":false,"extensions":["xlsx"]},"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet.main+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.spreadsheetml.sheetmetadata+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.spreadsheetml.styles+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.spreadsheetml.table+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.spreadsheetml.tablesinglecells+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.spreadsheetml.template":{"source":"iana","extensions":["xltx"]},"application/vnd.openxmlformats-officedocument.spreadsheetml.template.main+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.spreadsheetml.usernames+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.spreadsheetml.volatiledependencies+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.spreadsheetml.worksheet+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.theme+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.themeoverride+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.vmldrawing":{"source":"iana"},"application/vnd.openxmlformats-officedocument.wordprocessingml.comments+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.wordprocessingml.document":{"source":"iana","compressible":false,"extensions":["docx"]},"application/vnd.openxmlformats-officedocument.wordprocessingml.document.glossary+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.wordprocessingml.document.main+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.wordprocessingml.endnotes+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.wordprocessingml.fonttable+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.wordprocessingml.footer+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.wordprocessingml.footnotes+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.wordprocessingml.numbering+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.wordprocessingml.settings+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.wordprocessingml.styles+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.wordprocessingml.template":{"source":"iana","extensions":["dotx"]},"application/vnd.openxmlformats-officedocument.wordprocessingml.template.main+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.wordprocessingml.websettings+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-package.core-properties+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-package.digital-signature-xmlsignature+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-package.relationships+xml":{"source":"iana","compressible":true},"application/vnd.oracle.resource+json":{"source":"iana","compressible":true},"application/vnd.orange.indata":{"source":"iana"},"application/vnd.osa.netdeploy":{"source":"iana"},"application/vnd.osgeo.mapguide.package":{"source":"iana","extensions":["mgp"]},"application/vnd.osgi.bundle":{"source":"iana"},"application/vnd.osgi.dp":{"source":"iana","extensions":["dp"]},"application/vnd.osgi.subsystem":{"source":"iana","extensions":["esa"]},"application/vnd.otps.ct-kip+xml":{"source":"iana","compressible":true},"application/vnd.oxli.countgraph":{"source":"iana"},"application/vnd.pagerduty+json":{"source":"iana","compressible":true},"application/vnd.palm":{"source":"iana","extensions":["pdb","pqa","oprc"]},"application/vnd.panoply":{"source":"iana"},"application/vnd.paos.xml":{"source":"iana"},"application/vnd.patentdive":{"source":"iana"},"application/vnd.patientecommsdoc":{"source":"iana"},"application/vnd.pawaafile":{"source":"iana","extensions":["paw"]},"application/vnd.pcos":{"source":"iana"},"application/vnd.pg.format":{"source":"iana","extensions":["str"]},"application/vnd.pg.osasli":{"source":"iana","extensions":["ei6"]},"application/vnd.piaccess.application-licence":{"source":"iana"},"application/vnd.picsel":{"source":"iana","extensions":["efif"]},"application/vnd.pmi.widget":{"source":"iana","extensions":["wg"]},"application/vnd.poc.group-advertisement+xml":{"source":"iana","compressible":true},"application/vnd.pocketlearn":{"source":"iana","extensions":["plf"]},"application/vnd.powerbuilder6":{"source":"iana","extensions":["pbd"]},"application/vnd.powerbuilder6-s":{"source":"iana"},"application/vnd.powerbuilder7":{"source":"iana"},"application/vnd.powerbuilder7-s":{"source":"iana"},"application/vnd.powerbuilder75":{"source":"iana"},"application/vnd.powerbuilder75-s":{"source":"iana"},"application/vnd.preminet":{"source":"iana"},"application/vnd.previewsystems.box":{"source":"iana","extensions":["box"]},"application/vnd.proteus.magazine":{"source":"iana","extensions":["mgz"]},"application/vnd.psfs":{"source":"iana"},"application/vnd.publishare-delta-tree":{"source":"iana","extensions":["qps"]},"application/vnd.pvi.ptid1":{"source":"iana","extensions":["ptid"]},"application/vnd.pwg-multiplexed":{"source":"iana"},"application/vnd.pwg-xhtml-print+xml":{"source":"iana","compressible":true},"application/vnd.qualcomm.brew-app-res":{"source":"iana"},"application/vnd.quarantainenet":{"source":"iana"},"application/vnd.quark.quarkxpress":{"source":"iana","extensions":["qxd","qxt","qwd","qwt","qxl","qxb"]},"application/vnd.quobject-quoxdocument":{"source":"iana"},"application/vnd.radisys.moml+xml":{"source":"iana","compressible":true},"application/vnd.radisys.msml+xml":{"source":"iana","compressible":true},"application/vnd.radisys.msml-audit+xml":{"source":"iana","compressible":true},"application/vnd.radisys.msml-audit-conf+xml":{"source":"iana","compressible":true},"application/vnd.radisys.msml-audit-conn+xml":{"source":"iana","compressible":true},"application/vnd.radisys.msml-audit-dialog+xml":{"source":"iana","compressible":true},"application/vnd.radisys.msml-audit-stream+xml":{"source":"iana","compressible":true},"application/vnd.radisys.msml-conf+xml":{"source":"iana","compressible":true},"application/vnd.radisys.msml-dialog+xml":{"source":"iana","compressible":true},"application/vnd.radisys.msml-dialog-base+xml":{"source":"iana","compressible":true},"application/vnd.radisys.msml-dialog-fax-detect+xml":{"source":"iana","compressible":true},"application/vnd.radisys.msml-dialog-fax-sendrecv+xml":{"source":"iana","compressible":true},"application/vnd.radisys.msml-dialog-group+xml":{"source":"iana","compressible":true},"application/vnd.radisys.msml-dialog-speech+xml":{"source":"iana","compressible":true},"application/vnd.radisys.msml-dialog-transform+xml":{"source":"iana","compressible":true},"application/vnd.rainstor.data":{"source":"iana"},"application/vnd.rapid":{"source":"iana"},"application/vnd.rar":{"source":"iana","extensions":["rar"]},"application/vnd.realvnc.bed":{"source":"iana","extensions":["bed"]},"application/vnd.recordare.musicxml":{"source":"iana","extensions":["mxl"]},"application/vnd.recordare.musicxml+xml":{"source":"iana","compressible":true,"extensions":["musicxml"]},"application/vnd.renlearn.rlprint":{"source":"iana"},"application/vnd.resilient.logic":{"source":"iana"},"application/vnd.restful+json":{"source":"iana","compressible":true},"application/vnd.rig.cryptonote":{"source":"iana","extensions":["cryptonote"]},"application/vnd.rim.cod":{"source":"apache","extensions":["cod"]},"application/vnd.rn-realmedia":{"source":"apache","extensions":["rm"]},"application/vnd.rn-realmedia-vbr":{"source":"apache","extensions":["rmvb"]},"application/vnd.route66.link66+xml":{"source":"iana","compressible":true,"extensions":["link66"]},"application/vnd.rs-274x":{"source":"iana"},"application/vnd.ruckus.download":{"source":"iana"},"application/vnd.s3sms":{"source":"iana"},"application/vnd.sailingtracker.track":{"source":"iana","extensions":["st"]},"application/vnd.sar":{"source":"iana"},"application/vnd.sbm.cid":{"source":"iana"},"application/vnd.sbm.mid2":{"source":"iana"},"application/vnd.scribus":{"source":"iana"},"application/vnd.sealed.3df":{"source":"iana"},"application/vnd.sealed.csf":{"source":"iana"},"application/vnd.sealed.doc":{"source":"iana"},"application/vnd.sealed.eml":{"source":"iana"},"application/vnd.sealed.mht":{"source":"iana"},"application/vnd.sealed.net":{"source":"iana"},"application/vnd.sealed.ppt":{"source":"iana"},"application/vnd.sealed.tiff":{"source":"iana"},"application/vnd.sealed.xls":{"source":"iana"},"application/vnd.sealedmedia.softseal.html":{"source":"iana"},"application/vnd.sealedmedia.softseal.pdf":{"source":"iana"},"application/vnd.seemail":{"source":"iana","extensions":["see"]},"application/vnd.seis+json":{"source":"iana","compressible":true},"application/vnd.sema":{"source":"iana","extensions":["sema"]},"application/vnd.semd":{"source":"iana","extensions":["semd"]},"application/vnd.semf":{"source":"iana","extensions":["semf"]},"application/vnd.shade-save-file":{"source":"iana"},"application/vnd.shana.informed.formdata":{"source":"iana","extensions":["ifm"]},"application/vnd.shana.informed.formtemplate":{"source":"iana","extensions":["itp"]},"application/vnd.shana.informed.interchange":{"source":"iana","extensions":["iif"]},"application/vnd.shana.informed.package":{"source":"iana","extensions":["ipk"]},"application/vnd.shootproof+json":{"source":"iana","compressible":true},"application/vnd.shopkick+json":{"source":"iana","compressible":true},"application/vnd.shp":{"source":"iana"},"application/vnd.shx":{"source":"iana"},"application/vnd.sigrok.session":{"source":"iana"},"application/vnd.simtech-mindmapper":{"source":"iana","extensions":["twd","twds"]},"application/vnd.siren+json":{"source":"iana","compressible":true},"application/vnd.smaf":{"source":"iana","extensions":["mmf"]},"application/vnd.smart.notebook":{"source":"iana"},"application/vnd.smart.teacher":{"source":"iana","extensions":["teacher"]},"application/vnd.snesdev-page-table":{"source":"iana"},"application/vnd.software602.filler.form+xml":{"source":"iana","compressible":true,"extensions":["fo"]},"application/vnd.software602.filler.form-xml-zip":{"source":"iana"},"application/vnd.solent.sdkm+xml":{"source":"iana","compressible":true,"extensions":["sdkm","sdkd"]},"application/vnd.spotfire.dxp":{"source":"iana","extensions":["dxp"]},"application/vnd.spotfire.sfs":{"source":"iana","extensions":["sfs"]},"application/vnd.sqlite3":{"source":"iana"},"application/vnd.sss-cod":{"source":"iana"},"application/vnd.sss-dtf":{"source":"iana"},"application/vnd.sss-ntf":{"source":"iana"},"application/vnd.stardivision.calc":{"source":"apache","extensions":["sdc"]},"application/vnd.stardivision.draw":{"source":"apache","extensions":["sda"]},"application/vnd.stardivision.impress":{"source":"apache","extensions":["sdd"]},"application/vnd.stardivision.math":{"source":"apache","extensions":["smf"]},"application/vnd.stardivision.writer":{"source":"apache","extensions":["sdw","vor"]},"application/vnd.stardivision.writer-global":{"source":"apache","extensions":["sgl"]},"application/vnd.stepmania.package":{"source":"iana","extensions":["smzip"]},"application/vnd.stepmania.stepchart":{"source":"iana","extensions":["sm"]},"application/vnd.street-stream":{"source":"iana"},"application/vnd.sun.wadl+xml":{"source":"iana","compressible":true,"extensions":["wadl"]},"application/vnd.sun.xml.calc":{"source":"apache","extensions":["sxc"]},"application/vnd.sun.xml.calc.template":{"source":"apache","extensions":["stc"]},"application/vnd.sun.xml.draw":{"source":"apache","extensions":["sxd"]},"application/vnd.sun.xml.draw.template":{"source":"apache","extensions":["std"]},"application/vnd.sun.xml.impress":{"source":"apache","extensions":["sxi"]},"application/vnd.sun.xml.impress.template":{"source":"apache","extensions":["sti"]},"application/vnd.sun.xml.math":{"source":"apache","extensions":["sxm"]},"application/vnd.sun.xml.writer":{"source":"apache","extensions":["sxw"]},"application/vnd.sun.xml.writer.global":{"source":"apache","extensions":["sxg"]},"application/vnd.sun.xml.writer.template":{"source":"apache","extensions":["stw"]},"application/vnd.sus-calendar":{"source":"iana","extensions":["sus","susp"]},"application/vnd.svd":{"source":"iana","extensions":["svd"]},"application/vnd.swiftview-ics":{"source":"iana"},"application/vnd.sycle+xml":{"source":"iana","compressible":true},"application/vnd.symbian.install":{"source":"apache","extensions":["sis","sisx"]},"application/vnd.syncml+xml":{"source":"iana","charset":"UTF-8","compressible":true,"extensions":["xsm"]},"application/vnd.syncml.dm+wbxml":{"source":"iana","charset":"UTF-8","extensions":["bdm"]},"application/vnd.syncml.dm+xml":{"source":"iana","charset":"UTF-8","compressible":true,"extensions":["xdm"]},"application/vnd.syncml.dm.notification":{"source":"iana"},"application/vnd.syncml.dmddf+wbxml":{"source":"iana"},"application/vnd.syncml.dmddf+xml":{"source":"iana","charset":"UTF-8","compressible":true,"extensions":["ddf"]},"application/vnd.syncml.dmtnds+wbxml":{"source":"iana"},"application/vnd.syncml.dmtnds+xml":{"source":"iana","charset":"UTF-8","compressible":true},"application/vnd.syncml.ds.notification":{"source":"iana"},"application/vnd.tableschema+json":{"source":"iana","compressible":true},"application/vnd.tao.intent-module-archive":{"source":"iana","extensions":["tao"]},"application/vnd.tcpdump.pcap":{"source":"iana","extensions":["pcap","cap","dmp"]},"application/vnd.think-cell.ppttc+json":{"source":"iana","compressible":true},"application/vnd.tmd.mediaflex.api+xml":{"source":"iana","compressible":true},"application/vnd.tml":{"source":"iana"},"application/vnd.tmobile-livetv":{"source":"iana","extensions":["tmo"]},"application/vnd.tri.onesource":{"source":"iana"},"application/vnd.trid.tpt":{"source":"iana","extensions":["tpt"]},"application/vnd.triscape.mxs":{"source":"iana","extensions":["mxs"]},"application/vnd.trueapp":{"source":"iana","extensions":["tra"]},"application/vnd.truedoc":{"source":"iana"},"application/vnd.ubisoft.webplayer":{"source":"iana"},"application/vnd.ufdl":{"source":"iana","extensions":["ufd","ufdl"]},"application/vnd.uiq.theme":{"source":"iana","extensions":["utz"]},"application/vnd.umajin":{"source":"iana","extensions":["umj"]},"application/vnd.unity":{"source":"iana","extensions":["unityweb"]},"application/vnd.uoml+xml":{"source":"iana","compressible":true,"extensions":["uoml"]},"application/vnd.uplanet.alert":{"source":"iana"},"application/vnd.uplanet.alert-wbxml":{"source":"iana"},"application/vnd.uplanet.bearer-choice":{"source":"iana"},"application/vnd.uplanet.bearer-choice-wbxml":{"source":"iana"},"application/vnd.uplanet.cacheop":{"source":"iana"},"application/vnd.uplanet.cacheop-wbxml":{"source":"iana"},"application/vnd.uplanet.channel":{"source":"iana"},"application/vnd.uplanet.channel-wbxml":{"source":"iana"},"application/vnd.uplanet.list":{"source":"iana"},"application/vnd.uplanet.list-wbxml":{"source":"iana"},"application/vnd.uplanet.listcmd":{"source":"iana"},"application/vnd.uplanet.listcmd-wbxml":{"source":"iana"},"application/vnd.uplanet.signal":{"source":"iana"},"application/vnd.uri-map":{"source":"iana"},"application/vnd.valve.source.material":{"source":"iana"},"application/vnd.vcx":{"source":"iana","extensions":["vcx"]},"application/vnd.vd-study":{"source":"iana"},"application/vnd.vectorworks":{"source":"iana"},"application/vnd.vel+json":{"source":"iana","compressible":true},"application/vnd.verimatrix.vcas":{"source":"iana"},"application/vnd.veritone.aion+json":{"source":"iana","compressible":true},"application/vnd.veryant.thin":{"source":"iana"},"application/vnd.ves.encrypted":{"source":"iana"},"application/vnd.vidsoft.vidconference":{"source":"iana"},"application/vnd.visio":{"source":"iana","extensions":["vsd","vst","vss","vsw"]},"application/vnd.visionary":{"source":"iana","extensions":["vis"]},"application/vnd.vividence.scriptfile":{"source":"iana"},"application/vnd.vsf":{"source":"iana","extensions":["vsf"]},"application/vnd.wap.sic":{"source":"iana"},"application/vnd.wap.slc":{"source":"iana"},"application/vnd.wap.wbxml":{"source":"iana","charset":"UTF-8","extensions":["wbxml"]},"application/vnd.wap.wmlc":{"source":"iana","extensions":["wmlc"]},"application/vnd.wap.wmlscriptc":{"source":"iana","extensions":["wmlsc"]},"application/vnd.webturbo":{"source":"iana","extensions":["wtb"]},"application/vnd.wfa.dpp":{"source":"iana"},"application/vnd.wfa.p2p":{"source":"iana"},"application/vnd.wfa.wsc":{"source":"iana"},"application/vnd.windows.devicepairing":{"source":"iana"},"application/vnd.wmc":{"source":"iana"},"application/vnd.wmf.bootstrap":{"source":"iana"},"application/vnd.wolfram.mathematica":{"source":"iana"},"application/vnd.wolfram.mathematica.package":{"source":"iana"},"application/vnd.wolfram.player":{"source":"iana","extensions":["nbp"]},"application/vnd.wordperfect":{"source":"iana","extensions":["wpd"]},"application/vnd.wqd":{"source":"iana","extensions":["wqd"]},"application/vnd.wrq-hp3000-labelled":{"source":"iana"},"application/vnd.wt.stf":{"source":"iana","extensions":["stf"]},"application/vnd.wv.csp+wbxml":{"source":"iana"},"application/vnd.wv.csp+xml":{"source":"iana","compressible":true},"application/vnd.wv.ssp+xml":{"source":"iana","compressible":true},"application/vnd.xacml+json":{"source":"iana","compressible":true},"application/vnd.xara":{"source":"iana","extensions":["xar"]},"application/vnd.xfdl":{"source":"iana","extensions":["xfdl"]},"application/vnd.xfdl.webform":{"source":"iana"},"application/vnd.xmi+xml":{"source":"iana","compressible":true},"application/vnd.xmpie.cpkg":{"source":"iana"},"application/vnd.xmpie.dpkg":{"source":"iana"},"application/vnd.xmpie.plan":{"source":"iana"},"application/vnd.xmpie.ppkg":{"source":"iana"},"application/vnd.xmpie.xlim":{"source":"iana"},"application/vnd.yamaha.hv-dic":{"source":"iana","extensions":["hvd"]},"application/vnd.yamaha.hv-script":{"source":"iana","extensions":["hvs"]},"application/vnd.yamaha.hv-voice":{"source":"iana","extensions":["hvp"]},"application/vnd.yamaha.openscoreformat":{"source":"iana","extensions":["osf"]},"application/vnd.yamaha.openscoreformat.osfpvg+xml":{"source":"iana","compressible":true,"extensions":["osfpvg"]},"application/vnd.yamaha.remote-setup":{"source":"iana"},"application/vnd.yamaha.smaf-audio":{"source":"iana","extensions":["saf"]},"application/vnd.yamaha.smaf-phrase":{"source":"iana","extensions":["spf"]},"application/vnd.yamaha.through-ngn":{"source":"iana"},"application/vnd.yamaha.tunnel-udpencap":{"source":"iana"},"application/vnd.yaoweme":{"source":"iana"},"application/vnd.yellowriver-custom-menu":{"source":"iana","extensions":["cmp"]},"application/vnd.youtube.yt":{"source":"iana"},"application/vnd.zul":{"source":"iana","extensions":["zir","zirz"]},"application/vnd.zzazz.deck+xml":{"source":"iana","compressible":true,"extensions":["zaz"]},"application/voicexml+xml":{"source":"iana","compressible":true,"extensions":["vxml"]},"application/voucher-cms+json":{"source":"iana","compressible":true},"application/vq-rtcpxr":{"source":"iana"},"application/wasm":{"source":"iana","compressible":true,"extensions":["wasm"]},"application/watcherinfo+xml":{"source":"iana","compressible":true},"application/webpush-options+json":{"source":"iana","compressible":true},"application/whoispp-query":{"source":"iana"},"application/whoispp-response":{"source":"iana"},"application/widget":{"source":"iana","extensions":["wgt"]},"application/winhlp":{"source":"apache","extensions":["hlp"]},"application/wita":{"source":"iana"},"application/wordperfect5.1":{"source":"iana"},"application/wsdl+xml":{"source":"iana","compressible":true,"extensions":["wsdl"]},"application/wspolicy+xml":{"source":"iana","compressible":true,"extensions":["wspolicy"]},"application/x-7z-compressed":{"source":"apache","compressible":false,"extensions":["7z"]},"application/x-abiword":{"source":"apache","extensions":["abw"]},"application/x-ace-compressed":{"source":"apache","extensions":["ace"]},"application/x-amf":{"source":"apache"},"application/x-apple-diskimage":{"source":"apache","extensions":["dmg"]},"application/x-arj":{"compressible":false,"extensions":["arj"]},"application/x-authorware-bin":{"source":"apache","extensions":["aab","x32","u32","vox"]},"application/x-authorware-map":{"source":"apache","extensions":["aam"]},"application/x-authorware-seg":{"source":"apache","extensions":["aas"]},"application/x-bcpio":{"source":"apache","extensions":["bcpio"]},"application/x-bdoc":{"compressible":false,"extensions":["bdoc"]},"application/x-bittorrent":{"source":"apache","extensions":["torrent"]},"application/x-blorb":{"source":"apache","extensions":["blb","blorb"]},"application/x-bzip":{"source":"apache","compressible":false,"extensions":["bz"]},"application/x-bzip2":{"source":"apache","compressible":false,"extensions":["bz2","boz"]},"application/x-cbr":{"source":"apache","extensions":["cbr","cba","cbt","cbz","cb7"]},"application/x-cdlink":{"source":"apache","extensions":["vcd"]},"application/x-cfs-compressed":{"source":"apache","extensions":["cfs"]},"application/x-chat":{"source":"apache","extensions":["chat"]},"application/x-chess-pgn":{"source":"apache","extensions":["pgn"]},"application/x-chrome-extension":{"extensions":["crx"]},"application/x-cocoa":{"source":"nginx","extensions":["cco"]},"application/x-compress":{"source":"apache"},"application/x-conference":{"source":"apache","extensions":["nsc"]},"application/x-cpio":{"source":"apache","extensions":["cpio"]},"application/x-csh":{"source":"apache","extensions":["csh"]},"application/x-deb":{"compressible":false},"application/x-debian-package":{"source":"apache","extensions":["deb","udeb"]},"application/x-dgc-compressed":{"source":"apache","extensions":["dgc"]},"application/x-director":{"source":"apache","extensions":["dir","dcr","dxr","cst","cct","cxt","w3d","fgd","swa"]},"application/x-doom":{"source":"apache","extensions":["wad"]},"application/x-dtbncx+xml":{"source":"apache","compressible":true,"extensions":["ncx"]},"application/x-dtbook+xml":{"source":"apache","compressible":true,"extensions":["dtb"]},"application/x-dtbresource+xml":{"source":"apache","compressible":true,"extensions":["res"]},"application/x-dvi":{"source":"apache","compressible":false,"extensions":["dvi"]},"application/x-envoy":{"source":"apache","extensions":["evy"]},"application/x-eva":{"source":"apache","extensions":["eva"]},"application/x-font-bdf":{"source":"apache","extensions":["bdf"]},"application/x-font-dos":{"source":"apache"},"application/x-font-framemaker":{"source":"apache"},"application/x-font-ghostscript":{"source":"apache","extensions":["gsf"]},"application/x-font-libgrx":{"source":"apache"},"application/x-font-linux-psf":{"source":"apache","extensions":["psf"]},"application/x-font-pcf":{"source":"apache","extensions":["pcf"]},"application/x-font-snf":{"source":"apache","extensions":["snf"]},"application/x-font-speedo":{"source":"apache"},"application/x-font-sunos-news":{"source":"apache"},"application/x-font-type1":{"source":"apache","extensions":["pfa","pfb","pfm","afm"]},"application/x-font-vfont":{"source":"apache"},"application/x-freearc":{"source":"apache","extensions":["arc"]},"application/x-futuresplash":{"source":"apache","extensions":["spl"]},"application/x-gca-compressed":{"source":"apache","extensions":["gca"]},"application/x-glulx":{"source":"apache","extensions":["ulx"]},"application/x-gnumeric":{"source":"apache","extensions":["gnumeric"]},"application/x-gramps-xml":{"source":"apache","extensions":["gramps"]},"application/x-gtar":{"source":"apache","extensions":["gtar"]},"application/x-gzip":{"source":"apache"},"application/x-hdf":{"source":"apache","extensions":["hdf"]},"application/x-httpd-php":{"compressible":true,"extensions":["php"]},"application/x-install-instructions":{"source":"apache","extensions":["install"]},"application/x-iso9660-image":{"source":"apache","extensions":["iso"]},"application/x-iwork-keynote-sffkey":{"extensions":["key"]},"application/x-iwork-numbers-sffnumbers":{"extensions":["numbers"]},"application/x-iwork-pages-sffpages":{"extensions":["pages"]},"application/x-java-archive-diff":{"source":"nginx","extensions":["jardiff"]},"application/x-java-jnlp-file":{"source":"apache","compressible":false,"extensions":["jnlp"]},"application/x-javascript":{"compressible":true},"application/x-keepass2":{"extensions":["kdbx"]},"application/x-latex":{"source":"apache","compressible":false,"extensions":["latex"]},"application/x-lua-bytecode":{"extensions":["luac"]},"application/x-lzh-compressed":{"source":"apache","extensions":["lzh","lha"]},"application/x-makeself":{"source":"nginx","extensions":["run"]},"application/x-mie":{"source":"apache","extensions":["mie"]},"application/x-mobipocket-ebook":{"source":"apache","extensions":["prc","mobi"]},"application/x-mpegurl":{"compressible":false},"application/x-ms-application":{"source":"apache","extensions":["application"]},"application/x-ms-shortcut":{"source":"apache","extensions":["lnk"]},"application/x-ms-wmd":{"source":"apache","extensions":["wmd"]},"application/x-ms-wmz":{"source":"apache","extensions":["wmz"]},"application/x-ms-xbap":{"source":"apache","extensions":["xbap"]},"application/x-msaccess":{"source":"apache","extensions":["mdb"]},"application/x-msbinder":{"source":"apache","extensions":["obd"]},"application/x-mscardfile":{"source":"apache","extensions":["crd"]},"application/x-msclip":{"source":"apache","extensions":["clp"]},"application/x-msdos-program":{"extensions":["exe"]},"application/x-msdownload":{"source":"apache","extensions":["exe","dll","com","bat","msi"]},"application/x-msmediaview":{"source":"apache","extensions":["mvb","m13","m14"]},"application/x-msmetafile":{"source":"apache","extensions":["wmf","wmz","emf","emz"]},"application/x-msmoney":{"source":"apache","extensions":["mny"]},"application/x-mspublisher":{"source":"apache","extensions":["pub"]},"application/x-msschedule":{"source":"apache","extensions":["scd"]},"application/x-msterminal":{"source":"apache","extensions":["trm"]},"application/x-mswrite":{"source":"apache","extensions":["wri"]},"application/x-netcdf":{"source":"apache","extensions":["nc","cdf"]},"application/x-ns-proxy-autoconfig":{"compressible":true,"extensions":["pac"]},"application/x-nzb":{"source":"apache","extensions":["nzb"]},"application/x-perl":{"source":"nginx","extensions":["pl","pm"]},"application/x-pilot":{"source":"nginx","extensions":["prc","pdb"]},"application/x-pkcs12":{"source":"apache","compressible":false,"extensions":["p12","pfx"]},"application/x-pkcs7-certificates":{"source":"apache","extensions":["p7b","spc"]},"application/x-pkcs7-certreqresp":{"source":"apache","extensions":["p7r"]},"application/x-pki-message":{"source":"iana"},"application/x-rar-compressed":{"source":"apache","compressible":false,"extensions":["rar"]},"application/x-redhat-package-manager":{"source":"nginx","extensions":["rpm"]},"application/x-research-info-systems":{"source":"apache","extensions":["ris"]},"application/x-sea":{"source":"nginx","extensions":["sea"]},"application/x-sh":{"source":"apache","compressible":true,"extensions":["sh"]},"application/x-shar":{"source":"apache","extensions":["shar"]},"application/x-shockwave-flash":{"source":"apache","compressible":false,"extensions":["swf"]},"application/x-silverlight-app":{"source":"apache","extensions":["xap"]},"application/x-sql":{"source":"apache","extensions":["sql"]},"application/x-stuffit":{"source":"apache","compressible":false,"extensions":["sit"]},"application/x-stuffitx":{"source":"apache","extensions":["sitx"]},"application/x-subrip":{"source":"apache","extensions":["srt"]},"application/x-sv4cpio":{"source":"apache","extensions":["sv4cpio"]},"application/x-sv4crc":{"source":"apache","extensions":["sv4crc"]},"application/x-t3vm-image":{"source":"apache","extensions":["t3"]},"application/x-tads":{"source":"apache","extensions":["gam"]},"application/x-tar":{"source":"apache","compressible":true,"extensions":["tar"]},"application/x-tcl":{"source":"apache","extensions":["tcl","tk"]},"application/x-tex":{"source":"apache","extensions":["tex"]},"application/x-tex-tfm":{"source":"apache","extensions":["tfm"]},"application/x-texinfo":{"source":"apache","extensions":["texinfo","texi"]},"application/x-tgif":{"source":"apache","extensions":["obj"]},"application/x-ustar":{"source":"apache","extensions":["ustar"]},"application/x-virtualbox-hdd":{"compressible":true,"extensions":["hdd"]},"application/x-virtualbox-ova":{"compressible":true,"extensions":["ova"]},"application/x-virtualbox-ovf":{"compressible":true,"extensions":["ovf"]},"application/x-virtualbox-vbox":{"compressible":true,"extensions":["vbox"]},"application/x-virtualbox-vbox-extpack":{"compressible":false,"extensions":["vbox-extpack"]},"application/x-virtualbox-vdi":{"compressible":true,"extensions":["vdi"]},"application/x-virtualbox-vhd":{"compressible":true,"extensions":["vhd"]},"application/x-virtualbox-vmdk":{"compressible":true,"extensions":["vmdk"]},"application/x-wais-source":{"source":"apache","extensions":["src"]},"application/x-web-app-manifest+json":{"compressible":true,"extensions":["webapp"]},"application/x-www-form-urlencoded":{"source":"iana","compressible":true},"application/x-x509-ca-cert":{"source":"iana","extensions":["der","crt","pem"]},"application/x-x509-ca-ra-cert":{"source":"iana"},"application/x-x509-next-ca-cert":{"source":"iana"},"application/x-xfig":{"source":"apache","extensions":["fig"]},"application/x-xliff+xml":{"source":"apache","compressible":true,"extensions":["xlf"]},"application/x-xpinstall":{"source":"apache","compressible":false,"extensions":["xpi"]},"application/x-xz":{"source":"apache","extensions":["xz"]},"application/x-zmachine":{"source":"apache","extensions":["z1","z2","z3","z4","z5","z6","z7","z8"]},"application/x400-bp":{"source":"iana"},"application/xacml+xml":{"source":"iana","compressible":true},"application/xaml+xml":{"source":"apache","compressible":true,"extensions":["xaml"]},"application/xcap-att+xml":{"source":"iana","compressible":true,"extensions":["xav"]},"application/xcap-caps+xml":{"source":"iana","compressible":true,"extensions":["xca"]},"application/xcap-diff+xml":{"source":"iana","compressible":true,"extensions":["xdf"]},"application/xcap-el+xml":{"source":"iana","compressible":true,"extensions":["xel"]},"application/xcap-error+xml":{"source":"iana","compressible":true},"application/xcap-ns+xml":{"source":"iana","compressible":true,"extensions":["xns"]},"application/xcon-conference-info+xml":{"source":"iana","compressible":true},"application/xcon-conference-info-diff+xml":{"source":"iana","compressible":true},"application/xenc+xml":{"source":"iana","compressible":true,"extensions":["xenc"]},"application/xhtml+xml":{"source":"iana","compressible":true,"extensions":["xhtml","xht"]},"application/xhtml-voice+xml":{"source":"apache","compressible":true},"application/xliff+xml":{"source":"iana","compressible":true,"extensions":["xlf"]},"application/xml":{"source":"iana","compressible":true,"extensions":["xml","xsl","xsd","rng"]},"application/xml-dtd":{"source":"iana","compressible":true,"extensions":["dtd"]},"application/xml-external-parsed-entity":{"source":"iana"},"application/xml-patch+xml":{"source":"iana","compressible":true},"application/xmpp+xml":{"source":"iana","compressible":true},"application/xop+xml":{"source":"iana","compressible":true,"extensions":["xop"]},"application/xproc+xml":{"source":"apache","compressible":true,"extensions":["xpl"]},"application/xslt+xml":{"source":"iana","compressible":true,"extensions":["xsl","xslt"]},"application/xspf+xml":{"source":"apache","compressible":true,"extensions":["xspf"]},"application/xv+xml":{"source":"iana","compressible":true,"extensions":["mxml","xhvml","xvml","xvm"]},"application/yang":{"source":"iana","extensions":["yang"]},"application/yang-data+json":{"source":"iana","compressible":true},"application/yang-data+xml":{"source":"iana","compressible":true},"application/yang-patch+json":{"source":"iana","compressible":true},"application/yang-patch+xml":{"source":"iana","compressible":true},"application/yin+xml":{"source":"iana","compressible":true,"extensions":["yin"]},"application/zip":{"source":"iana","compressible":false,"extensions":["zip"]},"application/zlib":{"source":"iana"},"application/zstd":{"source":"iana"},"audio/1d-interleaved-parityfec":{"source":"iana"},"audio/32kadpcm":{"source":"iana"},"audio/3gpp":{"source":"iana","compressible":false,"extensions":["3gpp"]},"audio/3gpp2":{"source":"iana"},"audio/aac":{"source":"iana"},"audio/ac3":{"source":"iana"},"audio/adpcm":{"source":"apache","extensions":["adp"]},"audio/amr":{"source":"iana","extensions":["amr"]},"audio/amr-wb":{"source":"iana"},"audio/amr-wb+":{"source":"iana"},"audio/aptx":{"source":"iana"},"audio/asc":{"source":"iana"},"audio/atrac-advanced-lossless":{"source":"iana"},"audio/atrac-x":{"source":"iana"},"audio/atrac3":{"source":"iana"},"audio/basic":{"source":"iana","compressible":false,"extensions":["au","snd"]},"audio/bv16":{"source":"iana"},"audio/bv32":{"source":"iana"},"audio/clearmode":{"source":"iana"},"audio/cn":{"source":"iana"},"audio/dat12":{"source":"iana"},"audio/dls":{"source":"iana"},"audio/dsr-es201108":{"source":"iana"},"audio/dsr-es202050":{"source":"iana"},"audio/dsr-es202211":{"source":"iana"},"audio/dsr-es202212":{"source":"iana"},"audio/dv":{"source":"iana"},"audio/dvi4":{"source":"iana"},"audio/eac3":{"source":"iana"},"audio/encaprtp":{"source":"iana"},"audio/evrc":{"source":"iana"},"audio/evrc-qcp":{"source":"iana"},"audio/evrc0":{"source":"iana"},"audio/evrc1":{"source":"iana"},"audio/evrcb":{"source":"iana"},"audio/evrcb0":{"source":"iana"},"audio/evrcb1":{"source":"iana"},"audio/evrcnw":{"source":"iana"},"audio/evrcnw0":{"source":"iana"},"audio/evrcnw1":{"source":"iana"},"audio/evrcwb":{"source":"iana"},"audio/evrcwb0":{"source":"iana"},"audio/evrcwb1":{"source":"iana"},"audio/evs":{"source":"iana"},"audio/flexfec":{"source":"iana"},"audio/fwdred":{"source":"iana"},"audio/g711-0":{"source":"iana"},"audio/g719":{"source":"iana"},"audio/g722":{"source":"iana"},"audio/g7221":{"source":"iana"},"audio/g723":{"source":"iana"},"audio/g726-16":{"source":"iana"},"audio/g726-24":{"source":"iana"},"audio/g726-32":{"source":"iana"},"audio/g726-40":{"source":"iana"},"audio/g728":{"source":"iana"},"audio/g729":{"source":"iana"},"audio/g7291":{"source":"iana"},"audio/g729d":{"source":"iana"},"audio/g729e":{"source":"iana"},"audio/gsm":{"source":"iana"},"audio/gsm-efr":{"source":"iana"},"audio/gsm-hr-08":{"source":"iana"},"audio/ilbc":{"source":"iana"},"audio/ip-mr_v2.5":{"source":"iana"},"audio/isac":{"source":"apache"},"audio/l16":{"source":"iana"},"audio/l20":{"source":"iana"},"audio/l24":{"source":"iana","compressible":false},"audio/l8":{"source":"iana"},"audio/lpc":{"source":"iana"},"audio/melp":{"source":"iana"},"audio/melp1200":{"source":"iana"},"audio/melp2400":{"source":"iana"},"audio/melp600":{"source":"iana"},"audio/mhas":{"source":"iana"},"audio/midi":{"source":"apache","extensions":["mid","midi","kar","rmi"]},"audio/mobile-xmf":{"source":"iana","extensions":["mxmf"]},"audio/mp3":{"compressible":false,"extensions":["mp3"]},"audio/mp4":{"source":"iana","compressible":false,"extensions":["m4a","mp4a"]},"audio/mp4a-latm":{"source":"iana"},"audio/mpa":{"source":"iana"},"audio/mpa-robust":{"source":"iana"},"audio/mpeg":{"source":"iana","compressible":false,"extensions":["mpga","mp2","mp2a","mp3","m2a","m3a"]},"audio/mpeg4-generic":{"source":"iana"},"audio/musepack":{"source":"apache"},"audio/ogg":{"source":"iana","compressible":false,"extensions":["oga","ogg","spx","opus"]},"audio/opus":{"source":"iana"},"audio/parityfec":{"source":"iana"},"audio/pcma":{"source":"iana"},"audio/pcma-wb":{"source":"iana"},"audio/pcmu":{"source":"iana"},"audio/pcmu-wb":{"source":"iana"},"audio/prs.sid":{"source":"iana"},"audio/qcelp":{"source":"iana"},"audio/raptorfec":{"source":"iana"},"audio/red":{"source":"iana"},"audio/rtp-enc-aescm128":{"source":"iana"},"audio/rtp-midi":{"source":"iana"},"audio/rtploopback":{"source":"iana"},"audio/rtx":{"source":"iana"},"audio/s3m":{"source":"apache","extensions":["s3m"]},"audio/scip":{"source":"iana"},"audio/silk":{"source":"apache","extensions":["sil"]},"audio/smv":{"source":"iana"},"audio/smv-qcp":{"source":"iana"},"audio/smv0":{"source":"iana"},"audio/sofa":{"source":"iana"},"audio/sp-midi":{"source":"iana"},"audio/speex":{"source":"iana"},"audio/t140c":{"source":"iana"},"audio/t38":{"source":"iana"},"audio/telephone-event":{"source":"iana"},"audio/tetra_acelp":{"source":"iana"},"audio/tetra_acelp_bb":{"source":"iana"},"audio/tone":{"source":"iana"},"audio/tsvcis":{"source":"iana"},"audio/uemclip":{"source":"iana"},"audio/ulpfec":{"source":"iana"},"audio/usac":{"source":"iana"},"audio/vdvi":{"source":"iana"},"audio/vmr-wb":{"source":"iana"},"audio/vnd.3gpp.iufp":{"source":"iana"},"audio/vnd.4sb":{"source":"iana"},"audio/vnd.audiokoz":{"source":"iana"},"audio/vnd.celp":{"source":"iana"},"audio/vnd.cisco.nse":{"source":"iana"},"audio/vnd.cmles.radio-events":{"source":"iana"},"audio/vnd.cns.anp1":{"source":"iana"},"audio/vnd.cns.inf1":{"source":"iana"},"audio/vnd.dece.audio":{"source":"iana","extensions":["uva","uvva"]},"audio/vnd.digital-winds":{"source":"iana","extensions":["eol"]},"audio/vnd.dlna.adts":{"source":"iana"},"audio/vnd.dolby.heaac.1":{"source":"iana"},"audio/vnd.dolby.heaac.2":{"source":"iana"},"audio/vnd.dolby.mlp":{"source":"iana"},"audio/vnd.dolby.mps":{"source":"iana"},"audio/vnd.dolby.pl2":{"source":"iana"},"audio/vnd.dolby.pl2x":{"source":"iana"},"audio/vnd.dolby.pl2z":{"source":"iana"},"audio/vnd.dolby.pulse.1":{"source":"iana"},"audio/vnd.dra":{"source":"iana","extensions":["dra"]},"audio/vnd.dts":{"source":"iana","extensions":["dts"]},"audio/vnd.dts.hd":{"source":"iana","extensions":["dtshd"]},"audio/vnd.dts.uhd":{"source":"iana"},"audio/vnd.dvb.file":{"source":"iana"},"audio/vnd.everad.plj":{"source":"iana"},"audio/vnd.hns.audio":{"source":"iana"},"audio/vnd.lucent.voice":{"source":"iana","extensions":["lvp"]},"audio/vnd.ms-playready.media.pya":{"source":"iana","extensions":["pya"]},"audio/vnd.nokia.mobile-xmf":{"source":"iana"},"audio/vnd.nortel.vbk":{"source":"iana"},"audio/vnd.nuera.ecelp4800":{"source":"iana","extensions":["ecelp4800"]},"audio/vnd.nuera.ecelp7470":{"source":"iana","extensions":["ecelp7470"]},"audio/vnd.nuera.ecelp9600":{"source":"iana","extensions":["ecelp9600"]},"audio/vnd.octel.sbc":{"source":"iana"},"audio/vnd.presonus.multitrack":{"source":"iana"},"audio/vnd.qcelp":{"source":"iana"},"audio/vnd.rhetorex.32kadpcm":{"source":"iana"},"audio/vnd.rip":{"source":"iana","extensions":["rip"]},"audio/vnd.rn-realaudio":{"compressible":false},"audio/vnd.sealedmedia.softseal.mpeg":{"source":"iana"},"audio/vnd.vmx.cvsd":{"source":"iana"},"audio/vnd.wave":{"compressible":false},"audio/vorbis":{"source":"iana","compressible":false},"audio/vorbis-config":{"source":"iana"},"audio/wav":{"compressible":false,"extensions":["wav"]},"audio/wave":{"compressible":false,"extensions":["wav"]},"audio/webm":{"source":"apache","compressible":false,"extensions":["weba"]},"audio/x-aac":{"source":"apache","compressible":false,"extensions":["aac"]},"audio/x-aiff":{"source":"apache","extensions":["aif","aiff","aifc"]},"audio/x-caf":{"source":"apache","compressible":false,"extensions":["caf"]},"audio/x-flac":{"source":"apache","extensions":["flac"]},"audio/x-m4a":{"source":"nginx","extensions":["m4a"]},"audio/x-matroska":{"source":"apache","extensions":["mka"]},"audio/x-mpegurl":{"source":"apache","extensions":["m3u"]},"audio/x-ms-wax":{"source":"apache","extensions":["wax"]},"audio/x-ms-wma":{"source":"apache","extensions":["wma"]},"audio/x-pn-realaudio":{"source":"apache","extensions":["ram","ra"]},"audio/x-pn-realaudio-plugin":{"source":"apache","extensions":["rmp"]},"audio/x-realaudio":{"source":"nginx","extensions":["ra"]},"audio/x-tta":{"source":"apache"},"audio/x-wav":{"source":"apache","extensions":["wav"]},"audio/xm":{"source":"apache","extensions":["xm"]},"chemical/x-cdx":{"source":"apache","extensions":["cdx"]},"chemical/x-cif":{"source":"apache","extensions":["cif"]},"chemical/x-cmdf":{"source":"apache","extensions":["cmdf"]},"chemical/x-cml":{"source":"apache","extensions":["cml"]},"chemical/x-csml":{"source":"apache","extensions":["csml"]},"chemical/x-pdb":{"source":"apache"},"chemical/x-xyz":{"source":"apache","extensions":["xyz"]},"font/collection":{"source":"iana","extensions":["ttc"]},"font/otf":{"source":"iana","compressible":true,"extensions":["otf"]},"font/sfnt":{"source":"iana"},"font/ttf":{"source":"iana","compressible":true,"extensions":["ttf"]},"font/woff":{"source":"iana","extensions":["woff"]},"font/woff2":{"source":"iana","extensions":["woff2"]},"image/aces":{"source":"iana","extensions":["exr"]},"image/apng":{"compressible":false,"extensions":["apng"]},"image/avci":{"source":"iana"},"image/avcs":{"source":"iana"},"image/avif":{"source":"iana","compressible":false,"extensions":["avif"]},"image/bmp":{"source":"iana","compressible":true,"extensions":["bmp"]},"image/cgm":{"source":"iana","extensions":["cgm"]},"image/dicom-rle":{"source":"iana","extensions":["drle"]},"image/emf":{"source":"iana","extensions":["emf"]},"image/fits":{"source":"iana","extensions":["fits"]},"image/g3fax":{"source":"iana","extensions":["g3"]},"image/gif":{"source":"iana","compressible":false,"extensions":["gif"]},"image/heic":{"source":"iana","extensions":["heic"]},"image/heic-sequence":{"source":"iana","extensions":["heics"]},"image/heif":{"source":"iana","extensions":["heif"]},"image/heif-sequence":{"source":"iana","extensions":["heifs"]},"image/hej2k":{"source":"iana","extensions":["hej2"]},"image/hsj2":{"source":"iana","extensions":["hsj2"]},"image/ief":{"source":"iana","extensions":["ief"]},"image/jls":{"source":"iana","extensions":["jls"]},"image/jp2":{"source":"iana","compressible":false,"extensions":["jp2","jpg2"]},"image/jpeg":{"source":"iana","compressible":false,"extensions":["jpeg","jpg","jpe"]},"image/jph":{"source":"iana","extensions":["jph"]},"image/jphc":{"source":"iana","extensions":["jhc"]},"image/jpm":{"source":"iana","compressible":false,"extensions":["jpm"]},"image/jpx":{"source":"iana","compressible":false,"extensions":["jpx","jpf"]},"image/jxr":{"source":"iana","extensions":["jxr"]},"image/jxra":{"source":"iana","extensions":["jxra"]},"image/jxrs":{"source":"iana","extensions":["jxrs"]},"image/jxs":{"source":"iana","extensions":["jxs"]},"image/jxsc":{"source":"iana","extensions":["jxsc"]},"image/jxsi":{"source":"iana","extensions":["jxsi"]},"image/jxss":{"source":"iana","extensions":["jxss"]},"image/ktx":{"source":"iana","extensions":["ktx"]},"image/ktx2":{"source":"iana","extensions":["ktx2"]},"image/naplps":{"source":"iana"},"image/pjpeg":{"compressible":false},"image/png":{"source":"iana","compressible":false,"extensions":["png"]},"image/prs.btif":{"source":"iana","extensions":["btif"]},"image/prs.pti":{"source":"iana","extensions":["pti"]},"image/pwg-raster":{"source":"iana"},"image/sgi":{"source":"apache","extensions":["sgi"]},"image/svg+xml":{"source":"iana","compressible":true,"extensions":["svg","svgz"]},"image/t38":{"source":"iana","extensions":["t38"]},"image/tiff":{"source":"iana","compressible":false,"extensions":["tif","tiff"]},"image/tiff-fx":{"source":"iana","extensions":["tfx"]},"image/vnd.adobe.photoshop":{"source":"iana","compressible":true,"extensions":["psd"]},"image/vnd.airzip.accelerator.azv":{"source":"iana","extensions":["azv"]},"image/vnd.cns.inf2":{"source":"iana"},"image/vnd.dece.graphic":{"source":"iana","extensions":["uvi","uvvi","uvg","uvvg"]},"image/vnd.djvu":{"source":"iana","extensions":["djvu","djv"]},"image/vnd.dvb.subtitle":{"source":"iana","extensions":["sub"]},"image/vnd.dwg":{"source":"iana","extensions":["dwg"]},"image/vnd.dxf":{"source":"iana","extensions":["dxf"]},"image/vnd.fastbidsheet":{"source":"iana","extensions":["fbs"]},"image/vnd.fpx":{"source":"iana","extensions":["fpx"]},"image/vnd.fst":{"source":"iana","extensions":["fst"]},"image/vnd.fujixerox.edmics-mmr":{"source":"iana","extensions":["mmr"]},"image/vnd.fujixerox.edmics-rlc":{"source":"iana","extensions":["rlc"]},"image/vnd.globalgraphics.pgb":{"source":"iana"},"image/vnd.microsoft.icon":{"source":"iana","compressible":true,"extensions":["ico"]},"image/vnd.mix":{"source":"iana"},"image/vnd.mozilla.apng":{"source":"iana"},"image/vnd.ms-dds":{"compressible":true,"extensions":["dds"]},"image/vnd.ms-modi":{"source":"iana","extensions":["mdi"]},"image/vnd.ms-photo":{"source":"apache","extensions":["wdp"]},"image/vnd.net-fpx":{"source":"iana","extensions":["npx"]},"image/vnd.pco.b16":{"source":"iana","extensions":["b16"]},"image/vnd.radiance":{"source":"iana"},"image/vnd.sealed.png":{"source":"iana"},"image/vnd.sealedmedia.softseal.gif":{"source":"iana"},"image/vnd.sealedmedia.softseal.jpg":{"source":"iana"},"image/vnd.svf":{"source":"iana"},"image/vnd.tencent.tap":{"source":"iana","extensions":["tap"]},"image/vnd.valve.source.texture":{"source":"iana","extensions":["vtf"]},"image/vnd.wap.wbmp":{"source":"iana","extensions":["wbmp"]},"image/vnd.xiff":{"source":"iana","extensions":["xif"]},"image/vnd.zbrush.pcx":{"source":"iana","extensions":["pcx"]},"image/webp":{"source":"apache","extensions":["webp"]},"image/wmf":{"source":"iana","extensions":["wmf"]},"image/x-3ds":{"source":"apache","extensions":["3ds"]},"image/x-cmu-raster":{"source":"apache","extensions":["ras"]},"image/x-cmx":{"source":"apache","extensions":["cmx"]},"image/x-freehand":{"source":"apache","extensions":["fh","fhc","fh4","fh5","fh7"]},"image/x-icon":{"source":"apache","compressible":true,"extensions":["ico"]},"image/x-jng":{"source":"nginx","extensions":["jng"]},"image/x-mrsid-image":{"source":"apache","extensions":["sid"]},"image/x-ms-bmp":{"source":"nginx","compressible":true,"extensions":["bmp"]},"image/x-pcx":{"source":"apache","extensions":["pcx"]},"image/x-pict":{"source":"apache","extensions":["pic","pct"]},"image/x-portable-anymap":{"source":"apache","extensions":["pnm"]},"image/x-portable-bitmap":{"source":"apache","extensions":["pbm"]},"image/x-portable-graymap":{"source":"apache","extensions":["pgm"]},"image/x-portable-pixmap":{"source":"apache","extensions":["ppm"]},"image/x-rgb":{"source":"apache","extensions":["rgb"]},"image/x-tga":{"source":"apache","extensions":["tga"]},"image/x-xbitmap":{"source":"apache","extensions":["xbm"]},"image/x-xcf":{"compressible":false},"image/x-xpixmap":{"source":"apache","extensions":["xpm"]},"image/x-xwindowdump":{"source":"apache","extensions":["xwd"]},"message/cpim":{"source":"iana"},"message/delivery-status":{"source":"iana"},"message/disposition-notification":{"source":"iana","extensions":["disposition-notification"]},"message/external-body":{"source":"iana"},"message/feedback-report":{"source":"iana"},"message/global":{"source":"iana","extensions":["u8msg"]},"message/global-delivery-status":{"source":"iana","extensions":["u8dsn"]},"message/global-disposition-notification":{"source":"iana","extensions":["u8mdn"]},"message/global-headers":{"source":"iana","extensions":["u8hdr"]},"message/http":{"source":"iana","compressible":false},"message/imdn+xml":{"source":"iana","compressible":true},"message/news":{"source":"iana"},"message/partial":{"source":"iana","compressible":false},"message/rfc822":{"source":"iana","compressible":true,"extensions":["eml","mime"]},"message/s-http":{"source":"iana"},"message/sip":{"source":"iana"},"message/sipfrag":{"source":"iana"},"message/tracking-status":{"source":"iana"},"message/vnd.si.simp":{"source":"iana"},"message/vnd.wfa.wsc":{"source":"iana","extensions":["wsc"]},"model/3mf":{"source":"iana","extensions":["3mf"]},"model/e57":{"source":"iana"},"model/gltf+json":{"source":"iana","compressible":true,"extensions":["gltf"]},"model/gltf-binary":{"source":"iana","compressible":true,"extensions":["glb"]},"model/iges":{"source":"iana","compressible":false,"extensions":["igs","iges"]},"model/mesh":{"source":"iana","compressible":false,"extensions":["msh","mesh","silo"]},"model/mtl":{"source":"iana","extensions":["mtl"]},"model/obj":{"source":"iana","extensions":["obj"]},"model/step":{"source":"iana"},"model/step+xml":{"source":"iana","compressible":true,"extensions":["stpx"]},"model/step+zip":{"source":"iana","compressible":false,"extensions":["stpz"]},"model/step-xml+zip":{"source":"iana","compressible":false,"extensions":["stpxz"]},"model/stl":{"source":"iana","extensions":["stl"]},"model/vnd.collada+xml":{"source":"iana","compressible":true,"extensions":["dae"]},"model/vnd.dwf":{"source":"iana","extensions":["dwf"]},"model/vnd.flatland.3dml":{"source":"iana"},"model/vnd.gdl":{"source":"iana","extensions":["gdl"]},"model/vnd.gs-gdl":{"source":"apache"},"model/vnd.gs.gdl":{"source":"iana"},"model/vnd.gtw":{"source":"iana","extensions":["gtw"]},"model/vnd.moml+xml":{"source":"iana","compressible":true},"model/vnd.mts":{"source":"iana","extensions":["mts"]},"model/vnd.opengex":{"source":"iana","extensions":["ogex"]},"model/vnd.parasolid.transmit.binary":{"source":"iana","extensions":["x_b"]},"model/vnd.parasolid.transmit.text":{"source":"iana","extensions":["x_t"]},"model/vnd.pytha.pyox":{"source":"iana"},"model/vnd.rosette.annotated-data-model":{"source":"iana"},"model/vnd.sap.vds":{"source":"iana","extensions":["vds"]},"model/vnd.usdz+zip":{"source":"iana","compressible":false,"extensions":["usdz"]},"model/vnd.valve.source.compiled-map":{"source":"iana","extensions":["bsp"]},"model/vnd.vtu":{"source":"iana","extensions":["vtu"]},"model/vrml":{"source":"iana","compressible":false,"extensions":["wrl","vrml"]},"model/x3d+binary":{"source":"apache","compressible":false,"extensions":["x3db","x3dbz"]},"model/x3d+fastinfoset":{"source":"iana","extensions":["x3db"]},"model/x3d+vrml":{"source":"apache","compressible":false,"extensions":["x3dv","x3dvz"]},"model/x3d+xml":{"source":"iana","compressible":true,"extensions":["x3d","x3dz"]},"model/x3d-vrml":{"source":"iana","extensions":["x3dv"]},"multipart/alternative":{"source":"iana","compressible":false},"multipart/appledouble":{"source":"iana"},"multipart/byteranges":{"source":"iana"},"multipart/digest":{"source":"iana"},"multipart/encrypted":{"source":"iana","compressible":false},"multipart/form-data":{"source":"iana","compressible":false},"multipart/header-set":{"source":"iana"},"multipart/mixed":{"source":"iana"},"multipart/multilingual":{"source":"iana"},"multipart/parallel":{"source":"iana"},"multipart/related":{"source":"iana","compressible":false},"multipart/report":{"source":"iana"},"multipart/signed":{"source":"iana","compressible":false},"multipart/vnd.bint.med-plus":{"source":"iana"},"multipart/voice-message":{"source":"iana"},"multipart/x-mixed-replace":{"source":"iana"},"text/1d-interleaved-parityfec":{"source":"iana"},"text/cache-manifest":{"source":"iana","compressible":true,"extensions":["appcache","manifest"]},"text/calendar":{"source":"iana","extensions":["ics","ifb"]},"text/calender":{"compressible":true},"text/cmd":{"compressible":true},"text/coffeescript":{"extensions":["coffee","litcoffee"]},"text/cql":{"source":"iana"},"text/cql-expression":{"source":"iana"},"text/cql-identifier":{"source":"iana"},"text/css":{"source":"iana","charset":"UTF-8","compressible":true,"extensions":["css"]},"text/csv":{"source":"iana","compressible":true,"extensions":["csv"]},"text/csv-schema":{"source":"iana"},"text/directory":{"source":"iana"},"text/dns":{"source":"iana"},"text/ecmascript":{"source":"iana"},"text/encaprtp":{"source":"iana"},"text/enriched":{"source":"iana"},"text/fhirpath":{"source":"iana"},"text/flexfec":{"source":"iana"},"text/fwdred":{"source":"iana"},"text/gff3":{"source":"iana"},"text/grammar-ref-list":{"source":"iana"},"text/html":{"source":"iana","compressible":true,"extensions":["html","htm","shtml"]},"text/jade":{"extensions":["jade"]},"text/javascript":{"source":"iana","compressible":true},"text/jcr-cnd":{"source":"iana"},"text/jsx":{"compressible":true,"extensions":["jsx"]},"text/less":{"compressible":true,"extensions":["less"]},"text/markdown":{"source":"iana","compressible":true,"extensions":["markdown","md"]},"text/mathml":{"source":"nginx","extensions":["mml"]},"text/mdx":{"compressible":true,"extensions":["mdx"]},"text/mizar":{"source":"iana"},"text/n3":{"source":"iana","charset":"UTF-8","compressible":true,"extensions":["n3"]},"text/parameters":{"source":"iana","charset":"UTF-8"},"text/parityfec":{"source":"iana"},"text/plain":{"source":"iana","compressible":true,"extensions":["txt","text","conf","def","list","log","in","ini"]},"text/provenance-notation":{"source":"iana","charset":"UTF-8"},"text/prs.fallenstein.rst":{"source":"iana"},"text/prs.lines.tag":{"source":"iana","extensions":["dsc"]},"text/prs.prop.logic":{"source":"iana"},"text/raptorfec":{"source":"iana"},"text/red":{"source":"iana"},"text/rfc822-headers":{"source":"iana"},"text/richtext":{"source":"iana","compressible":true,"extensions":["rtx"]},"text/rtf":{"source":"iana","compressible":true,"extensions":["rtf"]},"text/rtp-enc-aescm128":{"source":"iana"},"text/rtploopback":{"source":"iana"},"text/rtx":{"source":"iana"},"text/sgml":{"source":"iana","extensions":["sgml","sgm"]},"text/shaclc":{"source":"iana"},"text/shex":{"source":"iana","extensions":["shex"]},"text/slim":{"extensions":["slim","slm"]},"text/spdx":{"source":"iana","extensions":["spdx"]},"text/strings":{"source":"iana"},"text/stylus":{"extensions":["stylus","styl"]},"text/t140":{"source":"iana"},"text/tab-separated-values":{"source":"iana","compressible":true,"extensions":["tsv"]},"text/troff":{"source":"iana","extensions":["t","tr","roff","man","me","ms"]},"text/turtle":{"source":"iana","charset":"UTF-8","extensions":["ttl"]},"text/ulpfec":{"source":"iana"},"text/uri-list":{"source":"iana","compressible":true,"extensions":["uri","uris","urls"]},"text/vcard":{"source":"iana","compressible":true,"extensions":["vcard"]},"text/vnd.a":{"source":"iana"},"text/vnd.abc":{"source":"iana"},"text/vnd.ascii-art":{"source":"iana"},"text/vnd.curl":{"source":"iana","extensions":["curl"]},"text/vnd.curl.dcurl":{"source":"apache","extensions":["dcurl"]},"text/vnd.curl.mcurl":{"source":"apache","extensions":["mcurl"]},"text/vnd.curl.scurl":{"source":"apache","extensions":["scurl"]},"text/vnd.debian.copyright":{"source":"iana","charset":"UTF-8"},"text/vnd.dmclientscript":{"source":"iana"},"text/vnd.dvb.subtitle":{"source":"iana","extensions":["sub"]},"text/vnd.esmertec.theme-descriptor":{"source":"iana","charset":"UTF-8"},"text/vnd.familysearch.gedcom":{"source":"iana","extensions":["ged"]},"text/vnd.ficlab.flt":{"source":"iana"},"text/vnd.fly":{"source":"iana","extensions":["fly"]},"text/vnd.fmi.flexstor":{"source":"iana","extensions":["flx"]},"text/vnd.gml":{"source":"iana"},"text/vnd.graphviz":{"source":"iana","extensions":["gv"]},"text/vnd.hans":{"source":"iana"},"text/vnd.hgl":{"source":"iana"},"text/vnd.in3d.3dml":{"source":"iana","extensions":["3dml"]},"text/vnd.in3d.spot":{"source":"iana","extensions":["spot"]},"text/vnd.iptc.newsml":{"source":"iana"},"text/vnd.iptc.nitf":{"source":"iana"},"text/vnd.latex-z":{"source":"iana"},"text/vnd.motorola.reflex":{"source":"iana"},"text/vnd.ms-mediapackage":{"source":"iana"},"text/vnd.net2phone.commcenter.command":{"source":"iana"},"text/vnd.radisys.msml-basic-layout":{"source":"iana"},"text/vnd.senx.warpscript":{"source":"iana"},"text/vnd.si.uricatalogue":{"source":"iana"},"text/vnd.sosi":{"source":"iana"},"text/vnd.sun.j2me.app-descriptor":{"source":"iana","charset":"UTF-8","extensions":["jad"]},"text/vnd.trolltech.linguist":{"source":"iana","charset":"UTF-8"},"text/vnd.wap.si":{"source":"iana"},"text/vnd.wap.sl":{"source":"iana"},"text/vnd.wap.wml":{"source":"iana","extensions":["wml"]},"text/vnd.wap.wmlscript":{"source":"iana","extensions":["wmls"]},"text/vtt":{"source":"iana","charset":"UTF-8","compressible":true,"extensions":["vtt"]},"text/x-asm":{"source":"apache","extensions":["s","asm"]},"text/x-c":{"source":"apache","extensions":["c","cc","cxx","cpp","h","hh","dic"]},"text/x-component":{"source":"nginx","extensions":["htc"]},"text/x-fortran":{"source":"apache","extensions":["f","for","f77","f90"]},"text/x-gwt-rpc":{"compressible":true},"text/x-handlebars-template":{"extensions":["hbs"]},"text/x-java-source":{"source":"apache","extensions":["java"]},"text/x-jquery-tmpl":{"compressible":true},"text/x-lua":{"extensions":["lua"]},"text/x-markdown":{"compressible":true,"extensions":["mkd"]},"text/x-nfo":{"source":"apache","extensions":["nfo"]},"text/x-opml":{"source":"apache","extensions":["opml"]},"text/x-org":{"compressible":true,"extensions":["org"]},"text/x-pascal":{"source":"apache","extensions":["p","pas"]},"text/x-processing":{"compressible":true,"extensions":["pde"]},"text/x-sass":{"extensions":["sass"]},"text/x-scss":{"extensions":["scss"]},"text/x-setext":{"source":"apache","extensions":["etx"]},"text/x-sfv":{"source":"apache","extensions":["sfv"]},"text/x-suse-ymp":{"compressible":true,"extensions":["ymp"]},"text/x-uuencode":{"source":"apache","extensions":["uu"]},"text/x-vcalendar":{"source":"apache","extensions":["vcs"]},"text/x-vcard":{"source":"apache","extensions":["vcf"]},"text/xml":{"source":"iana","compressible":true,"extensions":["xml"]},"text/xml-external-parsed-entity":{"source":"iana"},"text/yaml":{"compressible":true,"extensions":["yaml","yml"]},"video/1d-interleaved-parityfec":{"source":"iana"},"video/3gpp":{"source":"iana","extensions":["3gp","3gpp"]},"video/3gpp-tt":{"source":"iana"},"video/3gpp2":{"source":"iana","extensions":["3g2"]},"video/av1":{"source":"iana"},"video/bmpeg":{"source":"iana"},"video/bt656":{"source":"iana"},"video/celb":{"source":"iana"},"video/dv":{"source":"iana"},"video/encaprtp":{"source":"iana"},"video/ffv1":{"source":"iana"},"video/flexfec":{"source":"iana"},"video/h261":{"source":"iana","extensions":["h261"]},"video/h263":{"source":"iana","extensions":["h263"]},"video/h263-1998":{"source":"iana"},"video/h263-2000":{"source":"iana"},"video/h264":{"source":"iana","extensions":["h264"]},"video/h264-rcdo":{"source":"iana"},"video/h264-svc":{"source":"iana"},"video/h265":{"source":"iana"},"video/iso.segment":{"source":"iana","extensions":["m4s"]},"video/jpeg":{"source":"iana","extensions":["jpgv"]},"video/jpeg2000":{"source":"iana"},"video/jpm":{"source":"apache","extensions":["jpm","jpgm"]},"video/jxsv":{"source":"iana"},"video/mj2":{"source":"iana","extensions":["mj2","mjp2"]},"video/mp1s":{"source":"iana"},"video/mp2p":{"source":"iana"},"video/mp2t":{"source":"iana","extensions":["ts"]},"video/mp4":{"source":"iana","compressible":false,"extensions":["mp4","mp4v","mpg4"]},"video/mp4v-es":{"source":"iana"},"video/mpeg":{"source":"iana","compressible":false,"extensions":["mpeg","mpg","mpe","m1v","m2v"]},"video/mpeg4-generic":{"source":"iana"},"video/mpv":{"source":"iana"},"video/nv":{"source":"iana"},"video/ogg":{"source":"iana","compressible":false,"extensions":["ogv"]},"video/parityfec":{"source":"iana"},"video/pointer":{"source":"iana"},"video/quicktime":{"source":"iana","compressible":false,"extensions":["qt","mov"]},"video/raptorfec":{"source":"iana"},"video/raw":{"source":"iana"},"video/rtp-enc-aescm128":{"source":"iana"},"video/rtploopback":{"source":"iana"},"video/rtx":{"source":"iana"},"video/scip":{"source":"iana"},"video/smpte291":{"source":"iana"},"video/smpte292m":{"source":"iana"},"video/ulpfec":{"source":"iana"},"video/vc1":{"source":"iana"},"video/vc2":{"source":"iana"},"video/vnd.cctv":{"source":"iana"},"video/vnd.dece.hd":{"source":"iana","extensions":["uvh","uvvh"]},"video/vnd.dece.mobile":{"source":"iana","extensions":["uvm","uvvm"]},"video/vnd.dece.mp4":{"source":"iana"},"video/vnd.dece.pd":{"source":"iana","extensions":["uvp","uvvp"]},"video/vnd.dece.sd":{"source":"iana","extensions":["uvs","uvvs"]},"video/vnd.dece.video":{"source":"iana","extensions":["uvv","uvvv"]},"video/vnd.directv.mpeg":{"source":"iana"},"video/vnd.directv.mpeg-tts":{"source":"iana"},"video/vnd.dlna.mpeg-tts":{"source":"iana"},"video/vnd.dvb.file":{"source":"iana","extensions":["dvb"]},"video/vnd.fvt":{"source":"iana","extensions":["fvt"]},"video/vnd.hns.video":{"source":"iana"},"video/vnd.iptvforum.1dparityfec-1010":{"source":"iana"},"video/vnd.iptvforum.1dparityfec-2005":{"source":"iana"},"video/vnd.iptvforum.2dparityfec-1010":{"source":"iana"},"video/vnd.iptvforum.2dparityfec-2005":{"source":"iana"},"video/vnd.iptvforum.ttsavc":{"source":"iana"},"video/vnd.iptvforum.ttsmpeg2":{"source":"iana"},"video/vnd.motorola.video":{"source":"iana"},"video/vnd.motorola.videop":{"source":"iana"},"video/vnd.mpegurl":{"source":"iana","extensions":["mxu","m4u"]},"video/vnd.ms-playready.media.pyv":{"source":"iana","extensions":["pyv"]},"video/vnd.nokia.interleaved-multimedia":{"source":"iana"},"video/vnd.nokia.mp4vr":{"source":"iana"},"video/vnd.nokia.videovoip":{"source":"iana"},"video/vnd.objectvideo":{"source":"iana"},"video/vnd.radgamettools.bink":{"source":"iana"},"video/vnd.radgamettools.smacker":{"source":"iana"},"video/vnd.sealed.mpeg1":{"source":"iana"},"video/vnd.sealed.mpeg4":{"source":"iana"},"video/vnd.sealed.swf":{"source":"iana"},"video/vnd.sealedmedia.softseal.mov":{"source":"iana"},"video/vnd.uvvu.mp4":{"source":"iana","extensions":["uvu","uvvu"]},"video/vnd.vivo":{"source":"iana","extensions":["viv"]},"video/vnd.youtube.yt":{"source":"iana"},"video/vp8":{"source":"iana"},"video/vp9":{"source":"iana"},"video/webm":{"source":"apache","compressible":false,"extensions":["webm"]},"video/x-f4v":{"source":"apache","extensions":["f4v"]},"video/x-fli":{"source":"apache","extensions":["fli"]},"video/x-flv":{"source":"apache","compressible":false,"extensions":["flv"]},"video/x-m4v":{"source":"apache","extensions":["m4v"]},"video/x-matroska":{"source":"apache","compressible":false,"extensions":["mkv","mk3d","mks"]},"video/x-mng":{"source":"apache","extensions":["mng"]},"video/x-ms-asf":{"source":"apache","extensions":["asf","asx"]},"video/x-ms-vob":{"source":"apache","extensions":["vob"]},"video/x-ms-wm":{"source":"apache","extensions":["wm"]},"video/x-ms-wmv":{"source":"apache","compressible":false,"extensions":["wmv"]},"video/x-ms-wmx":{"source":"apache","extensions":["wmx"]},"video/x-ms-wvx":{"source":"apache","extensions":["wvx"]},"video/x-msvideo":{"source":"apache","extensions":["avi"]},"video/x-sgi-movie":{"source":"apache","extensions":["movie"]},"video/x-smv":{"source":"apache","extensions":["smv"]},"x-conference/x-cooltalk":{"source":"apache","extensions":["ice"]},"x-shader/x-fragment":{"compressible":true},"x-shader/x-vertex":{"compressible":true}}',
        );
      },
      (e, t, n) => {
        "use strict";
        n.r(t),
          n.d(t, {
            validateCookie: () => r,
            getCookies: () => s,
            setCookies: () => c,
            db: () => a,
            serialize: () => o,
          });
        var i = n(142);
        function r(e, t, n = !1) {
          return (
            (!e.httpOnly || !n) &&
            (e.domain.startsWith(".")
              ? !!t.url.hostname.endsWith(e.domain.slice(1))
              : e.domain === t.url.hostname &&
                (!e.secure || "http:" !== t.url.protocol) &&
                !!t.url.pathname.startsWith(e.path))
          );
        }
        async function a(e) {
          const t = await e("__op", 1, {
            upgrade(e, t, n, i) {
              e.createObjectStore("cookies", { keyPath: "id" }).createIndex(
                "path",
                "path",
              );
            },
          });
          return t.transaction(["cookies"], "readwrite").store.index("path"), t;
        }
        function o(e = [], t, n) {
          let i = "";
          for (const a of e)
            r(a, t, n) &&
              (i.length && (i += "; "),
              (i += a.name),
              (i += "="),
              (i += a.value));
          return i;
        }
        async function s(e) {
          const t = new Date();
          return (await e.getAll("cookies")).filter((n) => {
            let i = !1;
            return (
              n.set &&
                (n.maxAge
                  ? (i = n.set.getTime() + 1e3 * n.maxAge < t)
                  : n.expires &&
                    (i = new Date(n.expires.toLocaleString()) < t)),
              !i || (e.delete("cookies", n.id), !1)
            );
          });
        }
        function c(e, t, n) {
          if (!t) return !1;
          const r = i(e, { decodeValues: !1 });
          for (const e of r)
            e.domain || (e.domain = "." + n.url.hostname),
              e.path || (e.path = "/"),
              e.domain.startsWith(".") || (e.domain = "." + e.domain),
              t.put("cookies", {
                ...e,
                id: `${e.domain}@${e.path}@${e.name}`,
                set: new Date(Date.now()),
              });
          return !0;
        }
      },
      (e, t, n) => {
        "use strict";
        function i(e, t = e.meta) {
          const {
              html: n,
              js: i,
              css: r,
              attributePrefix: s,
              handlerScript: c,
              bundleScript: m,
            } = e,
            h = s + "-attr-";
          n.on("attr", (r, s) => {
            "base" === r.node.tagName &&
              "href" === r.name &&
              r.options.document &&
              (t.base = new URL(r.value, t.url)),
              "rewrite" === s &&
                a(r.name, r.tagName) &&
                (r.node.setAttribute(h + r.name, r.value),
                (r.value = e.rewriteUrl(r.value, t))),
              "rewrite" === s &&
                d(r.name) &&
                (r.node.setAttribute(h + r.name, r.value),
                (r.value = n.wrapSrcset(r.value, t))),
              "rewrite" === s &&
                u(r.name) &&
                (r.node.setAttribute(h + r.name, r.value),
                (r.value = n.rewrite(r.value, {
                  ...t,
                  document: !0,
                  injectHead: r.options.injectHead || [],
                }))),
              "rewrite" === s &&
                p(r.name) &&
                (r.node.setAttribute(h + r.name, r.value),
                (r.value = e.rewriteCSS(r.value, {
                  context: "declarationList",
                }))),
              "rewrite" === s && l(r.name) && (r.name = h + r.name),
              "rewrite" === s &&
                o(r.name) &&
                (r.node.setAttribute(h + r.name, r.value),
                (r.value = i.rewrite(r.value, t))),
              "source" === s &&
                r.name.startsWith(h) &&
                (r.node.hasAttribute(r.name.slice(h.length)) &&
                  r.node.removeAttribute(r.name.slice(h.length)),
                (r.name = r.name.slice(h.length)));
          });
        }
        function r(e, t = e.meta) {
          const { html: n, js: i, css: r, attributePrefix: a } = e;
          return (
            n.on("text", (e, t) => {
              "script" === e.element.tagName &&
                (e.value =
                  "rewrite" === t ? i.rewrite(e.value) : i.source(e.value)),
                "style" === e.element.tagName &&
                  (e.value =
                    "rewrite" === t ? r.rewrite(e.value) : r.source(e.value));
            }),
            !0
          );
        }
        function a(e, t) {
          return (
            ("object" === t && "data" === e) ||
            [
              "src",
              "href",
              "ping",
              "movie",
              "action",
              "poster",
              "profile",
              "background",
            ].indexOf(e) > -1
          );
        }
        function o(e) {
          return (
            [
              "onafterprint",
              "onbeforeprint",
              "onbeforeunload",
              "onerror",
              "onhashchange",
              "onload",
              "onmessage",
              "onoffline",
              "ononline",
              "onpagehide",
              "onpopstate",
              "onstorage",
              "onunload",
              "onblur",
              "onchange",
              "oncontextmenu",
              "onfocus",
              "oninput",
              "oninvalid",
              "onreset",
              "onsearch",
              "onselect",
              "onsubmit",
              "onkeydown",
              "onkeypress",
              "onkeyup",
              "onclick",
              "ondblclick",
              "onmousedown",
              "onmousemove",
              "onmouseout",
              "onmouseover",
              "onmouseup",
              "onmousewheel",
              "onwheel",
              "ondrag",
              "ondragend",
              "ondragenter",
              "ondragleave",
              "ondragover",
              "ondragstart",
              "ondrop",
              "onscroll",
              "oncopy",
              "oncut",
              "onpaste",
              "onabort",
              "oncanplay",
              "oncanplaythrough",
              "oncuechange",
              "ondurationchange",
              "onemptied",
              "onended",
              "onerror",
              "onloadeddata",
              "onloadedmetadata",
              "onloadstart",
              "onpause",
              "onplay",
              "onplaying",
              "onprogress",
              "onratechange",
              "onseeked",
              "onseeking",
              "onstalled",
              "onsuspend",
              "ontimeupdate",
              "onvolumechange",
              "onwaiting",
            ].indexOf(e) > -1
          );
        }
        function s(e) {
          const { html: t, js: n, css: i, attributePrefix: r } = e;
          t.on(
            "element",
            (e, t) =>
              "rewrite" === t &&
              "head" === e.tagName &&
              "injectHead" in e.options &&
              void e.childNodes.unshift(...e.options.injectHead),
          );
        }
        function c(
          e = "/handler.js?v=4",
          t = "/bundle.js?v=4",
          n = "/config.js?v=4",
          i = "",
          r = "",
        ) {
          return [
            {
              tagName: "script",
              nodeName: "script",
              childNodes: [
                {
                  nodeName: "#text",
                  value: `window.__uv$cookies = atob("${btoa(i)}");\nwindow.__uv$referrer = atob("${btoa(r)}");`,
                },
              ],
              attrs: [{ name: "__uv-script", value: "1", skip: !0 }],
              skip: !0,
            },
            {
              tagName: "script",
              nodeName: "script",
              childNodes: [],
              attrs: [
                { name: "src", value: t, skip: !0 },
                { name: "__uv-script", value: "1", skip: !0 },
              ],
            },
            {
              tagName: "script",
              nodeName: "script",
              childNodes: [],
              attrs: [
                { name: "src", value: n, skip: !0 },
                { name: "__uv-script", value: "1", skip: !0 },
              ],
            },
            {
              tagName: "script",
              nodeName: "script",
              childNodes: [],
              attrs: [
                { name: "src", value: e, skip: !0 },
                { name: "__uv-script", value: "1", skip: !0 },
              ],
            },
          ];
        }
        function l(e) {
          return (
            [
              "http-equiv",
              "integrity",
              "sandbox",
              "nonce",
              "crossorigin",
            ].indexOf(e) > -1
          );
        }
        function u(e) {
          return "srcdoc" === e;
        }
        function p(e) {
          return "style" === e;
        }
        function d(e) {
          return "srcset" === e || "imagesrcset" === e;
        }
        n.r(t),
          n.d(t, {
            attributes: () => i,
            createInjection: () => c,
            text: () => r,
            isUrl: () => a,
            isEvent: () => o,
            isForbidden: () => l,
            isHtml: () => u,
            isStyle: () => p,
            isSrcset: () => d,
            injectHead: () => s,
          });
      },
      (e, t, n) => {
        "use strict";
        function i(e) {
          const { css: t } = e;
          t.on("Url", (t, n, i) => {
            t.value =
              "rewrite" === i ? e.rewriteUrl(t.value) : e.sourceUrl(t.value);
          });
        }
        function r(e) {
          const { css: t } = e;
          t.on("Atrule", (t, n, i) => {
            if ("import" !== t.name) return !1;
            const { data: r } = t.prelude.children.head;
            if ("Url" === r.type) return !1;
            r.value =
              "rewrite" === i ? e.rewriteUrl(r.value) : e.sourceUrl(r.value);
          });
        }
        n.r(t), n.d(t, { url: () => i, importStyle: () => r });
      },
      (e, t, n) => {
        "use strict";
        n.r(t),
          n.d(t, {
            property: () => r,
            wrapEval: () => o,
            dynamicImport: () => c,
            importDeclaration: () => s,
            identifier: () => a,
            unwrap: () => l,
          });
        var i = n(141);
        function r(e) {
          const { js: t } = e;
          t.on("MemberExpression", (e, t, n) => {
            if ("Super" === e.object.type) return !1;
            if (
              ("rewrite" === n &&
                (function (e) {
                  if (!e.computed) return !1;
                  const { property: t } = e;
                  t.type, 0;
                  return !0;
                })(e) &&
                (t.changes.push({
                  node: "__uv.$wrap((",
                  start: e.property.start,
                  end: e.property.start,
                }),
                (e.iterateEnd = function () {
                  t.changes.push({
                    node: "))",
                    start: e.property.end,
                    end: e.property.end,
                  });
                })),
              ((!e.computed &&
                "location" === e.property.name &&
                "rewrite" === n) ||
                ("__uv$location" === e.property.name && "source" === n)) &&
                t.changes.push({
                  start: e.property.start,
                  end: e.property.end,
                  node:
                    "rewrite" === n
                      ? "__uv$setSource(__uv).__uv$location"
                      : "location",
                }),
              ((!e.computed && "top" === e.property.name && "rewrite" === n) ||
                ("__uv$top" === e.property.name && "source" === n)) &&
                t.changes.push({
                  start: e.property.start,
                  end: e.property.end,
                  node:
                    "rewrite" === n ? "__uv$setSource(__uv).__uv$top" : "top",
                }),
              ((!e.computed &&
                "parent" === e.property.name &&
                "rewrite" === n) ||
                ("__uv$parent" === e.property.name && "source" === n)) &&
                t.changes.push({
                  start: e.property.start,
                  end: e.property.end,
                  node:
                    "rewrite" === n
                      ? "__uv$setSource(__uv).__uv$parent"
                      : "parent",
                }),
              e.computed ||
                "postMessage" !== e.property.name ||
                "rewrite" !== n ||
                t.changes.push({
                  start: e.property.start,
                  end: e.property.end,
                  node: "__uv$setSource(__uv).postMessage",
                }),
              ((!e.computed && "eval" === e.property.name && "rewrite" === n) ||
                ("__uv$eval" === e.property.name && "source" === n)) &&
                t.changes.push({
                  start: e.property.start,
                  end: e.property.end,
                  node:
                    "rewrite" === n ? "__uv$setSource(__uv).__uv$eval" : "eval",
                }),
              !e.computed &&
                "__uv$setSource" === e.property.name &&
                "source" === n &&
                e.parent.type === i.Syntax.CallExpression)
            ) {
              const { parent: n, property: i } = e;
              t.changes.push({ start: i.start - 1, end: n.end }),
                (e.iterateEnd = function () {
                  t.changes.push({ start: i.start, end: n.end });
                });
            }
          });
        }
        function a(e) {
          const { js: t } = e;
          t.on("Identifier", (e, t, n) => {
            if ("rewrite" !== n) return !1;
            const { parent: r } = e;
            return (
              !!["location", "eval", "parent", "top"].includes(e.name) &&
              (r.type !== i.Syntax.VariableDeclarator || r.id !== e) &&
              ((r.type !== i.Syntax.AssignmentExpression &&
                r.type !== i.Syntax.AssignmentPattern) ||
                r.left !== e) &&
              ((r.type !== i.Syntax.FunctionExpression &&
                r.type !== i.Syntax.FunctionDeclaration) ||
                r.id !== e) &&
              !(
                r.type === i.Syntax.MemberExpression &&
                r.property === e &&
                !r.computed
              ) &&
              ("eval" !== e.name ||
                r.type !== i.Syntax.CallExpression ||
                r.callee !== e) &&
              (r.type !== i.Syntax.Property || r.key !== e) &&
              (r.type !== i.Syntax.Property || r.value !== e || !r.shorthand) &&
              (r.type !== i.Syntax.UpdateExpression ||
                ("++" !== r.operator && "--" !== r.operator)) &&
              ((r.type !== i.Syntax.FunctionExpression &&
                r.type !== i.Syntax.FunctionDeclaration &&
                r.type !== i.Syntax.ArrowFunctionExpression) ||
                -1 === r.params.indexOf(e)) &&
              r.type !== i.Syntax.MethodDefinition &&
              r.type !== i.Syntax.ClassDeclaration &&
              r.type !== i.Syntax.RestElement &&
              r.type !== i.Syntax.ExportSpecifier &&
              r.type !== i.Syntax.ImportSpecifier &&
              void t.changes.push({
                start: e.start,
                end: e.end,
                node: "__uv.$get(" + e.name + ")",
              })
            );
          });
        }
        function o(e) {
          const { js: t } = e;
          t.on("CallExpression", (e, t, n) => {
            if ("rewrite" !== n) return !1;
            if (!e.arguments.length) return !1;
            if ("Identifier" !== e.callee.type) return !1;
            if ("eval" !== e.callee.name) return !1;
            const [i] = e.arguments;
            t.changes.push({
              node: "__uv.js.rewrite(",
              start: i.start,
              end: i.start,
            }),
              (e.iterateEnd = function () {
                t.changes.push({ node: ")", start: i.end, end: i.end });
              });
          });
        }
        function s(e) {
          const { js: t } = e;
          t.on(i.Syntax.Literal, (t, n, r) => {
            if (
              (t.parent.type !== i.Syntax.ImportDeclaration &&
                t.parent.type !== i.Syntax.ExportAllDeclaration &&
                t.parent.type !== i.Syntax.ExportNamedDeclaration) ||
              t.parent.source !== t
            )
              return !1;
            n.changes.push({
              start: t.start + 1,
              end: t.end - 1,
              node:
                "rewrite" === r ? e.rewriteUrl(t.value) : e.sourceUrl(t.value),
            });
          });
        }
        function c(e) {
          const { js: t } = e;
          t.on(i.Syntax.ImportExpression, (e, t, n) => {
            if ("rewrite" !== n) return !1;
            t.changes.push({
              node: "__uv.rewriteUrl(",
              start: e.source.start,
              end: e.source.start,
            }),
              (e.iterateEnd = function () {
                t.changes.push({
                  node: ")",
                  start: e.source.end,
                  end: e.source.end,
                });
              });
          });
        }
        function l(e) {
          const { js: t } = e;
          t.on("CallExpression", (e, t, n) => {
            if ("source" !== n) return !1;
            if (!u(e.callee)) return !1;
            switch (e.callee.property.name) {
              case "$wrap":
                if (
                  !e.arguments ||
                  e.parent.type !== i.Syntax.MemberExpression ||
                  e.parent.property !== e
                )
                  return !1;
                const [n] = e.arguments;
                t.changes.push({ start: e.callee.start, end: n.start }),
                  (e.iterateEnd = function () {
                    t.changes.push({ start: e.end - 2, end: e.end });
                  });
                break;
              case "$get":
              case "rewriteUrl":
                const [r] = e.arguments;
                t.changes.push({ start: e.callee.start, end: r.start }),
                  (e.iterateEnd = function () {
                    t.changes.push({ start: e.end - 1, end: e.end });
                  });
                break;
              case "rewrite":
                const [a] = e.arguments;
                t.changes.push({ start: e.callee.start, end: a.start }),
                  (e.iterateEnd = function () {
                    t.changes.push({ start: e.end - 1, end: e.end });
                  });
            }
          });
        }
        function u(e) {
          return (
            e.type === i.Syntax.MemberExpression &&
            (!("rewrite" !== e.property.name || !u(e.object)) ||
              (e.object.type === i.Syntax.Identifier &&
                "__uv" === e.object.name &&
                !!["js", "$get", "$wrap", "rewriteUrl"].includes(
                  e.property.name,
                )))
          );
        }
      },
      (e, t, n) => {
        "use strict";
        n.r(t),
          n.d(t, {
            unwrap: () => i.u,
            wrap: () => i.w,
            deleteDB: () => a,
            openDB: () => r,
          });
        var i = n(152);
        function r(
          e,
          t,
          { blocked: n, upgrade: r, blocking: a, terminated: o } = {},
        ) {
          const s = indexedDB.open(e, t),
            c = (0, i.w)(s);
          return (
            r &&
              s.addEventListener("upgradeneeded", (e) => {
                r(
                  (0, i.w)(s.result),
                  e.oldVersion,
                  e.newVersion,
                  (0, i.w)(s.transaction),
                );
              }),
            n && s.addEventListener("blocked", () => n()),
            c
              .then((e) => {
                o && e.addEventListener("close", () => o()),
                  a && e.addEventListener("versionchange", () => a());
              })
              .catch(() => {}),
            c
          );
        }
        function a(e, { blocked: t } = {}) {
          const n = indexedDB.deleteDatabase(e);
          return (
            t && n.addEventListener("blocked", () => t()),
            (0, i.w)(n).then(() => {})
          );
        }
        const o = ["get", "getKey", "getAll", "getAllKeys", "count"],
          s = ["put", "add", "delete", "clear"],
          c = new Map();
        function l(e, t) {
          if (!(e instanceof IDBDatabase) || t in e || "string" != typeof t)
            return;
          if (c.get(t)) return c.get(t);
          const n = t.replace(/FromIndex$/, ""),
            i = t !== n,
            r = s.includes(n);
          if (
            !(n in (i ? IDBIndex : IDBObjectStore).prototype) ||
            (!r && !o.includes(n))
          )
            return;
          const a = async function (e, ...t) {
            const a = this.transaction(e, r ? "readwrite" : "readonly");
            let o = a.store;
            return (
              i && (o = o.index(t.shift())),
              (await Promise.all([o[n](...t), r && a.done]))[0]
            );
          };
          return c.set(t, a), a;
        }
        (0, i.r)((e) => ({
          ...e,
          get: (t, n, i) => l(t, n) || e.get(t, n, i),
          has: (t, n) => !!l(t, n) || e.has(t, n),
        }));
      },
      (e, t, n) => {
        "use strict";
        n.r(t),
          n.d(t, {
            a: () => u,
            i: () => i,
            r: () => d,
            u: () => g,
            w: () => f,
          });
        const i = (e, t) => t.some((t) => e instanceof t);
        let r, a;
        const o = new WeakMap(),
          s = new WeakMap(),
          c = new WeakMap(),
          l = new WeakMap(),
          u = new WeakMap();
        let p = {
          get(e, t, n) {
            if (e instanceof IDBTransaction) {
              if ("done" === t) return s.get(e);
              if ("objectStoreNames" === t)
                return e.objectStoreNames || c.get(e);
              if ("store" === t)
                return n.objectStoreNames[1]
                  ? void 0
                  : n.objectStore(n.objectStoreNames[0]);
            }
            return f(e[t]);
          },
          set: (e, t, n) => ((e[t] = n), !0),
          has: (e, t) =>
            (e instanceof IDBTransaction && ("done" === t || "store" === t)) ||
            t in e,
        };
        function d(e) {
          p = e(p);
        }
        function m(e) {
          return e !== IDBDatabase.prototype.transaction ||
            "objectStoreNames" in IDBTransaction.prototype
            ? (
                a ||
                (a = [
                  IDBCursor.prototype.advance,
                  IDBCursor.prototype.continue,
                  IDBCursor.prototype.continuePrimaryKey,
                ])
              ).includes(e)
              ? function (...t) {
                  return e.apply(g(this), t), f(o.get(this));
                }
              : function (...t) {
                  return f(e.apply(g(this), t));
                }
            : function (t, ...n) {
                const i = e.call(g(this), t, ...n);
                return c.set(i, t.sort ? t.sort() : [t]), f(i);
              };
        }
        function h(e) {
          return "function" == typeof e
            ? m(e)
            : (e instanceof IDBTransaction &&
                (function (e) {
                  if (s.has(e)) return;
                  const t = new Promise((t, n) => {
                    const i = () => {
                        e.removeEventListener("complete", r),
                          e.removeEventListener("error", a),
                          e.removeEventListener("abort", a);
                      },
                      r = () => {
                        t(), i();
                      },
                      a = () => {
                        n(
                          e.error ||
                            new DOMException("AbortError", "AbortError"),
                        ),
                          i();
                      };
                    e.addEventListener("complete", r),
                      e.addEventListener("error", a),
                      e.addEventListener("abort", a);
                  });
                  s.set(e, t);
                })(e),
              i(
                e,
                r ||
                  (r = [
                    IDBDatabase,
                    IDBObjectStore,
                    IDBIndex,
                    IDBCursor,
                    IDBTransaction,
                  ]),
              )
                ? new Proxy(e, p)
                : e);
        }
        function f(e) {
          if (e instanceof IDBRequest)
            return (function (e) {
              const t = new Promise((t, n) => {
                const i = () => {
                    e.removeEventListener("success", r),
                      e.removeEventListener("error", a);
                  },
                  r = () => {
                    t(f(e.result)), i();
                  },
                  a = () => {
                    n(e.error), i();
                  };
                e.addEventListener("success", r),
                  e.addEventListener("error", a);
              });
              return (
                t
                  .then((t) => {
                    t instanceof IDBCursor && o.set(t, e);
                  })
                  .catch(() => {}),
                u.set(t, e),
                t
              );
            })(e);
          if (l.has(e)) return l.get(e);
          const t = h(e);
          return t !== e && (l.set(e, t), u.set(t, e)), t;
        }
        const g = (e) => u.get(e);
      },
      (e, t, n) => {
        "use strict";
        n.r(t), n.d(t, { default: () => E });
        var i = n(154),
          r = n(157),
          a = n(158),
          o = n(159),
          s = n(160),
          c = n(161),
          l = n(162),
          u = n(163),
          p = n(164),
          d = n(165),
          m = n(166),
          h = n(167),
          f = n(168),
          g = n(169),
          x = n(170),
          b = n(171),
          v = n(155),
          k = n(172),
          T = n(173);
        class y extends v.default {
          constructor(e = self, t = !e.window) {
            super(),
              (this.window = e),
              (this.nativeMethods = {
                fnToString: this.window.Function.prototype.toString,
                defineProperty: this.window.Object.defineProperty,
                getOwnPropertyDescriptor:
                  this.window.Object.getOwnPropertyDescriptor,
                getOwnPropertyDescriptors:
                  this.window.Object.getOwnPropertyDescriptors,
                getOwnPropertyNames: this.window.Object.getOwnPropertyNames,
                keys: this.window.Object.keys,
                getOwnPropertySymbols: this.window.Object.getOwnPropertySymbols,
                isArray: this.window.Array.isArray,
                setPrototypeOf: this.window.Object.setPrototypeOf,
                isExtensible: this.window.Object.isExtensible,
                Map: this.window.Map,
                Proxy: this.window.Proxy,
              }),
              (this.worker = t),
              (this.fetch = new l.default(this)),
              (this.xhr = new p.default(this)),
              (this.history = new m.default(this)),
              (this.element = new r.default(this)),
              (this.node = new a.default(this)),
              (this.document = new i.default(this)),
              (this.function = new s.default(this)),
              (this.object = new c.default(this)),
              (this.message = new f.default(this)),
              (this.websocket = new u.default(this)),
              (this.navigator = new g.default(this)),
              (this.eventSource = new d.default(this)),
              (this.attribute = new o.default(this)),
              (this.url = new b.default(this)),
              (this.workers = new x.default(this)),
              (this.location = new h.default(this)),
              (this.storage = new k.default(this)),
              (this.style = new T.default(this));
          }
          initLocation(e, t) {
            this.location = new h.default(this, t, e, this.worker);
          }
          override(e, t, n, i) {
            if ((!t) in e) return !1;
            const r = this.wrap(e, t, n, i);
            return (e[t] = r);
          }
          overrideDescriptor(e, t, n = {}) {
            const i = this.wrapDescriptor(e, t, n);
            return i ? (this.nativeMethods.defineProperty(e, t, i), i) : {};
          }
          wrap(e, t, n, i) {
            const r = e[t];
            if (!r) return r;
            const a =
              "prototype" in r
                ? function () {
                    return n(r, this, [...arguments]);
                  }
                : {
                    attach() {
                      return n(r, this, [...arguments]);
                    },
                  }.attach;
            return (
              i && ((a.prototype = r.prototype), (a.prototype.constructor = a)),
              this.emit("wrap", r, a, !!i),
              a
            );
          }
          wrapDescriptor(e, t, n = {}) {
            const i = this.nativeMethods.getOwnPropertyDescriptor(e, t);
            if (!i) return !1;
            for (let e in n)
              e in i &&
                (i[e] =
                  "get" === e || "set" === e
                    ? this.wrap(i, e, n[e])
                    : "function" == typeof n[e]
                      ? n[e](i[e])
                      : n[e]);
            return i;
          }
        }
        const E = y;
        "object" == typeof self && (self.UVClient = y);
      },
      (e, t, n) => {
        "use strict";
        n.r(t), n.d(t, { default: () => o });
        var i = n(155),
          r = n(156);
        class a extends i.default {
          constructor(e) {
            super(),
              (this.ctx = e),
              (this.window = e.window),
              (this.document = this.window.document),
              (this.Document = this.window.Document || {}),
              (this.DOMParser = this.window.DOMParser || {}),
              (this.docProto = this.Document.prototype || {}),
              (this.domProto = this.DOMParser.prototype || {}),
              (this.title = e.nativeMethods.getOwnPropertyDescriptor(
                this.docProto,
                "title",
              )),
              (this.cookie = e.nativeMethods.getOwnPropertyDescriptor(
                this.docProto,
                "cookie",
              )),
              (this.referrer = e.nativeMethods.getOwnPropertyDescriptor(
                this.docProto,
                "referrer",
              )),
              (this.domain = e.nativeMethods.getOwnPropertyDescriptor(
                this.docProto,
                "domain",
              )),
              (this.documentURI = e.nativeMethods.getOwnPropertyDescriptor(
                this.docProto,
                "documentURI",
              )),
              (this.write = this.docProto.write),
              (this.writeln = this.docProto.writeln),
              (this.querySelector = this.docProto.querySelector),
              (this.querySelectorAll = this.docProto.querySelectorAll),
              (this.parseFromString = this.domProto.parseFromString),
              (this.URL = e.nativeMethods.getOwnPropertyDescriptor(
                this.docProto,
                "URL",
              ));
          }
          overrideParseFromString() {
            this.ctx.override(this.domProto, "parseFromString", (e, t, n) => {
              if (2 > n.length) return e.apply(t, n);
              let [i, a] = n;
              const o = new r.default({ string: i, type: a }, e, t);
              return (
                this.emit("parseFromString", o),
                o.intercepted
                  ? o.returnValue
                  : o.target.call(o.that, o.data.string, o.data.type)
              );
            });
          }
          overrideQuerySelector() {
            this.ctx.override(this.docProto, "querySelector", (e, t, n) => {
              if (!n.length) return e.apply(t, n);
              let [i] = n;
              const a = new r.default({ selectors: i }, e, t);
              return (
                this.emit("querySelector", a),
                a.intercepted
                  ? a.returnValue
                  : a.target.call(a.that, a.data.selectors)
              );
            });
          }
          overrideDomain() {
            this.ctx.overrideDescriptor(this.docProto, "domain", {
              get: (e, t) => {
                const n = new r.default({ value: e.call(t) }, e, t);
                return (
                  this.emit("getDomain", n),
                  n.intercepted ? n.returnValue : n.data.value
                );
              },
              set: (e, t, [n]) => {
                const i = new r.default({ value: n }, e, t);
                return (
                  this.emit("setDomain", i),
                  i.intercepted
                    ? i.returnValue
                    : i.target.call(i.that, i.data.value)
                );
              },
            });
          }
          overrideReferrer() {
            this.ctx.overrideDescriptor(this.docProto, "referrer", {
              get: (e, t) => {
                const n = new r.default({ value: e.call(t) }, e, t);
                return (
                  this.emit("referrer", n),
                  n.intercepted ? n.returnValue : n.data.value
                );
              },
            });
          }
          overrideCreateTreeWalker() {
            this.ctx.override(this.docProto, "createTreeWalker", (e, t, n) => {
              if (!n.length) return e.apply(t, n);
              let [i, a = 4294967295, o, s] = n;
              const c = new r.default(
                { root: i, show: a, filter: o, expandEntityReferences: s },
                e,
                t,
              );
              return (
                this.emit("createTreeWalker", c),
                c.intercepted
                  ? c.returnValue
                  : c.target.call(
                      c.that,
                      c.data.root,
                      c.data.show,
                      c.data.filter,
                      c.data.expandEntityReferences,
                    )
              );
            });
          }
          overrideWrite() {
            this.ctx.override(this.docProto, "write", (e, t, n) => {
              if (!n.length) return e.apply(t, n);
              let [...i] = n;
              const a = new r.default({ html: i }, e, t);
              return (
                this.emit("write", a),
                a.intercepted
                  ? a.returnValue
                  : a.target.apply(a.that, a.data.html)
              );
            }),
              this.ctx.override(this.docProto, "writeln", (e, t, n) => {
                if (!n.length) return e.apply(t, n);
                let [...i] = n;
                const a = new r.default({ html: i }, e, t);
                return (
                  this.emit("writeln", a),
                  a.intercepted
                    ? a.returnValue
                    : a.target.apply(a.that, a.data.html)
                );
              });
          }
          overrideDocumentURI() {
            this.ctx.overrideDescriptor(this.docProto, "documentURI", {
              get: (e, t) => {
                const n = new r.default({ value: e.call(t) }, e, t);
                return (
                  this.emit("documentURI", n),
                  n.intercepted ? n.returnValue : n.data.value
                );
              },
            });
          }
          overrideURL() {
            this.ctx.overrideDescriptor(this.docProto, "URL", {
              get: (e, t) => {
                const n = new r.default({ value: e.call(t) }, e, t);
                return (
                  this.emit("url", n),
                  n.intercepted ? n.returnValue : n.data.value
                );
              },
            });
          }
          overrideReferrer() {
            this.ctx.overrideDescriptor(this.docProto, "referrer", {
              get: (e, t) => {
                const n = new r.default({ value: e.call(t) }, e, t);
                return (
                  this.emit("referrer", n),
                  n.intercepted ? n.returnValue : n.data.value
                );
              },
            });
          }
          overrideCookie() {
            this.ctx.overrideDescriptor(this.docProto, "cookie", {
              get: (e, t) => {
                const n = new r.default({ value: e.call(t) }, e, t);
                return (
                  this.emit("getCookie", n),
                  n.intercepted ? n.returnValue : n.data.value
                );
              },
              set: (e, t, [n]) => {
                const i = new r.default({ value: n }, e, t);
                return (
                  this.emit("setCookie", i),
                  i.intercepted
                    ? i.returnValue
                    : i.target.call(i.that, i.data.value)
                );
              },
            });
          }
          overrideTitle() {
            this.ctx.overrideDescriptor(this.docProto, "title", {
              get: (e, t) => {
                const n = new r.default({ value: e.call(t) }, e, t);
                return (
                  this.emit("getTitle", n),
                  n.intercepted ? n.returnValue : n.data.value
                );
              },
              set: (e, t, [n]) => {
                const i = new r.default({ value: n }, e, t);
                return (
                  this.emit("setTitle", i),
                  i.intercepted
                    ? i.returnValue
                    : i.target.call(i.that, i.data.value)
                );
              },
            });
          }
        }
        const o = a;
      },
      (e, t, n) => {
        "use strict";
        n.r(t), n.d(t, { default: () => c });
        var i,
          r = "object" == typeof Reflect ? Reflect : null,
          a =
            r && "function" == typeof r.apply
              ? r.apply
              : function (e, t, n) {
                  return Function.prototype.apply.call(e, t, n);
                };
        i =
          r && "function" == typeof r.ownKeys
            ? r.ownKeys
            : Object.getOwnPropertySymbols
              ? function (e) {
                  return Object.getOwnPropertyNames(e).concat(
                    Object.getOwnPropertySymbols(e),
                  );
                }
              : function (e) {
                  return Object.getOwnPropertyNames(e);
                };
        var o =
          Number.isNaN ||
          function (e) {
            return e != e;
          };
        function s() {
          s.init.call(this);
        }
        const c = s;
        (s.EventEmitter = s),
          (s.prototype._events = void 0),
          (s.prototype._eventsCount = 0),
          (s.prototype._maxListeners = void 0);
        var l = 10;
        function u(e) {
          if ("function" != typeof e)
            throw new TypeError(
              'The "listener" argument must be of type Function. Received type ' +
                typeof e,
            );
        }
        function p(e) {
          return void 0 === e._maxListeners
            ? s.defaultMaxListeners
            : e._maxListeners;
        }
        function d(e, t, n, i) {
          var r, a, o, s;
          if (
            (u(n),
            void 0 === (a = e._events)
              ? ((a = e._events = Object.create(null)), (e._eventsCount = 0))
              : (void 0 !== a.newListener &&
                  (e.emit("newListener", t, n.listener ? n.listener : n),
                  (a = e._events)),
                (o = a[t])),
            void 0 === o)
          )
            (o = a[t] = n), ++e._eventsCount;
          else if (
            ("function" == typeof o
              ? (o = a[t] = i ? [n, o] : [o, n])
              : i
                ? o.unshift(n)
                : o.push(n),
            (r = p(e)) > 0 && o.length > r && !o.warned)
          ) {
            o.warned = !0;
            var c = new Error(
              "Possible EventEmitter memory leak detected. " +
                o.length +
                " " +
                String(t) +
                " listeners added. Use emitter.setMaxListeners() to increase limit",
            );
            (c.name = "MaxListenersExceededWarning"),
              (c.emitter = e),
              (c.type = t),
              (c.count = o.length),
              (s = c),
              console && console.warn && console.warn(s);
          }
          return e;
        }
        function m() {
          if (!this.fired)
            return (
              this.target.removeListener(this.type, this.wrapFn),
              (this.fired = !0),
              0 === arguments.length
                ? this.listener.call(this.target)
                : this.listener.apply(this.target, arguments)
            );
        }
        function h(e, t, n) {
          var i = {
              fired: !1,
              wrapFn: void 0,
              target: e,
              type: t,
              listener: n,
            },
            r = m.bind(i);
          return (r.listener = n), (i.wrapFn = r), r;
        }
        function f(e, t, n) {
          var i = e._events;
          if (void 0 === i) return [];
          var r = i[t];
          return void 0 === r
            ? []
            : "function" == typeof r
              ? n
                ? [r.listener || r]
                : [r]
              : n
                ? (function (e) {
                    for (var t = new Array(e.length), n = 0; n < t.length; ++n)
                      t[n] = e[n].listener || e[n];
                    return t;
                  })(r)
                : x(r, r.length);
        }
        function g(e) {
          var t = this._events;
          if (void 0 !== t) {
            var n = t[e];
            if ("function" == typeof n) return 1;
            if (void 0 !== n) return n.length;
          }
          return 0;
        }
        function x(e, t) {
          for (var n = new Array(t), i = 0; i < t; ++i) n[i] = e[i];
          return n;
        }
        Object.defineProperty(s, "defaultMaxListeners", {
          enumerable: !0,
          get: function () {
            return l;
          },
          set: function (e) {
            if ("number" != typeof e || e < 0 || o(e))
              throw new RangeError(
                'The value of "defaultMaxListeners" is out of range. It must be a non-negative number. Received ' +
                  e +
                  ".",
              );
            l = e;
          },
        }),
          (s.init = function () {
            (void 0 !== this._events &&
              this._events !== Object.getPrototypeOf(this)._events) ||
              ((this._events = Object.create(null)), (this._eventsCount = 0)),
              (this._maxListeners = this._maxListeners || void 0);
          }),
          (s.prototype.setMaxListeners = function (e) {
            if ("number" != typeof e || e < 0 || o(e))
              throw new RangeError(
                'The value of "n" is out of range. It must be a non-negative number. Received ' +
                  e +
                  ".",
              );
            return (this._maxListeners = e), this;
          }),
          (s.prototype.getMaxListeners = function () {
            return p(this);
          }),
          (s.prototype.emit = function (e) {
            for (var t = [], n = 1; n < arguments.length; n++)
              t.push(arguments[n]);
            var i = "error" === e,
              r = this._events;
            if (void 0 !== r) i = i && void 0 === r.error;
            else if (!i) return !1;
            if (i) {
              var o;
              if ((t.length > 0 && (o = t[0]), o instanceof Error)) throw o;
              var s = new Error(
                "Unhandled error." + (o ? " (" + o.message + ")" : ""),
              );
              throw ((s.context = o), s);
            }
            var c = r[e];
            if (void 0 === c) return !1;
            if ("function" == typeof c) a(c, this, t);
            else {
              var l = c.length,
                u = x(c, l);
              for (n = 0; n < l; ++n) a(u[n], this, t);
            }
            return !0;
          }),
          (s.prototype.addListener = function (e, t) {
            return d(this, e, t, !1);
          }),
          (s.prototype.on = s.prototype.addListener),
          (s.prototype.prependListener = function (e, t) {
            return d(this, e, t, !0);
          }),
          (s.prototype.once = function (e, t) {
            return u(t), this.on(e, h(this, e, t)), this;
          }),
          (s.prototype.prependOnceListener = function (e, t) {
            return u(t), this.prependListener(e, h(this, e, t)), this;
          }),
          (s.prototype.removeListener = function (e, t) {
            var n, i, r, a, o;
            if ((u(t), void 0 === (i = this._events))) return this;
            if (void 0 === (n = i[e])) return this;
            if (n === t || n.listener === t)
              0 == --this._eventsCount
                ? (this._events = Object.create(null))
                : (delete i[e],
                  i.removeListener &&
                    this.emit("removeListener", e, n.listener || t));
            else if ("function" != typeof n) {
              for (r = -1, a = n.length - 1; a >= 0; a--)
                if (n[a] === t || n[a].listener === t) {
                  (o = n[a].listener), (r = a);
                  break;
                }
              if (r < 0) return this;
              0 === r
                ? n.shift()
                : (function (e, t) {
                    for (; t + 1 < e.length; t++) e[t] = e[t + 1];
                    e.pop();
                  })(n, r),
                1 === n.length && (i[e] = n[0]),
                void 0 !== i.removeListener &&
                  this.emit("removeListener", e, o || t);
            }
            return this;
          }),
          (s.prototype.off = s.prototype.removeListener),
          (s.prototype.removeAllListeners = function (e) {
            var t, n, i;
            if (void 0 === (n = this._events)) return this;
            if (void 0 === n.removeListener)
              return (
                0 === arguments.length
                  ? ((this._events = Object.create(null)),
                    (this._eventsCount = 0))
                  : void 0 !== n[e] &&
                    (0 == --this._eventsCount
                      ? (this._events = Object.create(null))
                      : delete n[e]),
                this
              );
            if (0 === arguments.length) {
              var r,
                a = Object.keys(n);
              for (i = 0; i < a.length; ++i)
                "removeListener" !== (r = a[i]) && this.removeAllListeners(r);
              return (
                this.removeAllListeners("removeListener"),
                (this._events = Object.create(null)),
                (this._eventsCount = 0),
                this
              );
            }
            if ("function" == typeof (t = n[e])) this.removeListener(e, t);
            else if (void 0 !== t)
              for (i = t.length - 1; i >= 0; i--) this.removeListener(e, t[i]);
            return this;
          }),
          (s.prototype.listeners = function (e) {
            return f(this, e, !0);
          }),
          (s.prototype.rawListeners = function (e) {
            return f(this, e, !1);
          }),
          (s.listenerCount = function (e, t) {
            return "function" == typeof e.listenerCount
              ? e.listenerCount(t)
              : g.call(e, t);
          }),
          (s.prototype.listenerCount = g),
          (s.prototype.eventNames = function () {
            return this._eventsCount > 0 ? i(this._events) : [];
          });
      },
      (e, t, n) => {
        "use strict";
        n.r(t), n.d(t, { default: () => i });
        const i = class {
          #e;
          #t;
          constructor(e = {}, t = null, n = null) {
            (this.#e = !1),
              (this.#t = null),
              (this.data = e),
              (this.target = t),
              (this.that = n);
          }
          get intercepted() {
            return this.#e;
          }
          get returnValue() {
            return this.#t;
          }
          respondWith(e) {
            (this.#t = e), (this.#e = !0);
          }
        };
      },
      (e, t, n) => {
        "use strict";
        n.r(t), n.d(t, { default: () => o });
        var i = n(155),
          r = n(156);
        class a extends i.default {
          constructor(e) {
            super(),
              (this.ctx = e),
              (this.window = e.window),
              (this.Audio = this.window.Audio),
              (this.Element = this.window.Element),
              (this.elemProto = this.Element ? this.Element.prototype : {}),
              (this.innerHTML = e.nativeMethods.getOwnPropertyDescriptor(
                this.elemProto,
                "innerHTML",
              )),
              (this.outerHTML = e.nativeMethods.getOwnPropertyDescriptor(
                this.elemProto,
                "outerHTML",
              )),
              (this.setAttribute = this.elemProto.setAttribute),
              (this.getAttribute = this.elemProto.getAttribute),
              (this.removeAttribute = this.elemProto.removeAttribute),
              (this.hasAttribute = this.elemProto.hasAttribute),
              (this.querySelector = this.elemProto.querySelector),
              (this.querySelectorAll = this.elemProto.querySelectorAll),
              (this.insertAdjacentHTML = this.elemProto.insertAdjacentHTML),
              (this.insertAdjacentText = this.elemProto.insertAdjacentText);
          }
          overrideQuerySelector() {
            this.ctx.override(this.elemProto, "querySelector", (e, t, n) => {
              if (!n.length) return e.apply(t, n);
              let [i] = n;
              const a = new r.default({ selectors: i }, e, t);
              return (
                this.emit("querySelector", a),
                a.intercepted
                  ? a.returnValue
                  : a.target.call(a.that, a.data.selectors)
              );
            });
          }
          overrideAttribute() {
            this.ctx.override(this.elemProto, "getAttribute", (e, t, n) => {
              if (!n.length) return e.apply(t, n);
              let [i] = n;
              const a = new r.default({ name: i }, e, t);
              return (
                this.emit("getAttribute", a),
                a.intercepted
                  ? a.returnValue
                  : a.target.call(a.that, a.data.name)
              );
            }),
              this.ctx.override(this.elemProto, "setAttribute", (e, t, n) => {
                if (2 > n.length) return e.apply(t, n);
                let [i, a] = n;
                const o = new r.default({ name: i, value: a }, e, t);
                return (
                  this.emit("setAttribute", o),
                  o.intercepted
                    ? o.returnValue
                    : o.target.call(o.that, o.data.name, o.data.value)
                );
              }),
              this.ctx.override(this.elemProto, "hasAttribute", (e, t, n) => {
                if (!n.length) return e.apply(t, n);
                let [i] = n;
                const a = new r.default({ name: i }, e, t);
                return (
                  this.emit("hasAttribute", a),
                  a.intercepted
                    ? a.returnValue
                    : a.target.call(a.that, a.data.name)
                );
              }),
              this.ctx.override(
                this.elemProto,
                "removeAttribute",
                (e, t, n) => {
                  if (!n.length) return e.apply(t, n);
                  let [i] = n;
                  const a = new r.default({ name: i }, e, t);
                  return (
                    this.emit("removeAttribute", a),
                    a.intercepted
                      ? a.returnValue
                      : a.target.call(a.that, a.data.name)
                  );
                },
              );
          }
          overrideAudio() {
            this.ctx.override(
              this.window,
              "Audio",
              (e, t, n) => {
                if (!n.length) return new e(...n);
                let [i] = n;
                const a = new r.default({ url: i }, e, t);
                return (
                  this.emit("audio", a),
                  a.intercepted ? a.returnValue : new a.target(a.data.url)
                );
              },
              !0,
            );
          }
          overrideHtml() {
            this.hookProperty(this.Element, "innerHTML", {
              get: (e, t) => {
                const n = new r.default({ value: e.call(t) }, e, t);
                return (
                  this.emit("getInnerHTML", n),
                  n.intercepted ? n.returnValue : n.data.value
                );
              },
              set: (e, t, [n]) => {
                const i = new r.default({ value: n }, e, t);
                if ((this.emit("setInnerHTML", i), i.intercepted))
                  return i.returnValue;
                e.call(t, i.data.value);
              },
            }),
              this.hookProperty(this.Element, "outerHTML", {
                get: (e, t) => {
                  const n = new r.default({ value: e.call(t) }, e, t);
                  return (
                    this.emit("getOuterHTML", n),
                    n.intercepted ? n.returnValue : n.data.value
                  );
                },
                set: (e, t, [n]) => {
                  const i = new r.default({ value: n }, e, t);
                  if ((this.emit("setOuterHTML", i), i.intercepted))
                    return i.returnValue;
                  e.call(t, i.data.value);
                },
              });
          }
          overrideInsertAdjacentHTML() {
            this.ctx.override(
              this.elemProto,
              "insertAdjacentHTML",
              (e, t, n) => {
                if (2 > n.length) return e.apply(t, n);
                let [i, a] = n;
                const o = new r.default({ position: i, html: a }, e, t);
                return (
                  this.emit("insertAdjacentHTML", o),
                  o.intercepted
                    ? o.returnValue
                    : o.target.call(o.that, o.data.position, o.data.html)
                );
              },
            );
          }
          overrideInsertAdjacentText() {
            this.ctx.override(
              this.elemProto,
              "insertAdjacentText",
              (e, t, n) => {
                if (2 > n.length) return e.apply(t, n);
                let [i, a] = n;
                const o = new r.default({ position: i, text: a }, e, t);
                return (
                  this.emit("insertAdjacentText", o),
                  o.intercepted
                    ? o.returnValue
                    : o.target.call(o.that, o.data.position, o.data.text)
                );
              },
            );
          }
          hookProperty(e, t, n) {
            if (!e || (!t) in e) return !1;
            if (this.ctx.nativeMethods.isArray(e)) {
              for (const i of e) this.hookProperty(i, t, n);
              return !0;
            }
            const i = e.prototype;
            return this.ctx.overrideDescriptor(i, t, n), !0;
          }
        }
        const o = a;
      },
      (e, t, n) => {
        "use strict";
        n.r(t), n.d(t, { default: () => o });
        var i = n(155),
          r = n(156);
        class a extends i.default {
          constructor(e) {
            super(),
              (this.ctx = e),
              (this.window = e.window),
              (this.Node = e.window.Node || {}),
              (this.nodeProto = this.Node.prototype || {}),
              (this.compareDocumentPosition =
                this.nodeProto.compareDocumentPosition),
              (this.contains = this.nodeProto.contains),
              (this.insertBefore = this.nodeProto.insertBefore),
              (this.replaceChild = this.nodeProto.replaceChild),
              (this.append = this.nodeProto.append),
              (this.appendChild = this.nodeProto.appendChild),
              (this.removeChild = this.nodeProto.removeChild),
              (this.textContent = e.nativeMethods.getOwnPropertyDescriptor(
                this.nodeProto,
                "textContent",
              )),
              (this.parentNode = e.nativeMethods.getOwnPropertyDescriptor(
                this.nodeProto,
                "parentNode",
              )),
              (this.parentElement = e.nativeMethods.getOwnPropertyDescriptor(
                this.nodeProto,
                "parentElement",
              )),
              (this.childNodes = e.nativeMethods.getOwnPropertyDescriptor(
                this.nodeProto,
                "childNodes",
              )),
              (this.baseURI = e.nativeMethods.getOwnPropertyDescriptor(
                this.nodeProto,
                "baseURI",
              )),
              (this.previousSibling = e.nativeMethods.getOwnPropertyDescriptor(
                this.nodeProto,
                "previousSibling",
              )),
              (this.ownerDocument = e.nativeMethods.getOwnPropertyDescriptor(
                this.nodeProto,
                "ownerDocument",
              ));
          }
          overrideTextContent() {
            this.ctx.overrideDescriptor(this.nodeProto, "textContent", {
              get: (e, t) => {
                const n = new r.default({ value: e.call(t) }, e, t);
                return (
                  this.emit("getTextContent", n),
                  n.intercepted ? n.returnValue : n.data.value
                );
              },
              set: (e, t, [n]) => {
                const i = new r.default({ value: n }, e, t);
                if ((this.emit("setTextContent", i), i.intercepted))
                  return i.returnValue;
                e.call(t, i.data.value);
              },
            });
          }
          overrideAppend() {
            this.ctx.override(this.nodeProto, "append", (e, t, [...n]) => {
              const i = new r.default({ nodes: n }, e, t);
              return (
                this.emit("append", i),
                i.intercepted
                  ? i.returnValue
                  : i.target.call(i.that, i.data.nodes)
              );
            }),
              this.ctx.override(this.nodeProto, "appendChild", (e, t, n) => {
                if (!n.length) return e.apply(t, n);
                let [i] = n;
                const a = new r.default({ node: i }, e, t);
                return (
                  this.emit("appendChild", a),
                  a.intercepted
                    ? a.returnValue
                    : a.target.call(a.that, a.data.node)
                );
              });
          }
          overrideBaseURI() {
            this.ctx.overrideDescriptor(this.nodeProto, "baseURI", {
              get: (e, t) => {
                const n = new r.default({ value: e.call(t) }, e, t);
                return (
                  this.emit("baseURI", n),
                  n.intercepted ? n.returnValue : n.data.value
                );
              },
            });
          }
          overrideParent() {
            this.ctx.overrideDescriptor(this.nodeProto, "parentNode", {
              get: (e, t) => {
                const n = new r.default({ node: e.call(t) }, e, t);
                return (
                  this.emit("parentNode", n),
                  n.intercepted ? n.returnValue : n.data.node
                );
              },
            }),
              this.ctx.overrideDescriptor(this.nodeProto, "parentElement", {
                get: (e, t) => {
                  const n = new r.default({ element: e.call(t) }, e, t);
                  return (
                    this.emit("parentElement", n),
                    n.intercepted ? n.returnValue : n.data.node
                  );
                },
              });
          }
          overrideOwnerDocument() {
            this.ctx.overrideDescriptor(this.nodeProto, "ownerDocument", {
              get: (e, t) => {
                const n = new r.default({ document: e.call(t) }, e, t);
                return (
                  this.emit("ownerDocument", n),
                  n.intercepted ? n.returnValue : n.data.document
                );
              },
            });
          }
          overrideCompareDocumentPosit1ion() {
            this.ctx.override(
              this.nodeProto,
              "compareDocumentPosition",
              (e, t, n) => {
                if (!n.length) return e.apply(t, n);
                let [i] = n;
                const a = new r.default({ node: i }, e, t);
                return a.intercepted
                  ? a.returnValue
                  : a.target.call(a.that, a.data.node);
              },
            );
          }
          overrideChildMethods() {
            this.ctx.override(this.nodeProto, "removeChild");
          }
        }
        const o = a;
      },
      (e, t, n) => {
        "use strict";
        n.r(t), n.d(t, { default: () => o });
        var i = n(155),
          r = n(156);
        class a extends i.default {
          constructor(e) {
            super(),
              (this.ctx = e),
              (this.window = e.window),
              (this.Attr = this.window.Attr || {}),
              (this.attrProto = this.Attr.prototype || {}),
              (this.value = e.nativeMethods.getOwnPropertyDescriptor(
                this.attrProto,
                "value",
              )),
              (this.name = e.nativeMethods.getOwnPropertyDescriptor(
                this.attrProto,
                "name",
              )),
              (this.getNamedItem = this.attrProto.getNamedItem || null),
              (this.setNamedItem = this.attrProto.setNamedItem || null),
              (this.removeNamedItem = this.attrProto.removeNamedItem || null),
              (this.getNamedItemNS = this.attrProto.getNamedItemNS || null),
              (this.setNamedItemNS = this.attrProto.setNamedItemNS || null),
              (this.removeNamedItemNS =
                this.attrProto.removeNamedItemNS || null),
              (this.item = this.attrProto.item || null);
          }
          overrideNameValue() {
            this.ctx.overrideDescriptor(this.attrProto, "name", {
              get: (e, t) => {
                const n = new r.default({ value: e.call(t) }, e, t);
                return (
                  this.emit("name", n),
                  n.intercepted ? n.returnValue : n.data.value
                );
              },
            }),
              this.ctx.overrideDescriptor(this.attrProto, "value", {
                get: (e, t) => {
                  const n = new r.default(
                    { name: this.name.get.call(t), value: e.call(t) },
                    e,
                    t,
                  );
                  return (
                    this.emit("getValue", n),
                    n.intercepted ? n.returnValue : n.data.value
                  );
                },
                set: (e, t, [n]) => {
                  const i = new r.default(
                    { name: this.name.get.call(t), value: n },
                    e,
                    t,
                  );
                  if ((this.emit("setValue", i), i.intercepted))
                    return i.returnValue;
                  i.target.call(i.that, i.data.value);
                },
              });
          }
          overrideItemMethods() {
            this.ctx.override(this.attrProto, "getNamedItem", (e, t, n) => {
              if (!n.length) return e.apply(t, n);
              let [i] = n;
              const a = new r.default({ name: i }, e, t);
              return (
                this.emit("getNamedItem", a),
                a.intercepted
                  ? a.returnValue
                  : a.target.call(a.that, a.data.name)
              );
            }),
              this.ctx.override(this.attrProto, "setNamedItem", (e, t, n) => {
                if (2 > n.length) return e.apply(t, n);
                let [i, a] = n;
                const o = new r.default({ name: i, value: a }, e, t);
                return (
                  this.emit("setNamedItem", o),
                  o.intercepted
                    ? o.returnValue
                    : o.target.call(o.that, o.data.name, o.data.value)
                );
              }),
              this.ctx.override(
                this.attrProto,
                "removeNamedItem",
                (e, t, n) => {
                  if (!n.length) return e.apply(t, n);
                  let [i] = n;
                  const a = new r.default({ name: i }, e, t);
                  return (
                    this.emit("removeNamedItem", a),
                    a.intercepted
                      ? a.returnValue
                      : a.target.call(a.that, a.data.name)
                  );
                },
              ),
              this.ctx.override(this.attrProto, "item", (e, t, n) => {
                if (!n.length) return e.apply(t, n);
                let [i] = n;
                const a = new r.default({ index: i }, e, t);
                return (
                  this.emit("item", a),
                  a.intercepted
                    ? a.returnValue
                    : a.target.call(a.that, a.data.name)
                );
              }),
              this.ctx.override(this.attrProto, "getNamedItemNS", (e, t, n) => {
                if (2 > n.length) return e.apply(t, n);
                let [i, a] = n;
                const o = new r.default({ namespace: i, localName: a }, e, t);
                return (
                  this.emit("getNamedItemNS", o),
                  o.intercepted
                    ? o.returnValue
                    : o.target.call(o.that, o.data.namespace, o.data.localName)
                );
              }),
              this.ctx.override(this.attrProto, "setNamedItemNS", (e, t, n) => {
                if (!n.length) return e.apply(t, n);
                let [i] = n;
                const a = new r.default({ attr: i }, e, t);
                return (
                  this.emit("setNamedItemNS", a),
                  a.intercepted
                    ? a.returnValue
                    : a.target.call(a.that, a.data.name)
                );
              }),
              this.ctx.override(
                this.attrProto,
                "removeNamedItemNS",
                (e, t, n) => {
                  if (2 > n.length) return e.apply(t, n);
                  let [i, a] = n;
                  const o = new r.default({ namespace: i, localName: a }, e, t);
                  return (
                    this.emit("removeNamedItemNS", o),
                    o.intercepted
                      ? o.returnValue
                      : o.target.call(
                          o.that,
                          o.data.namespace,
                          o.data.localName,
                        )
                  );
                },
              );
          }
        }
        const o = a;
      },
      (e, t, n) => {
        "use strict";
        n.r(t), n.d(t, { default: () => o });
        var i = n(155),
          r = n(156);
        class a extends i.default {
          constructor(e) {
            super(),
              (this.ctx = e),
              (this.window = e.window),
              (this.Function = this.window.Function),
              (this.fnProto = this.Function.prototype),
              (this.toString = this.fnProto.toString),
              (this.fnStrings = e.fnStrings),
              (this.call = this.fnProto.call),
              (this.apply = this.fnProto.apply),
              (this.bind = this.fnProto.bind);
          }
          overrideFunction() {
            this.ctx.override(
              this.window,
              "Function",
              (e, t, n) => {
                if (!n.length) return e.apply(t, n);
                let i = n[n.length - 1],
                  a = [];
                for (let e = 0; e < n.length - 1; e++) a.push(n[e]);
                const o = new r.default({ script: i, args: a }, e, t);
                return (
                  this.emit("function", o),
                  o.intercepted
                    ? o.returnValue
                    : o.target.call(o.that, ...o.data.args, o.data.script)
                );
              },
              !0,
            );
          }
          overrideToString() {
            this.ctx.override(this.fnProto, "toString", (e, t) => {
              const n = new r.default({ fn: t }, e, t);
              return (
                this.emit("toString", n),
                n.intercepted ? n.returnValue : n.target.call(n.data.fn)
              );
            });
          }
        }
        const o = a;
      },
      (e, t, n) => {
        "use strict";
        n.r(t), n.d(t, { default: () => o });
        var i = n(155),
          r = n(156);
        class a extends i.default {
          constructor(e) {
            super(),
              (this.ctx = e),
              (this.window = e.window),
              (this.Object = this.window.Object),
              (this.getOwnPropertyDescriptors =
                this.Object.getOwnPropertyDescriptors),
              (this.getOwnPropertyDescriptor =
                this.Object.getOwnPropertyDescriptor),
              (this.getOwnPropertyNames = this.Object.getOwnPropertyNames);
          }
          overrideGetPropertyNames() {
            this.ctx.override(this.Object, "getOwnPropertyNames", (e, t, n) => {
              if (!n.length) return e.apply(t, n);
              let [i] = n;
              const a = new r.default({ names: e.call(t, i) }, e, t);
              return (
                this.emit("getOwnPropertyNames", a),
                a.intercepted ? a.returnValue : a.data.names
              );
            });
          }
          overrideGetOwnPropertyDescriptors() {
            this.ctx.override(
              this.Object,
              "getOwnPropertyDescriptors",
              (e, t, n) => {
                if (!n.length) return e.apply(t, n);
                let [i] = n;
                const a = new r.default({ descriptors: e.call(t, i) }, e, t);
                return (
                  this.emit("getOwnPropertyDescriptors", a),
                  a.intercepted ? a.returnValue : a.data.descriptors
                );
              },
            );
          }
        }
        const o = a;
      },
      (e, t, n) => {
        "use strict";
        n.r(t), n.d(t, { default: () => o });
        var i = n(155),
          r = n(156);
        class a extends i.default {
          constructor(e) {
            super(),
              (this.ctx = e),
              (this.window = e.window),
              (this.fetch = this.window.fetch),
              (this.Request = this.window.Request),
              (this.Response = this.window.Response),
              (this.Headers = this.window.Headers),
              (this.reqProto = this.Request ? this.Request.prototype : {}),
              (this.resProto = this.Response ? this.Response.prototype : {}),
              (this.headersProto = this.Headers ? this.Headers.prototype : {}),
              (this.reqUrl = e.nativeMethods.getOwnPropertyDescriptor(
                this.reqProto,
                "url",
              )),
              (this.resUrl = e.nativeMethods.getOwnPropertyDescriptor(
                this.resProto,
                "url",
              )),
              (this.reqHeaders = e.nativeMethods.getOwnPropertyDescriptor(
                this.reqProto,
                "headers",
              )),
              (this.resHeaders = e.nativeMethods.getOwnPropertyDescriptor(
                this.resProto,
                "headers",
              ));
          }
          override() {
            return (
              this.overrideRequest(),
              this.overrideUrl(),
              this.overrideHeaders(),
              !0
            );
          }
          overrideRequest() {
            return (
              !!this.fetch &&
              (this.ctx.override(this.window, "fetch", (e, t, n) => {
                if (!n.length || n[0] instanceof this.Request)
                  return e.apply(t, n);
                let [i, a = {}] = n;
                const o = new r.default({ input: i, options: a }, e, t);
                return (
                  this.emit("request", o),
                  o.intercepted
                    ? o.returnValue
                    : o.target.call(o.that, o.data.input, o.data.options)
                );
              }),
              this.ctx.override(
                this.window,
                "Request",
                (e, t, n) => {
                  if (!n.length) return new e(...n);
                  let [i, a = {}] = n;
                  const o = new r.default({ input: i, options: a }, e);
                  return (
                    this.emit("request", o),
                    o.intercepted
                      ? o.returnValue
                      : new o.target(o.data.input, o.data.options)
                  );
                },
                !0,
              ),
              !0)
            );
          }
          overrideUrl() {
            return (
              this.ctx.overrideDescriptor(this.reqProto, "url", {
                get: (e, t) => {
                  const n = new r.default({ value: e.call(t) }, e, t);
                  return (
                    this.emit("requestUrl", n),
                    n.intercepted ? n.returnValue : n.data.value
                  );
                },
              }),
              this.ctx.overrideDescriptor(this.resProto, "url", {
                get: (e, t) => {
                  const n = new r.default({ value: e.call(t) }, e, t);
                  return (
                    this.emit("responseUrl", n),
                    n.intercepted ? n.returnValue : n.data.value
                  );
                },
              }),
              !0
            );
          }
          overrideHeaders() {
            return (
              !!this.Headers &&
              (this.ctx.overrideDescriptor(this.reqProto, "headers", {
                get: (e, t) => {
                  const n = new r.default({ value: e.call(t) }, e, t);
                  return (
                    this.emit("requestHeaders", n),
                    n.intercepted ? n.returnValue : n.data.value
                  );
                },
              }),
              this.ctx.overrideDescriptor(this.resProto, "headers", {
                get: (e, t) => {
                  const n = new r.default({ value: e.call(t) }, e, t);
                  return (
                    this.emit("responseHeaders", n),
                    n.intercepted ? n.returnValue : n.data.value
                  );
                },
              }),
              this.ctx.override(this.headersProto, "get", (e, t, [n]) => {
                if (!n) return e.call(t);
                const i = new r.default({ name: n, value: e.call(t, n) }, e, t);
                return (
                  this.emit("getHeader", i),
                  i.intercepted ? i.returnValue : i.data.value
                );
              }),
              this.ctx.override(this.headersProto, "set", (e, t, n) => {
                if (2 > n.length) return e.apply(t, n);
                let [i, a] = n;
                const o = new r.default({ name: i, value: a }, e, t);
                return (
                  this.emit("setHeader", o),
                  o.intercepted
                    ? o.returnValue
                    : o.target.call(o.that, o.data.name, o.data.value)
                );
              }),
              this.ctx.override(this.headersProto, "has", (e, t, n) => {
                if (!n.length) return e.call(t);
                let [i] = n;
                const a = new r.default({ name: i, value: e.call(t, i) }, e, t);
                return (
                  this.emit("hasHeader", a),
                  a.intercepted ? a.returnValue : a.data
                );
              }),
              this.ctx.override(this.headersProto, "append", (e, t, n) => {
                if (2 > n.length) return e.apply(t, n);
                let [i, a] = n;
                const o = new r.default({ name: i, value: a }, e, t);
                return (
                  this.emit("appendHeader", o),
                  o.intercepted
                    ? o.returnValue
                    : o.target.call(o.that, o.data.name, o.data.value)
                );
              }),
              this.ctx.override(this.headersProto, "delete", (e, t, n) => {
                if (!n.length) return e.apply(t, n);
                let [i] = n;
                const a = new r.default({ name: i }, e, t);
                return (
                  this.emit("deleteHeader", a),
                  a.intercepted
                    ? a.returnValue
                    : a.target.call(a.that, a.data.name)
                );
              }),
              !0)
            );
          }
        }
        const o = a;
      },
      (e, t, n) => {
        "use strict";
        n.r(t), n.d(t, { default: () => o });
        var i = n(155),
          r = n(156);
        class a extends i.default {
          constructor(e) {
            super(),
              (this.ctx = e),
              (this.window = e.window),
              (this.WebSocket = this.window.WebSocket || {}),
              (this.wsProto = this.WebSocket.prototype || {}),
              (this.url = e.nativeMethods.getOwnPropertyDescriptor(
                this.wsProto,
                "url",
              )),
              (this.protocol = e.nativeMethods.getOwnPropertyDescriptor(
                this.wsProto,
                "protocol",
              )),
              (this.send = this.wsProto.send),
              (this.close = this.wsProto.close),
              (this.CONNECTING = 0),
              (this.OPEN = 1),
              (this.CLOSING = 2),
              (this.CLOSED = 3);
          }
          overrideWebSocket() {
            this.ctx.override(
              this.window,
              "WebSocket",
              (e, t, n) => {
                if (!n.length) return new e(...n);
                let [i, a = []] = n;
                this.ctx.nativeMethods.isArray(a) || (a = [a]);
                const o = new r.default({ url: i, protocols: a }, e, t);
                return (
                  this.emit("websocket", o),
                  o.intercepted
                    ? o.returnValue
                    : new o.target(o.data.url, o.data.protocols)
                );
              },
              !0,
            ),
              (this.window.WebSocket.CONNECTING = this.CONNECTING),
              (this.window.WebSocket.OPEN = this.OPEN),
              (this.window.WebSocket.CLOSING = this.CLOSING),
              (this.window.WebSocket.CLOSED = this.CLOSED);
          }
          overrideUrl() {
            this.ctx.overrideDescriptor(this.wsProto, "url", {
              get: (e, t) => {
                const n = new r.default({ value: e.call(t) }, e, t);
                return this.emit("url", n), n.data.value;
              },
            });
          }
          overrideProtocol() {
            this.ctx.overrideDescriptor(this.wsProto, "protocol", {
              get: (e, t) => {
                const n = new r.default({ value: e.call(t) }, e, t);
                return this.emit("protocol", n), n.data.value;
              },
            });
          }
        }
        const o = a;
      },
      (e, t, n) => {
        "use strict";
        n.r(t), n.d(t, { default: () => o });
        var i = n(155),
          r = n(156);
        class a extends i.default {
          constructor(e) {
            super(),
              (this.ctx = e),
              (this.window = e.window),
              (this.XMLHttpRequest = this.window.XMLHttpRequest),
              (this.xhrProto = this.window.XMLHttpRequest
                ? this.window.XMLHttpRequest.prototype
                : {}),
              (this.open = this.xhrProto.open),
              (this.abort = this.xhrProto.abort),
              (this.send = this.xhrProto.send),
              (this.overrideMimeType = this.xhrProto.overrideMimeType),
              (this.getAllResponseHeaders =
                this.xhrProto.getAllResponseHeaders),
              (this.getResponseHeader = this.xhrProto.getResponseHeader),
              (this.setRequestHeader = this.xhrProto.setRequestHeader),
              (this.responseURL = e.nativeMethods.getOwnPropertyDescriptor(
                this.xhrProto,
                "responseURL",
              )),
              (this.responseText = e.nativeMethods.getOwnPropertyDescriptor(
                this.xhrProto,
                "responseText",
              ));
          }
          override() {
            this.overrideOpen(),
              this.overrideSend(),
              this.overrideMimeType(),
              this.overrideGetResHeader(),
              this.overrideGetResHeaders(),
              this.overrideSetReqHeader();
          }
          overrideOpen() {
            this.ctx.override(this.xhrProto, "open", (e, t, n) => {
              if (2 > n.length) return e.apply(t, n);
              let [i, a, o = !0, s = null, c = null] = n;
              const l = new r.default(
                { method: i, input: a, async: o, user: s, password: c },
                e,
                t,
              );
              return (
                this.emit("open", l),
                l.intercepted
                  ? l.returnValue
                  : l.target.call(
                      l.that,
                      l.data.method,
                      l.data.input,
                      l.data.async,
                      l.data.user,
                      l.data.password,
                    )
              );
            });
          }
          overrideResponseUrl() {
            this.ctx.overrideDescriptor(this.xhrProto, "responseURL", {
              get: (e, t) => {
                const n = new r.default({ value: e.call(t) }, e, t);
                return (
                  this.emit("responseUrl", n),
                  n.intercepted ? n.returnValue : n.data.value
                );
              },
            });
          }
          overrideSend() {
            this.ctx.override(this.xhrProto, "send", (e, t, [n = null]) => {
              const i = new r.default({ body: n }, e, t);
              return (
                this.emit("send", i),
                i.intercepted
                  ? i.returnValue
                  : i.target.call(i.that, i.data.body)
              );
            });
          }
          overrideSetReqHeader() {
            this.ctx.override(this.xhrProto, "setRequestHeader", (e, t, n) => {
              if (2 > n.length) return e.apply(t, n);
              let [i, a] = n;
              const o = new r.default({ name: i, value: a }, e, t);
              return (
                this.emit("setReqHeader", o),
                o.intercepted
                  ? o.returnValue
                  : o.target.call(o.that, o.data.name, o.data.value)
              );
            });
          }
          overrideGetResHeaders() {
            this.ctx.override(
              this.xhrProto,
              "getAllResponseHeaders",
              (e, t) => {
                const n = new r.default({ value: e.call(t) }, e, t);
                return (
                  this.emit("getAllResponseHeaders", n),
                  n.intercepted ? n.returnValue : n.data.value
                );
              },
            );
          }
          overrideGetResHeader() {
            this.ctx.override(this.xhrProto, "getResponseHeader", (e, t, n) => {
              if (!n.length) return e.apply(t, n);
              let [i] = n;
              const a = new r.default({ name: i, value: e.call(t, i) }, e, t);
              return a.intercepted ? a.returnValue : a.data.value;
            });
          }
        }
        const o = a;
      },
      (e, t, n) => {
        "use strict";
        n.r(t), n.d(t, { default: () => o });
        var i = n(155),
          r = n(156);
        class a extends i.default {
          constructor(e) {
            super(),
              (this.ctx = e),
              (this.window = e.window),
              (this.EventSource = this.window.EventSource || {}),
              (this.esProto = this.EventSource.prototype || {}),
              (this.url = e.nativeMethods.getOwnPropertyDescriptor(
                this.esProto,
                "url",
              )),
              (this.CONNECTING = 0),
              (this.OPEN = 1),
              (this.CLOSED = 2);
          }
          overrideConstruct() {
            this.ctx.override(
              this.window,
              "EventSource",
              (e, t, n) => {
                if (!n.length) return new e(...n);
                let [i, a = {}] = n;
                const o = new r.default({ url: i, config: a }, e, t);
                return (
                  this.emit("construct", o),
                  o.intercepted
                    ? o.returnValue
                    : new o.target(o.data.url, o.data.config)
                );
              },
              !0,
            ),
              "EventSource" in this.window &&
                ((this.window.EventSource.CONNECTING = this.CONNECTING),
                (this.window.EventSource.OPEN = this.OPEN),
                (this.window.EventSource.CLOSED = this.CLOSED));
          }
          overrideUrl() {
            this.ctx.overrideDescriptor(this.esProto, "url", {
              get: (e, t) => {
                const n = new r.default({ value: e.call(t) }, e, t);
                return this.emit("url", n), n.data.value;
              },
            });
          }
        }
        const o = a;
      },
      (e, t, n) => {
        "use strict";
        n.r(t), n.d(t, { default: () => o });
        var i = n(155),
          r = n(156);
        class a extends i.default {
          constructor(e) {
            super(),
              (this.ctx = e),
              (this.window = this.ctx.window),
              (this.History = this.window.History),
              (this.history = this.window.history),
              (this.historyProto = this.History ? this.History.prototype : {}),
              (this.pushState = this.historyProto.pushState),
              (this.replaceState = this.historyProto.replaceState),
              (this.go = this.historyProto.go),
              (this.back = this.historyProto.back),
              (this.forward = this.historyProto.forward);
          }
          override() {
            this.overridePushState(),
              this.overrideReplaceState(),
              this.overrideGo(),
              this.overrideForward(),
              this.overrideBack();
          }
          overridePushState() {
            this.ctx.override(this.historyProto, "pushState", (e, t, n) => {
              if (2 > n.length) return e.apply(t, n);
              let [i, a, o = ""] = n;
              const s = new r.default({ state: i, title: a, url: o }, e, t);
              return (
                this.emit("pushState", s),
                s.intercepted
                  ? s.returnValue
                  : s.target.call(
                      s.that,
                      s.data.state,
                      s.data.title,
                      s.data.url,
                    )
              );
            });
          }
          overrideReplaceState() {
            this.ctx.override(this.historyProto, "replaceState", (e, t, n) => {
              if (2 > n.length) return e.apply(t, n);
              let [i, a, o = ""] = n;
              const s = new r.default({ state: i, title: a, url: o }, e, t);
              return (
                this.emit("replaceState", s),
                s.intercepted
                  ? s.returnValue
                  : s.target.call(
                      s.that,
                      s.data.state,
                      s.data.title,
                      s.data.url,
                    )
              );
            });
          }
          overrideGo() {
            this.ctx.override(this.historyProto, "go", (e, t, [n]) => {
              const i = new r.default({ delta: n }, e, t);
              return (
                this.emit("go", i),
                i.intercepted
                  ? i.returnValue
                  : i.target.call(i.that, i.data.delta)
              );
            });
          }
          overrideForward() {
            this.ctx.override(this.historyProto, "forward", (e, t) => {
              const n = new r.default(null, e, t);
              return (
                this.emit("forward", n),
                n.intercepted ? n.returnValue : n.target.call(n.that)
              );
            });
          }
          overrideBack() {
            this.ctx.override(this.historyProto, "back", (e, t) => {
              const n = new r.default(null, e, t);
              return (
                this.emit("back", n),
                n.intercepted ? n.returnValue : n.target.call(n.that)
              );
            });
          }
        }
        const o = a;
      },
      (e, t, n) => {
        "use strict";
        n.r(t), n.d(t, { default: () => a });
        var i = n(155);
        class r extends i.default {
          constructor(e) {
            super(),
              (this.ctx = e),
              (this.window = e.window),
              (this.location = this.window.location),
              (this.WorkerLocation = this.ctx.worker
                ? this.window.WorkerLocation
                : null),
              (this.workerLocProto = this.WorkerLocation
                ? this.WorkerLocation.prototype
                : {}),
              (this.keys = [
                "href",
                "protocol",
                "host",
                "hostname",
                "port",
                "pathname",
                "search",
                "hash",
                "origin",
              ]),
              (this.HashChangeEvent = this.window.HashChangeEvent || null),
              (this.href = this.WorkerLocation
                ? e.nativeMethods.getOwnPropertyDescriptor(
                    this.workerLocProto,
                    "href",
                  )
                : e.nativeMethods.getOwnPropertyDescriptor(
                    this.location,
                    "href",
                  ));
          }
          overrideWorkerLocation(e) {
            if (!this.WorkerLocation) return !1;
            const t = this;
            for (const n of this.keys)
              this.ctx.overrideDescriptor(this.workerLocProto, n, {
                get: (i, r) => e(t.href.get.call(this.location))[n],
              });
            return !0;
          }
          emulate(e, t) {
            const n = {},
              i = this;
            for (const r of i.keys)
              this.ctx.nativeMethods.defineProperty(n, r, {
                get: () => e(i.href.get.call(i.location))[r],
                set:
                  "origin" !== r
                    ? function (e) {
                        switch (r) {
                          case "href":
                            i.location.href = t(e);
                            break;
                          case "hash":
                            i.emit(
                              "hashchange",
                              n.href,
                              e.trim().startsWith("#")
                                ? new URL(e.trim(), n.href).href
                                : new URL("#" + e.trim(), n.href).href,
                              i,
                            );
                            break;
                          default:
                            const a = new URL(n.href);
                            (a[r] = e), (i.location.href = t(a.href));
                        }
                      }
                    : void 0,
                configurable: !1,
                enumerable: !0,
              });
            return (
              "reload" in this.location &&
                this.ctx.nativeMethods.defineProperty(n, "reload", {
                  value: this.ctx.wrap(this.location, "reload", (e, t) =>
                    e.call(t === n ? this.location : t),
                  ),
                  writable: !1,
                  enumerable: !0,
                }),
              "replace" in this.location &&
                this.ctx.nativeMethods.defineProperty(n, "replace", {
                  value: this.ctx.wrap(this.location, "assign", (e, i, r) => {
                    (r.length && i === n) || e.call(i), (i = this.location);
                    let [a] = r;
                    const o = new URL(a, n.href);
                    return e.call(i === n ? this.location : i, t(o.href));
                  }),
                  writable: !1,
                  enumerable: !0,
                }),
              "assign" in this.location &&
                this.ctx.nativeMethods.defineProperty(n, "assign", {
                  value: this.ctx.wrap(this.location, "assign", (e, i, r) => {
                    (r.length && i === n) || e.call(i), (i = this.location);
                    let [a] = r;
                    const o = new URL(a, n.href);
                    return e.call(i === n ? this.location : i, t(o.href));
                  }),
                  writable: !1,
                  enumerable: !0,
                }),
              "ancestorOrigins" in this.location &&
                this.ctx.nativeMethods.defineProperty(n, "ancestorOrigins", {
                  get() {
                    const e = [];
                    return (
                      i.window.DOMStringList &&
                        i.ctx.nativeMethods.setPrototypeOf(
                          e,
                          i.window.DOMStringList.prototype,
                        ),
                      e
                    );
                  },
                  set: void 0,
                  enumerable: !0,
                }),
              this.ctx.nativeMethods.defineProperty(n, "toString", {
                value: this.ctx.wrap(this.location, "toString", () => n.href),
                enumerable: !0,
                writable: !1,
              }),
              this.ctx.nativeMethods.defineProperty(n, Symbol.toPrimitive, {
                value: () => n.href,
                writable: !1,
                enumerable: !1,
              }),
              this.ctx.window.Location &&
                this.ctx.nativeMethods.setPrototypeOf(
                  n,
                  this.ctx.window.Location.prototype,
                ),
              n
            );
          }
        }
        const a = r;
      },
      (e, t, n) => {
        "use strict";
        n.r(t), n.d(t, { default: () => o });
        var i = n(155),
          r = n(156);
        class a extends i.default {
          constructor(e) {
            super(),
              (this.ctx = e),
              (this.window = this.ctx.window),
              (this.postMessage = this.window.postMessage),
              (this.MessageEvent = this.window.MessageEvent || {}),
              (this.MessagePort = this.window.MessagePort || {}),
              (this.mpProto = this.MessagePort.prototype || {}),
              (this.mpPostMessage = this.mpProto.postMessage),
              (this.messageProto = this.MessageEvent.prototype || {}),
              (this.messageData = e.nativeMethods.getOwnPropertyDescriptor(
                this.messageProto,
                "data",
              )),
              (this.messageOrigin = e.nativeMethods.getOwnPropertyDescriptor(
                this.messageProto,
                "origin",
              ));
          }
          overridePostMessage() {
            this.ctx.override(this.window, "postMessage", (e, t, n) => {
              if (!n.length) return e.apply(t, n);
              let i, a, o;
              this.ctx.worker ? ([i, o = []] = n) : ([i, a, o = []] = n);
              const s = new r.default(
                { message: i, origin: a, transfer: o, worker: this.ctx.worker },
                e,
                t,
              );
              return (
                this.emit("postMessage", s),
                s.intercepted
                  ? s.returnValue
                  : this.ctx.worker
                    ? s.target.call(s.that, s.data.message, s.data.transfer)
                    : s.target.call(
                        s.that,
                        s.data.message,
                        s.data.origin,
                        s.data.transfer,
                      )
              );
            });
          }
          wrapPostMessage(e, t, n = !1) {
            return this.ctx.wrap(e, t, (t, i, a) => {
              if (this.ctx.worker ? !a.length : 2 > a) return t.apply(i, a);
              let o, s, c;
              n ? (([o, c = []] = a), (s = null)) : ([o, s, c = []] = a);
              const l = new r.default(
                { message: o, origin: s, transfer: c, worker: this.ctx.worker },
                t,
                e,
              );
              return (
                this.emit("postMessage", l),
                l.intercepted
                  ? l.returnValue
                  : n
                    ? l.target.call(l.that, l.data.message, l.data.transfer)
                    : l.target.call(
                        l.that,
                        l.data.message,
                        l.data.origin,
                        l.data.transfer,
                      )
              );
            });
          }
          overrideMessageOrigin() {
            this.ctx.overrideDescriptor(this.messageProto, "origin", {
              get: (e, t) => {
                const n = new r.default({ value: e.call(t) }, e, t);
                return (
                  this.emit("origin", n),
                  n.intercepted ? n.returnValue : n.data.value
                );
              },
            });
          }
          overrideMessageData() {
            this.ctx.overrideDescriptor(this.messageProto, "data", {
              get: (e, t) => {
                const n = new r.default({ value: e.call(t) }, e, t);
                return (
                  this.emit("data", n),
                  n.intercepted ? n.returnValue : n.data.value
                );
              },
            });
          }
        }
        const o = a;
      },
      (e, t, n) => {
        "use strict";
        n.r(t), n.d(t, { default: () => o });
        var i = n(155),
          r = n(156);
        class a extends i.default {
          constructor(e) {
            super(),
              (this.ctx = e),
              (this.window = e.window),
              (this.navigator = this.window.navigator),
              (this.Navigator = this.window.Navigator || {}),
              (this.navProto = this.Navigator.prototype || {}),
              (this.sendBeacon = this.navProto.sendBeacon);
          }
          overrideSendBeacon() {
            this.ctx.override(this.navProto, "sendBeacon", (e, t, n) => {
              if (!n.length) return e.apply(t, n);
              let [i, a = ""] = n;
              const o = new r.default({ url: i, data: a }, e, t);
              return (
                this.emit("sendBeacon", o),
                o.intercepted
                  ? o.returnValue
                  : o.target.call(o.that, o.data.url, o.data.data)
              );
            });
          }
        }
        const o = a;
      },
      (e, t, n) => {
        "use strict";
        n.r(t), n.d(t, { default: () => o });
        var i = n(155),
          r = n(156);
        class a extends i.default {
          constructor(e) {
            super(),
              (this.ctx = e),
              (this.window = e.window),
              (this.Worker = this.window.Worker || {}),
              (this.Worklet = this.window.Worklet || {}),
              (this.workletProto = this.Worklet.prototype || {}),
              (this.workerProto = this.Worker.prototype || {}),
              (this.postMessage = this.workerProto.postMessage),
              (this.terminate = this.workerProto.terminate),
              (this.addModule = this.workletProto.addModule);
          }
          overrideWorker() {
            this.ctx.override(
              this.window,
              "Worker",
              (e, t, n) => {
                if (!n.length) return new e(...n);
                let [i, a = {}] = n;
                const o = new r.default({ url: i, options: a }, e, t);
                return (
                  this.emit("worker", o),
                  o.intercepted
                    ? o.returnValue
                    : new o.target(...[o.data.url, o.data.options])
                );
              },
              !0,
            );
          }
          overrideAddModule() {
            this.ctx.override(this.workletProto, "addModule", (e, t, n) => {
              if (!n.length) return e.apply(t, n);
              let [i, a = {}] = n;
              const o = new r.default({ url: i, options: a }, e, t);
              return (
                this.emit("addModule", o),
                o.intercepted
                  ? o.returnValue
                  : o.target.call(o.that, o.data.url, o.data.options)
              );
            });
          }
          overridePostMessage() {
            this.ctx.override(this.workerProto, "postMessage", (e, t, n) => {
              if (!n.length) return e.apply(t, n);
              let [i, a = []] = n;
              const o = new r.default({ message: i, transfer: a }, e, t);
              return (
                this.emit("postMessage", o),
                o.intercepted
                  ? o.returnValue
                  : o.target.call(o.that, o.data.message, o.data.transfer)
              );
            });
          }
          overrideImportScripts() {
            this.ctx.override(this.window, "importScripts", (e, t, n) => {
              if (!n.length) return e.apply(t, n);
              const i = new r.default({ scripts: n }, e, t);
              return (
                this.emit("importScripts", i),
                i.intercepted
                  ? i.returnValue
                  : i.target.apply(i.that, i.data.scripts)
              );
            });
          }
        }
        const o = a;
      },
      (e, t, n) => {
        "use strict";
        n.r(t), n.d(t, { default: () => o });
        var i = n(155),
          r = n(156);
        class a extends i.default {
          constructor(e) {
            super(),
              (this.ctx = e),
              (this.window = this.ctx.window),
              (this.URL = this.window.URL || {}),
              (this.createObjectURL = this.URL.createObjectURL),
              (this.revokeObjectURL = this.URL.revokeObjectURL);
          }
          overrideObjectURL() {
            this.ctx.override(this.URL, "createObjectURL", (e, t, n) => {
              if (!n.length) return e.apply(t, n);
              let [i] = n;
              const a = new r.default({ object: i }, e, t);
              return (
                this.emit("createObjectURL", a),
                a.intercepted
                  ? a.returnValue
                  : a.target.call(a.that, a.data.object)
              );
            }),
              this.ctx.override(this.URL, "revokeObjectURL", (e, t, n) => {
                if (!n.length) return e.apply(t, n);
                let [i] = n;
                const a = new r.default({ url: i }, e, t);
                return (
                  this.emit("revokeObjectURL", a),
                  a.intercepted
                    ? a.returnValue
                    : a.target.call(a.that, a.data.url)
                );
              });
          }
        }
        const o = a;
      },
      (e, t, n) => {
        "use strict";
        n.r(t), n.d(t, { default: () => o });
        var i = n(155),
          r = n(156);
        class a extends i.default {
          constructor(e) {
            super(),
              (this.ctx = e),
              (this.window = e.window),
              (this.localStorage = this.window.localStorage || null),
              (this.sessionStorage = this.window.sessionStorage || null),
              (this.Storage = this.window.Storage || {}),
              (this.storeProto = this.Storage.prototype || {}),
              (this.getItem = this.storeProto.getItem || null),
              (this.setItem = this.storeProto.setItem || null),
              (this.removeItem = this.storeProto.removeItem || null),
              (this.clear = this.storeProto.clear || null),
              (this.key = this.storeProto.key || null),
              (this.methods = [
                "key",
                "getItem",
                "setItem",
                "removeItem",
                "clear",
              ]),
              (this.wrappers = new e.nativeMethods.Map());
          }
          overrideMethods() {
            this.ctx.override(this.storeProto, "getItem", (e, t, n) => {
              if (!n.length) return e.apply(this.wrappers.get(t) || t, n);
              let [i] = n;
              const a = new r.default(
                { name: i },
                e,
                this.wrappers.get(t) || t,
              );
              return (
                this.emit("getItem", a),
                a.intercepted
                  ? a.returnValue
                  : a.target.call(a.that, a.data.name)
              );
            }),
              this.ctx.override(this.storeProto, "setItem", (e, t, n) => {
                if (2 > n.length) return e.apply(this.wrappers.get(t) || t, n);
                let [i, a] = n;
                const o = new r.default(
                  { name: i, value: a },
                  e,
                  this.wrappers.get(t) || t,
                );
                return (
                  this.emit("setItem", o),
                  o.intercepted
                    ? o.returnValue
                    : o.target.call(o.that, o.data.name, o.data.value)
                );
              }),
              this.ctx.override(this.storeProto, "removeItem", (e, t, n) => {
                if (!n.length) return e.apply(this.wrappers.get(t) || t, n);
                let [i] = n;
                const a = new r.default(
                  { name: i },
                  e,
                  this.wrappers.get(t) || t,
                );
                return (
                  this.emit("removeItem", a),
                  a.intercepted
                    ? a.returnValue
                    : a.target.call(a.that, a.data.name)
                );
              }),
              this.ctx.override(this.storeProto, "clear", (e, t) => {
                const n = new r.default(null, e, this.wrappers.get(t) || t);
                return (
                  this.emit("clear", n),
                  n.intercepted ? n.returnValue : n.target.call(n.that)
                );
              }),
              this.ctx.override(this.storeProto, "key", (e, t, n) => {
                if (!n.length) return e.apply(this.wrappers.get(t) || t, n);
                let [i] = n;
                const a = new r.default(
                  { index: i },
                  e,
                  this.wrappers.get(t) || t,
                );
                return (
                  this.emit("key", a),
                  a.intercepted
                    ? a.returnValue
                    : a.target.call(a.that, a.data.index)
                );
              });
          }
          overrideLength() {
            this.ctx.overrideDescriptor(this.storeProto, "length", {
              get: (e, t) => {
                const n = new r.default(
                  { length: e.call(this.wrappers.get(t) || t) },
                  e,
                  this.wrappers.get(t) || t,
                );
                return (
                  this.emit("length", n),
                  n.intercepted ? n.returnValue : n.data.length
                );
              },
            });
          }
          emulate(e, t = {}) {
            this.ctx.nativeMethods.setPrototypeOf(t, this.storeProto);
            const n = new this.ctx.window.Proxy(t, {
              get: (t, n) => {
                if (n in this.storeProto || "symbol" == typeof n) return e[n];
                const i = new r.default({ name: n }, null, e);
                return (
                  this.emit("get", i),
                  i.intercepted ? i.returnValue : e[i.data.name]
                );
              },
              set: (t, n, i) => {
                if (n in this.storeProto || "symbol" == typeof n)
                  return (e[n] = i);
                const a = new r.default({ name: n, value: i }, null, e);
                return (
                  this.emit("set", a),
                  a.intercepted
                    ? a.returnValue
                    : (e[a.data.name] = a.data.value)
                );
              },
              deleteProperty: (t, n) => {
                if ("symbol" == typeof n) return delete e[n];
                const i = new r.default({ name: n }, null, e);
                return (
                  this.emit("delete", i),
                  i.intercepted ? i.returnValue : delete e[i.data.name]
                );
              },
            });
            return (
              this.wrappers.set(n, e),
              this.ctx.nativeMethods.setPrototypeOf(n, this.storeProto),
              n
            );
          }
        }
        const o = a;
      },
      (e, t, n) => {
        "use strict";
        n.r(t), n.d(t, { default: () => o });
        var i = n(155),
          r = n(156);
        class a extends i.default {
          constructor(e) {
            super(),
              (this.ctx = e),
              (this.window = e.window),
              (this.CSSStyleDeclaration =
                this.window.CSSStyleDeclaration || {}),
              (this.cssStyleProto = this.CSSStyleDeclaration.prototype || {}),
              (this.getPropertyValue =
                this.cssStyleProto.getPropertyValue || null),
              (this.setProperty = this.cssStyleProto.setProperty || null),
              this.cssText,
              e.nativeMethods.getOwnPropertyDescriptors(
                this.cssStyleProto,
                "cssText",
              ),
              (this.urlProps = [
                "background",
                "backgroundImage",
                "borderImage",
                "borderImageSource",
                "listStyle",
                "listStyleImage",
                "cursor",
              ]),
              (this.dashedUrlProps = [
                "background",
                "background-image",
                "border-image",
                "border-image-source",
                "list-style",
                "list-style-image",
                "cursor",
              ]),
              (this.propToDashed = {
                background: "background",
                backgroundImage: "background-image",
                borderImage: "border-image",
                borderImageSource: "border-image-source",
                listStyle: "list-style",
                listStyleImage: "list-style-image",
                cursor: "cursor",
              });
          }
          overrideSetGetProperty() {
            this.ctx.override(
              this.cssStyleProto,
              "getPropertyValue",
              (e, t, n) => {
                if (!n.length) return e.apply(t, n);
                let [i] = n;
                const a = new r.default({ property: i }, e, t);
                return (
                  this.emit("getPropertyValue", a),
                  a.intercepted
                    ? a.returnValue
                    : a.target.call(a.that, a.data.property)
                );
              },
            ),
              this.ctx.override(
                this.cssStyleProto,
                "setProperty",
                (e, t, n) => {
                  if (2 > n.length) return e.apply(t, n);
                  let [i, a] = n;
                  const o = new r.default({ property: i, value: a }, e, t);
                  return (
                    this.emit("setProperty", o),
                    o.intercepted
                      ? o.returnValue
                      : o.target.call(o.that, o.data.property, o.data.value)
                  );
                },
              );
          }
          overrideCssText() {
            this.ctx.overrideDescriptor(this.cssStyleProto, "cssText", {
              get: (e, t) => {
                const n = new r.default({ value: e.call(t) }, e, t);
                return (
                  this.emit("getCssText", n),
                  n.intercepted ? n.returnValue : n.data.value
                );
              },
              set: (e, t, [n]) => {
                const i = new r.default({ value: n }, e, t);
                return (
                  this.emit("setCssText", i),
                  i.intercepted
                    ? i.returnValue
                    : i.target.call(i.that, i.data.value)
                );
              },
            });
          }
        }
        const o = a;
      },
      function (e) {
        e.exports = (function (e) {
          var t = {};
          function n(i) {
            if (t[i]) return t[i].exports;
            var r = (t[i] = { i: i, l: !1, exports: {} });
            return e[i].call(r.exports, r, r.exports, n), (r.l = !0), r.exports;
          }
          return (
            (n.m = e),
            (n.c = t),
            (n.d = function (e, t, i) {
              n.o(e, t) ||
                Object.defineProperty(e, t, { enumerable: !0, get: i });
            }),
            (n.r = function (e) {
              "undefined" != typeof Symbol &&
                Symbol.toStringTag &&
                Object.defineProperty(e, Symbol.toStringTag, {
                  value: "Module",
                }),
                Object.defineProperty(e, "__esModule", { value: !0 });
            }),
            (n.t = function (e, t) {
              if ((1 & t && (e = n(e)), 8 & t)) return e;
              if (4 & t && "object" == typeof e && e && e.__esModule) return e;
              var i = Object.create(null);
              if (
                (n.r(i),
                Object.defineProperty(i, "default", {
                  enumerable: !0,
                  value: e,
                }),
                2 & t && "string" != typeof e)
              )
                for (var r in e)
                  n.d(
                    i,
                    r,
                    function (t) {
                      return e[t];
                    }.bind(null, r),
                  );
              return i;
            }),
            (n.n = function (e) {
              var t =
                e && e.__esModule
                  ? function () {
                      return e.default;
                    }
                  : function () {
                      return e;
                    };
              return n.d(t, "a", t), t;
            }),
            (n.o = function (e, t) {
              return Object.prototype.hasOwnProperty.call(e, t);
            }),
            (n.p = ""),
            n((n.s = 90))
          );
        })({
          17: function (e, t, n) {
            "use strict";
            (t.__esModule = !0), (t.default = void 0);
            var i = n(18),
              r = (function () {
                function e() {}
                return (
                  (e.getFirstMatch = function (e, t) {
                    var n = t.match(e);
                    return (n && n.length > 0 && n[1]) || "";
                  }),
                  (e.getSecondMatch = function (e, t) {
                    var n = t.match(e);
                    return (n && n.length > 1 && n[2]) || "";
                  }),
                  (e.matchAndReturnConst = function (e, t, n) {
                    if (e.test(t)) return n;
                  }),
                  (e.getWindowsVersionName = function (e) {
                    switch (e) {
                      case "NT":
                        return "NT";
                      case "XP":
                      case "NT 5.1":
                        return "XP";
                      case "NT 5.0":
                        return "2000";
                      case "NT 5.2":
                        return "2003";
                      case "NT 6.0":
                        return "Vista";
                      case "NT 6.1":
                        return "7";
                      case "NT 6.2":
                        return "8";
                      case "NT 6.3":
                        return "8.1";
                      case "NT 10.0":
                        return "10";
                      default:
                        return;
                    }
                  }),
                  (e.getMacOSVersionName = function (e) {
                    var t = e
                      .split(".")
                      .splice(0, 2)
                      .map(function (e) {
                        return parseInt(e, 10) || 0;
                      });
                    if ((t.push(0), 10 === t[0]))
                      switch (t[1]) {
                        case 5:
                          return "Leopard";
                        case 6:
                          return "Snow Leopard";
                        case 7:
                          return "Lion";
                        case 8:
                          return "Mountain Lion";
                        case 9:
                          return "Mavericks";
                        case 10:
                          return "Yosemite";
                        case 11:
                          return "El Capitan";
                        case 12:
                          return "Sierra";
                        case 13:
                          return "High Sierra";
                        case 14:
                          return "Mojave";
                        case 15:
                          return "Catalina";
                        default:
                          return;
                      }
                  }),
                  (e.getAndroidVersionName = function (e) {
                    var t = e
                      .split(".")
                      .splice(0, 2)
                      .map(function (e) {
                        return parseInt(e, 10) || 0;
                      });
                    if ((t.push(0), !(1 === t[0] && t[1] < 5)))
                      return 1 === t[0] && t[1] < 6
                        ? "Cupcake"
                        : 1 === t[0] && t[1] >= 6
                          ? "Donut"
                          : 2 === t[0] && t[1] < 2
                            ? "Eclair"
                            : 2 === t[0] && 2 === t[1]
                              ? "Froyo"
                              : 2 === t[0] && t[1] > 2
                                ? "Gingerbread"
                                : 3 === t[0]
                                  ? "Honeycomb"
                                  : 4 === t[0] && t[1] < 1
                                    ? "Ice Cream Sandwich"
                                    : 4 === t[0] && t[1] < 4
                                      ? "Jelly Bean"
                                      : 4 === t[0] && t[1] >= 4
                                        ? "KitKat"
                                        : 5 === t[0]
                                          ? "Lollipop"
                                          : 6 === t[0]
                                            ? "Marshmallow"
                                            : 7 === t[0]
                                              ? "Nougat"
                                              : 8 === t[0]
                                                ? "Oreo"
                                                : 9 === t[0]
                                                  ? "Pie"
                                                  : void 0;
                  }),
                  (e.getVersionPrecision = function (e) {
                    return e.split(".").length;
                  }),
                  (e.compareVersions = function (t, n, i) {
                    void 0 === i && (i = !1);
                    var r = e.getVersionPrecision(t),
                      a = e.getVersionPrecision(n),
                      o = Math.max(r, a),
                      s = 0,
                      c = e.map([t, n], function (t) {
                        var n = o - e.getVersionPrecision(t),
                          i = t + new Array(n + 1).join(".0");
                        return e
                          .map(i.split("."), function (e) {
                            return new Array(20 - e.length).join("0") + e;
                          })
                          .reverse();
                      });
                    for (i && (s = o - Math.min(r, a)), o -= 1; o >= s; ) {
                      if (c[0][o] > c[1][o]) return 1;
                      if (c[0][o] === c[1][o]) {
                        if (o === s) return 0;
                        o -= 1;
                      } else if (c[0][o] < c[1][o]) return -1;
                    }
                  }),
                  (e.map = function (e, t) {
                    var n,
                      i = [];
                    if (Array.prototype.map)
                      return Array.prototype.map.call(e, t);
                    for (n = 0; n < e.length; n += 1) i.push(t(e[n]));
                    return i;
                  }),
                  (e.find = function (e, t) {
                    var n, i;
                    if (Array.prototype.find)
                      return Array.prototype.find.call(e, t);
                    for (n = 0, i = e.length; n < i; n += 1) {
                      var r = e[n];
                      if (t(r, n)) return r;
                    }
                  }),
                  (e.assign = function (e) {
                    for (
                      var t,
                        n,
                        i = e,
                        r = arguments.length,
                        a = new Array(r > 1 ? r - 1 : 0),
                        o = 1;
                      o < r;
                      o++
                    )
                      a[o - 1] = arguments[o];
                    if (Object.assign)
                      return Object.assign.apply(Object, [e].concat(a));
                    var s = function () {
                      var e = a[t];
                      "object" == typeof e &&
                        null !== e &&
                        Object.keys(e).forEach(function (t) {
                          i[t] = e[t];
                        });
                    };
                    for (t = 0, n = a.length; t < n; t += 1) s();
                    return e;
                  }),
                  (e.getBrowserAlias = function (e) {
                    return i.BROWSER_ALIASES_MAP[e];
                  }),
                  (e.getBrowserTypeByAlias = function (e) {
                    return i.BROWSER_MAP[e] || "";
                  }),
                  e
                );
              })();
            (t.default = r), (e.exports = t.default);
          },
          18: function (e, t, n) {
            "use strict";
            (t.__esModule = !0),
              (t.ENGINE_MAP =
                t.OS_MAP =
                t.PLATFORMS_MAP =
                t.BROWSER_MAP =
                t.BROWSER_ALIASES_MAP =
                  void 0),
              (t.BROWSER_ALIASES_MAP = {
                "Amazon Silk": "amazon_silk",
                "Android Browser": "android",
                Bada: "bada",
                BlackBerry: "blackberry",
                Chrome: "chrome",
                Chromium: "chromium",
                Electron: "electron",
                Epiphany: "epiphany",
                Firefox: "firefox",
                Focus: "focus",
                Generic: "generic",
                "Google Search": "google_search",
                Googlebot: "googlebot",
                "Internet Explorer": "ie",
                "K-Meleon": "k_meleon",
                Maxthon: "maxthon",
                "Microsoft Edge": "edge",
                "MZ Browser": "mz",
                "NAVER Whale Browser": "naver",
                Opera: "opera",
                "Opera Coast": "opera_coast",
                PhantomJS: "phantomjs",
                Puffin: "puffin",
                QupZilla: "qupzilla",
                QQ: "qq",
                QQLite: "qqlite",
                Safari: "safari",
                Sailfish: "sailfish",
                "Samsung Internet for Android": "samsung_internet",
                SeaMonkey: "seamonkey",
                Sleipnir: "sleipnir",
                Swing: "swing",
                Tizen: "tizen",
                "UC Browser": "uc",
                Vivaldi: "vivaldi",
                "WebOS Browser": "webos",
                WeChat: "wechat",
                "Yandex Browser": "yandex",
                Roku: "roku",
              }),
              (t.BROWSER_MAP = {
                amazon_silk: "Amazon Silk",
                android: "Android Browser",
                bada: "Bada",
                blackberry: "BlackBerry",
                chrome: "Chrome",
                chromium: "Chromium",
                electron: "Electron",
                epiphany: "Epiphany",
                firefox: "Firefox",
                focus: "Focus",
                generic: "Generic",
                googlebot: "Googlebot",
                google_search: "Google Search",
                ie: "Internet Explorer",
                k_meleon: "K-Meleon",
                maxthon: "Maxthon",
                edge: "Microsoft Edge",
                mz: "MZ Browser",
                naver: "NAVER Whale Browser",
                opera: "Opera",
                opera_coast: "Opera Coast",
                phantomjs: "PhantomJS",
                puffin: "Puffin",
                qupzilla: "QupZilla",
                qq: "QQ Browser",
                qqlite: "QQ Browser Lite",
                safari: "Safari",
                sailfish: "Sailfish",
                samsung_internet: "Samsung Internet for Android",
                seamonkey: "SeaMonkey",
                sleipnir: "Sleipnir",
                swing: "Swing",
                tizen: "Tizen",
                uc: "UC Browser",
                vivaldi: "Vivaldi",
                webos: "WebOS Browser",
                wechat: "WeChat",
                yandex: "Yandex Browser",
              }),
              (t.PLATFORMS_MAP = {
                tablet: "tablet",
                mobile: "mobile",
                desktop: "desktop",
                tv: "tv",
              }),
              (t.OS_MAP = {
                WindowsPhone: "Windows Phone",
                Windows: "Windows",
                MacOS: "macOS",
                iOS: "iOS",
                Android: "Android",
                WebOS: "WebOS",
                BlackBerry: "BlackBerry",
                Bada: "Bada",
                Tizen: "Tizen",
                Linux: "Linux",
                ChromeOS: "Chrome OS",
                PlayStation4: "PlayStation 4",
                Roku: "Roku",
              }),
              (t.ENGINE_MAP = {
                EdgeHTML: "EdgeHTML",
                Blink: "Blink",
                Trident: "Trident",
                Presto: "Presto",
                Gecko: "Gecko",
                WebKit: "WebKit",
              });
          },
          90: function (e, t, n) {
            "use strict";
            (t.__esModule = !0), (t.default = void 0);
            var i,
              r = (i = n(91)) && i.__esModule ? i : { default: i },
              a = n(18);
            function o(e, t) {
              for (var n = 0; n < t.length; n++) {
                var i = t[n];
                (i.enumerable = i.enumerable || !1),
                  (i.configurable = !0),
                  "value" in i && (i.writable = !0),
                  Object.defineProperty(e, i.key, i);
              }
            }
            var s = (function () {
              function e() {}
              var t, n, i;
              return (
                (e.getParser = function (e, t) {
                  if ((void 0 === t && (t = !1), "string" != typeof e))
                    throw new Error("UserAgent should be a string");
                  return new r.default(e, t);
                }),
                (e.parse = function (e) {
                  return new r.default(e).getResult();
                }),
                (t = e),
                (i = [
                  {
                    key: "BROWSER_MAP",
                    get: function () {
                      return a.BROWSER_MAP;
                    },
                  },
                  {
                    key: "ENGINE_MAP",
                    get: function () {
                      return a.ENGINE_MAP;
                    },
                  },
                  {
                    key: "OS_MAP",
                    get: function () {
                      return a.OS_MAP;
                    },
                  },
                  {
                    key: "PLATFORMS_MAP",
                    get: function () {
                      return a.PLATFORMS_MAP;
                    },
                  },
                ]),
                (n = null) && o(t.prototype, n),
                i && o(t, i),
                e
              );
            })();
            (t.default = s), (e.exports = t.default);
          },
          91: function (e, t, n) {
            "use strict";
            (t.__esModule = !0), (t.default = void 0);
            var i = c(n(92)),
              r = c(n(93)),
              a = c(n(94)),
              o = c(n(95)),
              s = c(n(17));
            function c(e) {
              return e && e.__esModule ? e : { default: e };
            }
            var l = (function () {
              function e(e, t) {
                if ((void 0 === t && (t = !1), null == e || "" === e))
                  throw new Error("UserAgent parameter can't be empty");
                (this._ua = e),
                  (this.parsedResult = {}),
                  !0 !== t && this.parse();
              }
              var t = e.prototype;
              return (
                (t.getUA = function () {
                  return this._ua;
                }),
                (t.test = function (e) {
                  return e.test(this._ua);
                }),
                (t.parseBrowser = function () {
                  var e = this;
                  this.parsedResult.browser = {};
                  var t = s.default.find(i.default, function (t) {
                    if ("function" == typeof t.test) return t.test(e);
                    if (t.test instanceof Array)
                      return t.test.some(function (t) {
                        return e.test(t);
                      });
                    throw new Error("Browser's test function is not valid");
                  });
                  return (
                    t && (this.parsedResult.browser = t.describe(this.getUA())),
                    this.parsedResult.browser
                  );
                }),
                (t.getBrowser = function () {
                  return this.parsedResult.browser
                    ? this.parsedResult.browser
                    : this.parseBrowser();
                }),
                (t.getBrowserName = function (e) {
                  return e
                    ? String(this.getBrowser().name).toLowerCase() || ""
                    : this.getBrowser().name || "";
                }),
                (t.getBrowserVersion = function () {
                  return this.getBrowser().version;
                }),
                (t.getOS = function () {
                  return this.parsedResult.os
                    ? this.parsedResult.os
                    : this.parseOS();
                }),
                (t.parseOS = function () {
                  var e = this;
                  this.parsedResult.os = {};
                  var t = s.default.find(r.default, function (t) {
                    if ("function" == typeof t.test) return t.test(e);
                    if (t.test instanceof Array)
                      return t.test.some(function (t) {
                        return e.test(t);
                      });
                    throw new Error("Browser's test function is not valid");
                  });
                  return (
                    t && (this.parsedResult.os = t.describe(this.getUA())),
                    this.parsedResult.os
                  );
                }),
                (t.getOSName = function (e) {
                  var t = this.getOS().name;
                  return e ? String(t).toLowerCase() || "" : t || "";
                }),
                (t.getOSVersion = function () {
                  return this.getOS().version;
                }),
                (t.getPlatform = function () {
                  return this.parsedResult.platform
                    ? this.parsedResult.platform
                    : this.parsePlatform();
                }),
                (t.getPlatformType = function (e) {
                  void 0 === e && (e = !1);
                  var t = this.getPlatform().type;
                  return e ? String(t).toLowerCase() || "" : t || "";
                }),
                (t.parsePlatform = function () {
                  var e = this;
                  this.parsedResult.platform = {};
                  var t = s.default.find(a.default, function (t) {
                    if ("function" == typeof t.test) return t.test(e);
                    if (t.test instanceof Array)
                      return t.test.some(function (t) {
                        return e.test(t);
                      });
                    throw new Error("Browser's test function is not valid");
                  });
                  return (
                    t &&
                      (this.parsedResult.platform = t.describe(this.getUA())),
                    this.parsedResult.platform
                  );
                }),
                (t.getEngine = function () {
                  return this.parsedResult.engine
                    ? this.parsedResult.engine
                    : this.parseEngine();
                }),
                (t.getEngineName = function (e) {
                  return e
                    ? String(this.getEngine().name).toLowerCase() || ""
                    : this.getEngine().name || "";
                }),
                (t.parseEngine = function () {
                  var e = this;
                  this.parsedResult.engine = {};
                  var t = s.default.find(o.default, function (t) {
                    if ("function" == typeof t.test) return t.test(e);
                    if (t.test instanceof Array)
                      return t.test.some(function (t) {
                        return e.test(t);
                      });
                    throw new Error("Browser's test function is not valid");
                  });
                  return (
                    t && (this.parsedResult.engine = t.describe(this.getUA())),
                    this.parsedResult.engine
                  );
                }),
                (t.parse = function () {
                  return (
                    this.parseBrowser(),
                    this.parseOS(),
                    this.parsePlatform(),
                    this.parseEngine(),
                    this
                  );
                }),
                (t.getResult = function () {
                  return s.default.assign({}, this.parsedResult);
                }),
                (t.satisfies = function (e) {
                  var t = this,
                    n = {},
                    i = 0,
                    r = {},
                    a = 0;
                  if (
                    (Object.keys(e).forEach(function (t) {
                      var o = e[t];
                      "string" == typeof o
                        ? ((r[t] = o), (a += 1))
                        : "object" == typeof o && ((n[t] = o), (i += 1));
                    }),
                    i > 0)
                  ) {
                    var o = Object.keys(n),
                      c = s.default.find(o, function (e) {
                        return t.isOS(e);
                      });
                    if (c) {
                      var l = this.satisfies(n[c]);
                      if (void 0 !== l) return l;
                    }
                    var u = s.default.find(o, function (e) {
                      return t.isPlatform(e);
                    });
                    if (u) {
                      var p = this.satisfies(n[u]);
                      if (void 0 !== p) return p;
                    }
                  }
                  if (a > 0) {
                    var d = Object.keys(r),
                      m = s.default.find(d, function (e) {
                        return t.isBrowser(e, !0);
                      });
                    if (void 0 !== m) return this.compareVersion(r[m]);
                  }
                }),
                (t.isBrowser = function (e, t) {
                  void 0 === t && (t = !1);
                  var n = this.getBrowserName().toLowerCase(),
                    i = e.toLowerCase(),
                    r = s.default.getBrowserTypeByAlias(i);
                  return t && r && (i = r.toLowerCase()), i === n;
                }),
                (t.compareVersion = function (e) {
                  var t = [0],
                    n = e,
                    i = !1,
                    r = this.getBrowserVersion();
                  if ("string" == typeof r)
                    return (
                      ">" === e[0] || "<" === e[0]
                        ? ((n = e.substr(1)),
                          "=" === e[1]
                            ? ((i = !0), (n = e.substr(2)))
                            : (t = []),
                          ">" === e[0] ? t.push(1) : t.push(-1))
                        : "=" === e[0]
                          ? (n = e.substr(1))
                          : "~" === e[0] && ((i = !0), (n = e.substr(1))),
                      t.indexOf(s.default.compareVersions(r, n, i)) > -1
                    );
                }),
                (t.isOS = function (e) {
                  return this.getOSName(!0) === String(e).toLowerCase();
                }),
                (t.isPlatform = function (e) {
                  return this.getPlatformType(!0) === String(e).toLowerCase();
                }),
                (t.isEngine = function (e) {
                  return this.getEngineName(!0) === String(e).toLowerCase();
                }),
                (t.is = function (e, t) {
                  return (
                    void 0 === t && (t = !1),
                    this.isBrowser(e, t) || this.isOS(e) || this.isPlatform(e)
                  );
                }),
                (t.some = function (e) {
                  var t = this;
                  return (
                    void 0 === e && (e = []),
                    e.some(function (e) {
                      return t.is(e);
                    })
                  );
                }),
                e
              );
            })();
            (t.default = l), (e.exports = t.default);
          },
          92: function (e, t, n) {
            "use strict";
            (t.__esModule = !0), (t.default = void 0);
            var i,
              r = (i = n(17)) && i.__esModule ? i : { default: i },
              a = /version\/(\d+(\.?_?\d+)+)/i,
              o = [
                {
                  test: [/googlebot/i],
                  describe: function (e) {
                    var t = { name: "Googlebot" },
                      n =
                        r.default.getFirstMatch(
                          /googlebot\/(\d+(\.\d+))/i,
                          e,
                        ) || r.default.getFirstMatch(a, e);
                    return n && (t.version = n), t;
                  },
                },
                {
                  test: [/opera/i],
                  describe: function (e) {
                    var t = { name: "Opera" },
                      n =
                        r.default.getFirstMatch(a, e) ||
                        r.default.getFirstMatch(
                          /(?:opera)[\s/](\d+(\.?_?\d+)+)/i,
                          e,
                        );
                    return n && (t.version = n), t;
                  },
                },
                {
                  test: [/opr\/|opios/i],
                  describe: function (e) {
                    var t = { name: "Opera" },
                      n =
                        r.default.getFirstMatch(
                          /(?:opr|opios)[\s/](\S+)/i,
                          e,
                        ) || r.default.getFirstMatch(a, e);
                    return n && (t.version = n), t;
                  },
                },
                {
                  test: [/SamsungBrowser/i],
                  describe: function (e) {
                    var t = { name: "Samsung Internet for Android" },
                      n =
                        r.default.getFirstMatch(a, e) ||
                        r.default.getFirstMatch(
                          /(?:SamsungBrowser)[\s/](\d+(\.?_?\d+)+)/i,
                          e,
                        );
                    return n && (t.version = n), t;
                  },
                },
                {
                  test: [/Whale/i],
                  describe: function (e) {
                    var t = { name: "NAVER Whale Browser" },
                      n =
                        r.default.getFirstMatch(a, e) ||
                        r.default.getFirstMatch(
                          /(?:whale)[\s/](\d+(?:\.\d+)+)/i,
                          e,
                        );
                    return n && (t.version = n), t;
                  },
                },
                {
                  test: [/MZBrowser/i],
                  describe: function (e) {
                    var t = { name: "MZ Browser" },
                      n =
                        r.default.getFirstMatch(
                          /(?:MZBrowser)[\s/](\d+(?:\.\d+)+)/i,
                          e,
                        ) || r.default.getFirstMatch(a, e);
                    return n && (t.version = n), t;
                  },
                },
                {
                  test: [/focus/i],
                  describe: function (e) {
                    var t = { name: "Focus" },
                      n =
                        r.default.getFirstMatch(
                          /(?:focus)[\s/](\d+(?:\.\d+)+)/i,
                          e,
                        ) || r.default.getFirstMatch(a, e);
                    return n && (t.version = n), t;
                  },
                },
                {
                  test: [/swing/i],
                  describe: function (e) {
                    var t = { name: "Swing" },
                      n =
                        r.default.getFirstMatch(
                          /(?:swing)[\s/](\d+(?:\.\d+)+)/i,
                          e,
                        ) || r.default.getFirstMatch(a, e);
                    return n && (t.version = n), t;
                  },
                },
                {
                  test: [/coast/i],
                  describe: function (e) {
                    var t = { name: "Opera Coast" },
                      n =
                        r.default.getFirstMatch(a, e) ||
                        r.default.getFirstMatch(
                          /(?:coast)[\s/](\d+(\.?_?\d+)+)/i,
                          e,
                        );
                    return n && (t.version = n), t;
                  },
                },
                {
                  test: [/opt\/\d+(?:.?_?\d+)+/i],
                  describe: function (e) {
                    var t = { name: "Opera Touch" },
                      n =
                        r.default.getFirstMatch(
                          /(?:opt)[\s/](\d+(\.?_?\d+)+)/i,
                          e,
                        ) || r.default.getFirstMatch(a, e);
                    return n && (t.version = n), t;
                  },
                },
                {
                  test: [/yabrowser/i],
                  describe: function (e) {
                    var t = { name: "Yandex Browser" },
                      n =
                        r.default.getFirstMatch(
                          /(?:yabrowser)[\s/](\d+(\.?_?\d+)+)/i,
                          e,
                        ) || r.default.getFirstMatch(a, e);
                    return n && (t.version = n), t;
                  },
                },
                {
                  test: [/ucbrowser/i],
                  describe: function (e) {
                    var t = { name: "UC Browser" },
                      n =
                        r.default.getFirstMatch(a, e) ||
                        r.default.getFirstMatch(
                          /(?:ucbrowser)[\s/](\d+(\.?_?\d+)+)/i,
                          e,
                        );
                    return n && (t.version = n), t;
                  },
                },
                {
                  test: [/Maxthon|mxios/i],
                  describe: function (e) {
                    var t = { name: "Maxthon" },
                      n =
                        r.default.getFirstMatch(a, e) ||
                        r.default.getFirstMatch(
                          /(?:Maxthon|mxios)[\s/](\d+(\.?_?\d+)+)/i,
                          e,
                        );
                    return n && (t.version = n), t;
                  },
                },
                {
                  test: [/epiphany/i],
                  describe: function (e) {
                    var t = { name: "Epiphany" },
                      n =
                        r.default.getFirstMatch(a, e) ||
                        r.default.getFirstMatch(
                          /(?:epiphany)[\s/](\d+(\.?_?\d+)+)/i,
                          e,
                        );
                    return n && (t.version = n), t;
                  },
                },
                {
                  test: [/puffin/i],
                  describe: function (e) {
                    var t = { name: "Puffin" },
                      n =
                        r.default.getFirstMatch(a, e) ||
                        r.default.getFirstMatch(
                          /(?:puffin)[\s/](\d+(\.?_?\d+)+)/i,
                          e,
                        );
                    return n && (t.version = n), t;
                  },
                },
                {
                  test: [/sleipnir/i],
                  describe: function (e) {
                    var t = { name: "Sleipnir" },
                      n =
                        r.default.getFirstMatch(a, e) ||
                        r.default.getFirstMatch(
                          /(?:sleipnir)[\s/](\d+(\.?_?\d+)+)/i,
                          e,
                        );
                    return n && (t.version = n), t;
                  },
                },
                {
                  test: [/k-meleon/i],
                  describe: function (e) {
                    var t = { name: "K-Meleon" },
                      n =
                        r.default.getFirstMatch(a, e) ||
                        r.default.getFirstMatch(
                          /(?:k-meleon)[\s/](\d+(\.?_?\d+)+)/i,
                          e,
                        );
                    return n && (t.version = n), t;
                  },
                },
                {
                  test: [/micromessenger/i],
                  describe: function (e) {
                    var t = { name: "WeChat" },
                      n =
                        r.default.getFirstMatch(
                          /(?:micromessenger)[\s/](\d+(\.?_?\d+)+)/i,
                          e,
                        ) || r.default.getFirstMatch(a, e);
                    return n && (t.version = n), t;
                  },
                },
                {
                  test: [/qqbrowser/i],
                  describe: function (e) {
                    var t = {
                        name: /qqbrowserlite/i.test(e)
                          ? "QQ Browser Lite"
                          : "QQ Browser",
                      },
                      n =
                        r.default.getFirstMatch(
                          /(?:qqbrowserlite|qqbrowser)[/](\d+(\.?_?\d+)+)/i,
                          e,
                        ) || r.default.getFirstMatch(a, e);
                    return n && (t.version = n), t;
                  },
                },
                {
                  test: [/msie|trident/i],
                  describe: function (e) {
                    var t = { name: "Internet Explorer" },
                      n = r.default.getFirstMatch(
                        /(?:msie |rv:)(\d+(\.?_?\d+)+)/i,
                        e,
                      );
                    return n && (t.version = n), t;
                  },
                },
                {
                  test: [/\sedg\//i],
                  describe: function (e) {
                    var t = { name: "Microsoft Edge" },
                      n = r.default.getFirstMatch(
                        /\sedg\/(\d+(\.?_?\d+)+)/i,
                        e,
                      );
                    return n && (t.version = n), t;
                  },
                },
                {
                  test: [/edg([ea]|ios)/i],
                  describe: function (e) {
                    var t = { name: "Microsoft Edge" },
                      n = r.default.getSecondMatch(
                        /edg([ea]|ios)\/(\d+(\.?_?\d+)+)/i,
                        e,
                      );
                    return n && (t.version = n), t;
                  },
                },
                {
                  test: [/vivaldi/i],
                  describe: function (e) {
                    var t = { name: "Vivaldi" },
                      n = r.default.getFirstMatch(
                        /vivaldi\/(\d+(\.?_?\d+)+)/i,
                        e,
                      );
                    return n && (t.version = n), t;
                  },
                },
                {
                  test: [/seamonkey/i],
                  describe: function (e) {
                    var t = { name: "SeaMonkey" },
                      n = r.default.getFirstMatch(
                        /seamonkey\/(\d+(\.?_?\d+)+)/i,
                        e,
                      );
                    return n && (t.version = n), t;
                  },
                },
                {
                  test: [/sailfish/i],
                  describe: function (e) {
                    var t = { name: "Sailfish" },
                      n = r.default.getFirstMatch(
                        /sailfish\s?browser\/(\d+(\.\d+)?)/i,
                        e,
                      );
                    return n && (t.version = n), t;
                  },
                },
                {
                  test: [/silk/i],
                  describe: function (e) {
                    var t = { name: "Amazon Silk" },
                      n = r.default.getFirstMatch(/silk\/(\d+(\.?_?\d+)+)/i, e);
                    return n && (t.version = n), t;
                  },
                },
                {
                  test: [/phantom/i],
                  describe: function (e) {
                    var t = { name: "PhantomJS" },
                      n = r.default.getFirstMatch(
                        /phantomjs\/(\d+(\.?_?\d+)+)/i,
                        e,
                      );
                    return n && (t.version = n), t;
                  },
                },
                {
                  test: [/slimerjs/i],
                  describe: function (e) {
                    var t = { name: "SlimerJS" },
                      n = r.default.getFirstMatch(
                        /slimerjs\/(\d+(\.?_?\d+)+)/i,
                        e,
                      );
                    return n && (t.version = n), t;
                  },
                },
                {
                  test: [/blackberry|\bbb\d+/i, /rim\stablet/i],
                  describe: function (e) {
                    var t = { name: "BlackBerry" },
                      n =
                        r.default.getFirstMatch(a, e) ||
                        r.default.getFirstMatch(
                          /blackberry[\d]+\/(\d+(\.?_?\d+)+)/i,
                          e,
                        );
                    return n && (t.version = n), t;
                  },
                },
                {
                  test: [/(web|hpw)[o0]s/i],
                  describe: function (e) {
                    var t = { name: "WebOS Browser" },
                      n =
                        r.default.getFirstMatch(a, e) ||
                        r.default.getFirstMatch(
                          /w(?:eb)?[o0]sbrowser\/(\d+(\.?_?\d+)+)/i,
                          e,
                        );
                    return n && (t.version = n), t;
                  },
                },
                {
                  test: [/bada/i],
                  describe: function (e) {
                    var t = { name: "Bada" },
                      n = r.default.getFirstMatch(
                        /dolfin\/(\d+(\.?_?\d+)+)/i,
                        e,
                      );
                    return n && (t.version = n), t;
                  },
                },
                {
                  test: [/tizen/i],
                  describe: function (e) {
                    var t = { name: "Tizen" },
                      n =
                        r.default.getFirstMatch(
                          /(?:tizen\s?)?browser\/(\d+(\.?_?\d+)+)/i,
                          e,
                        ) || r.default.getFirstMatch(a, e);
                    return n && (t.version = n), t;
                  },
                },
                {
                  test: [/qupzilla/i],
                  describe: function (e) {
                    var t = { name: "QupZilla" },
                      n =
                        r.default.getFirstMatch(
                          /(?:qupzilla)[\s/](\d+(\.?_?\d+)+)/i,
                          e,
                        ) || r.default.getFirstMatch(a, e);
                    return n && (t.version = n), t;
                  },
                },
                {
                  test: [/firefox|iceweasel|fxios/i],
                  describe: function (e) {
                    var t = { name: "Firefox" },
                      n = r.default.getFirstMatch(
                        /(?:firefox|iceweasel|fxios)[\s/](\d+(\.?_?\d+)+)/i,
                        e,
                      );
                    return n && (t.version = n), t;
                  },
                },
                {
                  test: [/electron/i],
                  describe: function (e) {
                    var t = { name: "Electron" },
                      n = r.default.getFirstMatch(
                        /(?:electron)\/(\d+(\.?_?\d+)+)/i,
                        e,
                      );
                    return n && (t.version = n), t;
                  },
                },
                {
                  test: [/MiuiBrowser/i],
                  describe: function (e) {
                    var t = { name: "Miui" },
                      n = r.default.getFirstMatch(
                        /(?:MiuiBrowser)[\s/](\d+(\.?_?\d+)+)/i,
                        e,
                      );
                    return n && (t.version = n), t;
                  },
                },
                {
                  test: [/chromium/i],
                  describe: function (e) {
                    var t = { name: "Chromium" },
                      n =
                        r.default.getFirstMatch(
                          /(?:chromium)[\s/](\d+(\.?_?\d+)+)/i,
                          e,
                        ) || r.default.getFirstMatch(a, e);
                    return n && (t.version = n), t;
                  },
                },
                {
                  test: [/chrome|crios|crmo/i],
                  describe: function (e) {
                    var t = { name: "Chrome" },
                      n = r.default.getFirstMatch(
                        /(?:chrome|crios|crmo)\/(\d+(\.?_?\d+)+)/i,
                        e,
                      );
                    return n && (t.version = n), t;
                  },
                },
                {
                  test: [/GSA/i],
                  describe: function (e) {
                    var t = { name: "Google Search" },
                      n = r.default.getFirstMatch(
                        /(?:GSA)\/(\d+(\.?_?\d+)+)/i,
                        e,
                      );
                    return n && (t.version = n), t;
                  },
                },
                {
                  test: function (e) {
                    var t = !e.test(/like android/i),
                      n = e.test(/android/i);
                    return t && n;
                  },
                  describe: function (e) {
                    var t = { name: "Android Browser" },
                      n = r.default.getFirstMatch(a, e);
                    return n && (t.version = n), t;
                  },
                },
                {
                  test: [/playstation 4/i],
                  describe: function (e) {
                    var t = { name: "PlayStation 4" },
                      n = r.default.getFirstMatch(a, e);
                    return n && (t.version = n), t;
                  },
                },
                {
                  test: [/safari|applewebkit/i],
                  describe: function (e) {
                    var t = { name: "Safari" },
                      n = r.default.getFirstMatch(a, e);
                    return n && (t.version = n), t;
                  },
                },
                {
                  test: [/.*/i],
                  describe: function (e) {
                    var t =
                      -1 !== e.search("\\(")
                        ? /^(.*)\/(.*)[ \t]\((.*)/
                        : /^(.*)\/(.*) /;
                    return {
                      name: r.default.getFirstMatch(t, e),
                      version: r.default.getSecondMatch(t, e),
                    };
                  },
                },
              ];
            (t.default = o), (e.exports = t.default);
          },
          93: function (e, t, n) {
            "use strict";
            (t.__esModule = !0), (t.default = void 0);
            var i,
              r = (i = n(17)) && i.__esModule ? i : { default: i },
              a = n(18),
              o = [
                {
                  test: [/Roku\/DVP/],
                  describe: function (e) {
                    var t = r.default.getFirstMatch(/Roku\/DVP-(\d+\.\d+)/i, e);
                    return { name: a.OS_MAP.Roku, version: t };
                  },
                },
                {
                  test: [/windows phone/i],
                  describe: function (e) {
                    var t = r.default.getFirstMatch(
                      /windows phone (?:os)?\s?(\d+(\.\d+)*)/i,
                      e,
                    );
                    return { name: a.OS_MAP.WindowsPhone, version: t };
                  },
                },
                {
                  test: [/windows /i],
                  describe: function (e) {
                    var t = r.default.getFirstMatch(
                        /Windows ((NT|XP)( \d\d?.\d)?)/i,
                        e,
                      ),
                      n = r.default.getWindowsVersionName(t);
                    return {
                      name: a.OS_MAP.Windows,
                      version: t,
                      versionName: n,
                    };
                  },
                },
                {
                  test: [/Macintosh(.*?) FxiOS(.*?)\//],
                  describe: function (e) {
                    var t = { name: a.OS_MAP.iOS },
                      n = r.default.getSecondMatch(/(Version\/)(\d[\d.]+)/, e);
                    return n && (t.version = n), t;
                  },
                },
                {
                  test: [/macintosh/i],
                  describe: function (e) {
                    var t = r.default
                        .getFirstMatch(/mac os x (\d+(\.?_?\d+)+)/i, e)
                        .replace(/[_\s]/g, "."),
                      n = r.default.getMacOSVersionName(t),
                      i = { name: a.OS_MAP.MacOS, version: t };
                    return n && (i.versionName = n), i;
                  },
                },
                {
                  test: [/(ipod|iphone|ipad)/i],
                  describe: function (e) {
                    var t = r.default
                      .getFirstMatch(/os (\d+([_\s]\d+)*) like mac os x/i, e)
                      .replace(/[_\s]/g, ".");
                    return { name: a.OS_MAP.iOS, version: t };
                  },
                },
                {
                  test: function (e) {
                    var t = !e.test(/like android/i),
                      n = e.test(/android/i);
                    return t && n;
                  },
                  describe: function (e) {
                    var t = r.default.getFirstMatch(
                        /android[\s/-](\d+(\.\d+)*)/i,
                        e,
                      ),
                      n = r.default.getAndroidVersionName(t),
                      i = { name: a.OS_MAP.Android, version: t };
                    return n && (i.versionName = n), i;
                  },
                },
                {
                  test: [/(web|hpw)[o0]s/i],
                  describe: function (e) {
                    var t = r.default.getFirstMatch(
                        /(?:web|hpw)[o0]s\/(\d+(\.\d+)*)/i,
                        e,
                      ),
                      n = { name: a.OS_MAP.WebOS };
                    return t && t.length && (n.version = t), n;
                  },
                },
                {
                  test: [/blackberry|\bbb\d+/i, /rim\stablet/i],
                  describe: function (e) {
                    var t =
                      r.default.getFirstMatch(
                        /rim\stablet\sos\s(\d+(\.\d+)*)/i,
                        e,
                      ) ||
                      r.default.getFirstMatch(
                        /blackberry\d+\/(\d+([_\s]\d+)*)/i,
                        e,
                      ) ||
                      r.default.getFirstMatch(/\bbb(\d+)/i, e);
                    return { name: a.OS_MAP.BlackBerry, version: t };
                  },
                },
                {
                  test: [/bada/i],
                  describe: function (e) {
                    var t = r.default.getFirstMatch(/bada\/(\d+(\.\d+)*)/i, e);
                    return { name: a.OS_MAP.Bada, version: t };
                  },
                },
                {
                  test: [/tizen/i],
                  describe: function (e) {
                    var t = r.default.getFirstMatch(
                      /tizen[/\s](\d+(\.\d+)*)/i,
                      e,
                    );
                    return { name: a.OS_MAP.Tizen, version: t };
                  },
                },
                {
                  test: [/linux/i],
                  describe: function () {
                    return { name: a.OS_MAP.Linux };
                  },
                },
                {
                  test: [/CrOS/],
                  describe: function () {
                    return { name: a.OS_MAP.ChromeOS };
                  },
                },
                {
                  test: [/PlayStation 4/],
                  describe: function (e) {
                    var t = r.default.getFirstMatch(
                      /PlayStation 4[/\s](\d+(\.\d+)*)/i,
                      e,
                    );
                    return { name: a.OS_MAP.PlayStation4, version: t };
                  },
                },
              ];
            (t.default = o), (e.exports = t.default);
          },
          94: function (e, t, n) {
            "use strict";
            (t.__esModule = !0), (t.default = void 0);
            var i,
              r = (i = n(17)) && i.__esModule ? i : { default: i },
              a = n(18),
              o = [
                {
                  test: [/googlebot/i],
                  describe: function () {
                    return { type: "bot", vendor: "Google" };
                  },
                },
                {
                  test: [/huawei/i],
                  describe: function (e) {
                    var t = r.default.getFirstMatch(/(can-l01)/i, e) && "Nova",
                      n = { type: a.PLATFORMS_MAP.mobile, vendor: "Huawei" };
                    return t && (n.model = t), n;
                  },
                },
                {
                  test: [/nexus\s*(?:7|8|9|10).*/i],
                  describe: function () {
                    return { type: a.PLATFORMS_MAP.tablet, vendor: "Nexus" };
                  },
                },
                {
                  test: [/ipad/i],
                  describe: function () {
                    return {
                      type: a.PLATFORMS_MAP.tablet,
                      vendor: "Apple",
                      model: "iPad",
                    };
                  },
                },
                {
                  test: [/Macintosh(.*?) FxiOS(.*?)\//],
                  describe: function () {
                    return {
                      type: a.PLATFORMS_MAP.tablet,
                      vendor: "Apple",
                      model: "iPad",
                    };
                  },
                },
                {
                  test: [/kftt build/i],
                  describe: function () {
                    return {
                      type: a.PLATFORMS_MAP.tablet,
                      vendor: "Amazon",
                      model: "Kindle Fire HD 7",
                    };
                  },
                },
                {
                  test: [/silk/i],
                  describe: function () {
                    return { type: a.PLATFORMS_MAP.tablet, vendor: "Amazon" };
                  },
                },
                {
                  test: [/tablet(?! pc)/i],
                  describe: function () {
                    return { type: a.PLATFORMS_MAP.tablet };
                  },
                },
                {
                  test: function (e) {
                    var t = e.test(/ipod|iphone/i),
                      n = e.test(/like (ipod|iphone)/i);
                    return t && !n;
                  },
                  describe: function (e) {
                    var t = r.default.getFirstMatch(/(ipod|iphone)/i, e);
                    return {
                      type: a.PLATFORMS_MAP.mobile,
                      vendor: "Apple",
                      model: t,
                    };
                  },
                },
                {
                  test: [/nexus\s*[0-6].*/i, /galaxy nexus/i],
                  describe: function () {
                    return { type: a.PLATFORMS_MAP.mobile, vendor: "Nexus" };
                  },
                },
                {
                  test: [/[^-]mobi/i],
                  describe: function () {
                    return { type: a.PLATFORMS_MAP.mobile };
                  },
                },
                {
                  test: function (e) {
                    return "blackberry" === e.getBrowserName(!0);
                  },
                  describe: function () {
                    return {
                      type: a.PLATFORMS_MAP.mobile,
                      vendor: "BlackBerry",
                    };
                  },
                },
                {
                  test: function (e) {
                    return "bada" === e.getBrowserName(!0);
                  },
                  describe: function () {
                    return { type: a.PLATFORMS_MAP.mobile };
                  },
                },
                {
                  test: function (e) {
                    return "windows phone" === e.getBrowserName();
                  },
                  describe: function () {
                    return {
                      type: a.PLATFORMS_MAP.mobile,
                      vendor: "Microsoft",
                    };
                  },
                },
                {
                  test: function (e) {
                    var t = Number(String(e.getOSVersion()).split(".")[0]);
                    return "android" === e.getOSName(!0) && t >= 3;
                  },
                  describe: function () {
                    return { type: a.PLATFORMS_MAP.tablet };
                  },
                },
                {
                  test: function (e) {
                    return "android" === e.getOSName(!0);
                  },
                  describe: function () {
                    return { type: a.PLATFORMS_MAP.mobile };
                  },
                },
                {
                  test: function (e) {
                    return "macos" === e.getOSName(!0);
                  },
                  describe: function () {
                    return { type: a.PLATFORMS_MAP.desktop, vendor: "Apple" };
                  },
                },
                {
                  test: function (e) {
                    return "windows" === e.getOSName(!0);
                  },
                  describe: function () {
                    return { type: a.PLATFORMS_MAP.desktop };
                  },
                },
                {
                  test: function (e) {
                    return "linux" === e.getOSName(!0);
                  },
                  describe: function () {
                    return { type: a.PLATFORMS_MAP.desktop };
                  },
                },
                {
                  test: function (e) {
                    return "playstation 4" === e.getOSName(!0);
                  },
                  describe: function () {
                    return { type: a.PLATFORMS_MAP.tv };
                  },
                },
                {
                  test: function (e) {
                    return "roku" === e.getOSName(!0);
                  },
                  describe: function () {
                    return { type: a.PLATFORMS_MAP.tv };
                  },
                },
              ];
            (t.default = o), (e.exports = t.default);
          },
          95: function (e, t, n) {
            "use strict";
            (t.__esModule = !0), (t.default = void 0);
            var i,
              r = (i = n(17)) && i.__esModule ? i : { default: i },
              a = n(18),
              o = [
                {
                  test: function (e) {
                    return "microsoft edge" === e.getBrowserName(!0);
                  },
                  describe: function (e) {
                    if (/\sedg\//i.test(e)) return { name: a.ENGINE_MAP.Blink };
                    var t = r.default.getFirstMatch(
                      /edge\/(\d+(\.?_?\d+)+)/i,
                      e,
                    );
                    return { name: a.ENGINE_MAP.EdgeHTML, version: t };
                  },
                },
                {
                  test: [/trident/i],
                  describe: function (e) {
                    var t = { name: a.ENGINE_MAP.Trident },
                      n = r.default.getFirstMatch(
                        /trident\/(\d+(\.?_?\d+)+)/i,
                        e,
                      );
                    return n && (t.version = n), t;
                  },
                },
                {
                  test: function (e) {
                    return e.test(/presto/i);
                  },
                  describe: function (e) {
                    var t = { name: a.ENGINE_MAP.Presto },
                      n = r.default.getFirstMatch(
                        /presto\/(\d+(\.?_?\d+)+)/i,
                        e,
                      );
                    return n && (t.version = n), t;
                  },
                },
                {
                  test: function (e) {
                    var t = e.test(/gecko/i),
                      n = e.test(/like gecko/i);
                    return t && !n;
                  },
                  describe: function (e) {
                    var t = { name: a.ENGINE_MAP.Gecko },
                      n = r.default.getFirstMatch(
                        /gecko\/(\d+(\.?_?\d+)+)/i,
                        e,
                      );
                    return n && (t.version = n), t;
                  },
                },
                {
                  test: [/(apple)?webkit\/537\.36/i],
                  describe: function () {
                    return { name: a.ENGINE_MAP.Blink };
                  },
                },
                {
                  test: [/(apple)?webkit/i],
                  describe: function (e) {
                    var t = { name: a.ENGINE_MAP.WebKit },
                      n = r.default.getFirstMatch(
                        /webkit\/(\d+(\.?_?\d+)+)/i,
                        e,
                      );
                    return n && (t.version = n), t;
                  },
                },
              ];
            (t.default = o), (e.exports = t.default);
          },
        });
      },
    ],
    t = {};
  function n(i) {
    var r = t[i];
    if (void 0 !== r) return r.exports;
    var a = (t[i] = { exports: {} });
    return e[i].call(a.exports, a, a.exports, n), a.exports;
  }
  (n.d = (e, t) => {
    for (var i in t)
      n.o(t, i) &&
        !n.o(e, i) &&
        Object.defineProperty(e, i, { enumerable: !0, get: t[i] });
  }),
    (n.o = (e, t) => Object.prototype.hasOwnProperty.call(e, t)),
    (n.r = (e) => {
      "undefined" != typeof Symbol &&
        Symbol.toStringTag &&
        Object.defineProperty(e, Symbol.toStringTag, { value: "Module" }),
        Object.defineProperty(e, "__esModule", { value: !0 });
    });
  var i = {};
  (() => {
    "use strict";
    n.r(i), n.d(i, { default: () => x });
    var e = n(1),
      t = n(27),
      r = n(139),
      a = n(142),
      o = n(143),
      s = n(144),
      c = n(147),
      l = n(148),
      u = n(149),
      p = n(150),
      d = n(151),
      m = n(138),
      h = n(153),
      f = n(174);
    class g {
      constructor(n = {}) {
        (this.prefix = n.prefix || "/a/"),
          (this.urlRegex = /^(#|about:|data:|mailto:)/),
          (this.rewriteUrl = n.rewriteUrl || this.rewriteUrl),
          (this.sourceUrl = n.sourceUrl || this.sourceUrl),
          (this.encodeUrl = n.encodeUrl || this.encodeUrl),
          (this.decodeUrl = n.decodeUrl || this.decodeUrl),
          (this.vanilla = "vanilla" in n && n.vanilla),
          (this.meta = n.meta || {}),
          (this.meta.base ||= void 0),
          (this.meta.origin ||= ""),
          (this.bundleScript = n.bundle || "/bundle.js?v=4"),
          (this.handlerScript = n.handler || "/handler.js"),
          (this.configScript = n.config || "/config.js?v=4"),
          (this.meta.url ||= this.meta.base || ""),
          (this.codec = g.codec),
          (this.html = new e.default(this)),
          (this.css = new t.default(this)),
          (this.js = new r.default(this)),
          (this.parsel = m.default),
          (this.openDB = this.constructor.openDB),
          (this.Bowser = this.constructor.Bowser),
          (this.client =
            "undefined" != typeof self
              ? new h.default(n.window || self)
              : null),
          (this.master = "__uv"),
          (this.dataPrefix = "__uv$"),
          (this.attributePrefix = "__uv"),
          (this.createHtmlInject = l.createInjection),
          (this.attrs = {
            isUrl: l.isUrl,
            isForbidden: l.isForbidden,
            isHtml: l.isHtml,
            isSrcset: l.isSrcset,
            isStyle: l.isStyle,
          }),
          this.vanilla || this.implementUVMiddleware(),
          (this.cookie = {
            validateCookie: c.validateCookie,
            db: () => (0, c.db)(this.constructor.openDB),
            getCookies: c.getCookies,
            setCookies: c.setCookies,
            serialize: c.serialize,
            setCookie: a,
          });
      }
      rewriteUrl(e, t = this.meta) {
        if (!(e = new String(e).trim()) || this.urlRegex.test(e)) return e;
        if (e.startsWith("javascript:"))
          return "javascript:" + this.js.rewrite(e.slice(11));
        try {
          return (
            t.origin + this.prefix + this.encodeUrl(new URL(e, t.base).href)
          );
        } catch (n) {
          return t.origin + this.prefix + this.encodeUrl(e);
        }
      }
      sourceUrl(e, t = this.meta) {
        if (!e || this.urlRegex.test(e)) return e;
        try {
          return new URL(
            this.decodeUrl(e.slice(this.prefix.length + t.origin.length)),
            t.base,
          ).href;
        } catch (n) {
          return this.decodeUrl(e.slice(this.prefix.length + t.origin.length));
        }
      }
      encodeUrl(e) {
        return encodeURIComponent(e);
      }
      decodeUrl(e) {
        return decodeURIComponent(e);
      }
      encodeProtocol(e) {
        e = e.toString();
        let t = "";
        for (let n = 0; n < e.length; n++) {
          const i = e[n];
          if (
            "!#$%&'*+-.0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ^_`abcdefghijklmnopqrstuvwxyz|~".includes(
              i,
            ) &&
            !"%".includes(i)
          )
            t += i;
          else {
            t += "%" + i.charCodeAt().toString(16).padStart(2, 0);
          }
        }
        return t;
      }
      decodeProtocol(e) {
        if ("string" != typeof e)
          throw new TypeError("protocol must be a string");
        let t = "";
        for (let n = 0; n < e.length; n++) {
          const i = e[n];
          if ("%" == i) {
            const i = parseInt(e.slice(n + 1, n + 3), 16);
            (t += String.fromCharCode(i)), (n += 2);
          } else t += i;
        }
        return t;
      }
      implementUVMiddleware() {
        (0, l.attributes)(this),
          (0, l.text)(this),
          (0, l.injectHead)(this),
          (0, u.url)(this),
          (0, u.importStyle)(this),
          (0, p.importDeclaration)(this),
          (0, p.dynamicImport)(this),
          (0, p.property)(this),
          (0, p.wrapEval)(this),
          (0, p.identifier)(this),
          (0, p.unwrap)(this);
      }
      get rewriteHtml() {
        return this.html.rewrite.bind(this.html);
      }
      get sourceHtml() {
        return this.html.source.bind(this.html);
      }
      get rewriteCSS() {
        return this.css.rewrite.bind(this.css);
      }
      get sourceCSS() {
        return this.css.source.bind(this.css);
      }
      get rewriteJS() {
        return this.js.rewrite.bind(this.js);
      }
      get sourceJS() {
        return this.js.source.bind(this.js);
      }
      static codec = { xor: o.xor, base64: o.base64, plain: o.plain };
      static mime = s.default;
      static setCookie = a;
      static openDB = d.openDB;
      static Bowser = f;
    }
    const x = g;
    "object" == typeof self && (self.Ultraviolet = g);
  })();
})();
